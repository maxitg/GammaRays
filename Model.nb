(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[         0,          0]
NotebookDataLength[    914827,      17535]
NotebookOptionsPosition[    903109,      17159]
NotebookOutlinePosition[    903520,      17178]
CellTagsIndexPosition[    903477,      17175]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Spectral Lags in Very High Energy Emission of GRBs", "Title",
 CellChangeTimes->{{3.589934697031559*^9, 3.5899347180121403`*^9}, {
  3.592131457104278*^9, 3.592131457862741*^9}}],

Cell[CellGroupData[{

Cell["Configuration", "Section",
 InitializationGroup->True,
 CellChangeTimes->{{3.609662325460408*^9, 3.609662331887999*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"SetDirectory", "[", "\"\<~/Projects/GammaRays/\>\"", "]"}], 
  ";"}]], "Input",
 InitializationGroup->True,
 CellChangeTimes->{{3.609662333760296*^9, 3.60966235475375*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Numerical functions", "Section",
 CellChangeTimes->{{3.606445343533203*^9, 3.606445367918765*^9}, {
  3.606457995606667*^9, 3.606457996103257*^9}}],

Cell[CellGroupData[{

Cell["findRoot", "Subsection",
 InitializationGroup->True,
 CellChangeTimes->{{3.606458023159586*^9, 3.606458025877161*^9}}],

Cell["\<\
Only works for monotonously increasing functions, which have a root for var > \
0\
\>", "Text",
 InitializationGroup->True,
 CellChangeTimes->{{3.6064453716360407`*^9, 3.606445404298212*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"findRoot", "[", 
   RowBox[{"func_", ",", 
    RowBox[{"{", 
     RowBox[{"var_", ",", 
      RowBox[{"start_", "?", "NumericQ"}]}], "}"}]}], "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"left", ",", "right"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"func", "/.", 
          RowBox[{"var", "\[Rule]", "start"}]}], ")"}], "<", "0"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"left", "=", "start"}], ";", "\[IndentingNewLine]", 
        RowBox[{"right", "=", 
         RowBox[{"2.", "start"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"While", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"func", "/.", 
             RowBox[{"var", "\[Rule]", "right"}]}], ")"}], "<", "0"}], ",", 
          RowBox[{
           RowBox[{"right", "*=", "2"}], ";", 
           RowBox[{"left", "*=", "2"}]}]}], "]"}], ";"}], 
       "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"right", "=", "start"}], ";", "\[IndentingNewLine]", 
        RowBox[{"left", "=", 
         RowBox[{".5", "start"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"While", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"func", "/.", 
             RowBox[{"var", "\[Rule]", "left"}]}], ")"}], ">", "0"}], ",", 
          RowBox[{
           RowBox[{"left", "*=", ".5"}], ";", 
           RowBox[{"right", "*=", ".5"}]}]}], "]"}], ";"}]}], 
      "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"FindRoot", "[", 
      RowBox[{"func", ",", 
       RowBox[{"{", 
        RowBox[{"var", ",", "left", ",", "right"}], "}"}]}], "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 InitializationGroup->True,
 CellChangeTimes->{{3.6064448763059072`*^9, 3.606445133934628*^9}, {
  3.606445178184031*^9, 3.606445190695405*^9}, {3.606445229942441*^9, 
  3.606445307175786*^9}}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Model", "Section",
 CellChangeTimes->{{3.5899347262060547`*^9, 3.589934726570508*^9}}],

Cell[CellGroupData[{

Cell["Parameters", "Subsection",
 InitializationGroup->True,
 CellChangeTimes->{{3.592131230779949*^9, 3.592131235512723*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"universe", "=", 
   RowBox[{"{", 
    RowBox[{"Hobs_", ",", "\[CapitalOmega]m_"}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.6075142187755423`*^9, 3.607514225727565*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "defaultUniverse", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Hobs", "\[Rule]", "2.*^-18"}], ",", 
     RowBox[{"\[CapitalOmega]m", "\[Rule]", "0.317"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"defaultUniverse", "[", 
    RowBox[{"OptionsPattern", "[", "]"}], "]"}], ":=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"OptionValue", "[", "Hobs", "]"}], ",", 
     RowBox[{"OptionValue", "[", "\[CapitalOmega]m", "]"}]}], "}"}]}], 
  ";"}]}], "Input",
 InitializationGroup->True,
 CellChangeTimes->{{3.592183431358851*^9, 3.592183460249783*^9}, {
  3.607501060289913*^9, 3.607501063087578*^9}, {3.607501312303144*^9, 
  3.607501314223002*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"population", "=", 
   RowBox[{"{", 
    RowBox[{"density0_", ",", "index_", ",", "zc_"}], "}"}]}], ";"}]], "Input",\

 CellChangeTimes->{{3.607514236934307*^9, 3.6075142465544567`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "defaultPopulation", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"density0", "\[Rule]", "0.655427*^-50"}], ",", 
     RowBox[{"index", "\[Rule]", "3"}], ",", 
     RowBox[{"zc", "\[Rule]", "3."}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"defaultPopulation", "[", 
    RowBox[{"OptionsPattern", "[", "]"}], "]"}], ":=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"OptionValue", "[", "density0", "]"}], ",", 
     RowBox[{"OptionValue", "[", "index", "]"}], ",", 
     RowBox[{"OptionValue", "[", "zc", "]"}]}], "}"}]}], ";"}]}], "Input",
 InitializationGroup->True,
 CellChangeTimes->{{3.592196285224616*^9, 3.592196414912092*^9}, {
  3.607501148274686*^9, 3.607501151743243*^9}, {3.6075013157513323`*^9, 
  3.607501317798958*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"burst", "=", 
   RowBox[{"{", 
    RowBox[{
    "\[Gamma]_", ",", "\[Eta]0_", ",", "r0_", ",", "n_", ",", "\[Omega]0_", 
     ",", "\[Theta]0_", ",", "k_", ",", "\[Alpha]_"}], "}"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.607514248391285*^9, 3.607514265172646*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "defaultBurst", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Gamma]", "\[Rule]", "300"}], ",", 
     RowBox[{"\[Eta]0", "\[Rule]", "8.14796255480381`*^34"}], ",", 
     RowBox[{"r0", "\[Rule]", "3.357930930824906`*^6"}], ",", 
     RowBox[{"n", "\[Rule]", "22.5269`"}], ",", 
     RowBox[{"\[Omega]0", "\[Rule]", "1."}], ",", 
     RowBox[{"\[Theta]0", "\[Rule]", "0.0000502035`"}], ",", 
     RowBox[{"k", "\[Rule]", 
      RowBox[{"-", "0.699813`"}]}], ",", 
     RowBox[{"\[Alpha]", "\[Rule]", 
      RowBox[{"-", "0.626944`"}]}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"defaultBurst", "[", 
    RowBox[{"OptionsPattern", "[", "]"}], "]"}], ":=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"OptionValue", "[", "\[Gamma]", "]"}], ",", 
     RowBox[{"OptionValue", "[", "\[Eta]0", "]"}], ",", 
     RowBox[{"OptionValue", "[", "r0", "]"}], ",", 
     RowBox[{"OptionValue", "[", "n", "]"}], ",", 
     RowBox[{"OptionValue", "[", "\[Omega]0", "]"}], ",", 
     RowBox[{"OptionValue", "[", "\[Theta]0", "]"}], ",", 
     RowBox[{"OptionValue", "[", "k", "]"}], ",", 
     RowBox[{"OptionValue", "[", "\[Alpha]", "]"}]}], "}"}]}], 
  ";"}]}], "Input",
 InitializationGroup->True,
 CellChangeTimes->{{3.592183471082691*^9, 3.592183527567327*^9}, {
   3.592185444675672*^9, 3.592185456046914*^9}, 3.592185591584156*^9, {
   3.5921856928131227`*^9, 3.592185694458848*^9}, {3.592577850303637*^9, 
   3.592577874748348*^9}, {3.604711185723784*^9, 3.604711190969351*^9}, {
   3.604711384994788*^9, 3.604711418079825*^9}, {3.6047116192661457`*^9, 
   3.6047116639859743`*^9}, {3.604711695775197*^9, 3.6047117510336103`*^9}, {
   3.6047138632422543`*^9, 3.60471395452982*^9}, {3.606457745661145*^9, 
   3.606457767529891*^9}, {3.606457839921405*^9, 3.606457845301832*^9}, {
   3.6064587315163107`*^9, 3.606458735947057*^9}, {3.6064588604332933`*^9, 
   3.6064588605668383`*^9}, {3.6064591390869102`*^9, 3.606459141413015*^9}, {
   3.606459329963553*^9, 3.6064593302284203`*^9}, {3.606459765539213*^9, 
   3.606459845826887*^9}, {3.606459974138461*^9, 3.606460013762233*^9}, {
   3.606460102508107*^9, 3.6064601034888*^9}, {3.606460307688303*^9, 
   3.60646032127286*^9}, {3.606460454248855*^9, 3.606460454392315*^9}, {
   3.6074712469223833`*^9, 3.607471266425153*^9}, {3.607501162169427*^9, 
   3.607501165359828*^9}, {3.607501319976783*^9, 3.607501321608468*^9}, {
   3.609629201001553*^9, 3.6096292232489634`*^9}, {3.609987004071226*^9, 
   3.609987004773662*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"defaultDetectorArea", "[", "]"}], ":=", "5.563*^-18"}], 
  ";"}]], "Input",
 InitializationGroup->True,
 CellChangeTimes->{{3.592183544436002*^9, 3.592183552917884*^9}, {
  3.607501169158555*^9, 3.6075011694143047`*^9}, {3.607501323422181*^9, 
  3.607501324462035*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"observer", "=", 
   RowBox[{"{", 
    RowBox[{"detectorArea_", ",", "z_", ",", "\[Chi]_"}], "}"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.607514271954241*^9, 3.607514280908846*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "defaultObserver", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"detectorArea", "\[Rule]", 
      RowBox[{"defaultDetectorArea", "[", "]"}]}], ",", 
     RowBox[{"z", "\[Rule]", "2.1062"}], ",", 
     RowBox[{"\[Chi]", "\[Rule]", "0.00541037"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"defaultObserver", "[", 
    RowBox[{"OptionsPattern", "[", "]"}], "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"OptionValue", "[", "detectorArea", "]"}], ",", 
     RowBox[{"OptionValue", "[", "z", "]"}], ",", 
     RowBox[{"OptionValue", "[", "\[Chi]", "]"}]}], "}"}]}], ";"}]}], "Input",\

 InitializationGroup->True,
 CellChangeTimes->{{3.5921835325126457`*^9, 3.592183542805168*^9}, {
   3.5921836390243387`*^9, 3.592183678941724*^9}, {3.606457785113456*^9, 
   3.6064577891692677`*^9}, 3.606458743105884*^9, 3.6074712757679043`*^9, {
   3.6075011812318573`*^9, 3.6075011909677143`*^9}, {3.6075013266393433`*^9, 
   3.607501330382638*^9}, 3.609629257215876*^9}]
}, Closed]],

Cell[CellGroupData[{

Cell["Relativity", "Subsection",
 InitializationGroup->True,
 CellChangeTimes->{{3.589934837712495*^9, 3.589934839766659*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"v", "[", "\[Gamma]_", "]"}], ":=", 
   SqrtBox[
    RowBox[{"1", "-", 
     FractionBox["1", 
      SuperscriptBox["\[Gamma]", "2"]]}]]}], ";"}]], "Input",
 InitializationGroup->True,
 CellChangeTimes->{{3.589934850463387*^9, 3.589934856887154*^9}, {
  3.589935711872209*^9, 3.589935711942636*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Cosmology", "Subsection",
 InitializationGroup->True,
 CellChangeTimes->{{3.5899347427477713`*^9, 3.5899347438265457`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"\[CapitalOmega]\[CapitalLambda]", "[", "\[CapitalOmega]m_", "]"}],
    ":=", 
   RowBox[{"1", "-", "\[CapitalOmega]m"}]}], ";"}]], "Input",
 InitializationGroup->True,
 CellChangeTimes->{{3.5899349782326403`*^9, 3.589935000464473*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"distance", "[", 
    RowBox[{"universe", ",", "z_"}], "]"}], ":=", 
   RowBox[{
    FractionBox["1", "Hobs"], 
    SqrtBox[
     FractionBox["1", 
      RowBox[{
      "\[CapitalOmega]\[CapitalLambda]", "[", "\[CapitalOmega]m", "]"}]]], 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "+", "z"}], ")"}], 
       RowBox[{"Hypergeometric2F1", "[", 
        RowBox[{
         FractionBox["1", "3"], ",", 
         FractionBox["1", "2"], ",", 
         FractionBox["4", "3"], ",", 
         RowBox[{
          RowBox[{"-", 
           FractionBox["\[CapitalOmega]m", 
            RowBox[{
            "\[CapitalOmega]\[CapitalLambda]", "[", "\[CapitalOmega]m", 
             "]"}]]}], 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "+", "z"}], ")"}], "3"]}]}], "]"}]}], "-", 
      RowBox[{"Hypergeometric2F1", "[", 
       RowBox[{
        FractionBox["1", "3"], ",", 
        FractionBox["1", "2"], ",", 
        FractionBox["4", "3"], ",", 
        RowBox[{"-", 
         FractionBox["\[CapitalOmega]m", 
          RowBox[{
          "\[CapitalOmega]\[CapitalLambda]", "[", "\[CapitalOmega]m", 
           "]"}]]}]}], "]"}]}], ")"}]}]}], ";"}]], "Input",
 InitializationGroup->True,
 CellChangeTimes->{{3.589934874380446*^9, 3.589934886285137*^9}, {
   3.5899349693113194`*^9, 3.589934972465304*^9}, {3.589935054177115*^9, 
   3.589935073915997*^9}, 3.589935110006753*^9, {3.589935151236059*^9, 
   3.5899351579007053`*^9}, {3.5921315009060917`*^9, 
   3.5921315207960997`*^9}, {3.592131935717617*^9, 3.592131979444818*^9}, {
   3.592132180555418*^9, 3.5921322199675827`*^9}, {3.5921322609963913`*^9, 
   3.592132261150456*^9}, {3.59218328690254*^9, 3.592183308931731*^9}, {
   3.607501210921533*^9, 3.607501212458063*^9}, {3.60750133808078*^9, 
   3.60750133840483*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"photonSphereArea", "[", 
    RowBox[{"universe_", ",", "z_"}], "]"}], ":=", 
   RowBox[{"4", "\[Pi]", " ", 
    SuperscriptBox[
     RowBox[{"distance", "[", 
      RowBox[{"universe", ",", "z"}], "]"}], "2"]}]}], ";"}]], "Input",
 InitializationGroup->True,
 CellChangeTimes->{{3.589935078530493*^9, 3.589935107355896*^9}, {
   3.589935149961955*^9, 3.589935159393393*^9}, {3.5901499169203653`*^9, 
   3.590149919694723*^9}, {3.592132276651806*^9, 3.59213231399308*^9}, 
   3.5921324338850183`*^9, {3.592132479674905*^9, 3.592132528442235*^9}, {
   3.59213259355765*^9, 3.592132602476036*^9}, 3.592132636578137*^9, {
   3.592132678985426*^9, 3.592132700320488*^9}, {3.5921328703605547`*^9, 
   3.592132878583001*^9}, {3.592134577303495*^9, 3.592134611119673*^9}, {
   3.59213464199679*^9, 3.5921346874769783`*^9}, {3.592134784446424*^9, 
   3.59213481159022*^9}, {3.592135038603594*^9, 3.592135057500444*^9}, {
   3.5921350909931173`*^9, 3.592135194454236*^9}, {3.59218331212173*^9, 
   3.592183333104171*^9}, {3.5921856212934513`*^9, 3.592185621370853*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"burstsSphereArea", "[", 
    RowBox[{"universe_", ",", "z_"}], "]"}], ":=", 
   FractionBox[
    RowBox[{"4", "\[Pi]", " ", 
     SuperscriptBox[
      RowBox[{"distance", "[", 
       RowBox[{"universe", ",", "z"}], "]"}], "2"]}], 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", "z"}], ")"}], "2"]]}], ";"}]], "Input",
 InitializationGroup->True,
 CellChangeTimes->{{3.589935120126265*^9, 3.58993516044965*^9}, {
  3.5901499204550657`*^9, 3.590149922334618*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"shellVolumePerRedshift", "[", 
    RowBox[{"universe", ",", "z_"}], "]"}], ":=", 
   RowBox[{
    FractionBox[
     RowBox[{"4", "\[Pi]", " ", 
      SuperscriptBox[
       RowBox[{"distance", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"Hobs", ",", "\[CapitalOmega]m"}], "}"}], ",", "z"}], "]"}],
        "2"]}], 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", "+", "z"}], ")"}], "3"]], 
    FractionBox["1", 
     RowBox[{"Hobs", 
      SqrtBox[
       RowBox[{
        RowBox[{"\[CapitalOmega]m", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"1", "+", "z"}], ")"}], "3"]}], "+", 
        RowBox[{
        "\[CapitalOmega]\[CapitalLambda]", "[", "\[CapitalOmega]m", 
         "]"}]}]]}]]}]}], ";"}]], "Input",
 InitializationGroup->True,
 CellChangeTimes->{{3.589935175967778*^9, 3.589935290257773*^9}, {
  3.5918412554035797`*^9, 3.591841257099522*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Light curve", "Subsection",
 InitializationGroup->True,
 CellChangeTimes->{{3.589935318987741*^9, 3.5899353237047043`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"i", "[", 
    RowBox[{
    "burst", ",", "z_", ",", "\[Chi]_", ",", "\[Omega]_", ",", "\[Theta]_", 
     ",", "\[Phi]_"}], "]"}], ":=", "\[IndentingNewLine]", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"\[Omega]", "\[Equal]", "\[Infinity]"}], ",", 
     "\[IndentingNewLine]", "0", ",", "\[IndentingNewLine]", 
     RowBox[{
      FractionBox["1", 
       RowBox[{"2", "k"}]], "\[Omega]", 
      SuperscriptBox[
       RowBox[{"(", 
        FractionBox["\[Omega]", "\[Omega]0"], ")"}], "\[Alpha]"], 
      RowBox[{"ExpIntegralE", "[", 
       RowBox[{
        RowBox[{
         FractionBox[
          RowBox[{"\[Alpha]", "+", "1"}], 
          RowBox[{"2", "k"}]], "+", "1"}], ",", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           FractionBox["\[Theta]", "\[Theta]0"], ")"}], "2"], 
         SuperscriptBox[
          RowBox[{"(", 
           FractionBox["\[Omega]", "\[Omega]0"], ")"}], 
          RowBox[{
           RowBox[{"-", "2"}], "k"}]], 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"v", "[", "\[Gamma]", "]"}], "\[Gamma]", 
            RowBox[{"(", 
             RowBox[{"1", "+", "z"}], ")"}], 
            RowBox[{"(", 
             RowBox[{
              FractionBox["1", 
               RowBox[{"v", "[", "\[Gamma]", "]"}]], "-", "1", "+", 
              FractionBox[
               SuperscriptBox["\[Theta]", "2"], "2"], "+", 
              FractionBox[
               SuperscriptBox["\[Chi]", "2"], "2"], "-", 
              RowBox[{"\[Theta]", " ", "\[Chi]", " ", 
               RowBox[{"Cos", "[", "\[Phi]", "]"}]}]}], ")"}]}], ")"}], 
          RowBox[{
           RowBox[{"-", "2"}], "k"}]]}]}], "]"}]}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}]], "Input",
 InitializationGroup->True,
 CellChangeTimes->{{3.589935483422423*^9, 3.5899356080330048`*^9}, {
  3.5899356967025957`*^9, 3.589935781512787*^9}, {3.589935933237218*^9, 
  3.589935964665523*^9}, {3.5899360834375477`*^9, 3.58993610489809*^9}, {
  3.5922732610821*^9, 3.592273261937419*^9}, {3.5922737181109123`*^9, 
  3.59227371911088*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"j", "[", 
    RowBox[{
    "burst", ",", "z_", ",", "\[Chi]_", ",", "\[Tau]_", ",", "\[Theta]_", ",",
      "\[Phi]_"}], "]"}], ":=", "\[IndentingNewLine]", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"\[Tau]", "\[Equal]", "\[Infinity]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"r0", 
         RowBox[{"(", 
          RowBox[{
           FractionBox["1", 
            RowBox[{"v", "[", "\[Gamma]", "]"}]], "-", "1", "+", 
           FractionBox[
            SuperscriptBox["\[Theta]", "2"], "2"], "+", 
           FractionBox[
            SuperscriptBox["\[Chi]", "2"], "2"], "-", 
           RowBox[{"\[Theta]", " ", "\[Chi]", " ", 
            RowBox[{"Cos", "[", "\[Phi]", "]"}]}]}], ")"}], 
         RowBox[{"(", 
          RowBox[{"1", "+", "z"}], ")"}]}], ")"}], "3"], 
      FractionBox["\[Pi]", 
       RowBox[{"n", " ", 
        RowBox[{"Sin", "[", 
         FractionBox[
          RowBox[{"3", "\[Pi]"}], "n"], "]"}]}]]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      FractionBox[
       SuperscriptBox["\[Tau]", "3"], "3"], 
      RowBox[{"Hypergeometric2F1", "[", 
       RowBox[{"1", ",", 
        FractionBox["3", "n"], ",", 
        FractionBox[
         RowBox[{"n", "+", "3"}], "n"], ",", 
        RowBox[{"-", 
         SuperscriptBox[
          RowBox[{"(", 
           FractionBox["\[Tau]", 
            RowBox[{"r0", 
             RowBox[{"(", 
              RowBox[{
               FractionBox["1", 
                RowBox[{"v", "[", "\[Gamma]", "]"}]], "-", "1", "+", 
               FractionBox[
                SuperscriptBox["\[Theta]", "2"], "2"], "+", 
               FractionBox[
                SuperscriptBox["\[Chi]", "2"], "2"], "-", 
               RowBox[{"\[Theta]", " ", "\[Chi]", " ", 
                RowBox[{"Cos", "[", "\[Phi]", "]"}]}]}], ")"}], 
             RowBox[{"(", 
              RowBox[{"1", "+", "z"}], ")"}]}]], ")"}], "n"]}]}], "]"}]}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 InitializationGroup->True,
 CellChangeTimes->{{3.5899357885882673`*^9, 3.5899358888161497`*^9}, {
  3.589935971703033*^9, 3.589936024047285*^9}, {3.589936089476865*^9, 
  3.589936099247167*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"p", "[", 
    RowBox[{"universe_", ",", "burst", ",", "observer", ",", 
     RowBox[{"{", 
      RowBox[{"\[Theta]_", ",", "\[Phi]_"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Tau]1_", ",", "\[Tau]2_"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Omega]1_", ",", "\[Omega]2_"}], "}"}]}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", "burstValues", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"burstValues", "=", 
       RowBox[{"{", 
        RowBox[{
        "\[Gamma]", ",", "\[Eta]0", ",", "r0", ",", "n", ",", "\[Omega]0", 
         ",", "\[Theta]0", ",", "k", ",", "\[Alpha]"}], "}"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Re", "[", 
       RowBox[{
        FractionBox["detectorArea", 
         RowBox[{"photonSphereArea", "[", 
          RowBox[{"universe", ",", "z"}], "]"}]], 
        FractionBox["\[Eta]0", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"v", "[", "\[Gamma]", "]"}], "\[Gamma]", 
            RowBox[{"(", 
             RowBox[{"1", "+", "z"}], ")"}]}], ")"}], 
          RowBox[{"2", "-", "\[Alpha]"}]]], 
        FractionBox["1", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            FractionBox["1", 
             RowBox[{"v", "[", "\[Gamma]", "]"}]], "-", "1", "+", 
            FractionBox[
             SuperscriptBox["\[Theta]", "2"], "2"], "+", 
            FractionBox[
             SuperscriptBox["\[Chi]", "2"], "2"], "-", 
            RowBox[{"\[Theta]", " ", "\[Chi]", " ", 
             RowBox[{"Cos", "[", "\[Phi]", "]"}]}]}], ")"}], 
          RowBox[{"5", "-", "\[Alpha]"}]]], 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"i", "[", 
           RowBox[{
           "burstValues", ",", "z", ",", "\[Chi]", ",", "\[Omega]2", ",", 
            "\[Theta]", ",", "\[Phi]"}], "]"}], "-", 
          RowBox[{"i", "[", 
           RowBox[{
           "burstValues", ",", "z", ",", "\[Chi]", ",", "\[Omega]1", ",", 
            "\[Theta]", ",", "\[Phi]"}], "]"}]}], ")"}], 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"j", "[", 
           RowBox[{
           "burstValues", ",", "z", ",", "\[Chi]", ",", "\[Tau]2", ",", 
            "\[Theta]", ",", "\[Phi]"}], "]"}], "-", 
          RowBox[{"j", "[", 
           RowBox[{
           "burstValues", ",", "z", ",", "\[Chi]", ",", "\[Tau]1", ",", 
            "\[Theta]", ",", "\[Phi]"}], "]"}]}], ")"}]}], "]"}]}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 InitializationGroup->True,
 CellChangeTimes->{{3.605264146248972*^9, 3.605264229210731*^9}, {
   3.6052643504121227`*^9, 3.605264350585134*^9}, 3.60617835086559*^9, 
   3.606301399784334*^9, {3.6063014926244287`*^9, 3.606301504314597*^9}, {
   3.606301540800703*^9, 3.606301597528256*^9}, {3.606301712479704*^9, 
   3.606301768928443*^9}, {3.606301818831545*^9, 3.606301825567028*^9}, {
   3.6064540549508457`*^9, 3.606454059126418*^9}, {3.6068189163794518`*^9, 
   3.606818917499014*^9}, {3.606820438217452*^9, 3.606820441676106*^9}, {
   3.6068206443702803`*^9, 3.606820644512549*^9}, {3.6068207819847507`*^9, 
   3.606820798168706*^9}, {3.606821776624867*^9, 3.606821776758939*^9}, {
   3.606828001434215*^9, 3.606828005164133*^9}, {3.606828049032346*^9, 
   3.606828077526512*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"p", "[", 
   RowBox[{"universe_", ",", "burst", ",", 
    RowBox[{"{", 
     RowBox[{"detectorArea_", ",", "z_", ",", 
      RowBox[{"\[Chi]_", "?", "NumericQ"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"\[Tau]1_", ",", "\[Tau]2_"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"\[Omega]1_", ",", "\[Omega]2_"}], "}"}]}], "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"burstValues", ",", "\[Theta]Points", ",", "result"}], "}"}], 
    ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"burstValues", "=", 
      RowBox[{"{", 
       RowBox[{
       "\[Gamma]", ",", "\[Eta]0", ",", "r0", ",", "n", ",", "\[Omega]0", ",",
         "\[Theta]0", ",", "k", ",", "\[Alpha]"}], "}"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"\[Theta]Points", "=", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\[Theta]", ",", "0"}], "}"}], "~", "Join", "~", 
       RowBox[{"Sort", "[", 
        RowBox[{"Select", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[Theta]0", "/", "10."}], ",", "\[Theta]0", ",", 
            RowBox[{"10.", "\[Theta]0"}], ",", 
            RowBox[{"100.", "\[Theta]0"}], ",", 
            RowBox[{"1.", "/", "\[Gamma]"}], ",", 
            RowBox[{"10.", "/", "\[Gamma]"}], ",", 
            RowBox[{"100.", "/", "\[Gamma]"}], ",", 
            RowBox[{"\[Chi]", "-", 
             RowBox[{"1.", "/", "\[Gamma]"}]}], ",", 
            RowBox[{"\[Chi]", "-", 
             RowBox[{"10.", "/", "\[Gamma]"}]}], ",", 
            RowBox[{"\[Chi]", "-", 
             RowBox[{"100.", "/", "\[Gamma]"}]}], ",", 
            RowBox[{"\[Chi]", "+", 
             RowBox[{"1.", "/", "\[Gamma]"}]}], ",", 
            RowBox[{"\[Chi]", "+", 
             RowBox[{"10.", "/", "\[Gamma]"}]}], ",", 
            RowBox[{"\[Chi]", "+", 
             RowBox[{"100.", "/", "\[Gamma]"}]}]}], "}"}], ",", 
          RowBox[{
           RowBox[{"#", ">", "0"}], "&"}]}], "]"}], "]"}], "~", "Join", "~", 
       RowBox[{"{", "\[Infinity]", "}"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"result", "=", 
      RowBox[{"NIntegrate", "[", 
       RowBox[{
        RowBox[{"2", "\[Theta]", " ", 
         RowBox[{"p", "[", 
          RowBox[{"universe", ",", "burstValues", ",", 
           RowBox[{"{", 
            RowBox[{"detectorArea", ",", "z", ",", "\[Chi]"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\[Theta]", ",", "\[Phi]"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\[Tau]1", ",", "\[Tau]2"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\[Omega]1", ",", "\[Omega]2"}], "}"}]}], "]"}]}], ",", 
        RowBox[{"Evaluate", "@", "\[Theta]Points"}], ",", 
        RowBox[{"{", 
         RowBox[{"\[Phi]", ",", "0", ",", "\[Pi]"}], "}"}], ",", 
        RowBox[{"MinRecursion", "\[Rule]", "3"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"result", ">", "0"}], ",", "result", ",", 
       RowBox[{"Abort", "[", "]"}]}], "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.609552985410853*^9, 3.60955302888662*^9}, {
   3.609553152212681*^9, 3.609553162313032*^9}, {3.609553225795508*^9, 
   3.609553238291142*^9}, {3.609553296033367*^9, 3.609553307639937*^9}, {
   3.609553424760442*^9, 3.609553442751478*^9}, {3.609553552345468*^9, 
   3.609553568901787*^9}, {3.609553669844857*^9, 3.609553672505118*^9}, {
   3.6095537154275293`*^9, 3.6095537773603477`*^9}, {3.6095543075210867`*^9, 
   3.609554412842857*^9}, {3.6095544536441183`*^9, 3.6095545537427673`*^9}, {
   3.609554605615917*^9, 3.609554645323929*^9}, {3.609554986781806*^9, 
   3.609555008996572*^9}, {3.609555680250008*^9, 3.6095556826793137`*^9}, {
   3.6095560020758266`*^9, 3.609556031840561*^9}, {3.609556479734377*^9, 
   3.609556505466941*^9}, {3.6095579359006853`*^9, 3.6095579460525703`*^9}, {
   3.609558059473399*^9, 3.609558088072796*^9}, {3.609558192419702*^9, 
   3.609558192735241*^9}, {3.6095583689241323`*^9, 3.6095583740684643`*^9}, {
   3.609558428526751*^9, 3.6095584996244097`*^9}, {3.609558624143918*^9, 
   3.6095586564258213`*^9}, {3.609563152876815*^9, 3.609563176403639*^9}, {
   3.609563333940825*^9, 3.609563334044628*^9}, {3.609563455711883*^9, 
   3.6095634811589317`*^9}, {3.609563686500836*^9, 3.609563750594817*^9}, {
   3.6095639812970867`*^9, 3.609563983279386*^9}, {3.609571618557543*^9, 
   3.609571621059228*^9}, {3.609571657786426*^9, 3.609571658945373*^9}, {
   3.609572401610347*^9, 3.6095724150046577`*^9}, 3.609572487742721*^9}]
}, Closed]],

Cell[CellGroupData[{

Cell["Light curve time derivative", "Subsection",
 InitializationGroup->True,
 CellChangeTimes->{{3.607754326028933*^9, 3.607754329898782*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"j\[Tau]", "[", 
    RowBox[{
    "burst", ",", "z_", ",", "\[Chi]_", ",", "\[Tau]_", ",", "\[Theta]_", ",",
      "\[Phi]_"}], "]"}], ":=", "\[IndentingNewLine]", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"\[Tau]", "\[Equal]", "\[Infinity]"}], ",", 
     "\[IndentingNewLine]", "0", ",", "\[IndentingNewLine]", 
     RowBox[{"Re", "[", 
      FractionBox[
       SuperscriptBox["\[Tau]", "2"], 
       RowBox[{"1", "+", 
        SuperscriptBox[
         RowBox[{"(", 
          FractionBox[
           RowBox[{"2", "\[Tau]"}], 
           RowBox[{"r0", " ", 
            RowBox[{"(", 
             RowBox[{"1", "+", "z"}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "2"}], "+", 
              FractionBox["2", 
               RowBox[{"v", "[", "\[Gamma]", "]"}]], "+", 
              SuperscriptBox["\[Theta]", "2"], "+", 
              SuperscriptBox["\[Chi]", "2"], "-", 
              RowBox[{"2", " ", "\[Theta]", " ", "\[Chi]", " ", 
               RowBox[{"Cos", "[", "\[Phi]", "]"}]}]}], ")"}]}]], ")"}], 
         "n"]}]], "]"}]}], "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 InitializationGroup->True,
 CellChangeTimes->{{3.590028599043091*^9, 3.5900287132878847`*^9}, {
  3.591866391902088*^9, 3.591866402347027*^9}, {3.606455087086586*^9, 
  3.606455089382328*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"p\[Tau]", "[", 
   RowBox[{"universe_", ",", "burst", ",", "observer", ",", 
    RowBox[{"{", 
     RowBox[{"\[Theta]_", ",", "\[Phi]_"}], "}"}], ",", "\[Tau]_", ",", 
    RowBox[{"{", 
     RowBox[{"\[Omega]1_", ",", "\[Omega]2_"}], "}"}]}], "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", "burstValues", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"Re", "[", 
     RowBox[{
      FractionBox["detectorArea", 
       RowBox[{"photonSphereArea", "[", 
        RowBox[{"universe", ",", "z"}], "]"}]], 
      FractionBox["\[Eta]0", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"v", "[", "\[Gamma]", "]"}], "\[Gamma]", 
          RowBox[{"(", 
           RowBox[{"1", "+", "z"}], ")"}]}], ")"}], 
        RowBox[{"2", "-", "\[Alpha]"}]]], 
      FractionBox["1", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          FractionBox["1", 
           RowBox[{"v", "[", "\[Gamma]", "]"}]], "-", "1", "+", 
          FractionBox[
           SuperscriptBox["\[Theta]", "2"], "2"], "+", 
          FractionBox[
           SuperscriptBox["\[Chi]", "2"], "2"], "-", 
          RowBox[{"\[Theta]", " ", "\[Chi]", " ", 
           RowBox[{"Cos", "[", "\[Phi]", "]"}]}]}], ")"}], 
        RowBox[{"5", "-", "\[Alpha]"}]]], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"i", "[", 
         RowBox[{
         "burstValues", ",", "z", ",", "\[Chi]", ",", "\[Omega]2", ",", 
          "\[Theta]", ",", "\[Phi]"}], "]"}], "-", 
        RowBox[{"i", "[", 
         RowBox[{
         "burstValues", ",", "z", ",", "\[Chi]", ",", "\[Omega]1", ",", 
          "\[Theta]", ",", "\[Phi]"}], "]"}]}], ")"}], 
      RowBox[{"j\[Tau]", "[", 
       RowBox[{
       "burstValues", ",", "z", ",", "\[Chi]", ",", "\[Tau]", ",", "\[Theta]",
         ",", "\[Phi]"}], "]"}]}], "]"}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 InitializationGroup->True,
 CellChangeTimes->{{3.606872718144367*^9, 3.606872765882361*^9}, {
  3.606872814970764*^9, 3.606872822377987*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"p\[Tau]", "[", 
   RowBox[{"universe_", ",", "burst", ",", 
    RowBox[{"{", 
     RowBox[{"detectorArea_", ",", "z_", ",", 
      RowBox[{"\[Chi]_", "?", "NumericQ"}]}], "}"}], ",", "\[Tau]_", ",", 
    RowBox[{"{", 
     RowBox[{"\[Omega]1_", ",", "\[Omega]2_"}], "}"}]}], "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"burstValues", ",", "\[Theta]Points", ",", "result"}], "}"}], 
    ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"burstValues", "=", 
      RowBox[{"{", 
       RowBox[{
       "\[Gamma]", ",", "\[Eta]0", ",", "r0", ",", "n", ",", "\[Omega]0", ",",
         "\[Theta]0", ",", "k", ",", "\[Alpha]"}], "}"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"\[Theta]Points", "=", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\[Theta]", ",", "0"}], "}"}], "~", "Join", "~", 
       RowBox[{"Sort", "[", 
        RowBox[{"Select", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[Theta]0", "/", "10."}], ",", "\[Theta]0", ",", 
            RowBox[{"10.", "\[Theta]0"}], ",", 
            RowBox[{"100.", "\[Theta]0"}], ",", 
            RowBox[{"1.", "/", "\[Gamma]"}], ",", 
            RowBox[{"10.", "/", "\[Gamma]"}], ",", 
            RowBox[{"100.", "/", "\[Gamma]"}], ",", 
            RowBox[{"\[Chi]", "-", 
             RowBox[{"1.", "/", "\[Gamma]"}]}], ",", 
            RowBox[{"\[Chi]", "-", 
             RowBox[{"10.", "/", "\[Gamma]"}]}], ",", 
            RowBox[{"\[Chi]", "-", 
             RowBox[{"100.", "/", "\[Gamma]"}]}], ",", 
            RowBox[{"\[Chi]", "+", 
             RowBox[{"1.", "/", "\[Gamma]"}]}], ",", 
            RowBox[{"\[Chi]", "+", 
             RowBox[{"10.", "/", "\[Gamma]"}]}], ",", 
            RowBox[{"\[Chi]", "+", 
             RowBox[{"100.", "/", "\[Gamma]"}]}]}], "}"}], ",", 
          RowBox[{
           RowBox[{"#", ">", "0"}], "&"}]}], "]"}], "]"}], "~", "Join", "~", 
       RowBox[{"{", "\[Infinity]", "}"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"result", "=", 
      RowBox[{"NIntegrate", "[", 
       RowBox[{
        RowBox[{"2", "\[Theta]", " ", 
         RowBox[{"p\[Tau]", "[", 
          RowBox[{"universe", ",", "burstValues", ",", 
           RowBox[{"{", 
            RowBox[{"detectorArea", ",", "z", ",", "\[Chi]"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\[Theta]", ",", "\[Phi]"}], "}"}], ",", "\[Tau]", ",", 
           RowBox[{"{", 
            RowBox[{"\[Omega]1", ",", "\[Omega]2"}], "}"}]}], "]"}]}], ",", 
        RowBox[{"Evaluate", "@", "\[Theta]Points"}], ",", 
        RowBox[{"{", 
         RowBox[{"\[Phi]", ",", "0", ",", "\[Pi]"}], "}"}], ",", 
        RowBox[{"MinRecursion", "\[Rule]", "3"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"result", ">", "0"}], ",", "result", ",", 
       RowBox[{"Abort", "[", "]"}]}], "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.609571631475333*^9, 3.6095716637080317`*^9}, {
  3.609572435618432*^9, 3.609572444394807*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Duration", "Subsection",
 InitializationGroup->True,
 CellChangeTimes->{{3.590061518520788*^9, 3.590061520245708*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "duration", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{"part", "\[Rule]", "0.99"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"duration", "[", 
    RowBox[{"universe_", ",", "burst", ",", "observer", ",", 
     RowBox[{"{", 
      RowBox[{"\[Omega]1_", ",", "\[Omega]2_"}], "}"}], ",", 
     RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "burstValues", ",", "observerValues", ",", "p\[Infinity]", ",", 
       "precision", ",", "pi"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"burstValues", "=", 
       RowBox[{"{", 
        RowBox[{
        "\[Gamma]", ",", "\[Eta]0", ",", "r0", ",", "n", ",", "\[Omega]0", 
         ",", "\[Theta]0", ",", "k", ",", "\[Alpha]"}], "}"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"observerValues", "=", 
       RowBox[{"{", 
        RowBox[{"detectorArea", ",", "z", ",", "\[Chi]"}], "}"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"p\[Infinity]", "=", 
       RowBox[{"p", "[", 
        RowBox[{"universe", ",", "burstValues", ",", "observerValues", ",", 
         RowBox[{"{", 
          RowBox[{"0.", ",", "\[Infinity]"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"\[Omega]1", ",", "\[Omega]2"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"pi", "[", 
        RowBox[{"\[Tau]_", "?", "NumericQ"}], "]"}], ":=", 
       RowBox[{"p", "[", 
        RowBox[{"universe", ",", "burstValues", ",", "observerValues", ",", 
         RowBox[{"{", 
          RowBox[{"0.", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"\[Omega]1", ",", "\[Omega]2"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"\[Tau]", "/.", 
       RowBox[{"findRoot", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"pi", "[", "\[Tau]", "]"}], "-", 
          RowBox[{
           RowBox[{"OptionValue", "[", "part", "]"}], "p\[Infinity]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"\[Tau]", ",", 
           RowBox[{
            FractionBox["r0", 
             SuperscriptBox["\[Gamma]", "2"]], 
            RowBox[{"(", 
             RowBox[{"1.", "+", "z"}], ")"}]}]}], "}"}]}], "]"}]}]}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]}], "Input",
 InitializationGroup->True,
 CellChangeTimes->{{3.5903178050646343`*^9, 3.590317829891816*^9}, {
   3.590325149911132*^9, 3.5903252239269533`*^9}, {3.590325262389987*^9, 
   3.5903252825737123`*^9}, {3.59032532930599*^9, 3.590325335424121*^9}, {
   3.590325462525869*^9, 3.590325478694022*^9}, {3.590325518676382*^9, 
   3.590325519188765*^9}, {3.590361415786047*^9, 3.590361488999978*^9}, 
   3.590365687436039*^9, {3.590373135594748*^9, 3.590373148844438*^9}, 
   3.5903762546660767`*^9, {3.590376451567272*^9, 3.59037645210378*^9}, {
   3.59037673199723*^9, 3.590376732180722*^9}, 3.590377306536478*^9, {
   3.590377574242556*^9, 3.59037759171872*^9}, {3.5903779197300177`*^9, 
   3.5903779352168922`*^9}, {3.590657083045203*^9, 3.590657088028907*^9}, {
   3.590657227680119*^9, 3.590657311788023*^9}, {3.591859728415344*^9, 
   3.591859736190181*^9}, {3.592131053761468*^9, 3.592131054093618*^9}, {
   3.606445448338492*^9, 3.606445475071904*^9}, {3.606872396132824*^9, 
   3.606872401165753*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Stretching factor", "Subsection",
 InitializationGroup->True,
 CellChangeTimes->{{3.590042619518958*^9, 3.590042624004355*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "\[Kappa]", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"pointCount", "\[Rule]", "20"}], ",", 
     RowBox[{"accurateQ", "\[Rule]", "True"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Kappa]", "[", 
    RowBox[{"universe_", ",", "burst_", ",", "observer_", ",", 
     RowBox[{"{", 
      RowBox[{"\[Omega]1_", ",", "\[Omega]2_", ",", "\[Omega]3_"}], "}"}], 
     ",", 
     RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "p12\[Infinity]", ",", "p23\[Infinity]", ",", "diff", ",", "diff\[Tau]",
        ",", "\[Tau]middle", ",", "\[Tau]end", ",", "diffDifference", ",", 
       "n", ",", "accQ"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"p12\[Infinity]", "=", 
       RowBox[{"p", "[", 
        RowBox[{"universe", ",", "burst", ",", "observer", ",", 
         RowBox[{"{", 
          RowBox[{"0.", ",", "\[Infinity]"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"\[Omega]1", ",", "\[Omega]2"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"p23\[Infinity]", "=", 
       RowBox[{"p", "[", 
        RowBox[{"universe", ",", "burst", ",", "observer", ",", 
         RowBox[{"{", 
          RowBox[{"0.", ",", "\[Infinity]"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"\[Omega]2", ",", "\[Omega]3"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"diff", "[", 
        RowBox[{
         RowBox[{"\[Tau]_", "?", "NumericQ"}], ",", 
         RowBox[{"\[Kappa]_", "?", "NumericQ"}]}], "]"}], ":=", 
       RowBox[{
        FractionBox[
         RowBox[{"p", "[", 
          RowBox[{"universe", ",", "burst", ",", "observer", ",", 
           RowBox[{"{", 
            RowBox[{"0.", ",", "\[Tau]"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\[Omega]1", ",", "\[Omega]2"}], "}"}]}], "]"}], 
         "p12\[Infinity]"], "-", 
        FractionBox[
         RowBox[{"p", "[", 
          RowBox[{"universe", ",", "burst", ",", "observer", ",", 
           RowBox[{"{", 
            RowBox[{"0.", ",", 
             RowBox[{"\[Kappa]", " ", "\[Tau]"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\[Omega]2", ",", "\[Omega]3"}], "}"}]}], "]"}], 
         "p23\[Infinity]"]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"diff\[Tau]", "[", 
        RowBox[{
         RowBox[{"\[Tau]_", "?", "NumericQ"}], ",", 
         RowBox[{"\[Kappa]_", "?", "NumericQ"}]}], "]"}], ":=", 
       RowBox[{
        FractionBox[
         RowBox[{"p\[Tau]", "[", 
          RowBox[{
          "universe", ",", "burst", ",", "observer", ",", "\[Tau]", ",", 
           RowBox[{"{", 
            RowBox[{"\[Omega]1", ",", "\[Omega]2"}], "}"}]}], "]"}], 
         "p12\[Infinity]"], "-", 
        RowBox[{"\[Kappa]", 
         FractionBox[
          RowBox[{"p\[Tau]", "[", 
           RowBox[{"universe", ",", "burst", ",", "observer", ",", 
            RowBox[{"\[Kappa]", " ", "\[Tau]"}], ",", 
            RowBox[{"{", 
             RowBox[{"\[Omega]2", ",", "\[Omega]3"}], "}"}]}], "]"}], 
          "p23\[Infinity]"]}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"accQ", "=", 
       RowBox[{"OptionValue", "[", "accurateQ", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"n", "=", 
       RowBox[{"OptionValue", "[", "pointCount", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"TrueQ", "[", "accQ", "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"\[Tau]end", "=", 
          RowBox[{"duration", "[", 
           RowBox[{"universe", ",", "burst", ",", "observer", ",", 
            RowBox[{"{", 
             RowBox[{"\[Omega]1", ",", "\[Omega]3"}], "}"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"diffDifference", "[", 
           RowBox[{"\[Kappa]_", "?", "NumericQ"}], "]"}], ":=", 
          RowBox[{"Block", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
             "it", ",", "diff\[Tau]Values", ",", "maxDifference", ",", 
              "minDifference", ",", "currentDifference"}], "}"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"diff\[Tau]Values", "=", 
              RowBox[{"Table", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"\[Tau]", ",", 
                  RowBox[{"diff\[Tau]", "[", 
                   RowBox[{"\[Tau]", ",", "\[Kappa]"}], "]"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"\[Tau]", ",", 
                  FractionBox["\[Tau]end", "n"], ",", "\[Tau]end", ",", 
                  FractionBox["\[Tau]end", "n"]}], "}"}]}], "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"maxDifference", "=", "0."}], ";", "\[IndentingNewLine]", 
             RowBox[{"minDifference", "=", "0."}], ";", "\[IndentingNewLine]", 
             RowBox[{"For", "[", 
              RowBox[{
               RowBox[{"it", "=", "1"}], ",", 
               RowBox[{"it", "<", 
                RowBox[{"Length", "[", "diff\[Tau]Values", "]"}]}], ",", 
               RowBox[{"it", "++"}], ",", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Sign", "[", 
                    RowBox[{"diff\[Tau]Values", "\[LeftDoubleBracket]", 
                    RowBox[{"it", ",", "2"}], "\[RightDoubleBracket]"}], 
                    "]"}], "\[NotEqual]", 
                   RowBox[{"Sign", "[", 
                    RowBox[{"diff\[Tau]Values", "\[LeftDoubleBracket]", 
                    RowBox[{
                    RowBox[{"it", "+", "1"}], ",", "2"}], 
                    "\[RightDoubleBracket]"}], "]"}]}], ",", 
                  "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{"currentDifference", "=", 
                    RowBox[{"diff", "[", 
                    RowBox[{
                    RowBox[{"\[Tau]", "/.", 
                    RowBox[{"FindRoot", "[", 
                    RowBox[{
                    RowBox[{"diff\[Tau]", "[", 
                    RowBox[{"\[Tau]", ",", "\[Kappa]"}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\[Tau]", ",", 
                    RowBox[{"diff\[Tau]Values", "\[LeftDoubleBracket]", 
                    RowBox[{"it", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
                    
                    RowBox[{"diff\[Tau]Values", "\[LeftDoubleBracket]", 
                    RowBox[{
                    RowBox[{"it", "+", "1"}], ",", "1"}], 
                    "\[RightDoubleBracket]"}]}], "}"}]}], "]"}]}], ",", 
                    "\[Kappa]"}], "]"}]}], ";", "\[IndentingNewLine]", 
                   RowBox[{"maxDifference", "=", 
                    RowBox[{"Max", "[", 
                    RowBox[{"maxDifference", ",", "currentDifference"}], 
                    "]"}]}], ";", "\[IndentingNewLine]", 
                   RowBox[{"minDifference", "=", 
                    RowBox[{"Min", "[", 
                    RowBox[{"minDifference", ",", "currentDifference"}], 
                    "]"}]}], ";"}]}], "\[IndentingNewLine]", "]"}], ";"}]}], 
              "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
             RowBox[{"maxDifference", "+", "minDifference"}]}]}], 
           "\[IndentingNewLine]", "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"\[Kappa]i", "/.", 
          RowBox[{"findRoot", "[", 
           RowBox[{
            RowBox[{"-", 
             RowBox[{"diffDifference", "[", "\[Kappa]i", "]"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"\[Kappa]i", ",", "1."}], "}"}]}], "]"}]}]}], 
        "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"\[Tau]middle", "=", 
          RowBox[{"duration", "[", 
           RowBox[{"universe", ",", "burst", ",", "observer", ",", 
            RowBox[{"{", 
             RowBox[{"\[Omega]1", ",", "\[Omega]3"}], "}"}], ",", 
            RowBox[{"part", "\[Rule]", "0.5"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"\[Kappa]i", "/.", 
          RowBox[{"findRoot", "[", 
           RowBox[{
            RowBox[{"-", 
             RowBox[{"diff", "[", 
              RowBox[{"\[Tau]middle", ",", "\[Kappa]i"}], "]"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"\[Kappa]i", ",", "1."}], "}"}]}], "]"}]}]}]}], 
       "\[IndentingNewLine]", "]"}]}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}]}], "Input",
 InitializationGroup->True,
 CellChangeTimes->{{3.5903265796208687`*^9, 3.590326833677573*^9}, {
   3.5903269327331257`*^9, 3.5903269503094893`*^9}, {3.590326987903431*^9, 
   3.5903271369707203`*^9}, {3.590327176239778*^9, 3.590327185314533*^9}, {
   3.5903272680607367`*^9, 3.590327271219748*^9}, {3.590327312586216*^9, 
   3.590327315351831*^9}, {3.590327388496572*^9, 3.590327480915551*^9}, {
   3.59032751419615*^9, 3.5903275248632917`*^9}, {3.590327561137848*^9, 
   3.590327564923519*^9}, {3.590327640238681*^9, 3.590327677067874*^9}, {
   3.590327813182415*^9, 3.590327828205284*^9}, {3.590328354366934*^9, 
   3.590328555755969*^9}, {3.5903286431336727`*^9, 3.590328659784225*^9}, 
   3.59032872295754*^9, {3.590329189043144*^9, 3.590329189722125*^9}, {
   3.5903650237753553`*^9, 3.5903651970818777`*^9}, {3.590365259406893*^9, 
   3.590365267195998*^9}, {3.5903654226609497`*^9, 3.590365456892521*^9}, {
   3.590365501664783*^9, 3.590365503984386*^9}, {3.590365568175743*^9, 
   3.590365573478949*^9}, {3.590365618227973*^9, 3.590365621461379*^9}, {
   3.5903657229232492`*^9, 3.59036572479393*^9}, {3.59036577981052*^9, 
   3.590365782180976*^9}, {3.5903659951005793`*^9, 3.590366003108227*^9}, {
   3.590366051467641*^9, 3.590366283475524*^9}, {3.590366406272266*^9, 
   3.5903664222486973`*^9}, {3.590366532280233*^9, 3.590366560568139*^9}, 
   3.590366612775997*^9, {3.5903666531368933`*^9, 3.5903666533696127`*^9}, {
   3.5903704326686993`*^9, 3.590370533346634*^9}, {3.5903705920432377`*^9, 
   3.590370715562079*^9}, {3.590370746441658*^9, 3.590371170661167*^9}, 
   3.590371248583733*^9, {3.590371412755732*^9, 3.590371549940089*^9}, {
   3.590371605026496*^9, 3.590371622782262*^9}, {3.590371724324032*^9, 
   3.590371738661891*^9}, {3.590372125774158*^9, 3.5903721789825907`*^9}, {
   3.590372659458366*^9, 3.590372660732067*^9}, {3.590372841198977*^9, 
   3.590372848830831*^9}, {3.590372949274189*^9, 3.590372954958375*^9}, {
   3.5903730718440933`*^9, 3.590373074450584*^9}, {3.590373162138679*^9, 
   3.590373164754616*^9}, {3.5903732574823713`*^9, 3.590373257613722*^9}, {
   3.590373332784211*^9, 3.5903733329269667`*^9}, {3.59037341674111*^9, 
   3.5903734194048243`*^9}, {3.590375379521632*^9, 3.590375382490905*^9}, {
   3.590375428952099*^9, 3.5903755736247063`*^9}, {3.590375724661763*^9, 
   3.590375782583375*^9}, {3.5903759191691513`*^9, 3.590375927059924*^9}, {
   3.5903760199509783`*^9, 3.590376024215468*^9}, {3.5903762774287863`*^9, 
   3.590376313791407*^9}, {3.590376464702487*^9, 3.590376489807502*^9}, {
   3.5903767460743427`*^9, 3.590376773731325*^9}, {3.590377131337274*^9, 
   3.59037721201258*^9}, {3.590377415812442*^9, 3.5903774737943296`*^9}, {
   3.590377527059918*^9, 3.590377533724476*^9}, {3.5903776145091867`*^9, 
   3.590377672534587*^9}, {3.5903778454072237`*^9, 3.590377882622674*^9}, {
   3.590381758973577*^9, 3.590381812886834*^9}, {3.5903873864196987`*^9, 
   3.590387458002425*^9}, {3.590387510659731*^9, 3.590387543611752*^9}, {
   3.59038758612471*^9, 3.590387621217507*^9}, {3.590388552680749*^9, 
   3.5903885528275633`*^9}, {3.59065748233827*^9, 3.590657557181745*^9}, {
   3.590657618614839*^9, 3.590657683718027*^9}, {3.590716042223925*^9, 
   3.59071604340497*^9}, {3.5907163929288683`*^9, 3.590716396686603*^9}, {
   3.590716711520685*^9, 3.590716712288282*^9}, {3.591859766023552*^9, 
   3.591859821493609*^9}, {3.59213105995527*^9, 3.592131060311899*^9}, {
   3.5939055257237873`*^9, 3.593905551360847*^9}, {3.606437972654207*^9, 
   3.606437973245549*^9}, {3.6064380872801723`*^9, 3.6064380874078217`*^9}, {
   3.6064385906674147`*^9, 3.606438592847204*^9}, {3.606439596575625*^9, 
   3.606439614796866*^9}, {3.606439755019751*^9, 3.606439755171906*^9}, {
   3.606445554997858*^9, 3.606445555170183*^9}, {3.606445600714435*^9, 
   3.606445600898086*^9}, {3.6064456329461813`*^9, 3.606445633113682*^9}, {
   3.606445677209525*^9, 3.6064457057853327`*^9}, {3.6064503455284863`*^9, 
   3.606450347101955*^9}, {3.60645046983005*^9, 3.6064504703757257`*^9}, {
   3.606450576569796*^9, 3.60645061578759*^9}, 3.606450671391876*^9, {
   3.606450776792655*^9, 3.606450796675383*^9}, {3.607503550920438*^9, 
   3.607503569452129*^9}, {3.607504657940392*^9, 3.607504666351533*^9}, {
   3.607504813869372*^9, 3.607504814972559*^9}, {3.6075048481988373`*^9, 
   3.607504888113874*^9}, {3.6075049256864347`*^9, 3.607505050051395*^9}, {
   3.607505186140037*^9, 3.607505235569965*^9}, {3.607505487509815*^9, 
   3.6075054976927423`*^9}, {3.6075055474912863`*^9, 3.607505553546584*^9}, {
   3.607506506506734*^9, 3.60750651425399*^9}, {3.607506867346436*^9, 
   3.6075070816969843`*^9}, {3.607507140475012*^9, 3.607507165457365*^9}, {
   3.607507263179788*^9, 3.6075072841504593`*^9}, {3.607507438883451*^9, 
   3.607507621265781*^9}, {3.607507657314548*^9, 3.607507840454307*^9}, {
   3.60750803603577*^9, 3.607508058155015*^9}, {3.607508115556563*^9, 
   3.6075081261505737`*^9}, {3.607508265361066*^9, 3.6075082696406603`*^9}, {
   3.607508456756721*^9, 3.607508461893629*^9}, {3.6075085464181232`*^9, 
   3.6075085542808247`*^9}, {3.6075087633462677`*^9, 
   3.6075087687691917`*^9}, {3.6075088886118*^9, 3.607508893038492*^9}, {
   3.607509101086595*^9, 3.607509101782463*^9}, 3.607509309556765*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"SetSharedFunction", "[", "\[Kappa]StoredValues", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "\[Kappa]Cache", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"pointCount", "\[Rule]", "20"}], ",", 
     RowBox[{"accurateQ", "\[Rule]", "True"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Kappa]Cache", "[", 
    RowBox[{"universe_", ",", "burst_", ",", "observer_", ",", 
     RowBox[{"{", 
      RowBox[{"\[Omega]1_", ",", "\[Omega]2_", ",", "\[Omega]3_"}], "}"}], 
     ",", 
     RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"Not", "[", 
         RowBox[{"NumberQ", "[", 
          RowBox[{"\[Kappa]StoredValues", "[", 
           RowBox[{"universe", ",", "burst", ",", "observer", ",", 
            RowBox[{"{", 
             RowBox[{"\[Omega]1", ",", "\[Omega]2", ",", "\[Omega]3"}], "}"}],
             ",", 
            RowBox[{"OptionValue", "[", "pointCount", "]"}], ",", 
            RowBox[{"OptionValue", "[", "accurateQ", "]"}]}], "]"}], "]"}], 
         "]"}], ",", 
        RowBox[{
         RowBox[{"\[Kappa]StoredValues", "[", 
          RowBox[{"universe", ",", "burst", ",", "observer", ",", 
           RowBox[{"{", 
            RowBox[{"\[Omega]1", ",", "\[Omega]2", ",", "\[Omega]3"}], "}"}], 
           ",", 
           RowBox[{"OptionValue", "[", "pointCount", "]"}], ",", 
           RowBox[{"OptionValue", "[", "accurateQ", "]"}]}], "]"}], "=", 
         RowBox[{"\[Kappa]", "[", 
          RowBox[{"universe", ",", "burst", ",", "observer", ",", 
           RowBox[{"{", 
            RowBox[{"\[Omega]1", ",", "\[Omega]2", ",", "\[Omega]3"}], "}"}], 
           ",", 
           RowBox[{"pointCount", "\[Rule]", 
            RowBox[{"OptionValue", "[", "pointCount", "]"}]}], ",", 
           RowBox[{"accurateQ", "\[Rule]", 
            RowBox[{"OptionValue", "[", "accurateQ", "]"}]}]}], "]"}]}]}], 
       "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"\[Kappa]StoredValues", "[", 
       RowBox[{"universe", ",", "burst", ",", "observer", ",", 
        RowBox[{"{", 
         RowBox[{"\[Omega]1", ",", "\[Omega]2", ",", "\[Omega]3"}], "}"}], 
        ",", 
        RowBox[{"OptionValue", "[", "pointCount", "]"}], ",", 
        RowBox[{"OptionValue", "[", "accurateQ", "]"}]}], "]"}]}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]}], "Input",
 InitializationGroup->True,
 CellChangeTimes->{{3.592528888258531*^9, 3.592528925623564*^9}, {
   3.592528988974207*^9, 3.5925290002608213`*^9}, {3.592529049108858*^9, 
   3.592529120243537*^9}, {3.5925291986387*^9, 3.592529265749548*^9}, {
   3.592529563339875*^9, 3.592529584373616*^9}, {3.593873234597978*^9, 
   3.593873237272119*^9}, {3.593905698912496*^9, 3.593905700841269*^9}, 
   3.6075135646626997`*^9, {3.607513598571061*^9, 3.607513615666121*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"\[Kappa]Save", "[", "]"}], ":=", 
   RowBox[{"DumpSave", "[", 
    RowBox[{"\"\<kappa.mx\>\"", ",", "\[Kappa]StoredValues"}], "]"}]}], 
  ";"}]], "Input",
 InitializationGroup->True,
 CellChangeTimes->{{3.592529329018914*^9, 3.592529388830374*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"\[Kappa]Load", "[", "]"}], ":=", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"FileExistsQ", "[", "\"\<kappa.mx\>\"", "]"}], ",", 
     RowBox[{"<<", "\"\<kappa.mx\>\""}]}], "]"}]}], ";"}]], "Input",
 InitializationGroup->True,
 CellChangeTimes->{{3.5925294093082523`*^9, 3.592529422202147*^9}, {
  3.592529859852643*^9, 3.592529879288867*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Total Energy", "Subsection",
 InitializationGroup->True,
 CellChangeTimes->{{3.591179569287243*^9, 3.5911795710461187`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"energy", "[", 
    RowBox[{"burst", ",", "\[Omega]1_"}], "]"}], ":=", 
   RowBox[{
    FractionBox[
     RowBox[{"16", 
      SuperscriptBox["\[Pi]", "3"]}], 
     RowBox[{"3", "n", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "2"}], "k"}], "-", "\[Alpha]", "-", "2"}], ")"}], 
      RowBox[{"Sin", "[", 
       FractionBox[
        RowBox[{"3", "\[Pi]"}], "n"], "]"}]}]], 
    SuperscriptBox["\[Gamma]", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "2"}], "k"}], "-", "\[Alpha]"}]], 
    RowBox[{"(", 
     RowBox[{"1", "-", 
      FractionBox["1", 
       RowBox[{"4", 
        SuperscriptBox["\[Gamma]", "2"]}]]}], ")"}], "\[Eta]0", " ", 
    SuperscriptBox["r0", "3"], 
    SuperscriptBox["\[Theta]0", "2"], 
    FractionBox[
     SuperscriptBox["\[Omega]0", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "2"}], "k"}], "-", "\[Alpha]"}]], 
     SuperscriptBox["\[Omega]1", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "2"}], "k"}], "-", "\[Alpha]", "-", "2"}]]]}]}], 
  ";"}]], "Input",
 InitializationGroup->True,
 CellChangeTimes->{{3.591267384750402*^9, 3.591267391974464*^9}, {
  3.591267431626403*^9, 3.5912674907454443`*^9}, {3.6093865119041452`*^9, 
  3.6093865406947403`*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Distribution of stretching factors", "Subsection",
 InitializationGroup->True,
 CellChangeTimes->{{3.592129665485837*^9, 3.592129667602376*^9}, 
   3.594161701643839*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "zmax", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{"minParticles", "\[Rule]", "10"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"zmax", "[", 
    RowBox[{
    "universe_", ",", "burst_", ",", "detectorArea_", ",", "\[Chi]_", ",", 
     RowBox[{"{", 
      RowBox[{"\[Omega]1_", ",", "\[Omega]2_"}], "}"}], ",", 
     RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"int", ",", "z1", ",", "z2"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"int", "[", 
        RowBox[{"z_", "?", "NumericQ"}], "]"}], ":=", 
       RowBox[{
        RowBox[{"p", "[", 
         RowBox[{"universe", ",", "burst", ",", 
          RowBox[{"{", 
           RowBox[{"detectorArea", ",", "z", ",", "\[Chi]"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "\[Infinity]"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"\[Omega]1", ",", "\[Omega]2"}], "}"}]}], "]"}], "-", 
        RowBox[{"OptionValue", "[", "minParticles", "]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"z1", "=", "1"}], ";", "\[IndentingNewLine]", 
      RowBox[{"While", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"int", "[", "z1", "]"}], "<", "0"}], ",", 
        RowBox[{"z1", "/=", "2."}]}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"z2", "=", "1"}], ";", "\[IndentingNewLine]", 
      RowBox[{"While", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"int", "[", "z2", "]"}], ">", "0"}], ",", 
        RowBox[{"z2", "*=", "2."}]}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"z", "/.", 
       RowBox[{"FindRoot", "[", 
        RowBox[{
         RowBox[{"int", "[", "z", "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"z", ",", "z1", ",", "z2"}], "}"}]}], "]"}]}]}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]}], "Input",
 InitializationGroup->True,
 CellChangeTimes->{{3.5921304966002817`*^9, 3.592130552109898*^9}, {
   3.592130602992848*^9, 3.592130674463716*^9}, {3.5921308289039383`*^9, 
   3.592130919923584*^9}, {3.592130993209762*^9, 3.592131036607246*^9}, {
   3.592131068302374*^9, 3.592131114338842*^9}, {3.592187459284543*^9, 
   3.592187463651868*^9}, {3.5921894029246273`*^9, 3.592189416673624*^9}, {
   3.592189472174855*^9, 3.592189474840663*^9}, {3.592189512887924*^9, 
   3.5921895587398148`*^9}, {3.5921896539432096`*^9, 3.592189655743219*^9}, {
   3.5921897207067432`*^9, 3.592189792248406*^9}, {3.592523268807684*^9, 
   3.592523277638463*^9}, 3.606815128791231*^9, {3.6068152085590754`*^9, 
   3.606815210021928*^9}, {3.606815622679956*^9, 3.6068156276949053`*^9}, {
   3.6068159049666843`*^9, 3.6068159073170843`*^9}, {3.60681623824056*^9, 
   3.6068162487898893`*^9}, {3.606816376043518*^9, 3.606816388477725*^9}, {
   3.606816544945525*^9, 3.6068165545847673`*^9}, {3.606816719311705*^9, 
   3.6068167196296587`*^9}, {3.60681723366352*^9, 3.606817240660446*^9}, {
   3.606818893631176*^9, 3.606818899873103*^9}, {3.60682613150592*^9, 
   3.60682614286456*^9}, {3.606826266444846*^9, 3.60682627088619*^9}, {
   3.6068263646979713`*^9, 3.6068263666198997`*^9}, {3.60682650735952*^9, 
   3.606826511599983*^9}, {3.606826656058393*^9, 3.606826760422106*^9}, {
   3.60682713208892*^9, 3.606827132470594*^9}, {3.606827205671575*^9, 
   3.606827217790888*^9}, {3.606827321916052*^9, 3.6068273291430264`*^9}, {
   3.6068273995988503`*^9, 3.606827409335085*^9}, {3.6068274561915903`*^9, 
   3.606827507734075*^9}, {3.606827549946529*^9, 3.606827602197398*^9}, {
   3.606827833976885*^9, 3.6068278516944113`*^9}, {3.6068282810076427`*^9, 
   3.606828325022163*^9}, {3.60682841606775*^9, 3.6068284257457943`*^9}, {
   3.606828461931662*^9, 3.606828503739636*^9}, {3.606828536192287*^9, 
   3.606828540809628*^9}, 3.606828590204176*^9, {3.6068286342582693`*^9, 
   3.606828746462647*^9}, {3.6068288348045177`*^9, 3.606828848091008*^9}, {
   3.606828908429923*^9, 3.606828946154499*^9}, {3.606828981149033*^9, 
   3.606829034075048*^9}, {3.606829094702834*^9, 3.6068293391323338`*^9}, {
   3.606829376436284*^9, 3.606829538750834*^9}, {3.6068295839424667`*^9, 
   3.606829631900313*^9}, {3.606829681665605*^9, 3.606829686025303*^9}, {
   3.606829716822998*^9, 3.6068298313245*^9}, {3.606829862654848*^9, 
   3.6068299178258667`*^9}, {3.6068299572074423`*^9, 3.606829976555254*^9}, {
   3.606830024955415*^9, 3.606830029496543*^9}, {3.606830131253484*^9, 
   3.6068301423308783`*^9}, {3.606864873824407*^9, 3.6068648741748037`*^9}, {
   3.606865645126073*^9, 3.60686566135109*^9}, {3.606865703967572*^9, 
   3.60686570666934*^9}, 3.6068657381610203`*^9, {3.606865839391551*^9, 
   3.606865882471078*^9}, {3.60686592805552*^9, 3.606865970413701*^9}, {
   3.6068662181763897`*^9, 3.606866229749421*^9}, {3.6068665067745743`*^9, 
   3.6068665547421913`*^9}, {3.606866684054366*^9, 3.6068666905750637`*^9}, {
   3.606867352030822*^9, 3.606867375349222*^9}, {3.606868124516469*^9, 
   3.606868169147903*^9}, {3.606871880583579*^9, 3.6068718808937473`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "\[Chi]max", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{"minParticles", "\[Rule]", "10"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Chi]max", "[", 
    RowBox[{"universe_", ",", "burst", ",", "detectorArea_", ",", "z_", ",", 
     RowBox[{"{", 
      RowBox[{"\[Omega]1_", ",", "\[Omega]2_"}], "}"}], ",", 
     RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"burstValues", ",", "int", ",", "\[Chi]0"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"burstValues", "=", 
       RowBox[{"{", 
        RowBox[{
        "\[Gamma]", ",", "\[Eta]0", ",", "r0", ",", "n", ",", "\[Omega]0", 
         ",", "\[Theta]0", ",", "k", ",", "\[Alpha]"}], "}"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"int", "[", 
        RowBox[{"\[Chi]_", "?", "NumberQ"}], "]"}], ":=", 
       RowBox[{
        RowBox[{"p", "[", 
         RowBox[{"universe", ",", "burstValues", ",", 
          RowBox[{"{", 
           RowBox[{"detectorArea", ",", "z", ",", "\[Chi]"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0.", ",", "\[Infinity]"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"\[Omega]1", ",", "\[Omega]2"}], "}"}]}], "]"}], "-", 
        RowBox[{"OptionValue", "[", "minParticles", "]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"int", "[", "0", "]"}], "<", "0"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"Return", "[", "0", "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"\[Chi]0", "=", 
          FractionBox["1", "\[Gamma]"]}], ";", "\[IndentingNewLine]", 
         RowBox[{"While", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"int", "[", "\[Chi]0", "]"}], ">", "0"}], ",", 
           RowBox[{
            RowBox[{"\[Chi]0", "*=", "2."}], ";"}]}], "]"}], ";"}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"\[Chi]", "/.", 
       RowBox[{"FindRoot", "[", 
        RowBox[{
         RowBox[{"int", "[", "\[Chi]", "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"\[Chi]", ",", "0", ",", "\[Chi]0"}], "}"}]}], "]"}]}]}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]}], "Input",
 InitializationGroup->True,
 CellChangeTimes->{{3.5921857052057743`*^9, 3.592185803579471*^9}, {
   3.59218608379284*^9, 3.592186084456647*^9}, {3.592186118768695*^9, 
   3.5921861369850273`*^9}, {3.592186279322113*^9, 3.592186283263797*^9}, {
   3.592186408819564*^9, 3.592186409833569*^9}, {3.592186514998681*^9, 
   3.5921865161561813`*^9}, {3.592186549874604*^9, 3.592186550490327*^9}, {
   3.592186845398295*^9, 3.592186871706634*^9}, {3.592186905081287*^9, 
   3.592186988885932*^9}, {3.592187058690855*^9, 3.5921870590983143`*^9}, 
   3.592189794467548*^9, {3.592523272494398*^9, 3.592523283652163*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"burstDensity", "[", 
    RowBox[{"population", ",", "z_"}], "]"}], ":=", 
   RowBox[{"density0", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", "z"}], ")"}], "index"], 
    RowBox[{"Exp", "[", 
     RowBox[{"-", 
      FractionBox["z", "zc"]}], "]"}]}]}], ";"}]], "Input",
 InitializationGroup->True,
 CellChangeTimes->{{3.5856137215181513`*^9, 3.585613732106592*^9}, {
  3.5856139108435183`*^9, 3.585613914751878*^9}, {3.585613970434301*^9, 
  3.585613975955866*^9}, {3.585614006163372*^9, 3.585614030084044*^9}, {
  3.586064013498889*^9, 3.586064020618878*^9}, {3.5860640700328197`*^9, 
  3.586064086192721*^9}, {3.5860641284860764`*^9, 3.586064134581768*^9}, {
  3.586067617826783*^9, 3.5860676238822393`*^9}, {3.586084016960991*^9, 
  3.586084058159371*^9}, {3.5860841349582148`*^9, 3.586084154055051*^9}, {
  3.592195778970891*^9, 3.59219584478927*^9}, {3.592200474175756*^9, 
  3.592200496437546*^9}, {3.592532263911756*^9, 3.592532264849284*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"phaseVolume", "[", 
    RowBox[{"universe_", ",", "population_", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"z1_", "?", "NumberQ"}], ",", 
       RowBox[{"z2_", "?", "NumberQ"}]}], "}"}]}], "]"}], ":=", 
   RowBox[{"NIntegrate", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"shellVolumePerRedshift", "[", 
       RowBox[{"universe", ",", "z"}], "]"}], 
      RowBox[{"burstDensity", "[", 
       RowBox[{"population", ",", "z"}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"z", ",", "z1", ",", "z2"}], "}"}]}], "]"}]}], ";"}]], "Input",
 InitializationGroup->True,
 CellChangeTimes->{{3.5925456326017933`*^9, 3.592545732196768*^9}, {
   3.592545783538019*^9, 3.592545786773512*^9}, {3.592546012556716*^9, 
   3.592546018044792*^9}, {3.593840399592741*^9, 3.593840416703673*^9}, {
   3.5938404598645267`*^9, 3.593840516220233*^9}, {3.593840547309245*^9, 
   3.593840557819276*^9}, {3.593840595878455*^9, 3.593840629211656*^9}, 
   3.593848457587241*^9, {3.593848504424852*^9, 3.593848527916236*^9}, {
   3.593848570125452*^9, 3.593848578108759*^9}, {3.6068654537948847`*^9, 
   3.606865477794442*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"randomRedshift", "[", 
    RowBox[{"universe_", ",", "population_", ",", 
     RowBox[{"{", 
      RowBox[{"z1_", ",", "z2_"}], "}"}]}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"total", ",", "chosenVolume"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"total", "=", 
       RowBox[{"phaseVolume", "[", 
        RowBox[{"universe", ",", "population", ",", 
         RowBox[{"{", 
          RowBox[{"z1", ",", "z2"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"chosenVolume", "=", 
       RowBox[{"RandomReal", "[", "total", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"z", "/.", 
       RowBox[{"FindRoot", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"phaseVolume", "[", 
           RowBox[{"universe", ",", "population", ",", 
            RowBox[{"{", 
             RowBox[{"z1", ",", "z"}], "}"}]}], "]"}], "-", "chosenVolume"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{"z", ",", "z1", ",", "z2"}], "}"}]}], "]"}]}]}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 InitializationGroup->True,
 CellChangeTimes->{{3.59383960775867*^9, 3.593839708028894*^9}, {
  3.593839760856065*^9, 3.59383978528448*^9}, {3.593839919312972*^9, 
  3.593839927982379*^9}, {3.5938399605789957`*^9, 3.59383998061572*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"randomAngle", "[", 
    RowBox[{"{", 
     RowBox[{"\[Chi]1_", ",", "\[Chi]2_"}], "}"}], "]"}], ":=", 
   SqrtBox[
    RowBox[{"RandomReal", "[", 
     RowBox[{"{", 
      RowBox[{
       SuperscriptBox["\[Chi]1", "2"], ",", 
       SuperscriptBox["\[Chi]2", "2"]}], "}"}], "]"}]]}], ";"}]], "Input",
 InitializationGroup->True,
 CellChangeTimes->{{3.593839870415963*^9, 3.593839884885872*^9}, {
  3.593839988050838*^9, 3.593840005353404*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"inRegionQ", "[", 
    RowBox[{"region_", ",", "point_"}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", "i", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"i", "=", "1"}], ",", 
        RowBox[{"i", "\[LessEqual]", 
         RowBox[{"Length", "[", "region", "]"}]}], ",", 
        RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"region", "[", 
               RowBox[{"[", "i", "]"}], "]"}], "[", 
              RowBox[{"[", "1", "]"}], "]"}], "\[LessEqual]", 
             RowBox[{"point", "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], "&&", 
            RowBox[{
             RowBox[{
              RowBox[{"region", "[", 
               RowBox[{"[", "i", "]"}], "]"}], "[", 
              RowBox[{"[", "2", "]"}], "]"}], "\[LessEqual]", 
             RowBox[{"point", "[", 
              RowBox[{"[", "2", "]"}], "]"}]}]}], ",", 
           RowBox[{"Return", "[", "True", "]"}]}], "]"}], ";"}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"Return", "[", "False", "]"}], ";"}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}]], "Input",
 InitializationGroup->True,
 CellChangeTimes->{{3.5940765388467484`*^9, 3.5940765483433647`*^9}, {
  3.594076622776572*^9, 3.594076714616952*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"addToRegion", "[", 
    RowBox[{"region_", ",", "point_"}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"i", ",", "j"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"i", "=", "1"}], ",", 
        RowBox[{"i", "\[LessEqual]", 
         RowBox[{"Length", "[", "region", "]"}]}], ",", 
        RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"region", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "[", 
             RowBox[{"[", "1", "]"}], "]"}], ">", 
            RowBox[{"point", "[", 
             RowBox[{"[", "1", "]"}], "]"}]}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"i", "\[Equal]", "1"}], "||", 
               RowBox[{
                RowBox[{
                 RowBox[{"region", "[", 
                  RowBox[{"[", 
                   RowBox[{"i", "-", "1"}], "]"}], "]"}], "[", 
                 RowBox[{"[", "2", "]"}], "]"}], ">", 
                RowBox[{"point", "[", 
                 RowBox[{"[", "2", "]"}], "]"}]}]}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"For", "[", 
                RowBox[{
                 RowBox[{"j", "=", "i"}], ",", 
                 RowBox[{
                  RowBox[{"j", "\[LessEqual]", 
                   RowBox[{"Length", "[", "region", "]"}]}], "&&", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"region", "[", 
                    RowBox[{"[", "j", "]"}], "]"}], "[", 
                    RowBox[{"[", "2", "]"}], "]"}], ">", 
                   RowBox[{"point", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}]}], ",", 
                 RowBox[{"j", "++"}]}], "]"}], ";", "\[IndentingNewLine]", 
               RowBox[{"Return", "[", 
                RowBox[{"Insert", "[", 
                 RowBox[{
                  RowBox[{"Drop", "[", 
                   RowBox[{"region", ",", 
                    RowBox[{"{", 
                    RowBox[{"i", ",", 
                    RowBox[{"j", "-", "1"}]}], "}"}]}], "]"}], ",", "point", 
                  ",", "i"}], "]"}], "]"}], ";"}], "\[IndentingNewLine]", ",",
               "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"Return", "[", "region", "]"}], ";"}]}], 
             "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", 
          "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"Length", "[", "region", "]"}], "\[Equal]", "0"}], "||", 
         RowBox[{
          RowBox[{
           RowBox[{"region", "[", 
            RowBox[{"[", 
             RowBox[{"Length", "[", "region", "]"}], "]"}], "]"}], "[", 
           RowBox[{"[", "2", "]"}], "]"}], ">", 
          RowBox[{"point", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}]}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Return", "[", 
          RowBox[{"Insert", "[", 
           RowBox[{"region", ",", "point", ",", 
            RowBox[{
             RowBox[{"Length", "[", "region", "]"}], "+", "1"}]}], "]"}], 
          "]"}], ";"}], "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Return", "[", "region", "]"}], ";"}]}], 
       "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}]], "Input",
 InitializationGroup->True,
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQBWIQXSGmb6hx/JVjsOIXMN2TymEGokXWTwLTSbZ1NSD6
T9cVML2ryq1OE0jPDctvANFd2RWzQHTE7BVgWq6Sbw2IXrZqxn4Qvan/4mEQ
/SDlBZjmfLD9IojW+tx3DUQ/Myi8C6LvXbO4B6JNPG0+g+hbVuvA9I/N6exa
QFp1YxIniO5P/MULonebcvKB6e1W/iDa0iwITNfdsI8G0XL3doDpvbyxKSB6
2qIEMP3u55YMED3rZkMBiL5zWbUURL+5faQRRE+4LtwOou26vTpA9LXiqb0g
mv3gPzDdwmPArA2kN4iIsYLohV8W8YPoZc9WgWkAgsCucw==
  "]],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "plotRegion", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{"axesOrigin", "\[Rule]", "Automatic"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"plotRegion", "[", 
    RowBox[{"region_", ",", "range_", ",", 
     RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", "plotPoints", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Length", "[", "region", "]"}], "\[Equal]", "0"}], ",", 
        RowBox[{"Return", "[", 
         RowBox[{"ListPlot", "[", 
          RowBox[{
           RowBox[{"{", "Missing", "}"}], ",", 
           RowBox[{"PlotRange", "\[Rule]", "range"}]}], "]"}], "]"}]}], "]"}],
       ";", "\[IndentingNewLine]", 
      RowBox[{"plotPoints", "=", 
       RowBox[{"Flatten", "[", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"region", "[", 
              RowBox[{"[", "i", "]"}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{"region", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", 
               RowBox[{
                RowBox[{"region", "[", 
                 RowBox[{"[", "i", "]"}], "]"}], "[", 
                RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", 
             RowBox[{
              RowBox[{"Length", "[", "region", "]"}], "-", "1"}]}], "}"}]}], 
          "]"}], ",", "1"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"plotPoints", ",", 
        RowBox[{"region", "[", 
         RowBox[{"[", 
          RowBox[{"Length", "[", "region", "]"}], "]"}], "]"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"plotPoints", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"range", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "[", 
           RowBox[{"[", "2", "]"}], "]"}], ",", 
          RowBox[{
           RowBox[{"region", "[", 
            RowBox[{"[", 
             RowBox[{"Length", "[", "region", "]"}], "]"}], "]"}], "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"ListPlot", "[", 
       RowBox[{"plotPoints", ",", 
        RowBox[{"PlotStyle", "\[Rule]", "LightRed"}], ",", 
        RowBox[{"Joined", "\[Rule]", "True"}], ",", 
        RowBox[{"PlotRange", "\[Rule]", "range"}], ",", 
        RowBox[{"Filling", "\[Rule]", "Top"}], ",", 
        RowBox[{"FillingStyle", "\[Rule]", "LightRed"}], ",", 
        RowBox[{"AxesOrigin", "\[Rule]", 
         RowBox[{"OptionValue", "[", "axesOrigin", "]"}]}]}], "]"}]}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]}], "Input",
 InitializationGroup->True,
 CellChangeTimes->{{3.594076740666135*^9, 3.594076753708782*^9}, {
  3.594076887144764*^9, 3.5940769296014957`*^9}, {3.594076973234046*^9, 
  3.59407713802288*^9}, {3.594077211024296*^9, 3.594077213670301*^9}, {
  3.594079066328897*^9, 3.5940791448582373`*^9}, {3.594081529151717*^9, 
  3.594081574465996*^9}, {3.594081645589141*^9, 3.594081719987425*^9}, {
  3.594081802583469*^9, 3.5940818109649057`*^9}, {3.594081844567368*^9, 
  3.594081846344102*^9}, {3.594081979894787*^9, 3.594082001094616*^9}, {
  3.594082516730349*^9, 3.594082520156005*^9}, {3.59408255227765*^9, 
  3.594082665151011*^9}, {3.5940829266367292`*^9, 3.594082939493443*^9}, {
  3.5940844131326103`*^9, 3.594084500888402*^9}, {3.594084539984497*^9, 
  3.594084551296248*^9}, {3.5940846618329763`*^9, 3.594084702122776*^9}, {
  3.594112518061047*^9, 3.594112579084134*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"burstSample", "::", "usage"}], "=", 
   "\"\<burstSample computes a sample of properties of uniformly distributed \
GRBs. Possible values for computedValues are {z, \[Chi], pTotal, pLow, pHigh, \
duration, \[Kappa]}\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "burstSample", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"randomSeed", "\[Rule]", "\"\<Gamma Rays\>\""}], ",", 
     RowBox[{"zmin", "\[Rule]", "0.1"}], ",", 
     RowBox[{"computedValues", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<z\>\"", ",", "\"\<\[Chi]\>\"", ",", "\"\<pLow\>\"", ",", 
        "\"\<pHigh\>\"", ",", "\"\<duration\>\"", ",", "\"\<\[Kappa]\>\""}], 
       "}"}]}], ",", 
     RowBox[{"minParticles", "\[Rule]", "10"}], ",", 
     RowBox[{"monitorQ", "\[Rule]", "False"}], ",", 
     RowBox[{"logQ", "\[Rule]", "False"}], ",", 
     RowBox[{"accurateQ", "\[Rule]", "True"}], ",", 
     RowBox[{"pointCount", "\[Rule]", "20"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"burstSample", "[", 
    RowBox[{
    "universe_", ",", "population_", ",", "burst_", ",", "detectorArea_", ",", 
     RowBox[{"{", 
      RowBox[{"\[Omega]1_", ",", "\[Omega]2_", ",", "\[Omega]3_"}], "}"}], 
     ",", "n_", ",", 
     RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
      "z2", ",", "\[Chi]2", ",", "it", ",", "zc", ",", "\[Chi]c", ",", 
       "pointsChosen", ",", "startedCount", ",", "completedCount", ",", 
       "result", ",", "pointResult", ",", "region", ",", "print"}], 
      "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"OptionValue", "[", "logQ", "]"}], ",", 
        RowBox[{"Print", "[", "\"\<initializing\>\"", "]"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"SeedRandom", "[", 
       RowBox[{"OptionValue", "[", "randomSeed", "]"}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"pointsChosen", "=", 
       RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"startedCount", "=", "0"}], ";", "\[IndentingNewLine]", 
      RowBox[{"completedCount", "=", "0"}], ";", "\[IndentingNewLine]", 
      RowBox[{"SetSharedVariable", "[", "completedCount", "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"SetSharedVariable", "[", "startedCount", "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"region", "=", 
       RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"it", "=", "0"}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"OptionValue", "[", "monitorQ", "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"print", "=", 
         RowBox[{"PrintTemporary", "[", 
          RowBox[{"Dynamic", "[", "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"it", "\[Equal]", "0"}], ",", "\"\<initializing\>\"", 
             ",", "\[IndentingNewLine]", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"startedCount", ">", "0"}], ",", 
               RowBox[{
                RowBox[{"ToString", "[", "completedCount", "]"}], "<>", 
                "\"\</\>\"", "<>", 
                RowBox[{"ToString", "[", "n", "]"}], "<>", 
                "\"\< bursts computed\>\""}], ",", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"ToString", "[", 
                 RowBox[{"Length", "[", "pointsChosen", "]"}], "]"}], "<>", 
                "\"\</\>\"", "<>", 
                RowBox[{"ToString", "[", "n", "]"}], "<>", 
                "\"\< bursts chosen\>\""}]}], "\[IndentingNewLine]", "]"}]}], 
            "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", "]"}], 
          "]"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"z2", "=", 
       RowBox[{"zmax", "[", 
        RowBox[{
        "universe", ",", "burst", ",", "detectorArea", ",", "0", ",", 
         RowBox[{"{", 
          RowBox[{"\[Omega]2", ",", "\[Omega]3"}], "}"}], ",", 
         RowBox[{"minParticles", "\[Rule]", 
          RowBox[{"OptionValue", "[", "minParticles", "]"}]}]}], "]"}]}], ";",
       "\[IndentingNewLine]", 
      RowBox[{"\[Chi]2", "=", 
       RowBox[{"\[Chi]max", "[", 
        RowBox[{"universe", ",", "burst", ",", "detectorArea", ",", 
         RowBox[{"OptionValue", "[", "zmin", "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"\[Omega]2", ",", "\[Omega]3"}], "}"}], ",", 
         RowBox[{"minParticles", "\[Rule]", 
          RowBox[{"OptionValue", "[", "minParticles", "]"}]}]}], "]"}]}], ";",
       "\[IndentingNewLine]", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"it", "=", "1"}], ",", 
        RowBox[{"it", "\[LessEqual]", "n"}], ",", 
        RowBox[{"it", "++"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"zc", "=", 
          RowBox[{"randomRedshift", "[", 
           RowBox[{"universe", ",", "population", ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"OptionValue", "[", "zmin", "]"}], ",", "z2"}], "}"}]}],
            "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"\[Chi]c", "=", 
          RowBox[{"randomAngle", "[", 
           RowBox[{"{", 
            RowBox[{"0", ",", "\[Chi]2"}], "}"}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"inRegionQ", "[", 
            RowBox[{"region", ",", 
             RowBox[{"{", 
              RowBox[{"zc", ",", "\[Chi]c"}], "}"}]}], "]"}], ",", 
           RowBox[{"it", "--"}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"p", "[", 
                RowBox[{"universe", ",", "burst", ",", 
                 RowBox[{"{", 
                  RowBox[{"detectorArea", ",", "zc", ",", "\[Chi]c"}], "}"}], 
                 ",", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "\[Infinity]"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"\[Omega]2", ",", "\[Omega]3"}], "}"}]}], "]"}], 
               "\[GreaterEqual]", "10."}], ",", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"AppendTo", "[", 
                RowBox[{"pointsChosen", ",", 
                 RowBox[{"{", 
                  RowBox[{"zc", ",", "\[Chi]c"}], "}"}]}], "]"}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"OptionValue", "[", "logQ", "]"}], ",", 
                 RowBox[{"Print", "[", 
                  RowBox[{
                   RowBox[{"ToString", "[", 
                    RowBox[{"Length", "[", "pointsChosen", "]"}], "]"}], 
                   "<>", "\"\</\>\"", "<>", 
                   RowBox[{"ToString", "[", "n", "]"}], "<>", 
                   "\"\< values chosen\>\""}], "]"}]}], "]"}], ";"}], 
              "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"region", "=", 
                RowBox[{"addToRegion", "[", 
                 RowBox[{"region", ",", 
                  RowBox[{"{", 
                   RowBox[{"zc", ",", "\[Chi]c"}], "}"}]}], "]"}]}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"it", "--"}], ";"}]}], "\[IndentingNewLine]", "]"}], 
            ";"}]}], "\[IndentingNewLine]", "]"}], ";"}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"\[Kappa]Load", "[", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"result", "=", 
       RowBox[{"ParallelTable", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"startedCount", "++"}], ";", "\[IndentingNewLine]", 
          RowBox[{"pointResult", "=", 
           RowBox[{"ReleaseHold", "[", 
            RowBox[{
             RowBox[{"OptionValue", "[", "computedValues", "]"}], "/.", 
             RowBox[{"{", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"\"\<z\>\"", "\[Rule]", 
                RowBox[{"Hold", "[", 
                 RowBox[{"point", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], "]"}]}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{"\"\<\[Chi]\>\"", "\[Rule]", 
                RowBox[{"Hold", "[", 
                 RowBox[{"point", "[", 
                  RowBox[{"[", "2", "]"}], "]"}], "]"}]}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{"\"\<pTotal\>\"", "\[Rule]", 
                RowBox[{"Hold", "[", 
                 RowBox[{"p", "[", 
                  RowBox[{"universe", ",", "burst", ",", 
                   RowBox[{"Flatten", "[", 
                    RowBox[{"{", 
                    RowBox[{"detectorArea", ",", "point"}], "}"}], "]"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"0", ",", "\[Infinity]"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"\[Omega]1", ",", "\[Omega]3"}], "}"}]}], "]"}], 
                 "]"}]}], ",", "\[IndentingNewLine]", 
               RowBox[{"\"\<pLow\>\"", "\[Rule]", 
                RowBox[{"Hold", "[", 
                 RowBox[{"p", "[", 
                  RowBox[{"universe", ",", "burst", ",", 
                   RowBox[{"Flatten", "[", 
                    RowBox[{"{", 
                    RowBox[{"detectorArea", ",", "point"}], "}"}], "]"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"0", ",", "\[Infinity]"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"\[Omega]1", ",", "\[Omega]2"}], "}"}]}], "]"}], 
                 "]"}]}], ",", "\[IndentingNewLine]", 
               RowBox[{"\"\<pHigh\>\"", "\[Rule]", 
                RowBox[{"Hold", "[", 
                 RowBox[{"p", "[", 
                  RowBox[{"universe", ",", "burst", ",", 
                   RowBox[{"Flatten", "[", 
                    RowBox[{"{", 
                    RowBox[{"detectorArea", ",", "point"}], "}"}], "]"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"0", ",", "\[Infinity]"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"\[Omega]2", ",", "\[Omega]3"}], "}"}]}], "]"}], 
                 "]"}]}], ",", "\[IndentingNewLine]", 
               RowBox[{"\"\<duration\>\"", "\[Rule]", 
                RowBox[{"Hold", "[", 
                 RowBox[{"duration", "[", 
                  RowBox[{"universe", ",", "burst", ",", 
                   RowBox[{"Flatten", "[", 
                    RowBox[{"{", 
                    RowBox[{"detectorArea", ",", "point"}], "}"}], "]"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"\[Omega]1", ",", "\[Omega]3"}], "}"}]}], "]"}], 
                 "]"}]}], ",", "\[IndentingNewLine]", 
               RowBox[{"\"\<\[Kappa]\>\"", "\[Rule]", 
                RowBox[{"Hold", "[", 
                 RowBox[{"\[Kappa]Cache", "[", 
                  RowBox[{"universe", ",", "burst", ",", 
                   RowBox[{"Flatten", "[", 
                    RowBox[{"{", 
                    RowBox[{"detectorArea", ",", "point"}], "}"}], "]"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"\[Omega]1", ",", "\[Omega]2", ",", "\[Omega]3"}],
                     "}"}], ",", 
                   RowBox[{"accurateQ", "\[Rule]", 
                    RowBox[{"OptionValue", "[", "accurateQ", "]"}]}], ",", 
                   RowBox[{"pointCount", "\[Rule]", 
                    RowBox[{"OptionValue", "[", "pointCount", "]"}]}]}], 
                  "]"}], "]"}]}]}], "\[IndentingNewLine]", "}"}]}], "]"}]}], 
          ";", "\[IndentingNewLine]", 
          RowBox[{"completedCount", "++"}], ";", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"OptionValue", "[", "logQ", "]"}], ",", 
            RowBox[{"Print", "[", 
             RowBox[{
              RowBox[{"ToString", "[", "completedCount", "]"}], "<>", 
              "\"\</\>\"", "<>", 
              RowBox[{"ToString", "[", "n", "]"}], "<>", 
              "\"\< bursts computed\>\""}], "]"}]}], "]"}], ";", 
          "\[IndentingNewLine]", "pointResult"}], ",", 
         RowBox[{"{", 
          RowBox[{"point", ",", "pointsChosen"}], "}"}], ",", 
         RowBox[{"Method", "\[Rule]", "\"\<FinestGrained\>\""}]}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"\[Kappa]Save", "[", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"OptionValue", "[", "monitorQ", "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"NotebookDelete", "[", "print", "]"}], ";"}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"UnsetShared", "[", "completedCount", "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"UnsetShared", "[", "startedCount", "]"}], ";", 
      "\[IndentingNewLine]", "result"}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}]}], "Input",
 InitializationGroup->True,
 CellChangeTimes->{{3.593829498556116*^9, 3.59382957225982*^9}, {
   3.5938296333935223`*^9, 3.593829650765555*^9}, {3.593829729257169*^9, 
   3.593829863830003*^9}, {3.593829948353723*^9, 3.593829985930216*^9}, {
   3.593830314555534*^9, 3.593830316568328*^9}, {3.5938303955295*^9, 
   3.593830399255043*^9}, {3.593830452558757*^9, 3.593830479748863*^9}, {
   3.5938305606191387`*^9, 3.5938305701919413`*^9}, {3.593830632818996*^9, 
   3.59383063481174*^9}, {3.593830687683269*^9, 3.593830688337278*^9}, {
   3.593840096425436*^9, 3.593840294326721*^9}, {3.593848682486663*^9, 
   3.593849078274324*^9}, {3.59384921744659*^9, 3.5938492199572487`*^9}, {
   3.593849480530299*^9, 3.5938494812775173`*^9}, {3.593849994974738*^9, 
   3.5938499988794203`*^9}, {3.593850079391433*^9, 3.5938501227850237`*^9}, {
   3.593850166907522*^9, 3.593850205496826*^9}, {3.593850267425778*^9, 
   3.59385026855984*^9}, {3.59385038777316*^9, 3.593850400141574*^9}, {
   3.593850674796912*^9, 3.5938507684263363`*^9}, {3.5938508324764757`*^9, 
   3.5938508378329277`*^9}, {3.593851094453013*^9, 3.593851163360837*^9}, {
   3.5938512097529707`*^9, 3.593851230453968*^9}, {3.593851260561194*^9, 
   3.5938513794818287`*^9}, {3.59385141893301*^9, 3.593851437851431*^9}, {
   3.593851490277545*^9, 3.593851504700981*^9}, {3.593851627426011*^9, 
   3.5938516293756237`*^9}, {3.593851667865361*^9, 3.5938517376806107`*^9}, {
   3.593851781761018*^9, 3.593851888733378*^9}, {3.593852616644332*^9, 
   3.593852617341557*^9}, {3.593852672820776*^9, 3.593852673697074*^9}, {
   3.593852708643248*^9, 3.593852820131774*^9}, {3.5938528589407587`*^9, 
   3.5938528736718283`*^9}, {3.593852903771212*^9, 3.593852906251026*^9}, {
   3.593852942052574*^9, 3.593852946865549*^9}, {3.593853026757545*^9, 
   3.59385313091962*^9}, {3.593853278451165*^9, 3.593853280586754*^9}, {
   3.593853667365419*^9, 3.593853669087388*^9}, {3.5938538857049637`*^9, 
   3.5938538873035994`*^9}, {3.593853938550721*^9, 3.593854041746407*^9}, {
   3.5938540875196657`*^9, 3.593854165869815*^9}, {3.593854195921035*^9, 
   3.5938541990335493`*^9}, {3.593854361548442*^9, 3.593854364134231*^9}, {
   3.593854408187831*^9, 3.5938544125677643`*^9}, {3.5938549516104097`*^9, 
   3.593855176998748*^9}, {3.593855275949841*^9, 3.5938556801370163`*^9}, {
   3.5938557759104443`*^9, 3.5938557792154713`*^9}, {3.593855856547268*^9, 
   3.593855863202734*^9}, {3.593855962358906*^9, 3.593855978342469*^9}, {
   3.593856142902267*^9, 3.593856168329731*^9}, {3.593856344608197*^9, 
   3.593856598244113*^9}, {3.5938567970207977`*^9, 3.593856798435618*^9}, {
   3.593857031649642*^9, 3.593857036411066*^9}, {3.593857507823163*^9, 
   3.5938576089383163`*^9}, {3.59385774283605*^9, 3.59385777425835*^9}, {
   3.593857846063458*^9, 3.593857881334984*^9}, {3.593858053047345*^9, 
   3.593858053673588*^9}, {3.593858278536469*^9, 3.593858288350581*^9}, {
   3.593858452577668*^9, 3.5938585083963346`*^9}, {3.593858854559525*^9, 
   3.5938588554624653`*^9}, {3.593859279347118*^9, 3.5938593385557127`*^9}, {
   3.5938593914195547`*^9, 3.5938594430331*^9}, {3.59385950945266*^9, 
   3.593859567259824*^9}, {3.593859602970642*^9, 3.5938596883596077`*^9}, {
   3.5938597287427473`*^9, 3.593859728986142*^9}, {3.593859766702186*^9, 
   3.593859866714752*^9}, {3.593859964886874*^9, 3.593859996293497*^9}, {
   3.593860101255541*^9, 3.59386010637991*^9}, {3.593860350639338*^9, 
   3.593860515294915*^9}, {3.593860582282308*^9, 3.593860635507045*^9}, 
   3.593860673784154*^9, 3.593860704901205*^9, {3.593860747327465*^9, 
   3.593860808162122*^9}, {3.593860846071422*^9, 3.593860848420909*^9}, {
   3.593861089471142*^9, 3.59386122742484*^9}, {3.593861367306939*^9, 
   3.593861515*^9}, {3.593861555385614*^9, 3.5938615767901173`*^9}, {
   3.593861679387744*^9, 3.5938618316938353`*^9}, {3.593861882455223*^9, 
   3.593862076897107*^9}, {3.593862112771475*^9, 3.5938621474337683`*^9}, {
   3.593862485061495*^9, 3.593862488326621*^9}, {3.59386277888704*^9, 
   3.593862783850854*^9}, {3.593869705876305*^9, 3.593869707234949*^9}, {
   3.59390536864774*^9, 3.593905371038904*^9}, {3.593905570502734*^9, 
   3.593905571028948*^9}, {3.5939057263620462`*^9, 3.5939057346045837`*^9}, {
   3.593905792263921*^9, 3.593905792800541*^9}, {3.5939070313855658`*^9, 
   3.5939070448661118`*^9}, {3.5939072078331327`*^9, 
   3.5939072088202677`*^9}, {3.59390790867693*^9, 3.593907909299418*^9}, {
   3.594080485554811*^9, 3.594080488112934*^9}, {3.5940845672121363`*^9, 
   3.5940846246693783`*^9}, {3.5940847490611277`*^9, 3.594084749770842*^9}, {
   3.604712336106201*^9, 3.6047125169729443`*^9}, {3.604712625537526*^9, 
   3.6047128833618183`*^9}, {3.604714482643263*^9, 3.604714511858768*^9}, {
   3.604717622865744*^9, 3.604717799588838*^9}, {3.6047187500966*^9, 
   3.604718752532406*^9}, {3.604982394883004*^9, 3.6049823992950172`*^9}, {
   3.606461290240944*^9, 3.606461330463808*^9}, {3.606461390191225*^9, 
   3.60646140964923*^9}, 3.6064614478805027`*^9, {3.606461536445318*^9, 
   3.6064615376592503`*^9}, {3.606461578506742*^9, 3.606461584188156*^9}, {
   3.606462410983151*^9, 3.606462426530785*^9}, {3.606704535575382*^9, 
   3.606704536174556*^9}, {3.606779427199641*^9, 3.606779451456203*^9}, {
   3.60677957695441*^9, 3.606779593345935*^9}, {3.606779657990761*^9, 
   3.6067796882598352`*^9}, {3.6067797801841908`*^9, 3.606779806824257*^9}, {
   3.60677987494427*^9, 3.606779883006649*^9}, {3.606779922062834*^9, 
   3.606779980642207*^9}, {3.606780031413405*^9, 3.606780148376567*^9}, {
   3.606780190645553*^9, 3.606780192429162*^9}, {3.606780523410804*^9, 
   3.6067805257242727`*^9}, {3.606780806970799*^9, 3.606780893262601*^9}, {
   3.606780953727921*^9, 3.606781121169072*^9}, {3.606781158065321*^9, 
   3.6067811969454403`*^9}, {3.60678124819809*^9, 3.606781248510901*^9}, {
   3.6067813983969584`*^9, 3.6067814449666367`*^9}, {3.6068141413222837`*^9, 
   3.606814170040009*^9}, {3.6068143925445843`*^9, 3.6068144291904287`*^9}, {
   3.606815069477256*^9, 3.606815080365407*^9}, {3.607151883115275*^9, 
   3.607152008873273*^9}, {3.607258731945478*^9, 3.607258919825045*^9}, {
   3.6075138295368958`*^9, 3.6075139627481403`*^9}, {3.607756320646049*^9, 
   3.607756335564898*^9}, {3.607756381982438*^9, 3.607756397690493*^9}, {
   3.6077564956353703`*^9, 3.6077564957554903`*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Very high energy bursts fraction", "Subsection",
 InitializationGroup->True,
 CellChangeTimes->{{3.594161718309668*^9, 3.5941617195413513`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "burstFraction", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{"minParticles", "\[Rule]", "10"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"burstFraction", "[", 
    RowBox[{
    "universe_", ",", "population_", ",", "burst_", ",", "detectorArea_", ",", 
     RowBox[{"{", 
      RowBox[{"\[Omega]1_", ",", "\[Omega]2_", ",", "\[Omega]3_"}], "}"}], 
     ",", 
     RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"z1", ",", "z2", ",", "int"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"z1", "=", 
       RowBox[{"zmax", "[", 
        RowBox[{
        "universe", ",", "burst", ",", "detectorArea", ",", "0", ",", 
         RowBox[{"{", 
          RowBox[{"\[Omega]1", ",", "\[Omega]3"}], "}"}], ",", 
         RowBox[{"minParticles", "\[Rule]", 
          RowBox[{"OptionValue", "[", "minParticles", "]"}]}]}], "]"}]}], ";",
       "\[IndentingNewLine]", 
      RowBox[{"z2", "=", 
       RowBox[{"zmax", "[", 
        RowBox[{
        "universe", ",", "burst", ",", "detectorArea", ",", "0", ",", 
         RowBox[{"{", 
          RowBox[{"\[Omega]2", ",", "\[Omega]3"}], "}"}], ",", 
         RowBox[{"minParticles", "\[Rule]", 
          RowBox[{"OptionValue", "[", "minParticles", "]"}]}]}], "]"}]}], ";",
       "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"int", "[", 
        RowBox[{
         RowBox[{"z_", "?", "NumberQ"}], ",", 
         RowBox[{"{", 
          RowBox[{"\[Omega]l_", ",", "\[Omega]r_"}], "}"}]}], "]"}], ":=", 
       RowBox[{
        RowBox[{"burstDensity", "[", 
         RowBox[{"population", ",", "z"}], "]"}], 
        RowBox[{"shellVolumePerRedshift", "[", 
         RowBox[{"universe", ",", "z"}], "]"}], 
        SuperscriptBox[
         RowBox[{"\[Chi]max", "[", 
          RowBox[{
          "universe", ",", "burst", ",", "detectorArea", ",", "z", ",", 
           RowBox[{"{", 
            RowBox[{"\[Omega]l", ",", "\[Omega]r"}], "}"}]}], "]"}], "2"]}]}],
       ";", "\[IndentingNewLine]", 
      FractionBox[
       RowBox[{"NIntegrate", "[", 
        RowBox[{
         RowBox[{"int", "[", 
          RowBox[{"z", ",", 
           RowBox[{"{", 
            RowBox[{"\[Omega]2", ",", "\[Omega]3"}], "}"}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"z", ",", "0", ",", "z2"}], "}"}]}], "]"}], 
       RowBox[{"NIntegrate", "[", 
        RowBox[{
         RowBox[{"int", "[", 
          RowBox[{"z", ",", 
           RowBox[{"{", 
            RowBox[{"\[Omega]1", ",", "\[Omega]3"}], "}"}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"z", ",", "0", ",", "z1"}], "}"}]}], "]"}]]}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]}], "Input",
 InitializationGroup->True,
 CellChangeTimes->{{3.594161733080324*^9, 3.5941619943200397`*^9}, {
  3.5941620342003813`*^9, 3.594162081043578*^9}, {3.5941621278489513`*^9, 
  3.594162131443465*^9}, {3.594162167336042*^9, 3.594162251879923*^9}, {
  3.594162336570313*^9, 3.594162437170651*^9}, {3.59416267147491*^9, 
  3.594162671569606*^9}, {3.5941630580726967`*^9, 3.594163081727412*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Parameter fit", "Subsection",
 InitializationGroup->True,
 CellChangeTimes->{{3.606178973702729*^9, 3.606178975788898*^9}}],

Cell[CellGroupData[{

Cell["GRB 090926A", "Subsubsection",
 InitializationGroup->True,
 CellChangeTimes->{{3.607257768944193*^9, 3.607257771183319*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[Kappa]LogTarget090926A", "=", 
  RowBox[{"Mean", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Log", "[", "1.99", "]"}], ",", 
     RowBox[{"Log", "[", "6.62", "]"}]}], "}"}], "]"}]}]], "Input",
 InitializationGroup->True,
 CellChangeTimes->{{3.606180352362957*^9, 3.606180368217112*^9}, {
  3.60626074209877*^9, 3.606260744162861*^9}, {3.606301953903648*^9, 
  3.606301955327684*^9}}],

Cell[BoxData["1.289115004342659`"], "Output",
 InitializationGroup->True,
 CellChangeTimes->{
  3.606180416297801*^9, 3.6061880497160997`*^9, 3.606260637076878*^9, {
   3.60626074456896*^9, 3.606260757722821*^9}, 3.6062613817863293`*^9, 
   3.60629787289771*^9, {3.6063019557172832`*^9, 3.606301986518484*^9}, 
   3.606451006982376*^9, 3.6064597341386433`*^9, 3.6067824425190477`*^9, 
   3.606784048728424*^9, 3.606810690892744*^9, 3.606813149691449*^9, 
   3.606813706626029*^9, 3.606864907038952*^9, 3.606871942110055*^9, 
   3.606872636458856*^9, 3.6069155057826843`*^9, 3.606979140895178*^9, 
   3.6069814795657797`*^9, 3.6069869574513273`*^9, 3.607067816610353*^9, 
   3.607150083260132*^9, 3.607151359007592*^9, 3.6072579393147583`*^9, 
   3.6073401751979437`*^9, 3.607383873849971*^9, 3.607387241891794*^9, 
   3.607471017128848*^9, 3.607514153414453*^9, 3.607514296034974*^9, 
   3.60756112561919*^9, 3.607608808759405*^9, 3.6076088527227917`*^9, 
   3.607644540850947*^9, 3.607671857108952*^9, 3.607732066755419*^9, 
   3.60774351209783*^9, 3.6077597022488327`*^9, 3.607760044421145*^9, 
   3.607849897456949*^9, 3.609385697278998*^9, 3.609398989071094*^9, 
   3.609415223429325*^9, 3.609552944183731*^9, 3.609581695770032*^9, 
   3.609584501258358*^9, 3.609629005055215*^9, 3.609640322342766*^9, 
   3.609644879896455*^9, 3.6097581100682993`*^9, 3.609903047389071*^9, 
   3.609989220486473*^9, 3.610000587721759*^9, 3.610002649891004*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[Kappa]LogError090926A", "=", 
  FractionBox[
   RowBox[{
    RowBox[{"Log", "[", "6.62", "]"}], "-", 
    RowBox[{"Log", "[", "1.99", "]"}]}], "2"]}]], "Input",
 InitializationGroup->True,
 CellChangeTimes->{{3.606180376141008*^9, 3.6061804075415154`*^9}, {
  3.606181238485654*^9, 3.60618123855354*^9}, {3.606260632608694*^9, 
  3.6062606330276737`*^9}, {3.6062607394834146`*^9, 3.606260749232637*^9}, {
  3.6063019575197144`*^9, 3.6063019594379997`*^9}, {3.606784049359919*^9, 
  3.606784050799662*^9}}],

Cell[BoxData["0.600980365606258`"], "Output",
 InitializationGroup->True,
 CellChangeTimes->{
  3.6061804188101387`*^9, 3.606180503558421*^9, 3.6061812389957647`*^9, 
   3.6061880497685347`*^9, {3.6062606341109657`*^9, 3.606260654859331*^9}, {
   3.6062607399019623`*^9, 3.606260758109076*^9}, 3.6062613820826683`*^9, 
   3.60629787302879*^9, {3.6063019598690567`*^9, 3.606301986932371*^9}, 
   3.606451007051566*^9, 3.606459734187868*^9, 3.606782442963893*^9, 
   3.606784051540592*^9, 3.606810691501073*^9, 3.606813149823848*^9, 
   3.606813706675551*^9, 3.606864907120152*^9, 3.606871942176117*^9, 
   3.6068726365595293`*^9, 3.606915505867221*^9, 3.6069791409701*^9, 
   3.6069814796299334`*^9, 3.606986957501967*^9, 3.607067816696703*^9, 
   3.607150083352479*^9, 3.607151359070916*^9, 3.6072579393957233`*^9, 
   3.6073401752847013`*^9, 3.607383873899127*^9, 3.6073872419726353`*^9, 
   3.6074710172164288`*^9, 3.607514153674634*^9, 3.6075142961054897`*^9, 
   3.607561125664962*^9, 3.607608808815371*^9, 3.607608852775065*^9, 
   3.607644540897785*^9, 3.607671857166246*^9, 3.60773206680579*^9, 
   3.6077435121476507`*^9, 3.6077597023665667`*^9, 3.6077600444670973`*^9, 
   3.607849897560746*^9, 3.609385697329673*^9, 3.609398989122035*^9, 
   3.609415223484714*^9, 3.609552944225087*^9, 3.609581695820207*^9, 
   3.609584501306345*^9, 3.60962900509853*^9, 3.609640322444121*^9, 
   3.609644879994669*^9, 3.609758110106*^9, 3.609903047453915*^9, 
   3.609989220532011*^9, 3.6100005877768993`*^9, 3.610002649994079*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"photonRatioLogTarget090926A", "=", 
  RowBox[{"Log", "[", "0.0606777", "]"}]}]], "Input",
 InitializationGroup->True,
 CellChangeTimes->{{3.6061809217029467`*^9, 3.606180954718638*^9}, {
   3.606181017422922*^9, 3.606181020333383*^9}, {3.6061812976806707`*^9, 
   3.606181314813086*^9}, {3.60618160742089*^9, 3.6061816158127823`*^9}, 
   3.606784059993985*^9}],

Cell[BoxData[
 RowBox[{"-", "2.802179028977587`"}]], "Output",
 InitializationGroup->True,
 CellChangeTimes->{{3.606180947985483*^9, 3.606180975973802*^9}, 
   3.6061810209968367`*^9, 3.6061812417548027`*^9, 3.6061813543874817`*^9, {
   3.606181587018992*^9, 3.606181616386333*^9}, 3.6061880498643093`*^9, 
   3.606297873161878*^9, 3.606451007160858*^9, 3.606459734270423*^9, 
   3.6067840656517363`*^9, 3.606810695157156*^9, 3.606813150257962*^9, 
   3.6068137070412292`*^9, 3.6068649073084707`*^9, 3.6068719423739643`*^9, 
   3.606872636855194*^9, 3.6069155060534067`*^9, 3.6069791411575003`*^9, 
   3.6069814798289013`*^9, 3.606986957896832*^9, 3.607067816911079*^9, 
   3.607150083522316*^9, 3.607151359305081*^9, 3.60725793944724*^9, 
   3.607340175348632*^9, 3.607383873949205*^9, 3.6073872420245647`*^9, 
   3.607471017265929*^9, 3.607514153729521*^9, 3.6075142961689873`*^9, 
   3.6075611257142267`*^9, 3.607608808896236*^9, 3.607608852839635*^9, 
   3.607644540947682*^9, 3.607671857228724*^9, 3.607732066871545*^9, 
   3.607743512213749*^9, 3.607759702446114*^9, 3.6077600445167103`*^9, 
   3.607849897708963*^9, 3.609385697446891*^9, 3.609398989165126*^9, 
   3.60941522355273*^9, 3.6095529442750797`*^9, 3.609581695870371*^9, 
   3.6095845013571177`*^9, 3.609629005147818*^9, 3.6096403225070267`*^9, 
   3.60964488004885*^9, 3.6097581101572123`*^9, 3.609903047508329*^9, 
   3.609989220582333*^9, 3.6100005878375273`*^9, 3.610002650060519*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"totalPhotonCount090926A", "=", "179.989"}], ";"}]], "Input",
 InitializationGroup->True,
 CellChangeTimes->{{3.6069697973832073`*^9, 3.606969801750536*^9}, {
  3.606969868091188*^9, 3.60696986851854*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"duration090926A", "=", "219.5"}], ";"}]], "Input",
 InitializationGroup->True,
 CellChangeTimes->{{3.607257807363455*^9, 3.607257811609767*^9}, {
  3.60725785703913*^9, 3.607257857403326*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["GRB 090902B", "Subsubsection",
 InitializationGroup->True,
 CellChangeTimes->{{3.606782719863573*^9, 3.6067827324717197`*^9}, {
  3.607257802010275*^9, 3.607257802841473*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[Kappa]LogTarget090902B", "=", 
  RowBox[{"Mean", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Log", "[", "0.36", "]"}], ",", 
     RowBox[{"Log", "[", "0.89", "]"}]}], "}"}], "]"}]}]], "Input",
 InitializationGroup->True,
 CellChangeTimes->{{3.606782742441513*^9, 3.606782759852291*^9}}],

Cell[BoxData[
 RowBox[{"-", "0.5690925318939665`"}]], "Output",
 InitializationGroup->True,
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmVkYGDQA+JJ6XypKfdfORpWT2NLBdIVy7s5ioB0T8YR62IgXSIR
1wiijaamNvYAadFdxz/0A2nemdPcJwDpPam2ZkuBdNvOBR5HgLSV47eco0A6
YOtmyRMgc5dLTH0PpKtf5RwQf/DK0WbBk3gJIM2xozjLB0g7Lfw2sQRIz1vk
/KITSN854tfbDaQ/2OiUbgHSnx5YtZ4E0iaLOaeD6Df6u0seAGmvPKW934F0
//L5h0B0id1ifc6Hrxxfyui2iQHppAWJb4yBtLwAd7MlkF7w5FKWI5C+ITlt
KoiWfW5dmgukXYxMY6KfvHIss195MxFIC5V9P5YJpNkaeNjWAukoe2aB3UD6
0491eXuAdJbwKs1LIPnS0A3XgfQhPbZXN4F0zvmTxoJPXzkuufPpRziQ5oqc
xtMEpDU+189sB9IR/91ndwBpAGkzzsk=
  "]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[Kappa]LogError090902B", "=", 
  FractionBox[
   RowBox[{
    RowBox[{"Log", "[", "0.89", "]"}], "-", 
    RowBox[{"Log", "[", "0.36", "]"}]}], "2"]}]], "Input",
 InitializationGroup->True,
 CellChangeTimes->{{3.606782762736133*^9, 3.606782776969884*^9}}],

Cell[BoxData["0.452558715638015`"], "Output",
 InitializationGroup->True,
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmVkYGDQA+IWTa30lPuvHDe5rGVLBdJa66dwFAFpLtZj1sVA2mJd
fCOIfr87vbEHSN+4evJDP5DWOzXTfQKQ7phqb7YUSLO8XORxBEjPa/+RcxRI
W/3aIXkCSOdMkZr6Hkjv7Mk7IP7glWPqiufxEkDapKA0ywdI/1X6ObEESJsH
u77oBNL8IQG93UA65qFu6RYg7bPGpvUkkC66yj0dRG/ZvqfkAZDuW6Ky9zuQ
vpSy8BCIzl21RJ/z4SvHLDv9NjEgzWOR/MYYSBeY8zZbAun5glezHIH0u9PT
p4LoRey2pblAetkqs5joJ0D/Na26mQikvzn8PJYJpGU0+djWAunUdywCu4G0
wfoNeXuA9KEZqzUvAWm3wrAN14F03y32VzeBtN+808aCT4H+WPHlRziQzvsw
nacJSDfNapzZDqSfPvKb3QGkAaf80xE=
  "]]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Combined test", "Subsubsection",
 InitializationGroup->True,
 CellChangeTimes->{{3.6061816638925343`*^9, 3.606181667861302*^9}, {
  3.6062978758065147`*^9, 3.606297878572287*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"durationNormalize", "[", 
   RowBox[{
   "universe_", ",", "burst", ",", "observer_", ",", "targetDuration_", ",", 
    RowBox[{"{", 
     RowBox[{"\[Omega]1_", ",", "\[Omega]2_"}], "}"}]}], "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", "burstValues", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"burstValues", "=", 
      RowBox[{"{", 
       RowBox[{
       "\[Gamma]", ",", "\[Eta]0", ",", "r0", ",", "n", ",", "\[Omega]0", ",",
         "\[Theta]0", ",", "k", ",", "\[Alpha]"}], "}"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"burstValues", "[", 
       RowBox[{"[", "3", "]"}], "]"}], "=", 
      RowBox[{"targetDuration", 
       FractionBox["r0", 
        RowBox[{"duration", "[", 
         RowBox[{"universe", ",", "burstValues", ",", "observer", ",", 
          RowBox[{"{", 
           RowBox[{"\[Omega]1", ",", "\[Omega]2"}], "}"}]}], "]"}]]}]}], ";", 
     "\[IndentingNewLine]", "burstValues"}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 InitializationGroup->True,
 CellChangeTimes->{{3.607256503410254*^9, 3.6072565947495947`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"energyNormalize", "[", 
   RowBox[{
   "universe_", ",", "burst", ",", "observer_", ",", "photonCount_", ",", 
    RowBox[{"{", 
     RowBox[{"\[Omega]1_", ",", "\[Omega]2_"}], "}"}]}], "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", "burstValues", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"burstValues", "=", 
      RowBox[{"{", 
       RowBox[{
       "\[Gamma]", ",", "\[Eta]0", ",", "r0", ",", "n", ",", "\[Omega]0", ",",
         "\[Theta]0", ",", "k", ",", "\[Alpha]"}], "}"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"burstValues", "[", 
       RowBox[{"[", "2", "]"}], "]"}], "=", 
      RowBox[{"photonCount", 
       FractionBox["\[Eta]0", 
        RowBox[{"p", "[", 
         RowBox[{"universe", ",", "burstValues", ",", "observer", ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "\[Infinity]"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"\[Omega]1", ",", "\[Omega]2"}], "}"}]}], "]"}]]}]}], ";", 
     "\[IndentingNewLine]", "burstValues"}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 InitializationGroup->True,
 CellChangeTimes->{{3.607164411342263*^9, 3.607164535753788*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"normalizedBurst", "[", 
   RowBox[{
   "universe_", ",", "burst_", ",", "observer_", ",", "targetDuration_", ",", 
    "photonCount_", ",", 
    RowBox[{"{", 
     RowBox[{"\[Omega]1_", ",", "\[Omega]2_"}], "}"}]}], "]"}], ":=", 
  RowBox[{"energyNormalize", "[", 
   RowBox[{"universe", ",", 
    RowBox[{"durationNormalize", "[", 
     RowBox[{
     "universe", ",", "burst", ",", "observer", ",", "targetDuration", ",", 
      RowBox[{"{", 
       RowBox[{"\[Omega]1", ",", "\[Omega]2"}], "}"}]}], "]"}], ",", 
    "observer", ",", "photonCount", ",", 
    RowBox[{"{", 
     RowBox[{"\[Omega]1", ",", "\[Omega]2"}], "}"}]}], "]"}]}]], "Input",
 InitializationGroup->True,
 CellChangeTimes->{{3.6072565979777822`*^9, 3.607256667060999*^9}, {
  3.607257984212576*^9, 3.607258008317346*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "fitTestSingleBurst", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"sampleSize", "\[Rule]", "10"}], ",", 
     RowBox[{"penalizationFactor", "\[Rule]", "400"}], ",", 
     RowBox[{"maxEnergy", "\[Rule]", "6*^53"}], ",", 
     RowBox[{"accurateQ", "\[Rule]", "True"}], ",", 
     RowBox[{"logQ", "\[Rule]", "False"}], ",", 
     RowBox[{"testWeights", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"1", ",", "1", ",", "1", ",", "1"}], "}"}]}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fitTestSingleBurst", "[", 
   RowBox[{
   "universe_", ",", "population_", ",", "burst", ",", "observer", ",", 
    RowBox[{"{", 
     RowBox[{"\[Omega]1_", ",", "\[Omega]2_", ",", "\[Omega]3_"}], "}"}], ",",
     "totalPhotonCount_", ",", 
    RowBox[{"{", 
     RowBox[{"\[Kappa]LogTarget_", ",", "\[Kappa]LogError_"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"\[Kappa]MinLogTarget_", ",", "\[Kappa]MinLogError_"}], "}"}], 
    ",", 
    RowBox[{"{", 
     RowBox[{"photonRatioLogTarget_", ",", "photonRatioLogError_"}], "}"}], 
    ",", 
    RowBox[{"{", 
     RowBox[{
     "photonRatioMedianLogTarget_", ",", "photonRatioMedianLogError_"}], 
     "}"}], ",", 
    RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "result", ",", "sample", ",", "pLow", ",", "pHigh", ",", "\[Kappa]0", 
      ",", "\[Kappa]Test", ",", "\[Kappa]MinTest", ",", "photonRatioTest", 
      ",", "photonRatioMedianTest", ",", "burstValues"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"OptionValue", "[", "logQ", "]"}], ",", 
       RowBox[{"Print", "[", 
        RowBox[{"Row", "[", 
         RowBox[{"{", 
          RowBox[{"\"\<trying \>\"", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
              "\[Gamma]", ",", "\[Eta]0", ",", "r0", ",", "n", ",", 
               "\[Omega]0", ",", "\[Theta]0", ",", "k", ",", "\[Alpha]"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"z", ",", "\[Chi]"}], "}"}]}], "}"}]}], "}"}], "]"}], 
        "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"result", "=", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"k", "+", 
          FractionBox["\[Alpha]", "2"], "+", "1"}], "\[GreaterEqual]", "0"}], 
        ",", 
        RowBox[{"OptionValue", "[", "penalizationFactor", "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"burstValues", "=", 
          RowBox[{"energyNormalize", "[", 
           RowBox[{"universe", ",", 
            RowBox[{"{", 
             RowBox[{
             "\[Gamma]", ",", "\[Eta]0", ",", "r0", ",", "n", ",", 
              "\[Omega]0", ",", "\[Theta]0", ",", "k", ",", "\[Alpha]"}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"detectorArea", ",", "z", ",", "\[Chi]"}], "}"}], ",", 
            "totalPhotonCount", ",", 
            RowBox[{"{", 
             RowBox[{"\[Omega]1", ",", "\[Omega]3"}], "}"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"energy", "[", 
             RowBox[{"burstValues", ",", "\[Omega]1"}], "]"}], ">", 
            RowBox[{"OptionValue", "[", "maxEnergy", "]"}]}], ",", 
           RowBox[{"OptionValue", "[", "penalizationFactor", "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"sample", "=", 
             RowBox[{"burstSample", "[", 
              RowBox[{
              "universe", ",", "population", ",", "burstValues", ",", 
               "detectorArea", ",", 
               RowBox[{"{", 
                RowBox[{"\[Omega]1", ",", "\[Omega]2", ",", "\[Omega]3"}], 
                "}"}], ",", 
               RowBox[{"OptionValue", "[", "sampleSize", "]"}], ",", 
               RowBox[{"computedValues", "\[Rule]", 
                RowBox[{"{", 
                 RowBox[{"\"\<pTotal\>\"", ",", "\"\<\[Kappa]\>\""}], "}"}]}],
                ",", 
               RowBox[{"accurateQ", "\[Rule]", 
                RowBox[{"OptionValue", "[", "accurateQ", "]"}]}]}], "]"}]}], 
            ";", "\[IndentingNewLine]", 
            RowBox[{"pLow", "=", 
             RowBox[{"p", "[", 
              RowBox[{"universe", ",", "burstValues", ",", 
               RowBox[{"{", 
                RowBox[{"detectorArea", ",", "z", ",", "\[Chi]"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"0", ",", "\[Infinity]"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"\[Omega]1", ",", "\[Omega]2"}], "}"}]}], "]"}]}], 
            ";", "\[IndentingNewLine]", 
            RowBox[{"pHigh", "=", 
             RowBox[{"p", "[", 
              RowBox[{"universe", ",", "burstValues", ",", 
               RowBox[{"{", 
                RowBox[{"detectorArea", ",", "z", ",", "\[Chi]"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"0", ",", "\[Infinity]"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"\[Omega]2", ",", "\[Omega]3"}], "}"}]}], "]"}]}], 
            ";", "\[IndentingNewLine]", 
            RowBox[{"\[Kappa]0", "=", 
             RowBox[{"\[Kappa]Cache", "[", 
              RowBox[{"universe", ",", "burstValues", ",", 
               RowBox[{"{", 
                RowBox[{"detectorArea", ",", "z", ",", "\[Chi]"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"\[Omega]1", ",", "\[Omega]2", ",", "\[Omega]3"}], 
                "}"}], ",", 
               RowBox[{"accurateQ", "\[Rule]", 
                RowBox[{"OptionValue", "[", "accurateQ", "]"}]}]}], "]"}]}], 
            ";", "\[IndentingNewLine]", 
            RowBox[{"\[Kappa]Test", "=", 
             FractionBox[
              RowBox[{
               RowBox[{"Log", "[", "\[Kappa]0", "]"}], "-", 
               "\[Kappa]LogTarget"}], "\[Kappa]LogError"]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"\[Kappa]MinTest", "=", 
             RowBox[{"Max", "[", 
              RowBox[{"0", ",", 
               FractionBox[
                RowBox[{
                 RowBox[{"Log", "@", 
                  RowBox[{"Min", "@", 
                   RowBox[{"sample", "[", 
                    RowBox[{"[", 
                    RowBox[{"All", ",", "2"}], "]"}], "]"}]}]}], "-", 
                 "\[Kappa]MinLogTarget"}], "\[Kappa]MinLogError"]}], "]"}]}], 
            ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
            RowBox[{"photonRatioTest", "=", 
             FractionBox[
              RowBox[{
               RowBox[{"Log", "[", 
                FractionBox["pHigh", "pLow"], "]"}], "-", 
               "photonRatioLogTarget"}], "photonRatioLogError"]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"photonRatioMedianTest", "=", 
             FractionBox[
              RowBox[{
               RowBox[{"Log", "[", 
                FractionBox[
                 RowBox[{"pLow", "+", "pHigh"}], 
                 RowBox[{"Median", "@", 
                  RowBox[{"sample", "[", 
                   RowBox[{"[", 
                    RowBox[{"All", ",", "1"}], "]"}], "]"}]}]], "]"}], "-", 
               "photonRatioMedianLogTarget"}], "photonRatioMedianLogError"]}],
             ";", "\[IndentingNewLine]", 
            RowBox[{"Total", "[", 
             RowBox[{
              RowBox[{"OptionValue", "[", "testWeights", "]"}], 
              RowBox[{"{", 
               RowBox[{
                SuperscriptBox["\[Kappa]Test", "2"], ",", 
                SuperscriptBox["\[Kappa]MinTest", "2"], ",", 
                SuperscriptBox["photonRatioTest", "2"], ",", 
                SuperscriptBox["photonRatioMedianTest", "2"]}], "}"}]}], 
             "]"}]}]}], "\[IndentingNewLine]", "]"}]}]}], 
       "\[IndentingNewLine]", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"OptionValue", "[", "logQ", "]"}], ",", 
       RowBox[{"Print", "[", 
        RowBox[{"{", 
         RowBox[{"result", ",", 
          RowBox[{"{", 
           RowBox[{
           "\[Kappa]Test", ",", "\[Kappa]MinTest", ",", "photonRatioTest", 
            ",", "photonRatioMedianTest"}], "}"}], ",", "burstValues", ",", 
          RowBox[{"{", 
           RowBox[{"z", ",", "\[Chi]"}], "}"}]}], "}"}], "]"}]}], "]"}], ";", 
     "\[IndentingNewLine]", "result"}]}], "\[IndentingNewLine]", 
   "]"}]}]}], "Input",
 InitializationGroup->True,
 CellChangeTimes->{{3.6067841304853563`*^9, 3.6067843330023823`*^9}, {
   3.606784418849988*^9, 3.606784530144672*^9}, {3.606784746649373*^9, 
   3.606784816278531*^9}, {3.606784887254499*^9, 3.606785129475871*^9}, {
   3.6067851646876383`*^9, 3.606785209472348*^9}, {3.606785271986596*^9, 
   3.6067853353692007`*^9}, {3.60678553041534*^9, 3.606785563772859*^9}, {
   3.606786039073058*^9, 3.6067860622807837`*^9}, {3.606786430847364*^9, 
   3.6067866005965*^9}, {3.606786665888916*^9, 3.606786703344331*^9}, {
   3.606786739497644*^9, 3.606786780597384*^9}, {3.606786970867032*^9, 
   3.60678706403421*^9}, {3.606787924466777*^9, 3.606787964648798*^9}, {
   3.606788115161808*^9, 3.606788115366991*^9}, {3.6067887080212383`*^9, 
   3.606788708535561*^9}, {3.606793743979444*^9, 3.6067937529441957`*^9}, {
   3.60679384130014*^9, 3.606793843387294*^9}, {3.606793914830934*^9, 
   3.606793926343021*^9}, {3.606793966134832*^9, 3.606794000070466*^9}, {
   3.6067940713763742`*^9, 3.6067941743989763`*^9}, {3.606794212876604*^9, 
   3.6067942296292953`*^9}, {3.606795616118765*^9, 3.6067956231004677`*^9}, {
   3.606797921340238*^9, 3.606797954472186*^9}, {3.606798998334292*^9, 
   3.60679905375896*^9}, {3.606799139577279*^9, 3.6067991893948793`*^9}, {
   3.60679938961654*^9, 3.6067993932920523`*^9}, {3.606799458623124*^9, 
   3.6067994589890833`*^9}, {3.606812577241592*^9, 3.60681261453538*^9}, {
   3.606813123372066*^9, 3.606813123725144*^9}, {3.606813933173003*^9, 
   3.606813941392313*^9}, {3.606814028176161*^9, 3.606814030507115*^9}, {
   3.606969388151495*^9, 3.606969456015808*^9}, {3.606969488775598*^9, 
   3.60696949406213*^9}, {3.606969529536642*^9, 3.6069696305421057`*^9}, {
   3.606969662344791*^9, 3.606969670096977*^9}, {3.60696971076998*^9, 
   3.6069697162065077`*^9}, {3.6069703325263157`*^9, 
   3.6069703406136503`*^9}, {3.6069706726628036`*^9, 3.60697067293561*^9}, 
   3.606990421362998*^9, 3.607039652785748*^9, {3.6070737466198177`*^9, 
   3.6070737627039824`*^9}, {3.607079602778102*^9, 3.6070796042148323`*^9}, {
   3.6071640212111683`*^9, 3.60716402133992*^9}, {3.607164098736981*^9, 
   3.607164135897633*^9}, {3.6071642309005547`*^9, 3.607164261252738*^9}, {
   3.607164654394418*^9, 3.6071646594417*^9}, {3.607164789131357*^9, 
   3.607164794992824*^9}, {3.6071648896505404`*^9, 3.6071649532718973`*^9}, 
   3.607577701537319*^9, {3.6075778521013403`*^9, 3.6075778632585897`*^9}, {
   3.607577919254958*^9, 3.607577929581045*^9}, {3.607577959977606*^9, 
   3.60757796830942*^9}, {3.607581794225686*^9, 3.6075818497271023`*^9}, 
   3.607582435542191*^9, {3.609572240405469*^9, 3.6095723022081413`*^9}, {
   3.609572342927558*^9, 3.6095723609168673`*^9}, {3.6095818435164757`*^9, 
   3.6095818445913553`*^9}, {3.6095819252004004`*^9, 3.609582027393879*^9}, 
   3.609582653607339*^9, 3.609584496374695*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "findSingleBurstFit", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"accurateQ", "\[Rule]", "True"}], ",", 
     RowBox[{"logQ", "\[Rule]", "False"}], ",", 
     RowBox[{"sampleSize", "\[Rule]", "10"}], ",", 
     RowBox[{"penalizationFactor", "\[Rule]", "400"}], ",", 
     RowBox[{"maxEnergy", "\[Rule]", "6*^53"}], ",", 
     RowBox[{"\[Eta]0", "\[Rule]", "8.4*^37"}], ",", 
     RowBox[{"r0", "\[Rule]", "1.2*^6"}], ",", 
     RowBox[{"\[Chi]MaxFactor", "\[Rule]", "30."}], ",", 
     RowBox[{"detectorArea", "\[Rule]", "5.563*^-18"}], ",", 
     RowBox[{"nMin", "\[Rule]", "3.5"}], ",", 
     RowBox[{"testWeights", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"1", ",", "1", ",", "1", ",", "1"}], "}"}]}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"findSingleBurstFit", "[", 
   RowBox[{"universe_", ",", "population_", ",", 
    RowBox[{"{", 
     RowBox[{"\[Gamma]_", ",", "\[Omega]0_"}], "}"}], ",", "z_", ",", 
    RowBox[{"{", 
     RowBox[{"\[Omega]1_", ",", "\[Omega]2_", ",", "\[Omega]3_"}], "}"}], ",",
     "totalPhotonCount_", ",", 
    RowBox[{"{", 
     RowBox[{"\[Kappa]LogTarget_", ",", "\[Kappa]LogError_"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"\[Kappa]MinLogTarget_", ",", "\[Kappa]MinLogError_"}], "}"}], 
    ",", 
    RowBox[{"{", 
     RowBox[{"photonRatioLogTarget_", ",", "photonRatioLogError_"}], "}"}], 
    ",", 
    RowBox[{"{", 
     RowBox[{
     "photonRatioMedianLogTarget_", ",", "photonRatioMedianLogError_"}], 
     "}"}], ",", "initialPoints_", ",", 
    RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "testFunction", ",", "\[Eta]0", ",", "r0", ",", "detectorArea", ",", 
      "sSize", ",", "penFactor", ",", "mEnergy", ",", "accQ", ",", "lQ", ",", 
      "weights"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"\[Eta]0", "=", 
      RowBox[{"OptionValue", "[", "\[Eta]0", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"r0", "=", 
      RowBox[{"OptionValue", "[", "r0", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"detectorArea", "=", 
      RowBox[{"OptionValue", "[", "detectorArea", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"sSize", "=", 
      RowBox[{"OptionValue", "[", "sampleSize", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"penFactor", "=", 
      RowBox[{"OptionValue", "[", "penalizationFactor", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"mEnergy", "=", 
      RowBox[{"OptionValue", "[", "maxEnergy", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"accQ", "=", 
      RowBox[{"OptionValue", "[", "accurateQ", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"lQ", "=", 
      RowBox[{"OptionValue", "[", "logQ", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"weights", "=", 
      RowBox[{"OptionValue", "[", "testWeights", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"testFunction", "[", 
       RowBox[{
        RowBox[{"nj_", "?", "NumericQ"}], ",", 
        RowBox[{"\[Theta]0j_", "?", "NumericQ"}], ",", 
        RowBox[{"kj_", "?", "NumericQ"}], ",", 
        RowBox[{"\[Alpha]j_", "?", "NumericQ"}], ",", 
        RowBox[{"\[Chi]j_", "?", "NumericQ"}]}], "]"}], ":=", 
      RowBox[{"fitTestSingleBurst", "[", 
       RowBox[{"universe", ",", "population", ",", 
        RowBox[{"{", 
         RowBox[{
         "\[Gamma]", ",", "\[Eta]0", ",", "r0", ",", "nj", ",", "\[Omega]0", 
          ",", 
          RowBox[{"Exp", "[", "\[Theta]0j", "]"}], ",", "kj", ",", 
          "\[Alpha]j"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"detectorArea", ",", "z", ",", 
          RowBox[{"Exp", "[", "\[Chi]j", "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"\[Omega]1", ",", "\[Omega]2", ",", "\[Omega]3"}], "}"}], 
        ",", "totalPhotonCount", ",", 
        RowBox[{"{", 
         RowBox[{"\[Kappa]LogTarget", ",", "\[Kappa]LogError"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"\[Kappa]MinLogTarget", ",", "\[Kappa]MinLogError"}], "}"}], 
        ",", 
        RowBox[{"{", 
         RowBox[{"photonRatioLogTarget", ",", "photonRatioLogError"}], "}"}], 
        ",", 
        RowBox[{"{", 
         RowBox[{
         "photonRatioMedianLogTarget", ",", "photonRatioMedianLogError"}], 
         "}"}], ",", 
        RowBox[{"sampleSize", "\[Rule]", "sSize"}], ",", 
        RowBox[{"penalizationFactor", "\[Rule]", "penFactor"}], ",", 
        RowBox[{"maxEnergy", "\[Rule]", "mEnergy"}], ",", 
        RowBox[{"accurateQ", "\[Rule]", "accQ"}], ",", 
        RowBox[{"logQ", "\[Rule]", "lQ"}], ",", 
        RowBox[{"testWeights", "\[Rule]", "weights"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"NMinimize", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"testFunction", "[", 
          RowBox[{
          "nj", ",", "\[Theta]0j", ",", "kj", ",", "\[Alpha]j", ",", 
           "\[Chi]j"}], "]"}], ",", 
         RowBox[{"nj", ">", 
          RowBox[{"OptionValue", "[", "nMin", "]"}]}], ",", 
         RowBox[{"kj", "<", "0"}], ",", 
         RowBox[{"\[Chi]j", "\[LessEqual]", 
          RowBox[{"Log", "[", 
           FractionBox[
            RowBox[{"OptionValue", "[", "\[Chi]MaxFactor", "]"}], "\[Gamma]"],
            "]"}]}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
        "nj", ",", "\[Theta]0j", ",", "kj", ",", "\[Alpha]j", ",", 
         "\[Chi]j"}], "}"}], ",", 
       RowBox[{"Method", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"\"\<NelderMead\>\"", ",", 
          RowBox[{"\"\<InitialPoints\>\"", "\[Rule]", "initialPoints"}]}], 
         "}"}]}]}], "]"}]}]}], "\[IndentingNewLine]", "]"}]}]}], "Input",
 InitializationGroup->True,
 CellChangeTimes->{{3.606196337114387*^9, 3.60619634259832*^9}, {
   3.606196427421619*^9, 3.6061964280058613`*^9}, {3.606196546477379*^9, 
   3.60619687062036*^9}, {3.606196931043127*^9, 3.606197192386756*^9}, {
   3.606197384027049*^9, 3.606197397750696*^9}, {3.6061975884357567`*^9, 
   3.606197639043159*^9}, {3.606197710746685*^9, 3.6061977668410597`*^9}, {
   3.606197888074235*^9, 3.606197889580408*^9}, 3.606261248965354*^9, {
   3.6062616033082533`*^9, 3.606261606676928*^9}, {3.606262705564365*^9, 
   3.60626272769366*^9}, {3.606263546786374*^9, 3.6062636186257553`*^9}, {
   3.6062637168964*^9, 3.606263742388198*^9}, {3.606302028041608*^9, 
   3.60630208242258*^9}, {3.6064544042746363`*^9, 3.606454410387237*^9}, {
   3.606454475731523*^9, 3.606454537573245*^9}, {3.606454590604412*^9, 
   3.606454636101365*^9}, 3.606454707124113*^9, {3.606454751100938*^9, 
   3.606454766395697*^9}, {3.606455181975443*^9, 3.606455261693512*^9}, {
   3.606455314609996*^9, 3.6064553277303743`*^9}, {3.606785700348125*^9, 
   3.606785807926054*^9}, {3.606786870716901*^9, 3.606786889739295*^9}, 
   3.606786920303157*^9, {3.606787084442574*^9, 3.6067871901344347`*^9}, {
   3.606787294681089*^9, 3.606787522352125*^9}, {3.6067877590356083`*^9, 
   3.606787769994176*^9}, {3.606787821978108*^9, 3.606787875961068*^9}, {
   3.6067953080166492`*^9, 3.606795310150799*^9}, {3.60679547672785*^9, 
   3.606795490694419*^9}, {3.606795961480076*^9, 3.606796258584289*^9}, {
   3.606796541175186*^9, 3.606796556361103*^9}, {3.606797009692794*^9, 
   3.606797091181622*^9}, {3.6067979347342052`*^9, 3.606797934915477*^9}, {
   3.606797977946269*^9, 3.606798013389991*^9}, {3.606798066037321*^9, 
   3.60679806866824*^9}, {3.606798138805749*^9, 3.606798142170463*^9}, {
   3.6067982019653463`*^9, 3.606798241233823*^9}, {3.606798325980959*^9, 
   3.6067983274197893`*^9}, {3.6067983761432247`*^9, 3.606798377448983*^9}, {
   3.606798416485764*^9, 3.606798447120487*^9}, {3.606798734013507*^9, 
   3.606798751273053*^9}, {3.606798908606326*^9, 3.606798917731062*^9}, {
   3.606798967586944*^9, 3.6067989939175777`*^9}, {3.606799066674605*^9, 
   3.606799069207491*^9}, 3.606810933521221*^9, {3.606811112767414*^9, 
   3.6068113583985443`*^9}, {3.6068654184712753`*^9, 3.60686543975744*^9}, {
   3.606865570454639*^9, 3.6068655747020397`*^9}, {3.60686568370875*^9, 
   3.6068656840319757`*^9}, {3.606867762019717*^9, 3.606867773299673*^9}, {
   3.606867817339847*^9, 3.606867867132864*^9}, {3.606868098517172*^9, 
   3.606868098864695*^9}, {3.6069696821164293`*^9, 3.606969698781539*^9}, {
   3.607070227020426*^9, 3.607070314973587*^9}, 3.6070716574449043`*^9, {
   3.60707255939252*^9, 3.6070725611900463`*^9}, {3.607073572500991*^9, 
   3.607073661720378*^9}, {3.607079617458284*^9, 3.60707964401513*^9}, {
   3.607079700749875*^9, 3.6070797173667297`*^9}, {3.6070797515820913`*^9, 
   3.607079768277616*^9}, {3.607079828089015*^9, 3.607079845952528*^9}, {
   3.607149955000238*^9, 3.6071499949096622`*^9}, {3.607150062718923*^9, 
   3.607150065238398*^9}, {3.607164310062943*^9, 3.607164351977974*^9}, {
   3.607390953205967*^9, 3.607391006405122*^9}, {3.6075771149195232`*^9, 
   3.607577115479409*^9}, {3.6075777036576777`*^9, 3.607577704455166*^9}, {
   3.6075818666484947`*^9, 3.6075818982977324`*^9}}]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Visualization", "Subsection",
 InitializationGroup->True,
 CellChangeTimes->{{3.6070676433964376`*^9, 3.607067647242429*^9}}],

Cell[CellGroupData[{

Cell["Model scheme", "Subsubsection",
 CellChangeTimes->{{3.609661861117159*^9, 3.609661862667097*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "modelScheme", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"centralEngineSize", "\[Rule]", "0.03"}], ",", 
     RowBox[{"jetRadius", "\[Rule]", "0.3"}], ",", 
     RowBox[{"lowAngle", "\[Rule]", "0.1"}], ",", 
     RowBox[{"highAngle", "\[Rule]", "0.01"}], ",", 
     RowBox[{"observerSize", "\[Rule]", "0.03"}], ",", 
     RowBox[{"observerDistance", "\[Rule]", "1"}], ",", 
     RowBox[{"observerAngle", "\[Rule]", "0.09"}], ",", 
     RowBox[{"centralEngineQ", "\[Rule]", "True"}], ",", 
     RowBox[{"centralEngineLabelQ", "\[Rule]", "False"}], ",", 
     RowBox[{"jetQ", "\[Rule]", "True"}], ",", 
     RowBox[{"jetLabelQ", "\[Rule]", "False"}], ",", 
     RowBox[{"epQ", "\[Rule]", "True"}], ",", 
     RowBox[{"\[Gamma]Q", "\[Rule]", "True"}], ",", 
     RowBox[{"observerQ", "\[Rule]", "True"}], ",", 
     RowBox[{"observerLabelQ", "\[Rule]", "False"}], ",", 
     RowBox[{"FontSize", "\[Rule]", "10"}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "Automatic"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"modelScheme", "[", 
    RowBox[{"OptionsPattern", "[", "]"}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "i", ",", "ti", ",", "redX", ",", "redY", ",", "blueX", ",", "blueY", 
       ",", "observerX", ",", "observerY"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Graphics", "[", 
      RowBox[{
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"OptionValue", "[", "centralEngineQ", "]"}], ",", 
             "Black", ",", "Transparent"}], "]"}], ",", 
           RowBox[{"Disk", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", "0"}], "}"}], ",", 
             RowBox[{"OptionValue", "[", "centralEngineSize", "]"}]}], 
            "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"OptionValue", "[", "centralEngineLabelQ", "]"}], ",", 
             "Black", ",", "Transparent"}], "]"}], ",", 
           RowBox[{"Text", "[", 
            RowBox[{
             RowBox[{"Style", "[", 
              RowBox[{"\"\<Central\\nEngine\>\"", ",", 
               RowBox[{"FontSize", "\[Rule]", 
                RowBox[{"OptionValue", "[", "FontSize", "]"}]}]}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", 
               RowBox[{"-", 
                RowBox[{"OptionValue", "[", "centralEngineSize", "]"}]}]}], 
              "}"}], ",", "Top"}], "]"}]}], "}"}], ",", "\[IndentingNewLine]",
          "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"observerX", "=", 
           RowBox[{
            RowBox[{"OptionValue", "[", "observerDistance", "]"}], 
            RowBox[{"Cos", "[", 
             RowBox[{"OptionValue", "[", "observerAngle", "]"}], "]"}]}]}], 
          ";", "\[IndentingNewLine]", 
          RowBox[{"observerY", "=", 
           RowBox[{
            RowBox[{"OptionValue", "[", "observerDistance", "]"}], 
            RowBox[{"Sin", "[", 
             RowBox[{"OptionValue", "[", "observerAngle", "]"}], "]"}]}]}], 
          ";", "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"OptionValue", "[", "observerQ", "]"}], ",", 
              RowBox[{"Darker", "[", "Green", "]"}], ",", "Transparent"}], 
             "]"}], ",", 
            RowBox[{"Disk", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"observerX", ",", "observerY"}], "}"}], ",", 
              RowBox[{"OptionValue", "[", "observerSize", "]"}]}], "]"}]}], 
           "}"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"OptionValue", "[", "observerLabelQ", "]"}], ",", 
             RowBox[{"Darker", "[", "Green", "]"}], ",", "Transparent"}], 
            "]"}], ",", "\[IndentingNewLine]", 
           RowBox[{"Text", "[", 
            RowBox[{
             RowBox[{"Style", "[", 
              RowBox[{"\"\<Observer\>\"", ",", 
               RowBox[{"FontSize", "\[Rule]", 
                RowBox[{"OptionValue", "[", "FontSize", "]"}]}]}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"observerX", ",", 
               RowBox[{"observerY", "+", 
                RowBox[{"OptionValue", "[", "centralEngineSize", "]"}]}]}], 
              "}"}], ",", "Bottom"}], "]"}]}], "}"}], ",", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"OptionValue", "[", "jetQ", "]"}], ",", 
             RowBox[{"Opacity", "[", "0.1", "]"}], ",", 
             RowBox[{"Opacity", "[", "0", "]"}]}], "]"}], ",", "Red", ",", 
           RowBox[{"Disk", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", "0"}], "}"}], ",", 
             RowBox[{"OptionValue", "[", "jetRadius", "]"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", 
                RowBox[{"OptionValue", "[", "lowAngle", "]"}]}], ",", 
               RowBox[{"OptionValue", "[", "lowAngle", "]"}]}], "}"}]}], 
            "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"Thick", ",", "Red", ",", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"OptionValue", "[", "jetQ", "]"}], ",", 
             RowBox[{"Opacity", "[", "1", "]"}], ",", 
             RowBox[{"Opacity", "[", "0", "]"}]}], "]"}], ",", 
           RowBox[{"Circle", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", "0"}], "}"}], ",", 
             RowBox[{"OptionValue", "[", "jetRadius", "]"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", 
                RowBox[{"OptionValue", "[", "lowAngle", "]"}]}], ",", 
               RowBox[{"OptionValue", "[", "lowAngle", "]"}]}], "}"}]}], 
            "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"OptionValue", "[", "jetQ", "]"}], ",", 
             RowBox[{"Opacity", "[", "0.1", "]"}], ",", 
             RowBox[{"Opacity", "[", "0", "]"}]}], "]"}], ",", "Blue", ",", 
           RowBox[{"Disk", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", "0"}], "}"}], ",", 
             RowBox[{"OptionValue", "[", "jetRadius", "]"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", 
                RowBox[{"OptionValue", "[", "highAngle", "]"}]}], ",", 
               RowBox[{"OptionValue", "[", "highAngle", "]"}]}], "}"}]}], 
            "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"Thick", ",", "Blue", ",", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"OptionValue", "[", "jetQ", "]"}], ",", 
             RowBox[{"Opacity", "[", "1", "]"}], ",", 
             RowBox[{"Opacity", "[", "0", "]"}]}], "]"}], ",", 
           RowBox[{"Circle", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", "0"}], "}"}], ",", 
             RowBox[{"OptionValue", "[", "jetRadius", "]"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", 
                RowBox[{"OptionValue", "[", "highAngle", "]"}]}], ",", 
               RowBox[{"OptionValue", "[", "highAngle", "]"}]}], "}"}]}], 
            "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"Red", ",", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"OptionValue", "[", "jetLabelQ", "]"}], ",", 
             RowBox[{"Opacity", "[", "1", "]"}], ",", 
             RowBox[{"Opacity", "[", "0", "]"}]}], "]"}], ",", 
           RowBox[{"Text", "[", 
            RowBox[{
             RowBox[{"Style", "[", 
              RowBox[{"\"\<Shock\\nFront\>\"", ",", 
               RowBox[{"FontSize", "\[Rule]", 
                RowBox[{"OptionValue", "[", "FontSize", "]"}]}]}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"1.03", 
                RowBox[{"OptionValue", "[", "jetRadius", "]"}], 
                RowBox[{"Cos", "[", 
                 FractionBox[
                  RowBox[{"OptionValue", "[", "lowAngle", "]"}], "2"], 
                 "]"}]}], ",", 
               RowBox[{
                RowBox[{"-", 
                 RowBox[{"OptionValue", "[", "jetRadius", "]"}]}], 
                RowBox[{"Sin", "[", 
                 FractionBox[
                  RowBox[{"OptionValue", "[", "lowAngle", "]"}], "2"], 
                 "]"}]}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"Left", ",", "Top"}], "}"}]}], "]"}]}], "}"}], ",", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"redX", "=", 
           RowBox[{
            RowBox[{"OptionValue", "[", "jetRadius", "]"}], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"Min", "[", 
              RowBox[{
               RowBox[{"OptionValue", "[", "lowAngle", "]"}], ",", 
               RowBox[{"OptionValue", "[", "observerAngle", "]"}]}], "]"}], 
             "]"}]}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"redY", "=", 
           RowBox[{
            RowBox[{"OptionValue", "[", "jetRadius", "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"Min", "[", 
              RowBox[{
               RowBox[{"OptionValue", "[", "lowAngle", "]"}], ",", 
               RowBox[{"OptionValue", "[", "observerAngle", "]"}]}], "]"}], 
             "]"}]}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"blueX", "=", 
           RowBox[{
            RowBox[{"OptionValue", "[", "jetRadius", "]"}], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"Min", "[", 
              RowBox[{
               RowBox[{"OptionValue", "[", "highAngle", "]"}], ",", 
               RowBox[{"OptionValue", "[", "observerAngle", "]"}]}], "]"}], 
             "]"}]}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"blueY", "=", 
           RowBox[{
            RowBox[{"OptionValue", "[", "jetRadius", "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"Min", "[", 
              RowBox[{
               RowBox[{"OptionValue", "[", "highAngle", "]"}], ",", 
               RowBox[{"OptionValue", "[", "observerAngle", "]"}]}], "]"}], 
             "]"}]}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{"Red", ",", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"OptionValue", "[", "epQ", "]"}], ",", 
              RowBox[{"Opacity", "[", "1", "]"}], ",", 
              RowBox[{"Opacity", "[", "0", "]"}]}], "]"}], ",", 
            RowBox[{"Line", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"0", ",", "0"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"redX", ",", "redY"}], "}"}]}], "}"}], "]"}]}], 
           "}"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"Red", ",", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"OptionValue", "[", "epQ", "]"}], ",", 
             RowBox[{"Opacity", "[", "1", "]"}], ",", 
             RowBox[{"Opacity", "[", "0", "]"}]}], "]"}], ",", 
           RowBox[{"Text", "[", 
            RowBox[{
             RowBox[{"Style", "[", 
              RowBox[{
              "\"\<\!\(\*SuperscriptBox[\(e\), \(\[PlusMinus]\)]\), \
\!\(\*SuperscriptBox[\(p\), \(\[PlusMinus]\)]\)\>\"", ",", 
               RowBox[{"FontSize", "\[Rule]", 
                RowBox[{"OptionValue", "[", "FontSize", "]"}]}]}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{
               FractionBox["redX", "2"], ",", 
               FractionBox["redY", "2"]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"Right", ",", "Bottom"}], "}"}]}], "]"}]}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"Blue", ",", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"OptionValue", "[", "epQ", "]"}], ",", 
             RowBox[{"Opacity", "[", "1", "]"}], ",", 
             RowBox[{"Opacity", "[", "0", "]"}]}], "]"}], ",", 
           RowBox[{"Line", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"0", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"blueX", ",", "blueY"}], "}"}]}], "}"}], "]"}]}], 
          "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"Blue", ",", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"OptionValue", "[", "epQ", "]"}], ",", 
             RowBox[{"Opacity", "[", "1", "]"}], ",", 
             RowBox[{"Opacity", "[", "0", "]"}]}], "]"}], ",", 
           RowBox[{"Text", "[", 
            RowBox[{
             RowBox[{"Style", "[", 
              RowBox[{
              "\"\<\!\(\*SuperscriptBox[\(e\), \(\[PlusMinus]\)]\), \
\!\(\*SuperscriptBox[\(p\), \(\[PlusMinus]\)]\)\>\"", ",", 
               RowBox[{"FontSize", "\[Rule]", 
                RowBox[{"OptionValue", "[", "FontSize", "]"}]}]}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{
               FractionBox["blueX", "2"], ",", 
               FractionBox["blueY", "2"]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"Left", ",", "Top"}], "}"}]}], "]"}]}], "}"}], ",", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"Dashed", ",", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"OptionValue", "[", "\[Gamma]Q", "]"}], ",", 
             RowBox[{"Opacity", "[", "1", "]"}], ",", 
             RowBox[{"Opacity", "[", "0", "]"}]}], "]"}], ",", "Red", ",", 
           RowBox[{"Line", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"redX", ",", "redY"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"observerX", ",", "observerY"}], "}"}]}], "}"}], 
            "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"Red", ",", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"OptionValue", "[", "\[Gamma]Q", "]"}], ",", 
             RowBox[{"Opacity", "[", "1", "]"}], ",", 
             RowBox[{"Opacity", "[", "0", "]"}]}], "]"}], ",", 
           RowBox[{"Text", "[", 
            RowBox[{
             RowBox[{"Style", "[", 
              RowBox[{"\"\<\[Gamma]\>\"", ",", 
               RowBox[{"FontSize", "\[Rule]", 
                RowBox[{"OptionValue", "[", "FontSize", "]"}]}]}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{
               FractionBox[
                RowBox[{"redX", "+", "observerX"}], "2"], ",", 
               FractionBox[
                RowBox[{"redY", "+", "observerY"}], "2"]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"Right", ",", "Bottom"}], "}"}]}], "]"}]}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"Dashed", ",", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"OptionValue", "[", "\[Gamma]Q", "]"}], ",", 
             RowBox[{"Opacity", "[", "1", "]"}], ",", 
             RowBox[{"Opacity", "[", "0", "]"}]}], "]"}], ",", "Blue", ",", 
           RowBox[{"Line", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"blueX", ",", "blueY"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"observerX", ",", "observerY"}], "}"}]}], "}"}], 
            "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"Blue", ",", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"OptionValue", "[", "\[Gamma]Q", "]"}], ",", 
             RowBox[{"Opacity", "[", "1", "]"}], ",", 
             RowBox[{"Opacity", "[", "0", "]"}]}], "]"}], ",", 
           RowBox[{"Text", "[", 
            RowBox[{
             RowBox[{"Style", "[", 
              RowBox[{"\"\<\[Gamma]\>\"", ",", 
               RowBox[{"FontSize", "\[Rule]", 
                RowBox[{"OptionValue", "[", "FontSize", "]"}]}]}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{
               FractionBox[
                RowBox[{"blueX", "+", "observerX"}], "2"], ",", 
               FractionBox[
                RowBox[{"blueY", "+", "observerY"}], "2"]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"Left", ",", "Top"}], "}"}]}], "]"}]}], "}"}]}], 
        "\[IndentingNewLine]", "}"}], ",", 
       RowBox[{"ImageSize", "\[Rule]", 
        RowBox[{"OptionValue", "[", "ImageSize", "]"}]}], ",", " ", 
       RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.59584258302489*^9, 3.595842753897132*^9}, {
   3.595842866470069*^9, 3.595843023059347*^9}, {3.5958430677816467`*^9, 
   3.5958431941824017`*^9}, {3.5958432468544703`*^9, 
   3.5958433680383453`*^9}, {3.595843411558457*^9, 3.595843466852075*^9}, {
   3.595843589814559*^9, 3.595843653036922*^9}, {3.595843689915534*^9, 
   3.5958438100033903`*^9}, {3.595843842998906*^9, 3.5958438754186993`*^9}, {
   3.595843969664946*^9, 3.595843974288438*^9}, {3.5958442447811728`*^9, 
   3.595844349814054*^9}, {3.5958443821882467`*^9, 3.595844386748435*^9}, {
   3.595844431570077*^9, 3.595844581710051*^9}, {3.595844618032076*^9, 
   3.59584462104147*^9}, {3.5958446821784277`*^9, 3.595844716593995*^9}, {
   3.5958447754309*^9, 3.5958448139534473`*^9}, {3.595845024716194*^9, 
   3.59584502485439*^9}, {3.5958450743307457`*^9, 3.5958450760711184`*^9}, {
   3.595845183381014*^9, 3.59584519873508*^9}, {3.59584536487819*^9, 
   3.595845444892994*^9}, {3.595845705009416*^9, 3.5958457194954367`*^9}, {
   3.5958458838966007`*^9, 3.5958460190174026`*^9}, 3.595846061056314*^9, {
   3.5958460984306393`*^9, 3.5958461008570633`*^9}, {3.595846200546546*^9, 
   3.595846320547361*^9}, {3.595846450287627*^9, 3.595846462244567*^9}, {
   3.5958475282773314`*^9, 3.595847528385499*^9}, {3.595848673673086*^9, 
   3.595848796691436*^9}, {3.5958488696301737`*^9, 3.595848929712049*^9}, {
   3.5958489929252*^9, 3.5958490331062098`*^9}, {3.595849351285133*^9, 
   3.5958494242021923`*^9}, {3.595849479102297*^9, 3.595849487878209*^9}, {
   3.5958495186465054`*^9, 3.595849570512732*^9}, {3.5958496083863277`*^9, 
   3.595849713154964*^9}, {3.5958497690272627`*^9, 3.5958497731039343`*^9}, {
   3.5958498062182198`*^9, 3.595849948287118*^9}, {3.595850001929093*^9, 
   3.595850049835208*^9}, {3.5958500861973257`*^9, 3.5958501796312313`*^9}, {
   3.5958503872146177`*^9, 3.595850410469344*^9}, {3.595850909831037*^9, 
   3.595850958011393*^9}, {3.595851096062984*^9, 3.5958511093251038`*^9}, {
   3.596106391455682*^9, 3.596106432801447*^9}, {3.5961066456897917`*^9, 
   3.596106795833003*^9}, {3.596106829082934*^9, 3.596106829647687*^9}, {
   3.596688117293392*^9, 3.596688157190686*^9}, {3.596688190391107*^9, 
   3.596688233012302*^9}, {3.596688265779335*^9, 3.5966883863185263`*^9}, {
   3.596688515421413*^9, 3.596688541441328*^9}, {3.596688588310276*^9, 
   3.596688595438533*^9}, {3.5966886419729557`*^9, 3.5966887878932457`*^9}, {
   3.596688968852488*^9, 3.5966890781907883`*^9}, {3.596689172201785*^9, 
   3.596689218587696*^9}, {3.59668927951291*^9, 3.5966893196614733`*^9}, {
   3.5966893841110973`*^9, 3.596689479557109*^9}, {3.596689568825287*^9, 
   3.596689616188999*^9}, {3.596690070496655*^9, 3.596690163421999*^9}, {
   3.59669027622727*^9, 3.596690304155649*^9}, {3.596690434232877*^9, 
   3.5966905012092543`*^9}, {3.5967800124369993`*^9, 
   3.5967800815207453`*^9}, {3.5967812315048656`*^9, 3.596781250104906*^9}, {
   3.59678132901854*^9, 3.596781339422022*^9}, {3.596781472637253*^9, 
   3.596781530231028*^9}, {3.5967815615265913`*^9, 3.596781647606608*^9}, {
   3.5967817093056307`*^9, 3.596781729475387*^9}, {3.596781799871976*^9, 
   3.596781937873871*^9}, {3.5967819829703217`*^9, 3.5967820599275084`*^9}, {
   3.596782245816938*^9, 3.596782249579554*^9}, {3.596782289364414*^9, 
   3.596782290228119*^9}, {3.596782384571208*^9, 3.596782426406927*^9}, {
   3.59689771717618*^9, 3.5968977319336023`*^9}, 3.59689786687252*^9, {
   3.596897941633535*^9, 3.596897942228009*^9}, {3.596898036237802*^9, 
   3.596898091585781*^9}, {3.5990189917401447`*^9, 3.599019013321988*^9}, {
   3.599019082329637*^9, 3.599019088026582*^9}, 3.599128626739867*^9, {
   3.5991288263916597`*^9, 3.5991288267333593`*^9}, {3.601435599499205*^9, 
   3.601435603954722*^9}, {3.6014359735382*^9, 3.601435975282405*^9}, {
   3.6014361354465923`*^9, 3.6014361375768423`*^9}, {3.601436217300077*^9, 
   3.601436311080729*^9}, {3.601436524669517*^9, 3.601436549154744*^9}, {
   3.601438135486614*^9, 3.601438211479575*^9}, {3.601438255628953*^9, 
   3.6014383666959953`*^9}, {3.6014384109282293`*^9, 3.601438435990241*^9}, {
   3.601529779770904*^9, 3.6015297930707073`*^9}, {3.6015298356640873`*^9, 
   3.6015298494016027`*^9}, {3.601529887048574*^9, 3.60152988717455*^9}, {
   3.6015467050791073`*^9, 3.601546734246442*^9}, {3.603446330880986*^9, 
   3.6034463605953197`*^9}, {3.603446400763254*^9, 3.60344642557104*^9}, {
   3.6034465070361233`*^9, 3.603446592925652*^9}, 3.603446797266532*^9, {
   3.609660890224654*^9, 3.609660898681086*^9}, {3.6096612391605797`*^9, 
   3.609661245155401*^9}, {3.609661868408957*^9, 3.609661932602298*^9}, {
   3.6096651545440903`*^9, 3.6096651559508142`*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Error bars", "Subsubsection",
 CellChangeTimes->{{3.609641542201913*^9, 3.609641544440967*^9}, 
   3.609641639687296*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"errorBar", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"x1_", ",", "x2_"}], "}"}], ",", "y_", ",", "height_", ",", 
     "arrowQ_", ",", "tooltip_"}], "]"}], ":=", 
   RowBox[{"Graphics", "[", 
    RowBox[{"Tooltip", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{"arrowQ", ",", "Arrow", ",", "Line"}], "]"}], "@", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"x1", ",", "y"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"x2", ",", "y"}], "}"}]}], "}"}]}], ",", 
        RowBox[{"Line", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"x1", ",", 
             RowBox[{"y", "-", "height"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"x1", ",", 
             RowBox[{"y", "+", "height"}]}], "}"}]}], "}"}], "]"}], ",", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"!", "arrowQ"}], ",", 
          RowBox[{"Line", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"x2", ",", 
               RowBox[{"y", "-", "height"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"x2", ",", 
               RowBox[{"y", "+", "height"}]}], "}"}]}], "}"}], "]"}]}], 
         "]"}]}], "}"}], ",", "tooltip"}], "]"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.594340371161455*^9, 3.594340376439044*^9}, {
  3.594340420790992*^9, 3.594340526101939*^9}, {3.594340766060514*^9, 
  3.594340843426382*^9}, {3.594341049735219*^9, 3.594341053158822*^9}, {
  3.59434173552691*^9, 3.594342021048888*^9}, {3.594342120801978*^9, 
  3.59434215253932*^9}, {3.594345776812222*^9, 3.594345821077302*^9}, {
  3.594345864618185*^9, 3.5943458671797743`*^9}, {3.594852381479919*^9, 
  3.5948523822499447`*^9}, {3.596694136885778*^9, 3.5966941461203747`*^9}, {
  3.596694186810692*^9, 3.596694197907509*^9}, {3.6096344756251698`*^9, 
  3.60963454448419*^9}, {3.609634648244588*^9, 3.6096346661614847`*^9}, {
  3.609634710099609*^9, 3.609634715288673*^9}, {3.609635348430304*^9, 
  3.6096353683716097`*^9}, {3.6096354157719717`*^9, 3.6096354512902327`*^9}, {
  3.609635609904962*^9, 3.609635610530472*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Burst CDF plots", "Subsubsection",
 CellChangeTimes->{{3.6096356740518293`*^9, 3.6096356769858437`*^9}, {
  3.6096524565163717`*^9, 3.60965245697884*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "burstCDFPlot", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"MaxRecursion", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"colors", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Red", ",", "Blue"}], "}"}]}], ",", 
     RowBox[{"FontSize", "\[Rule]", "10"}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"PlotPoints", "\[Rule]", "Automatic"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"burstCDFPlot", "[", 
   RowBox[{"universe_", ",", "burst_", ",", "observer_", ",", 
    RowBox[{"\[Omega]_", "?", "ListQ"}], ",", 
    RowBox[{"\[Kappa]_", "?", "ListQ"}], ",", 
    RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"dur", ",", "p\[Infinity]", ",", "func"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"dur", "=", 
      RowBox[{"Max", "[", 
       RowBox[{
        RowBox[{"duration", "[", 
         RowBox[{"universe", ",", "burst", ",", "observer", ",", 
          RowBox[{"\[Omega]", "\[LeftDoubleBracket]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "2"}], ",", 
             RowBox[{"-", "1"}]}], "}"}], "\[RightDoubleBracket]"}]}], "]"}], 
        ",", 
        RowBox[{"duration", "[", 
         RowBox[{"universe", ",", "burst", ",", "observer", ",", 
          RowBox[{"\[Omega]", "\[LeftDoubleBracket]", 
           RowBox[{"{", 
            RowBox[{"1", ",", "2"}], "}"}], "\[RightDoubleBracket]"}]}], 
         "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"p\[Infinity]", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"p", "[", 
         RowBox[{"universe", ",", "burst", ",", "observer", ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "\[Infinity]"}], "}"}], ",", 
          RowBox[{"\[Omega]", "\[LeftDoubleBracket]", 
           RowBox[{"{", 
            RowBox[{"it", ",", 
             RowBox[{"it", "+", "1"}]}], "}"}], "\[RightDoubleBracket]"}]}], 
         "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"it", ",", "1", ",", 
          RowBox[{
           RowBox[{"Length", "[", "\[Omega]", "]"}], "-", "1"}]}], "}"}]}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"func", "[", 
       RowBox[{
        RowBox[{"it_", "?", "IntegerQ"}], ",", 
        RowBox[{"\[Tau]_", "?", "NumericQ"}]}], "]"}], ":=", 
      FractionBox[
       RowBox[{"p", "[", 
        RowBox[{"universe", ",", "burst", ",", "observer", ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", 
           RowBox[{
            RowBox[{
            "\[Kappa]", "\[LeftDoubleBracket]", "it", 
             "\[RightDoubleBracket]"}], "\[Tau]"}]}], "}"}], ",", 
         RowBox[{"\[Omega]", "\[LeftDoubleBracket]", 
          RowBox[{"{", 
           RowBox[{"it", ",", 
            RowBox[{"it", "+", "1"}]}], "}"}], "\[RightDoubleBracket]"}]}], 
        "]"}], 
       RowBox[{
       "p\[Infinity]", "\[LeftDoubleBracket]", "it", 
        "\[RightDoubleBracket]"}]]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Plot", "[", 
      RowBox[{
       RowBox[{"Evaluate", "@", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"func", "[", 
           RowBox[{"it", ",", "\[Tau]"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"it", ",", "1", ",", 
            RowBox[{
             RowBox[{"Length", "[", "\[Omega]", "]"}], "-", "1"}]}], "}"}]}], 
         "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Tau]", ",", "0", ",", "dur"}], "}"}], ",", 
       RowBox[{"MaxRecursion", "\[Rule]", 
        RowBox[{"OptionValue", "[", "MaxRecursion", "]"}]}], ",", 
       RowBox[{"PlotPoints", "\[Rule]", 
        RowBox[{"OptionValue", "[", "PlotPoints", "]"}]}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"OptionValue", "[", "colors", "]"}]}], ",", 
       RowBox[{"Frame", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"True", ",", "False"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"True", ",", "False"}], "}"}]}], "}"}]}], ",", 
       RowBox[{"FrameLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"\"\<Time, sec\>\"", ",", "\"\<Photon Fraction\>\""}], 
         "}"}]}], ",", 
       RowBox[{"PlotLegends", "\[Rule]", 
        RowBox[{"Placed", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Style", "[", 
             RowBox[{"\"\<0.1 \[Dash] 1 GeV\>\"", ",", 
              RowBox[{"FontSize", "\[Rule]", 
               RowBox[{"OptionValue", "[", "FontSize", "]"}]}]}], "]"}], ",", 
            
            RowBox[{"Style", "[", 
             RowBox[{"\"\<1 \[Dash] 300 GeV\>\"", ",", 
              RowBox[{"FontSize", "\[Rule]", 
               RowBox[{"OptionValue", "[", "FontSize", "]"}]}]}], "]"}]}], 
           "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0.74", ",", "0.20"}], "}"}]}], "]"}]}], ",", 
       RowBox[{"LabelStyle", "\[Rule]", 
        RowBox[{"Directive", "[", 
         RowBox[{"FontSize", "\[Rule]", 
          RowBox[{"OptionValue", "[", "FontSize", "]"}]}], "]"}]}], ",", 
       RowBox[{"ImageSize", "\[Rule]", 
        RowBox[{"OptionValue", "[", "ImageSize", "]"}]}]}], "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]}], "Input",
 InitializationGroup->True,
 CellChangeTimes->{{3.607067648244553*^9, 3.6070677212325706`*^9}, {
   3.6070677751952333`*^9, 3.6070677969150457`*^9}, {3.607067833605997*^9, 
   3.607067847524274*^9}, {3.607068464278277*^9, 3.607068492395993*^9}, {
   3.607068540754813*^9, 3.60706860140585*^9}, {3.607068687594818*^9, 
   3.607068693987253*^9}, {3.60706874351721*^9, 3.6070688059328117`*^9}, {
   3.607068904558772*^9, 3.607068994318741*^9}, {3.6070690650575657`*^9, 
   3.607069065217391*^9}, {3.607069329216419*^9, 3.60706933494864*^9}, {
   3.607069762392427*^9, 3.607069820453231*^9}, {3.607499716878949*^9, 
   3.607499786309517*^9}, {3.607500301159832*^9, 3.6075003024643173`*^9}, {
   3.607500379343122*^9, 3.607500380177711*^9}, {3.6075004142806683`*^9, 
   3.607500414676704*^9}, {3.607500529791726*^9, 3.607500558412943*^9}, {
   3.607500599928042*^9, 3.607500600252599*^9}, {3.6075017254373302`*^9, 
   3.607501766993146*^9}, {3.6075019233173523`*^9, 3.607501925966104*^9}, {
   3.607502047717801*^9, 3.607502054814125*^9}, 3.607502170563231*^9, {
   3.6075026095641813`*^9, 3.6075026672346973`*^9}, {3.609643648929371*^9, 
   3.609643686025447*^9}, {3.6096440164082613`*^9, 3.609644018523982*^9}, {
   3.609652461981296*^9, 3.609652466402277*^9}, {3.609652630746831*^9, 
   3.6096526351383142`*^9}, {3.6096527562439137`*^9, 
   3.6096527916668158`*^9}, {3.609652922969138*^9, 3.6096529707579803`*^9}, {
   3.609653019608389*^9, 3.609653080803061*^9}, {3.6096536486630983`*^9, 
   3.609653683182067*^9}, {3.609653818603517*^9, 3.60965382212322*^9}, {
   3.6096539396162786`*^9, 3.609653939695815*^9}, {3.609654100859994*^9, 
   3.6096541010209703`*^9}, {3.6096651649341288`*^9, 
   3.6096651664042997`*^9}, {3.609911713905178*^9, 3.609911714006032*^9}, {
   3.6099120787644997`*^9, 3.609912079379607*^9}, {3.60992394723167*^9, 
   3.6099239612759447`*^9}, {3.609924097026326*^9, 3.609924097145648*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "cdfDifferencePlot", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{"MaxRecursion", "\[Rule]", "Automatic"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"cdfDifferencePlot", "[", 
   RowBox[{"universe_", ",", "burst_", ",", "observer_", ",", 
    RowBox[{"{", 
     RowBox[{"\[Omega]1_", ",", "\[Omega]2_", ",", "\[Omega]3_"}], "}"}], ",",
     "\[Kappa]_", ",", 
    RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"dur", ",", "p12\[Infinity]", ",", "p23\[Infinity]"}], "}"}], 
    ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"dur", "=", 
      RowBox[{"duration", "[", 
       RowBox[{"universe", ",", "burst", ",", "observer", ",", 
        RowBox[{"{", 
         RowBox[{"\[Omega]1", ",", "\[Omega]3"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"p12\[Infinity]", "=", 
      RowBox[{"p", "[", 
       RowBox[{"universe", ",", "burst", ",", "observer", ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "\[Infinity]"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"\[Omega]1", ",", "\[Omega]2"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"p23\[Infinity]", "=", 
      RowBox[{"p", "[", 
       RowBox[{"universe", ",", "burst", ",", "observer", ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "\[Infinity]"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"\[Omega]2", ",", "\[Omega]3"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Plot", "[", 
      RowBox[{
       RowBox[{
        FractionBox[
         RowBox[{"p", "[", 
          RowBox[{"universe", ",", "burst", ",", "observer", ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\[Omega]1", ",", "\[Omega]2"}], "}"}]}], "]"}], 
         "p12\[Infinity]"], "-", 
        FractionBox[
         RowBox[{"p", "[", 
          RowBox[{"universe", ",", "burst", ",", "observer", ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", 
             RowBox[{"\[Kappa]", " ", "\[Tau]"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\[Omega]2", ",", "\[Omega]3"}], "}"}]}], "]"}], 
         "p23\[Infinity]"]}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Tau]", ",", "0", ",", "dur"}], "}"}], ",", 
       RowBox[{"MaxRecursion", "\[Rule]", 
        RowBox[{"OptionValue", "[", "MaxRecursion", "]"}]}]}], "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]}], "Input",
 CellChangeTimes->{{3.607504155513013*^9, 3.607504356151989*^9}, {
  3.6075043986788063`*^9, 3.607504400915872*^9}, {3.609652472011272*^9, 
  3.609652474379068*^9}, {3.609652641137334*^9, 3.609652648061083*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["\[Kappa] Distribution plots", "Subsubsection",
 CellChangeTimes->{{3.609635686762416*^9, 3.6096356938577003`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "\[Kappa]HistogramPlot", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"FontSize", "\[Rule]", "10"}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "Automatic"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Kappa]HistogramPlot", "[", 
   RowBox[{"sample_", ",", "observations_", ",", 
    RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "histogram", ",", "errorBars", ",", "probabilityMax", ",", 
      "\[Kappa]Max"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"histogram", "=", 
      RowBox[{"Histogram", "[", 
       RowBox[{"sample", ",", "Automatic", ",", "\"\<Probability\>\"", ",", 
        RowBox[{"Frame", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"True", ",", "False"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"True", ",", "False"}], "}"}]}], "}"}]}], ",", 
        RowBox[{"FrameLabel", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"\"\<Stretching Factor\>\"", ",", "\"\<Probability\>\""}], 
          "}"}]}], ",", 
        RowBox[{"LabelStyle", "\[Rule]", 
         RowBox[{"Directive", "[", 
          RowBox[{"FontSize", "\[Rule]", 
           RowBox[{"OptionValue", "[", "FontSize", "]"}]}], "]"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"PlotRangePadding", "\[Rule]", "0"}], ",", 
        RowBox[{"PlotRange", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "Automatic"}], "}"}], ",", "Automatic"}], 
          "}"}]}], ",", 
        RowBox[{"Axes", "\[Rule]", "False"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"probabilityMax", "=", 
      RowBox[{
       RowBox[{"Max", "@", 
        RowBox[{
         RowBox[{"HistogramList", "[", "sample", "]"}], 
         "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], "/", 
       RowBox[{"Length", "[", "sample", "]"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[Kappa]Max", "=", 
      RowBox[{"Max", "@", 
       RowBox[{
        RowBox[{"HistogramList", "[", "sample", "]"}], "\[LeftDoubleBracket]",
         "1", "\[RightDoubleBracket]"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"errorBars", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"errorBar", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"observations", "\[LeftDoubleBracket]", 
             RowBox[{"it", ",", "2", ",", "1"}], "\[RightDoubleBracket]"}], 
            ",", 
            RowBox[{"Min", "[", 
             RowBox[{"\[Kappa]Max", ",", 
              RowBox[{"observations", "\[LeftDoubleBracket]", 
               RowBox[{"it", ",", "2", ",", "2"}], 
               "\[RightDoubleBracket]"}]}], "]"}]}], "}"}], ",", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1.", "-", 
             RowBox[{
              FractionBox["it", 
               RowBox[{"Length", "[", "observations", "]"}]], ".3"}]}], ")"}],
            "probabilityMax"}], ",", 
          RowBox[{
           FractionBox[".1", 
            RowBox[{"Length", "[", "observations", "]"}]], "probabilityMax"}],
           ",", 
          RowBox[{
           RowBox[{"observations", "\[LeftDoubleBracket]", 
            RowBox[{"it", ",", "2", ",", "2"}], "\[RightDoubleBracket]"}], 
           ">", "\[Kappa]Max"}], ",", 
          RowBox[{
           RowBox[{"ToString", "@", 
            RowBox[{"observations", "\[LeftDoubleBracket]", 
             RowBox[{"it", ",", "1"}], "\[RightDoubleBracket]"}]}], "<>", 
           "\"\<: (\>\"", "<>", 
           RowBox[{"ToString", "@", 
            RowBox[{"observations", "\[LeftDoubleBracket]", 
             RowBox[{"it", ",", "2", ",", "1"}], "\[RightDoubleBracket]"}]}], 
           "<>", "\"\<, \>\"", "<>", 
           RowBox[{"ToString", "@", 
            RowBox[{"observations", "\[LeftDoubleBracket]", 
             RowBox[{"it", ",", "2", ",", "2"}], "\[RightDoubleBracket]"}]}], 
           "<>", "\"\<)\>\""}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"it", ",", "1", ",", 
          RowBox[{"Length", "[", "observations", "]"}]}], "}"}]}], "]"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"Show", "[", 
      RowBox[{"histogram", ",", "errorBars", ",", 
       RowBox[{"ImageSize", "\[Rule]", 
        RowBox[{"OptionValue", "[", "ImageSize", "]"}]}]}], "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]}], "Input",
 CellChangeTimes->CompressedData["
1:eJwlzD1IQgEABOBnpEFiSoQiChkUWElFQ0i1BDUUQfUIh3II6UdBTKSaBAUh
iKiQyKygpMFqUJpEtEEixUKztD/MJRUEjbKwCKLo3Ws4Pm64q1PNklNlBEGI
qMB2VSmTyOZ7zn72cnBLoXuHMvUp44bSeeTiQKmAJ4KGr24JPCg300bS+/XQ
HnfS6jXjc9DTz16A/CjfDE0apQXaIsVVGNrUrkOyWGmHx2vTtOlmoQMuNVS5
4CSrw0PvY8lLOM8jnmCydTQHs22aV9i7bHiD+cL5N61Lz7yltKRMHNiyHeXC
O8thDVTXBgRwUfEogRz2jAwWxI1y+NHppx2O2fqgXGscgBeDQyRcuQ4r4fNu
kwOGJk6cULbDcEOjNez+714f1LHDASglgxE4Ei1cwY1gkHmP/7GuCvhr/fQl
KR9exH5YLSzFM5QsLzcB/wCjkQmw
  "]],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "\[Kappa]CDFPlot", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"FontSize", "\[Rule]", "10"}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"PlotPoints", "\[Rule]", "Automatic"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Kappa]CDFPlot", "[", 
    RowBox[{"sample_", ",", "observations_", ",", 
     RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"it", ",", "\[Kappa]2"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"\[Kappa]2", "=", 
       RowBox[{"Max", "[", 
        RowBox[{"observations", "\[LeftDoubleBracket]", 
         RowBox[{"All", ",", "2", ",", "2"}], "\[RightDoubleBracket]"}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Show", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Plot", "[", 
         RowBox[{
          RowBox[{"CDF", "[", 
           RowBox[{
            RowBox[{"EmpiricalDistribution", "[", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"Mean", "[", 
                RowBox[{
                "value", "\[LeftDoubleBracket]", "2", 
                 "\[RightDoubleBracket]"}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"value", ",", "observations"}], "}"}]}], "]"}], "]"}],
             ",", "\[Kappa]i"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"\[Kappa]i", ",", "0.", ",", 
            RowBox[{"1.01", "\[Kappa]2"}]}], "}"}], ",", 
          RowBox[{"PlotStyle", "\[Rule]", "Gray"}]}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"errorBar", "[", 
           RowBox[{
            RowBox[{"observations", "\[LeftDoubleBracket]", 
             RowBox[{"it", ",", "2"}], "\[RightDoubleBracket]"}], ",", 
            FractionBox[
             RowBox[{
              RowBox[{"2", "it"}], "-", "1"}], 
             RowBox[{"2", 
              RowBox[{"Length", "[", "observations", "]"}]}]], ",", "0.01", 
            ",", "False", ",", 
            RowBox[{"observations", "\[LeftDoubleBracket]", 
             RowBox[{"it", ",", "1"}], "\[RightDoubleBracket]"}]}], "]"}], 
          ",", 
          RowBox[{"{", 
           RowBox[{"it", ",", "1", ",", 
            RowBox[{"Length", "[", "observations", "]"}]}], "}"}]}], "]"}], 
        ",", "\[IndentingNewLine]", 
        RowBox[{"Plot", "[", 
         RowBox[{
          RowBox[{"CDF", "[", 
           RowBox[{
            RowBox[{"EmpiricalDistribution", "[", "sample", "]"}], ",", 
            "\[Kappa]i"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"\[Kappa]i", ",", "0.", ",", 
            RowBox[{"1.01", "\[Kappa]2"}]}], "}"}], ",", 
          RowBox[{"PlotRange", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", 
               RowBox[{"1.01", "\[Kappa]2"}]}], "}"}], ",", "All"}], "}"}]}], 
          ",", 
          RowBox[{"PlotStyle", "\[Rule]", "Thick"}], ",", 
          RowBox[{"PlotPoints", "\[Rule]", 
           RowBox[{"OptionValue", "[", "PlotPoints", "]"}]}]}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"Frame", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"True", ",", "False"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"True", ",", "False"}], "}"}]}], "}"}]}], ",", 
        RowBox[{"FrameLabel", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"\"\<Stretching Factor\>\"", ",", "\"\<CDF\>\""}], "}"}]}], 
        ",", 
        RowBox[{"PlotRangePadding", "\[Rule]", "0"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"LabelStyle", "\[Rule]", 
         RowBox[{"Directive", "[", 
          RowBox[{"FontSize", "\[Rule]", 
           RowBox[{"OptionValue", "[", "FontSize", "]"}]}], "]"}]}], ",", 
        RowBox[{"Axes", "\[Rule]", "False"}], ",", 
        RowBox[{"ImageSize", "\[Rule]", 
         RowBox[{"OptionValue", "[", "ImageSize", "]"}]}]}], 
       "\[IndentingNewLine]", "]"}]}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.60963882598407*^9, 3.609638900852791*^9}, {
  3.6096389446211233`*^9, 3.609638946137813*^9}, {3.609644573175976*^9, 
  3.6096446049650517`*^9}, {3.609646555631206*^9, 3.6096465559736757`*^9}, {
  3.609650900556123*^9, 3.60965091966558*^9}, {3.609664658614739*^9, 
  3.609664658760437*^9}, {3.609664746538519*^9, 3.6096647567832727`*^9}, {
  3.609665179384776*^9, 3.609665180510923*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Correlation plots", "Subsubsection",
 CellChangeTimes->{{3.609641260312993*^9, 3.6096412625349283`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Needs", "[", "\"\<ErrorBarPlots`\>\"", "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.609642037060667*^9, 3.6096420445454483`*^9}, {
  3.609996928911669*^9, 3.609996937745859*^9}, {3.60999766248899*^9, 
  3.609997662606525*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "\[Chi]\[Kappa]ListPlot", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"FontSize", "\[Rule]", "10"}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"ImagePadding", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
     RowBox[{"FrameTicks", "\[Rule]", "Automatic"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Chi]\[Kappa]ListPlot", "[", 
   RowBox[{"sample_", ",", 
    RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], ":=", 
  RowBox[{"ListLogLinearPlot", "[", 
   RowBox[{
    RowBox[{"Transpose", "@", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"sample", "\[LeftDoubleBracket]", 
        RowBox[{"All", ",", "2"}], "\[RightDoubleBracket]"}], ",", 
       RowBox[{"sample", "\[LeftDoubleBracket]", 
        RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}]}], "}"}]}], ",", 
    
    RowBox[{"Frame", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"True", ",", "False"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"True", ",", "False"}], "}"}]}], "}"}]}], ",", 
    RowBox[{"FrameLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<Stretching Factor\>\"", ",", "\"\<Off-axis angle\>\""}], 
      "}"}]}], ",", 
    RowBox[{"LabelStyle", "\[Rule]", 
     RowBox[{"Directive", "[", 
      RowBox[{"FontSize", "\[Rule]", 
       RowBox[{"OptionValue", "[", "FontSize", "]"}]}], "]"}]}], ",", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"OptionValue", "[", "PlotRange", "]"}]}], ",", 
    RowBox[{"ImageSize", "\[Rule]", 
     RowBox[{"OptionValue", "[", "ImageSize", "]"}]}], ",", 
    RowBox[{"ImagePadding", "\[Rule]", 
     RowBox[{"OptionValue", "[", "ImagePadding", "]"}]}], ",", 
    RowBox[{"FrameTicks", "\[Rule]", 
     RowBox[{"OptionValue", "[", "FrameTicks", "]"}]}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.609641279011052*^9, 3.609641295375565*^9}, {
   3.609641392477601*^9, 3.609641401986206*^9}, {3.609641441136017*^9, 
   3.609641442379567*^9}, {3.609641480237706*^9, 3.609641537466012*^9}, {
   3.609641885471024*^9, 3.609641936324978*^9}, {3.6096420508532467`*^9, 
   3.609642077731365*^9}, {3.609642119226645*^9, 3.609642195179572*^9}, {
   3.60964222606548*^9, 3.6096422308482847`*^9}, {3.609642277503998*^9, 
   3.6096423118394947`*^9}, {3.609642350886146*^9, 3.609642365956815*^9}, {
   3.609644830582081*^9, 3.609644830834968*^9}, {3.6096449860870447`*^9, 
   3.6096450027812033`*^9}, {3.609645190518502*^9, 3.609645192383938*^9}, {
   3.609646301434123*^9, 3.6096463549770403`*^9}, {3.6096464021756*^9, 
   3.6096464023135233`*^9}, 3.6096466547963543`*^9, {3.609648216544531*^9, 
   3.609648231520274*^9}, {3.609648754629854*^9, 3.609648765533299*^9}, {
   3.609649014986142*^9, 3.609649036568336*^9}, {3.6096651882484417`*^9, 
   3.6096651893281593`*^9}, {3.6097583666846027`*^9, 
   3.6097584096757317`*^9}, {3.60999664063404*^9, 3.609996690218821*^9}, {
   3.609996964953442*^9, 3.609996966218875*^9}, 3.609998130583955*^9, {
   3.610000520976674*^9, 3.610000558762969*^9}, {3.610001063883407*^9, 
   3.61000107357134*^9}, {3.610002040257538*^9, 3.610002047061574*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "ratio\[Kappa]ListPlot", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"FontSize", "\[Rule]", "10"}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"ImagePadding", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
     RowBox[{"FrameTicks", "\[Rule]", "Automatic"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ratio\[Kappa]ListPlot", "[", 
   RowBox[{"sample_", ",", "observations_", ",", 
    RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], ":=", 
  RowBox[{"Show", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ListLogLogPlot", "[", 
     RowBox[{
      RowBox[{"Transpose", "@", 
       RowBox[{"{", 
        RowBox[{
         FractionBox[
          RowBox[{"sample", "\[LeftDoubleBracket]", 
           RowBox[{"All", ",", "2"}], "\[RightDoubleBracket]"}], 
          RowBox[{
           RowBox[{"sample", "\[LeftDoubleBracket]", 
            RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], "+", 
           RowBox[{"sample", "\[LeftDoubleBracket]", 
            RowBox[{"All", ",", "2"}], "\[RightDoubleBracket]"}]}]], ",", 
         RowBox[{"sample", "\[LeftDoubleBracket]", 
          RowBox[{"All", ",", "3"}], "\[RightDoubleBracket]"}]}], "}"}]}], 
      ",", 
      RowBox[{"Frame", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"True", ",", "False"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"True", ",", "False"}], "}"}]}], "}"}]}], ",", 
      RowBox[{"FrameLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
        "\"\<Fraction of high energy photons\>\"", ",", 
         "\"\<Stretching Factor\>\""}], "}"}]}], ",", 
      RowBox[{"LabelStyle", "\[Rule]", 
       RowBox[{"Directive", "[", 
        RowBox[{"FontSize", "\[Rule]", 
         RowBox[{"OptionValue", "[", "FontSize", "]"}]}], "]"}]}], ",", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"OptionValue", "[", "PlotRange", "]"}]}], ",", 
      RowBox[{"FrameTicks", "\[Rule]", 
       RowBox[{"OptionValue", "[", "FrameTicks", "]"}]}]}], "]"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Length", "@", "observations"}], ">", "0"}], ",", 
      RowBox[{
       RowBox[{"ErrorListPlot", "[", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Mean", "/@", "obs"}], ",", 
             RowBox[{"Apply", "[", 
              RowBox[{"ErrorBar", ",", 
               RowBox[{
                RowBox[{
                 FractionBox[
                  RowBox[{
                   RowBox[{"Differences", "[", "#", "]"}], 
                   "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
                  "2"], "&"}], "/@", "obs"}]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"obs", ",", "observations"}], "}"}]}], "]"}], ",", 
         RowBox[{"PlotStyle", "\[Rule]", "Black"}]}], "]"}], "/.", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"x_Real", ",", "y_Real"}], "}"}], "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Log", "@", "x"}], ",", 
          RowBox[{"Log", "@", "y"}]}], "}"}]}]}], ",", 
      RowBox[{"Graphics", "[", "]"}]}], "]"}], ",", 
    RowBox[{"Axes", "\[Rule]", "False"}], ",", 
    RowBox[{"ImageSize", "\[Rule]", 
     RowBox[{"OptionValue", "[", "ImageSize", "]"}]}], ",", 
    RowBox[{"ImagePadding", "\[Rule]", 
     RowBox[{"OptionValue", "[", "ImagePadding", "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]}], "Input",
 CellChangeTimes->{{3.609641279011052*^9, 3.609641295375565*^9}, {
   3.609641392477601*^9, 3.609641401986206*^9}, {3.609641441136017*^9, 
   3.609641442379567*^9}, {3.609641480237706*^9, 3.609641537466012*^9}, {
   3.609641885471024*^9, 3.609641936324978*^9}, {3.6096420508532467`*^9, 
   3.609642077731365*^9}, {3.609642119226645*^9, 3.609642195179572*^9}, {
   3.60964222606548*^9, 3.6096422308482847`*^9}, {3.609642277503998*^9, 
   3.6096423118394947`*^9}, {3.609642350886146*^9, 3.609642365956815*^9}, {
   3.609642416432074*^9, 3.609642430618224*^9}, {3.609642577990877*^9, 
   3.609642635828002*^9}, {3.609645154438546*^9, 3.609645178192333*^9}, {
   3.609645563771699*^9, 3.609645565326478*^9}, {3.609645936315946*^9, 
   3.609645977766192*^9}, {3.609646387458065*^9, 3.609646463075059*^9}, 
   3.609646656516675*^9, {3.609648306612466*^9, 3.609648318813725*^9}, {
   3.6096487686779537`*^9, 3.6096487828788223`*^9}, {3.60964881456*^9, 
   3.60964882695549*^9}, {3.609649524092677*^9, 3.609649536824375*^9}, {
   3.6096651923782167`*^9, 3.60966519314334*^9}, {3.609758430326338*^9, 
   3.60975844917204*^9}, {3.609995145700523*^9, 3.609995158111725*^9}, {
   3.609996303171307*^9, 3.60999630786156*^9}, {3.609996357389161*^9, 
   3.609996360763049*^9}, {3.609996425798112*^9, 3.609996430300147*^9}, {
   3.609996713304719*^9, 3.609996715055073*^9}, {3.6099969688512573`*^9, 
   3.609996969485546*^9}, {3.6099984008561687`*^9, 3.609998402423579*^9}, {
   3.60999871252*^9, 3.609998761198254*^9}, {3.609998906092676*^9, 
   3.6099989163231916`*^9}, {3.610001041007011*^9, 3.610001060662347*^9}, {
   3.610001467224742*^9, 3.610001467740533*^9}, {3.610002020498968*^9, 
   3.610002025025519*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "ratio\[Chi]ListPlot", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"FontSize", "\[Rule]", "10"}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"ImagePadding", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
     RowBox[{"FrameTicks", "\[Rule]", "Automatic"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ratio\[Chi]ListPlot", "[", 
   RowBox[{"sample_", ",", 
    RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], ":=", 
  RowBox[{"ListLogLinearPlot", "[", 
   RowBox[{
    RowBox[{"Transpose", "@", 
     RowBox[{"{", 
      RowBox[{
       FractionBox[
        RowBox[{"sample", "\[LeftDoubleBracket]", 
         RowBox[{"All", ",", "3"}], "\[RightDoubleBracket]"}], 
        RowBox[{
         RowBox[{"sample", "\[LeftDoubleBracket]", 
          RowBox[{"All", ",", "2"}], "\[RightDoubleBracket]"}], "+", 
         RowBox[{"sample", "\[LeftDoubleBracket]", 
          RowBox[{"All", ",", "3"}], "\[RightDoubleBracket]"}]}]], ",", 
       RowBox[{"sample", "\[LeftDoubleBracket]", 
        RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}]}], "}"}]}], ",", 
    
    RowBox[{"Frame", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"True", ",", "False"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"True", ",", "False"}], "}"}]}], "}"}]}], ",", 
    RowBox[{"FrameLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<Fraction of high energy photons\>\"", ",", 
       "\"\<Off-axis angle\>\""}], "}"}]}], ",", 
    RowBox[{"LabelStyle", "\[Rule]", 
     RowBox[{"Directive", "[", 
      RowBox[{"FontSize", "\[Rule]", 
       RowBox[{"OptionValue", "[", "FontSize", "]"}]}], "]"}]}], ",", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"OptionValue", "[", "PlotRange", "]"}]}], ",", 
    RowBox[{"ImageSize", "\[Rule]", 
     RowBox[{"OptionValue", "[", "ImageSize", "]"}]}], ",", 
    RowBox[{"ImagePadding", "\[Rule]", 
     RowBox[{"OptionValue", "[", "ImagePadding", "]"}]}], ",", 
    RowBox[{"FrameTicks", "\[Rule]", 
     RowBox[{"OptionValue", "[", "FrameTicks", "]"}]}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.609641279011052*^9, 3.609641295375565*^9}, {
   3.609641392477601*^9, 3.609641401986206*^9}, {3.609641441136017*^9, 
   3.609641442379567*^9}, {3.609641480237706*^9, 3.609641537466012*^9}, {
   3.609641885471024*^9, 3.609641936324978*^9}, {3.6096420508532467`*^9, 
   3.609642077731365*^9}, {3.609642119226645*^9, 3.609642195179572*^9}, {
   3.60964222606548*^9, 3.6096422308482847`*^9}, {3.609642277503998*^9, 
   3.6096423118394947`*^9}, {3.609642350886146*^9, 3.609642365956815*^9}, {
   3.609642416432074*^9, 3.609642430618224*^9}, {3.60964254240475*^9, 
   3.609642561438034*^9}, {3.609642700788495*^9, 3.6096427126318827`*^9}, {
   3.6096451971597843`*^9, 3.609645212529265*^9}, {3.609645552355853*^9, 
   3.609645552616294*^9}, {3.6096460972835217`*^9, 3.609646097817787*^9}, {
   3.6096464431171503`*^9, 3.6096464898844023`*^9}, {3.609646659412133*^9, 
   3.609646725256134*^9}, {3.609646793993126*^9, 3.6096468007554493`*^9}, {
   3.6096468524234743`*^9, 3.609646859636047*^9}, {3.609648275705935*^9, 
   3.6096482900080957`*^9}, {3.6096489787422047`*^9, 3.609649008784285*^9}, {
   3.609649543886816*^9, 3.6096495542799187`*^9}, {3.609665196681342*^9, 
   3.6096651974667883`*^9}, 3.609995164666066*^9, {3.6099963450573597`*^9, 
   3.60999635104795*^9}, {3.609996436302801*^9, 3.6099964441976967`*^9}, {
   3.609996975473761*^9, 3.609996976464491*^9}, {3.610000400430552*^9, 
   3.610000497374262*^9}, {3.610001025812619*^9, 3.610001035935293*^9}, {
   3.6100020312188997`*^9, 3.6100020517823668`*^9}}]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Results", "Subsection",
 CellChangeTimes->{{3.6074998753290052`*^9, 3.6074998783107767`*^9}}],

Cell[CellGroupData[{

Cell["Minimization", "Subsubsection",
 CellChangeTimes->{{3.60749989928918*^9, 3.607499900687396*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"PrintTemporary", "[", 
   RowBox[{"Dynamic", "[", 
    RowBox[{"{", 
     RowBox[{"z", ",", "z1", ",", "z2"}], "}"}], "]"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"PrintTemporary", "[", 
   RowBox[{"Dynamic", "[", 
    RowBox[{"{", 
     RowBox[{"\[Chi]", ",", "\[Chi]0"}], "}"}], "]"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"PrintTemporary", "[", 
   RowBox[{"Dynamic", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Length", "[", "pointsChosen", "]"}], ",", "startedCount", ",", 
      "completedCount"}], "}"}], "]"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"findSingleBurstFit", "[", 
  RowBox[{
   RowBox[{"defaultUniverse", "[", "]"}], ",", 
   RowBox[{"defaultPopulation", "[", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"300", ",", "1"}], "}"}], ",", "2.1062", ",", 
   RowBox[{"{", 
    RowBox[{".1", ",", "1", ",", "\[Infinity]"}], "}"}], ",", 
   "totalPhotonCount090926A", ",", 
   RowBox[{"{", 
    RowBox[{"\[Kappa]LogTarget090926A", ",", "\[Kappa]LogError090926A"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Kappa]LogTarget090902B", ",", "\[Kappa]LogError090902B"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"photonRatioLogTarget090926A", ",", 
     RowBox[{"Log", "[", "10.", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     RowBox[{"Log", "[", "10.", "]"}]}], "}"}], ",", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"22.1525", ",", 
       RowBox[{"Log", "[", "0.000216424", "]"}], ",", 
       RowBox[{"-", "0.417021"}], ",", 
       RowBox[{"-", "1.35163"}], ",", 
       RowBox[{"Log", "[", "0.00704982", "]"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"25.864", ",", 
       RowBox[{"Log", "[", "4.90222*^-8", "]"}], ",", 
       RowBox[{"-", "2.90875"}], ",", "3.53801", ",", 
       RowBox[{"Log", "[", "0.00028657", "]"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"17.538", ",", 
       RowBox[{"Log", "[", "0.00146284", "]"}], ",", 
       RowBox[{"-", "0.20793"}], ",", 
       RowBox[{"-", "2.1336"}], ",", 
       RowBox[{"Log", "[", "0.00152624", "]"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"17.9736", ",", 
       RowBox[{"Log", "[", "4.52631*^-6", "]"}], ",", 
       RowBox[{"-", "1.40262"}], ",", 
       RowBox[{"-", "0.0114132"}], ",", 
       RowBox[{"Log", "[", "0.0003259", "]"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"5", ",", 
       RowBox[{"Log", "[", "1.12535*^-7", "]"}], ",", 
       RowBox[{"-", "0.2"}], ",", 
       RowBox[{"-", "2.0"}], ",", 
       RowBox[{"Log", "[", "0.00473795", "]"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"7", ",", 
       RowBox[{"Log", "[", "2.*^-12", "]"}], ",", 
       RowBox[{"-", "3"}], ",", 
       RowBox[{"-", "3"}], ",", 
       RowBox[{"Log", "[", "0.00173795", "]"}]}], "}"}]}], 
    "\[IndentingNewLine]", "}"}], ",", 
   RowBox[{"accurateQ", "\[Rule]", "False"}], ",", 
   RowBox[{"logQ", "\[Rule]", "True"}], ",", 
   RowBox[{"sampleSize", "\[Rule]", "10"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.606787540441008*^9, 3.606787631643077*^9}, {
   3.606787666514709*^9, 3.606787692123499*^9}, {3.606788046164083*^9, 
   3.6067880688333693`*^9}, {3.60678825023518*^9, 3.6067882550257177`*^9}, {
   3.606792324409047*^9, 3.6067923267770367`*^9}, {3.6067927532548943`*^9, 
   3.606792761195971*^9}, {3.606793036876443*^9, 3.606793052483157*^9}, {
   3.606793091236801*^9, 3.606793102837316*^9}, {3.606794309837031*^9, 
   3.606794334587343*^9}, {3.606794366547187*^9, 3.606794366867546*^9}, {
   3.606795078676282*^9, 3.606795091581581*^9}, {3.606795149578546*^9, 
   3.60679514991996*^9}, {3.6067952386075163`*^9, 3.606795239112365*^9}, {
   3.6067966570732613`*^9, 3.6067966629030457`*^9}, {3.606798760950096*^9, 
   3.606798761976829*^9}, {3.60679908104608*^9, 3.606799081389297*^9}, {
   3.6068117744959106`*^9, 3.6068117844065866`*^9}, {3.6068140021509743`*^9, 
   3.6068140026042223`*^9}, {3.6068152816721907`*^9, 3.606815289487356*^9}, {
   3.6068156660722103`*^9, 3.606815669024022*^9}, {3.606816953270817*^9, 
   3.6068169587738447`*^9}, {3.606818698860771*^9, 3.606818698981791*^9}, {
   3.60681883818729*^9, 3.6068188382801228`*^9}, {3.606826309355892*^9, 
   3.6068263114539127`*^9}, {3.6068263453069983`*^9, 3.606826347008851*^9}, 
   3.606871979478526*^9, {3.606970642661006*^9, 3.606970644629006*^9}, {
   3.607040084771667*^9, 3.607040120304093*^9}, {3.6070413420330276`*^9, 
   3.607041343416123*^9}, {3.607041674200344*^9, 3.607041677839254*^9}, {
   3.6070420558804703`*^9, 3.607042066437764*^9}, {3.607042408969769*^9, 
   3.607042412949823*^9}, {3.607042893781584*^9, 3.607042896421233*^9}, {
   3.607043053820203*^9, 3.607043056428385*^9}, {3.6070705827069473`*^9, 
   3.6070705998487864`*^9}, {3.607070882725918*^9, 3.607070914256212*^9}, {
   3.607071010611926*^9, 3.607071017717598*^9}, {3.607071345784321*^9, 
   3.607071348996977*^9}, {3.607073682948242*^9, 3.607073699000895*^9}, {
   3.60707988801705*^9, 3.607079922578576*^9}, {3.607079953850016*^9, 
   3.6070799562232237`*^9}, {3.607080017179563*^9, 3.6070800201294613`*^9}, {
   3.6071503260883493`*^9, 3.607150355059175*^9}, {3.607150467470962*^9, 
   3.607150518237198*^9}, {3.607150548293786*^9, 3.6071505503547573`*^9}, {
   3.607150633919725*^9, 3.6071506364358664`*^9}, {3.607150667525413*^9, 
   3.607150676158969*^9}, {3.607150763467977*^9, 3.6071507949225683`*^9}, {
   3.607150885850911*^9, 3.607150900981023*^9}, {3.607150952424551*^9, 
   3.6071509709417963`*^9}, {3.607151061908752*^9, 3.6071510749953003`*^9}, {
   3.607151111565999*^9, 3.607151111859749*^9}, {3.6071630634017773`*^9, 
   3.607163063562042*^9}, {3.607165135092894*^9, 3.607165138706964*^9}, {
   3.6071651775661097`*^9, 3.607165220875937*^9}, {3.607171490516179*^9, 
   3.607171512617487*^9}, {3.607173064113058*^9, 3.60717307868601*^9}, {
   3.607173775078308*^9, 3.607173788669252*^9}, {3.607174213744079*^9, 
   3.6071742358649817`*^9}, {3.6071743774040728`*^9, 3.607174380646597*^9}, {
   3.6073836137221746`*^9, 3.607383684236947*^9}, {3.6073852045485687`*^9, 
   3.607385229937605*^9}, {3.60738537083494*^9, 3.607385371736637*^9}, {
   3.607385835708268*^9, 3.607385839107675*^9}, {3.607387235110963*^9, 
   3.607387237205529*^9}, {3.6073873308544064`*^9, 3.607387339071673*^9}, {
   3.607387403854828*^9, 3.6073874448154507`*^9}, {3.607391461088468*^9, 
   3.607391464385047*^9}, {3.607391501343521*^9, 3.6073915032057543`*^9}, {
   3.607578979085574*^9, 3.6075789991858807`*^9}, {3.607580052715961*^9, 
   3.607580066492165*^9}, {3.607580510423753*^9, 3.6075805237515497`*^9}, {
   3.607580560612709*^9, 3.607580568772667*^9}, {3.607581029886907*^9, 
   3.607581029999578*^9}, {3.6075812469745817`*^9, 3.6075812488414097`*^9}, {
   3.607581913285289*^9, 3.607581923842937*^9}, 3.607582488792965*^9, {
   3.60759265677277*^9, 3.607592673044922*^9}, {3.6075933267535677`*^9, 
   3.607593343776815*^9}, {3.607593480840535*^9, 3.607593499632329*^9}, {
   3.607593677018961*^9, 3.60759373880721*^9}, {3.607597099183399*^9, 
   3.607597174878522*^9}, {3.607598062074772*^9, 3.607598098917726*^9}, {
   3.607598332529254*^9, 3.6075983499500647`*^9}, {3.6076010276591063`*^9, 
   3.607601086242148*^9}, {3.607607633546784*^9, 3.607607636258037*^9}, {
   3.607669234708241*^9, 3.607669237014553*^9}, {3.6077559464437113`*^9, 
   3.607755948777335*^9}, {3.607756586683123*^9, 3.607756588590888*^9}, {
   3.6093862173313*^9, 3.609386223213279*^9}, {3.6093955497865868`*^9, 
   3.609395550168585*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 DynamicBox[
  ToBoxes[{$CellContext`z, $CellContext`z1, $CellContext`z2}, StandardForm],
  ImageSizeCache->{71., {2.25, 8.}}]], "PrintTemporary",
 CellChangeTimes->{3.609572492810083*^9}],

Cell[BoxData[
 DynamicBox[ToBoxes[{$CellContext`\[Chi], $CellContext`\[Chi]0}, StandardForm],
  ImageSizeCache->{47., {2.25, 8.}}]], "PrintTemporary",
 CellChangeTimes->{3.6095724928580008`*^9}],

Cell[BoxData[
 DynamicBox[ToBoxes[{
    Length[$CellContext`pointsChosen], $CellContext`startedCount, \
$CellContext`completedCount}, StandardForm],
  ImageSizeCache->{230., {3., 8.}}]], "PrintTemporary",
 CellChangeTimes->{3.609572492908182*^9}],

Cell[BoxData[
 TemplateBox[{"\"trying \"",RowBox[{"{", 
     RowBox[{
       RowBox[{"{", 
         RowBox[{
          "300", ",", "8.4`*^37", ",", "1.2`*^6", ",", "22.1525`", ",", "1", 
           ",", "0.00021642399999999984`", ",", 
           RowBox[{"-", "0.417021`"}], ",", 
           RowBox[{"-", "1.35163`"}]}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"2.1062`", ",", "0.0070498199999999974`"}], "}"}]}], "}"}]},
  "RowDefault"]], "Print",
 CellChangeTimes->{3.6095722685639067`*^9, 3.609572312707724*^9, 
  3.6095723651465673`*^9, 3.609572453222207*^9, 3.609572492973989*^9}]
}, Open  ]]
}, Open  ]],

Cell["Findings", "Text",
 CellChangeTimes->{{3.606348133918042*^9, 3.606348135269116*^9}}],

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{"\[Gamma]", "\[GreaterEqual]", "50"}], TraditionalForm]]]], "Text",
 CellChangeTimes->{{3.606348156541897*^9, 3.6063481652157516`*^9}, {
  3.607067424905558*^9, 3.607067430113633*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"0.7938168112464861`", "\[VeryThinSpace]", "-", 
    RowBox[{"4.106377646794582`*^-14", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{
    "50.0657926779634`", ",", "19.501091186248775`", ",", 
     "0.0017054952666204536`", ",", 
     RowBox[{"-", "0.417534483951093`"}], ",", 
     RowBox[{"-", "1.1653144572014318`"}], ",", "0.044842302768962033`"}], 
    "}"}]}], "}"}]], "Input",
 CellChangeTimes->{{3.6063481255430517`*^9, 3.606348127726272*^9}, {
  3.606348194911273*^9, 3.606348228778201*^9}}],

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{"\[Gamma]", "\[GreaterEqual]", "100"}], TraditionalForm]]]], "Text",\

 CellChangeTimes->{{3.606388765262134*^9, 3.606388773732204*^9}, {
  3.607067416272358*^9, 3.6070674209058523`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.740281309209182`", ",", 
   RowBox[{"{", 
    RowBox[{
    "212.05667686475246`", ",", "20.586029895731766`", ",", 
     "0.0006018223237442693`", ",", 
     RowBox[{"-", "0.28834496910247603`"}], ",", 
     RowBox[{"-", "1.4234752020037233`"}], ",", "0.012381387855314176`"}], 
    "}"}]}], "}"}]], "Input"],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Gamma]", "=", "300"}], TraditionalForm]]],
 ", ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Kappa]", "=", "2.95"}], TraditionalForm]]]
}], "Text",
 CellChangeTimes->{{3.6064512944103737`*^9, 3.606451300587571*^9}, {
  3.6064576344732523`*^9, 3.606457638974822*^9}, {3.6067931367017*^9, 
  3.606793136777329*^9}, {3.6070674025938997`*^9, 3.60706741230442*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.48523460544730795`", ",", 
   RowBox[{"{", 
    RowBox[{
    "300", ",", "22.01039554696952`", ",", "0.00023951995459844163`", ",", 
     RowBox[{"-", "0.36664859506153297`"}], ",", 
     RowBox[{"-", "1.280471162683212`"}], ",", "0.011288050070583`"}], 
    "}"}]}], "}"}]], "Input",
 CellChangeTimes->{{3.606451302514258*^9, 3.606451331118482*^9}, {
  3.6067376286989727`*^9, 3.606737630870726*^9}}],

Cell[TextData[{
 "Distribution fit, double \[Kappa]Test, ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Gamma]", "=", "300"}], TraditionalForm]]]
}], "Text",
 CellChangeTimes->{{3.6070395878416758`*^9, 3.607039594377825*^9}, {
  3.607067364329997*^9, 3.60706739749542*^9}}],

Cell[BoxData[
 RowBox[{"4.627801475326828`", ",", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"-", "0.7128145412227463`"}], ",", "1.3035355218584697`", ",", 
    RowBox[{"-", "1.0880966542812152`"}], ",", 
    RowBox[{"-", "0.8526981382312875`"}]}], "}"}], ",", 
  RowBox[{"{", 
   RowBox[{
   "300", ",", "6.492989961591544`*^35", ",", "1.2`*^6", ",", 
    "17.81480416677621`", ",", "1", ",", "0.00020134682032022462`", ",", 
    RowBox[{"-", "0.37505543397413527`"}], ",", 
    RowBox[{"-", "1.2698890643165832`"}]}], "}"}], ",", 
  RowBox[{"{", 
   RowBox[{"2.1062`", ",", "0.006606500280573165`"}], "}"}]}]], "Input"],

Cell[TextData[{
 "Distribution fit, ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Gamma]", "=", "300"}], TraditionalForm]]]
}], "Text",
 CellChangeTimes->{{3.607067360381123*^9, 3.6070673900632877`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"3.68655", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1.17936"}], ",", "1.2531", ",", 
     RowBox[{"-", "0.649194"}], ",", 
     RowBox[{"-", "0.551328"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"300", ",", 
     RowBox[{"2.28024", " ", 
      SuperscriptBox["10", "35"]}], ",", 
     RowBox[{"1.2", " ", 
      SuperscriptBox["10", "6"]}], ",", "16.8911", ",", "1", ",", 
     "0.000169719", ",", 
     RowBox[{"-", "0.380545"}], ",", 
     RowBox[{"-", "1.25897"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.1062", ",", "0.00502948"}], "}"}]}], "}"}]], "Input",
 CellChangeTimes->{{3.6070674377781363`*^9, 3.6070674464053793`*^9}}],

Cell[TextData[{
 "Distribution fit, ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Gamma]", "=", "1000"}], TraditionalForm]]]
}], "Text",
 CellChangeTimes->{{3.607163045658436*^9, 3.607163050884712*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"3.65597876418943`", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1.28445195900536`"}], ",", "1.1660928432964677`", ",", 
     RowBox[{"-", "0.6154606016466347`"}], ",", 
     RowBox[{"-", "0.5172984224122911`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1000", ",", "1.3488906003565776`*^34", ",", "1.2`*^6", ",", 
     "17.630255636059324`", ",", "1", ",", "0.00004163798542967464`", ",", 
     RowBox[{"-", "0.3972290304663867`"}], ",", 
     RowBox[{"-", "1.2258882163348332`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.1062`", ",", "0.0013599261097429378`"}], "}"}]}], 
  "}"}]], "Input"],

Cell["Distribution fit, widespread initial points", "Text",
 CellChangeTimes->{{3.607236973296576*^9, 3.607236982155352*^9}, {
  3.607256380145895*^9, 3.6072563815854816`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"3.54219", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1.18859"}], ",", "1.24998", ",", 
     RowBox[{"-", "0.54779"}], ",", 
     RowBox[{"-", "0.516636"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"300", ",", 
     RowBox[{"1.54982", " ", 
      SuperscriptBox["10", "35"]}], ",", 
     RowBox[{"1.2", " ", 
      SuperscriptBox["10", "6"]}], ",", "23.2127", ",", "1", ",", 
     "0.000217938", ",", 
     RowBox[{"-", "0.347747"}], ",", 
     RowBox[{"-", "1.30455"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.1062", ",", "0.00503396"}], "}"}]}], "}"}]], "Input",
 CellChangeTimes->{{3.6072369662908783`*^9, 3.607236968923394*^9}, {
  3.607256378475994*^9, 3.6072564076046057`*^9}}],

Cell[TextData[{
 "Distribution fit, ",
 Cell[BoxData[
  FormBox[
   RowBox[{"Log", "[", "10.", "]"}], TraditionalForm]]],
 " error for the photonRatioTest"
}], "Text",
 CellChangeTimes->{{3.607470734900444*^9, 3.607470747778098*^9}, {
  3.607470778483934*^9, 3.6074707949697933`*^9}, {3.607470867881728*^9, 
  3.6074708682658157`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"2.07689", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.471716"}], ",", "1.11574", ",", 
     RowBox[{"-", "0.591337"}], ",", 
     RowBox[{"-", "0.509722"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"300", ",", 
     RowBox[{"1.733", " ", 
      SuperscriptBox["10", "36"]}], ",", 
     RowBox[{"1.2", " ", 
      SuperscriptBox["10", "6"]}], ",", "23.9119", ",", "1", ",", 
     "0.0000608492", ",", 
     RowBox[{"-", "0.693027"}], ",", 
     RowBox[{"-", "0.614004"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.1062", ",", "0.00584979"}], "}"}]}], "}"}]], "Input",
 CellChangeTimes->{{3.607470802659461*^9, 3.607470809548118*^9}}],

Cell[TextData[{
 "Distribution fit, ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SqrtBox["2"], 
    RowBox[{"Log", "[", "10.", "]"}]}], TraditionalForm]]],
 " errors for the photonRatioTest and photonRatioMedianTest"
}], "Text",
 CellChangeTimes->{{3.607470824930151*^9, 3.607470865217669*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1.74835", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.312454"}], ",", "1.11788", ",", 
     RowBox[{"-", "0.503465"}], ",", 
     RowBox[{"-", "0.384181"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"300", ",", 
     RowBox[{"1.59699", " ", 
      SuperscriptBox["10", "36"]}], ",", 
     RowBox[{"1.2", " ", 
      SuperscriptBox["10", "6"]}], ",", "23.5259", ",", "1", ",", 
     "0.0000645273", ",", 
     RowBox[{"-", "0.686477"}], ",", 
     RowBox[{"-", "0.638359"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.1062", ",", "0.00616176"}], "}"}]}], "}"}]], "Input",
 CellChangeTimes->{{3.607470900588119*^9, 3.607470946277495*^9}}],

Cell[TextData[{
 "Distribution fit, ",
 Cell[BoxData[
  FormBox[
   RowBox[{"Log", "[", "10.", "]"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " error for the photonRatioTest, correct energy"
}], "Text",
 CellChangeTimes->{{3.6096289352036743`*^9, 3.609628957088965*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"2.16969", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.623479"}], ",", "1.11251", ",", 
     RowBox[{"-", "0.531924"}], ",", 
     RowBox[{"-", "0.510242"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"300", ",", 
     RowBox[{"1.78534", " ", 
      SuperscriptBox["10", "36"]}], ",", 
     RowBox[{"1.2", " ", 
      SuperscriptBox["10", "6"]}], ",", "22.5269", ",", "1", ",", 
     "0.0000502035", ",", 
     RowBox[{"-", "0.699813"}], ",", 
     RowBox[{"-", "0.626944"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.1062", ",", "0.00541037"}], "}"}]}], "}"}]], "Input",
 CellChangeTimes->{{3.609628966521572*^9, 3.6096289802586613`*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Distribution", "Subsubsection",
 CellChangeTimes->{{3.607499913888262*^9, 3.60749991508009*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"sample16IA", "=", 
   RowBox[{"burstSample", "[", 
    RowBox[{
     RowBox[{"defaultUniverse", "[", "]"}], ",", 
     RowBox[{"defaultPopulation", "[", "]"}], ",", 
     RowBox[{"defaultBurst", "[", "]"}], ",", 
     RowBox[{"defaultDetectorArea", "[", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{".1", ",", "1.", ",", "\[Infinity]"}], "}"}], ",", "16", ",", 
     RowBox[{"computedValues", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<z\>\"", ",", "\"\<\[Chi]\>\"", ",", "\"\<pLow\>\"", ",", 
        "\"\<pHigh\>\"", ",", "\"\<duration\>\"", ",", "\"\<\[Kappa]\>\""}], 
       "}"}]}], ",", 
     RowBox[{"logQ", "\[Rule]", "True"}], ",", 
     RowBox[{"accurateQ", "\[Rule]", "False"}]}], "]"}]}], ";", 
  RowBox[{"Save", "[", 
   RowBox[{"\"\<sample16IA.m\>\"", ",", "sample16IA"}], "]"}], ";", 
  RowBox[{"sample16", "=", 
   RowBox[{"burstSample", "[", 
    RowBox[{
     RowBox[{"defaultUniverse", "[", "]"}], ",", 
     RowBox[{"defaultPopulation", "[", "]"}], ",", 
     RowBox[{"defaultBurst", "[", "]"}], ",", 
     RowBox[{"defaultDetectorArea", "[", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{".1", ",", "1.", ",", "\[Infinity]"}], "}"}], ",", "16", ",", 
     RowBox[{"computedValues", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<z\>\"", ",", "\"\<\[Chi]\>\"", ",", "\"\<pLow\>\"", ",", 
        "\"\<pHigh\>\"", ",", "\"\<duration\>\"", ",", "\"\<\[Kappa]\>\""}], 
       "}"}]}], ",", 
     RowBox[{"logQ", "\[Rule]", "True"}]}], "]"}]}], ";", 
  RowBox[{"Save", "[", 
   RowBox[{"\"\<sample16.m\>\"", ",", "sample16"}], "]"}], ";", 
  RowBox[{"sample16pc40", "=", 
   RowBox[{"burstSample", "[", 
    RowBox[{
     RowBox[{"defaultUniverse", "[", "]"}], ",", 
     RowBox[{"defaultPopulation", "[", "]"}], ",", 
     RowBox[{"defaultBurst", "[", "]"}], ",", 
     RowBox[{"defaultDetectorArea", "[", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{".1", ",", "1.", ",", "\[Infinity]"}], "}"}], ",", "16", ",", 
     RowBox[{"computedValues", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<z\>\"", ",", "\"\<\[Chi]\>\"", ",", "\"\<pLow\>\"", ",", 
        "\"\<pHigh\>\"", ",", "\"\<duration\>\"", ",", "\"\<\[Kappa]\>\""}], 
       "}"}]}], ",", 
     RowBox[{"logQ", "\[Rule]", "True"}], ",", 
     RowBox[{"pointCount", "\[Rule]", "40"}]}], "]"}]}], ";", 
  RowBox[{"Save", "[", 
   RowBox[{"\"\<sample16pc40.m\>\"", ",", "sample16pc40"}], "]"}], ";", 
  RowBox[{"sample256IA", "=", 
   RowBox[{"burstSample", "[", 
    RowBox[{
     RowBox[{"defaultUniverse", "[", "]"}], ",", 
     RowBox[{"defaultPopulation", "[", "]"}], ",", 
     RowBox[{"defaultBurst", "[", "]"}], ",", 
     RowBox[{"defaultDetectorArea", "[", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{".1", ",", "1.", ",", "\[Infinity]"}], "}"}], ",", "256", ",", 
     RowBox[{"computedValues", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<z\>\"", ",", "\"\<\[Chi]\>\"", ",", "\"\<pLow\>\"", ",", 
        "\"\<pHigh\>\"", ",", "\"\<duration\>\"", ",", "\"\<\[Kappa]\>\""}], 
       "}"}]}], ",", 
     RowBox[{"logQ", "\[Rule]", "True"}], ",", 
     RowBox[{"accurateQ", "\[Rule]", "False"}]}], "]"}]}], ";", 
  RowBox[{"Save", "[", 
   RowBox[{"\"\<sample256IA.m\>\"", ",", "sample256IA"}], "]"}], ";", 
  RowBox[{"sample256", "=", 
   RowBox[{"burstSample", "[", 
    RowBox[{
     RowBox[{"defaultUniverse", "[", "]"}], ",", 
     RowBox[{"defaultPopulation", "[", "]"}], ",", 
     RowBox[{"defaultBurst", "[", "]"}], ",", 
     RowBox[{"defaultDetectorArea", "[", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{".1", ",", "1.", ",", "\[Infinity]"}], "}"}], ",", "256", ",", 
     RowBox[{"computedValues", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<z\>\"", ",", "\"\<\[Chi]\>\"", ",", "\"\<pLow\>\"", ",", 
        "\"\<pHigh\>\"", ",", "\"\<duration\>\"", ",", "\"\<\[Kappa]\>\""}], 
       "}"}]}], ",", 
     RowBox[{"logQ", "\[Rule]", "True"}]}], "]"}]}], ";", 
  RowBox[{"Save", "[", 
   RowBox[{"\"\<sample256.m\>\"", ",", "sample256"}], "]"}], ";", 
  RowBox[{"sample256pc40", "=", 
   RowBox[{"burstSample", "[", 
    RowBox[{
     RowBox[{"defaultUniverse", "[", "]"}], ",", 
     RowBox[{"defaultPopulation", "[", "]"}], ",", 
     RowBox[{"defaultBurst", "[", "]"}], ",", 
     RowBox[{"defaultDetectorArea", "[", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{".1", ",", "1.", ",", "\[Infinity]"}], "}"}], ",", "256", ",", 
     RowBox[{"computedValues", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<z\>\"", ",", "\"\<\[Chi]\>\"", ",", "\"\<pLow\>\"", ",", 
        "\"\<pHigh\>\"", ",", "\"\<duration\>\"", ",", "\"\<\[Kappa]\>\""}], 
       "}"}]}], ",", 
     RowBox[{"logQ", "\[Rule]", "True"}], ",", 
     RowBox[{"pointCount", "\[Rule]", "40"}]}], "]"}]}], ";", 
  RowBox[{"Save", "[", 
   RowBox[{"\"\<sample256pc40.m\>\"", ",", "sample256pc40"}], "]"}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.607151737518517*^9, 3.607151787478895*^9}, {
   3.607152031768177*^9, 3.607152097444626*^9}, {3.6071521619008703`*^9, 
   3.6071521681023903`*^9}, 3.607152411791893*^9, {3.60725644295364*^9, 
   3.6072564477907457`*^9}, {3.607258593316545*^9, 3.607258682019373*^9}, {
   3.60725893428609*^9, 3.607258940576136*^9}, {3.607259243111906*^9, 
   3.6072592907797613`*^9}, {3.607471338418459*^9, 3.6074714631679087`*^9}, {
   3.607471502631407*^9, 3.607471510519861*^9}, {3.607471649217723*^9, 
   3.607471657704623*^9}, {3.6074720163187227`*^9, 3.607472057208458*^9}, {
   3.607514017352871*^9, 3.60751407260951*^9}, {3.609631336937778*^9, 
   3.609631354947994*^9}, {3.6096313906659927`*^9, 3.6096314074987707`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"sample4096IA", "=", 
   RowBox[{"burstSample", "[", 
    RowBox[{
     RowBox[{"defaultUniverse", "[", "]"}], ",", 
     RowBox[{"defaultPopulation", "[", "]"}], ",", 
     RowBox[{"defaultBurst", "[", "]"}], ",", 
     RowBox[{"defaultDetectorArea", "[", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{".1", ",", "1.", ",", "\[Infinity]"}], "}"}], ",", "4096", ",", 
     
     RowBox[{"computedValues", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<z\>\"", ",", "\"\<\[Chi]\>\"", ",", "\"\<pLow\>\"", ",", 
        "\"\<pHigh\>\"", ",", "\"\<duration\>\"", ",", "\"\<\[Kappa]\>\""}], 
       "}"}]}], ",", 
     RowBox[{"logQ", "\[Rule]", "True"}], ",", 
     RowBox[{"accurateQ", "\[Rule]", "False"}]}], "]"}]}], ";", 
  RowBox[{"Save", "[", 
   RowBox[{"\"\<sample4096IA.m\>\"", ",", "sample4096IA"}], "]"}], ";", 
  RowBox[{"sample4096", "=", 
   RowBox[{"burstSample", "[", 
    RowBox[{
     RowBox[{"defaultUniverse", "[", "]"}], ",", 
     RowBox[{"defaultPopulation", "[", "]"}], ",", 
     RowBox[{"defaultBurst", "[", "]"}], ",", 
     RowBox[{"defaultDetectorArea", "[", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{".1", ",", "1.", ",", "\[Infinity]"}], "}"}], ",", "4096", ",", 
     
     RowBox[{"computedValues", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<z\>\"", ",", "\"\<\[Chi]\>\"", ",", "\"\<pLow\>\"", ",", 
        "\"\<pHigh\>\"", ",", "\"\<duration\>\"", ",", "\"\<\[Kappa]\>\""}], 
       "}"}]}], ",", 
     RowBox[{"logQ", "\[Rule]", "True"}]}], "]"}]}], ";", 
  RowBox[{"Save", "[", 
   RowBox[{"\"\<sample4096.m\>\"", ",", "sample4096"}], "]"}], ";", 
  RowBox[{"sample4096pc40", "=", 
   RowBox[{"burstSample", "[", 
    RowBox[{
     RowBox[{"defaultUniverse", "[", "]"}], ",", 
     RowBox[{"defaultPopulation", "[", "]"}], ",", 
     RowBox[{"defaultBurst", "[", "]"}], ",", 
     RowBox[{"defaultDetectorArea", "[", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{".1", ",", "1.", ",", "\[Infinity]"}], "}"}], ",", "4096", ",", 
     
     RowBox[{"computedValues", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<z\>\"", ",", "\"\<\[Chi]\>\"", ",", "\"\<pLow\>\"", ",", 
        "\"\<pHigh\>\"", ",", "\"\<duration\>\"", ",", "\"\<\[Kappa]\>\""}], 
       "}"}]}], ",", 
     RowBox[{"logQ", "\[Rule]", "True"}], ",", 
     RowBox[{"pointCount", "\[Rule]", "40"}]}], "]"}]}], ";", 
  RowBox[{"Save", "[", 
   RowBox[{"\"\<sample4096pc40.m\>\"", ",", "sample4096pc40"}], "]"}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.6075140758695908`*^9, 3.607514090143182*^9}, {
  3.609666568912321*^9, 3.609666585938512*^9}, {3.6097104825083923`*^9, 
  3.609710487020596*^9}, {3.6097105793968353`*^9, 3.6097105838249817`*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Burst Fraction", "Subsubsection",
 CellChangeTimes->{{3.607499903944137*^9, 3.607499905709663*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"PrintTemporary", "[", 
   RowBox[{"Dynamic", "[", 
    RowBox[{"{", 
     RowBox[{"z", ",", "z1", ",", "z2"}], "}"}], "]"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"burstFraction", "[", 
  RowBox[{
   RowBox[{"defaultUniverse", "[", "]"}], ",", 
   RowBox[{"defaultPopulation", "[", "]"}], ",", 
   RowBox[{"defaultBurst", "[", "]"}], ",", 
   RowBox[{"defaultDetectorArea", "[", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{".1", ",", "1.", ",", "\[Infinity]"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.607472538226598*^9, 3.607472598984831*^9}}],

Cell[BoxData["0.10668199113455576`"], "Output",
 CellChangeTimes->{3.607477078455381*^9, 3.607499842060955*^9, 
  3.607514167560162*^9, 3.607518955297565*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Computed samples", "Subsubsection",
 CellChangeTimes->{{3.6096449188208113`*^9, 3.609644921748653*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"<<", "\"\<sample16IA.m\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"<<", "\"\<sample16.m\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"<<", "\"\<sample16pc40.m\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"<<", "\"\<sample256IA.m\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"<<", "\"\<sample256.m\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"<<", "\"\<sample256pc40.m\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"<<", "\"\<sample4096IA.m\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"<<", "\"\<sample4096.m\>\""}], ";"}]}], "Input",
 CellChangeTimes->{{3.6096359866523247`*^9, 3.609635990636599*^9}, {
  3.609643021600891*^9, 3.609643024501835*^9}, {3.60964969356056*^9, 
  3.6096497074389467`*^9}, {3.60966424413723*^9, 3.609664249316772*^9}, {
  3.609710325338402*^9, 3.609710333753696*^9}, {3.609758090152154*^9, 
  3.609758114318233*^9}, {3.609972915409157*^9, 3.6099729201569*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Distribution plots", "Subsubsection",
 CellChangeTimes->{{3.609635882975088*^9, 3.60963588581352*^9}, {
  3.6096449332917128`*^9, 3.6096449338002033`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Kappa]Observed", "=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\"\<090902B\>\"", ",", 
       RowBox[{"{", 
        RowBox[{"0.363408", ",", "0.893437"}], "}"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"\"\<090510\>\"", ",", 
       RowBox[{"{", 
        RowBox[{"0.428137", ",", "1.60485"}], "}"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"\"\<080916C\>\"", ",", 
       RowBox[{"{", 
        RowBox[{"0.66529", ",", "3.31569"}], "}"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"\"\<090926A\>\"", ",", 
       RowBox[{"{", 
        RowBox[{"1.98759", ",", "6.61486"}], "}"}]}], "}"}]}], 
    "\[IndentingNewLine]", "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.594342734190405*^9, 3.594342752715184*^9}, {
  3.59434286903363*^9, 3.594342900024119*^9}, {3.594343771437028*^9, 
  3.594343773132771*^9}, {3.594852329377499*^9, 3.594852332247513*^9}, {
  3.5966927652249002`*^9, 3.596692799285636*^9}, {3.596693274643531*^9, 
  3.596693288462693*^9}, {3.5966933274676723`*^9, 3.5966933546761417`*^9}, {
  3.603446939569559*^9, 3.603447017756761*^9}, {3.603447061587146*^9, 
  3.603447066057764*^9}, {3.6096359148737793`*^9, 3.6096359282070913`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[Kappa]HistogramPlot", "[", 
  RowBox[{
   RowBox[{"sample4096", "\[LeftDoubleBracket]", 
    RowBox[{"All", ",", 
     RowBox[{"-", "1"}]}], "\[RightDoubleBracket]"}], ",", 
   "\[Kappa]Observed"}], "]"}]], "Input",
 CellChangeTimes->{{3.609635980255172*^9, 3.609636038443963*^9}, {
  3.609636183561309*^9, 3.60963619188875*^9}, {3.609636367069709*^9, 
  3.609636369461276*^9}, {3.609636493042923*^9, 3.6096365314735327`*^9}, {
  3.609639000473216*^9, 3.609639008262295*^9}, {3.609644450906867*^9, 
  3.609644476854623*^9}, {3.609649731286344*^9, 3.60964973593781*^9}, {
  3.60966433070894*^9, 3.609664330890787*^9}, {3.609665973679592*^9, 
  3.60966597831504*^9}, {3.609758120706745*^9, 3.609758124641633*^9}, {
  3.609972930823106*^9, 3.60997293093909*^9}}],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
    EdgeForm[Opacity[0.34299999999999997`]], {}, 
    {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
     EdgeForm[Opacity[0.34299999999999997`]], 
     RectangleBox[{0.8, 0}, {0.9, 0.1005859375},
      RoundingRadius->0], RectangleBox[{0.9, 0}, {1., 0.14013671875},
      RoundingRadius->0], RectangleBox[{1., 0}, {1.1, 0.14404296875},
      RoundingRadius->0], RectangleBox[{1.1, 0}, {1.2, 0.12060546875},
      RoundingRadius->0], RectangleBox[{1.2, 0}, {1.3, 0.107177734375},
      RoundingRadius->0], RectangleBox[{1.3, 0}, {1.4, 0.087158203125},
      RoundingRadius->0], RectangleBox[{1.4, 0}, {1.5, 0.071044921875},
      RoundingRadius->0], RectangleBox[{1.5, 0}, {1.6, 0.049560546875},
      RoundingRadius->0], RectangleBox[{1.6, 0}, {1.7, 0.04541015625},
      RoundingRadius->0], RectangleBox[{1.7, 0}, {1.8, 0.025634765625},
      RoundingRadius->0], RectangleBox[{1.8, 0}, {1.9, 0.02734375},
      RoundingRadius->0], RectangleBox[{1.9, 0}, {2., 0.0166015625},
      RoundingRadius->0], RectangleBox[{2., 0}, {2.1, 0.014404296875},
      RoundingRadius->0], RectangleBox[{2.1, 0}, {2.2, 0.0087890625},
      RoundingRadius->0], RectangleBox[{2.2, 0}, {2.3, 0.009033203125},
      RoundingRadius->0], RectangleBox[{2.3, 0}, {2.4, 0.0068359375},
      RoundingRadius->0], RectangleBox[{2.4, 0}, {2.5, 0.005126953125},
      RoundingRadius->0], RectangleBox[{2.5, 0}, {2.6, 0.003662109375},
      RoundingRadius->0], RectangleBox[{2.6, 0}, {2.7, 0.00390625},
      RoundingRadius->0], RectangleBox[{2.7, 0}, {2.8, 0.001953125},
      RoundingRadius->0], RectangleBox[{2.8, 0}, {2.9, 0.001220703125},
      RoundingRadius->0], RectangleBox[{2.9, 0}, {3., 0.000732421875},
      RoundingRadius->0], RectangleBox[{3., 0}, {3.1, 0.000732421875},
      RoundingRadius->0], RectangleBox[{3.1, 0}, {3.2, 0.0009765625},
      RoundingRadius->0], RectangleBox[{3.2, 0}, {3.3, 0.001220703125},
      RoundingRadius->0], RectangleBox[{3.3, 0}, {3.4, 0.00048828125},
      RoundingRadius->0], RectangleBox[{3.4, 0}, {3.5, 0.001220703125},
      RoundingRadius->0], RectangleBox[{3.5, 0}, {3.6, 0.},
      RoundingRadius->0], RectangleBox[{3.6, 0}, {3.7, 0.000244140625},
      RoundingRadius->0], RectangleBox[{3.7, 0}, {3.8, 0.000732421875},
      RoundingRadius->0], RectangleBox[{3.8, 0}, {3.9, 0.000244140625},
      RoundingRadius->0], RectangleBox[{3.9, 0}, {4., 0.000244140625},
      RoundingRadius->0], RectangleBox[{4., 0}, {4.1, 0.00048828125},
      RoundingRadius->0], RectangleBox[{4.1, 0}, {4.2, 0.00048828125},
      RoundingRadius->0], RectangleBox[{4.2, 0}, {4.3, 0.},
      RoundingRadius->0], RectangleBox[{4.3, 0}, {4.4, 0.000244140625},
      RoundingRadius->0], RectangleBox[{4.4, 0}, {4.5, 0.00048828125},
      RoundingRadius->0], RectangleBox[{4.5, 0}, {4.6, 0.},
      RoundingRadius->0], RectangleBox[{4.6, 0}, {4.7, 0.},
      RoundingRadius->0], RectangleBox[{4.7, 0}, {4.8, 0.00048828125},
      RoundingRadius->0], RectangleBox[{4.8, 0}, {4.9, 0.000244140625},
      RoundingRadius->0], RectangleBox[{4.9, 0}, {5., 0.},
      RoundingRadius->0], RectangleBox[{5., 0}, {5.1, 0.},
      RoundingRadius->0], RectangleBox[{5.1, 0}, {5.2, 0.},
      RoundingRadius->0], RectangleBox[{5.2, 0}, {5.3, 0.},
      RoundingRadius->0], RectangleBox[{5.3, 0}, {5.4, 0.},
      RoundingRadius->0], RectangleBox[{5.4, 0}, {5.5, 0.000244140625},
      RoundingRadius->0], RectangleBox[{5.5, 0}, {5.6, 0.},
      RoundingRadius->0], RectangleBox[{5.6, 0}, {5.7, 0.},
      RoundingRadius->0], RectangleBox[{5.7, 0}, {5.8, 0.},
      RoundingRadius->0], RectangleBox[{5.8, 0}, {5.9, 0.000244140625},
      RoundingRadius->0]}, {}, {}}, 
   TagBox[
    TooltipBox[{
      LineBox[{{0.363408, 0.13323974609375}, {0.893437, 0.13323974609375}}], 
      LineBox[{{0.363408, 0.129638671875}, {0.363408, 0.1368408203125}}], 
      LineBox[{{0.893437, 0.129638671875}, {0.893437, 0.1368408203125}}]},
     "\"090902B: (0.363408, 0.893437)\"",
     TooltipStyle->"TextStyling"],
    Annotation[#, "090902B: (0.363408, 0.893437)", "Tooltip"]& ], 
   TagBox[
    TooltipBox[{
      LineBox[{{0.428137, 0.1224365234375}, {1.60485, 0.1224365234375}}], 
      LineBox[{{0.428137, 0.11883544921875}, {0.428137, 0.12603759765625}}], 
      LineBox[{{1.60485, 0.11883544921875}, {1.60485, 0.12603759765625}}]},
     "\"090510: (0.428137, 1.60485)\"",
     TooltipStyle->"TextStyling"],
    Annotation[#, "090510: (0.428137, 1.60485)", "Tooltip"]& ], 
   TagBox[
    TooltipBox[{
      LineBox[{{0.66529, 0.11163330078125}, {3.31569, 0.11163330078125}}], 
      LineBox[{{0.66529, 0.1080322265625}, {0.66529, 0.115234375}}], 
      LineBox[{{3.31569, 0.1080322265625}, {3.31569, 0.115234375}}]},
     "\"080916C: (0.66529, 3.31569)\"",
     TooltipStyle->"TextStyling"],
    Annotation[#, "080916C: (0.66529, 3.31569)", "Tooltip"]& ], 
   TagBox[
    TooltipBox[{
      ArrowBox[NCache[{{1.98759, 0.100830078125}, {
         Rational[59, 10], 0.100830078125}}, {{1.98759, 0.100830078125}, {5.9,
         0.100830078125}}]], 
      LineBox[{{1.98759, 0.09722900390625}, {1.98759, 0.10443115234375}}]},
     "\"090926A: (1.98759, 6.61486)\"",
     TooltipStyle->"TextStyling"],
    Annotation[#, "090926A: (1.98759, 6.61486)", "Tooltip"]& ]},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesOrigin->{0.8, 0},
  Frame->{{True, False}, {True, False}},
  FrameLabel->{{
     FormBox["\"Probability\"", TraditionalForm], None}, {
     FormBox["\"Stretching Factor\"", TraditionalForm], None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  ImageSize->Automatic,
  LabelStyle->Directive[FontSize -> 10],
  PlotRange->{{0, 5.9}, {All, All}},
  PlotRangePadding->{{0, 0}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.609636003218059*^9, 3.609636053952828*^9}, {
   3.609636180226817*^9, 3.609636222128878*^9}, {3.609636314081313*^9, 
   3.6096363699513893`*^9}, {3.6096364907792807`*^9, 3.609636531893386*^9}, {
   3.609638998884776*^9, 3.609639008655566*^9}, 3.609640630931283*^9, {
   3.609644452899716*^9, 3.609644477357744*^9}, 3.609644635557328*^9, 
   3.609646584126134*^9, {3.609649733473061*^9, 3.609649736474476*^9}, 
   3.6096509452181673`*^9, 3.609664332820959*^9, {3.60966597523304*^9, 
   3.60966597895583*^9}, 3.6096660128641653`*^9, 3.60975812846548*^9, 
   3.609758174672577*^9, 3.6099729318622723`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[Kappa]CDFPlot", "[", 
  RowBox[{
   RowBox[{"sample4096", "\[LeftDoubleBracket]", 
    RowBox[{"All", ",", 
     RowBox[{"-", "1"}]}], "\[RightDoubleBracket]"}], ",", "\[Kappa]Observed",
    ",", 
   RowBox[{"PlotPoints", "\[Rule]", "4096"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.609639083156595*^9, 3.609639092199402*^9}, {
  3.609644456978179*^9, 3.609644508981615*^9}, {3.609644614671221*^9, 
  3.609644617244734*^9}, {3.6096497653667917`*^9, 3.609649766238616*^9}, {
  3.6096509266426764`*^9, 3.609650930474924*^9}, {3.609664335613008*^9, 
  3.609664335746616*^9}, {3.609758160684682*^9, 3.609758163503387*^9}, {
  3.6099729459884443`*^9, 3.609972946116826*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {GrayLevel[0.5], LineBox[CompressedData["
1:eJxF0H0w1AkYB/Bdb3tl87LeFbWYIpxdQoRfXGXV2r3cNqW2N0ShDqm5cI2X
Ujdo1GFdt87Lphq3ofNyKUm61HZIb+SlVl7b8lJRW6zdu5u5fZ5n5pnvfGae
+f7x0MO+D9mnQSKRTvy7/yUjK2u0h53uR/p/jqo6eg9L9hBq73Zd7M+VxIGf
bPKf8ZGkgnO2PW13k+SC37ws8naRlIAtyjTeO0mqwdWa7m2Okmaw3efZ8JEf
H4Hnglb0P1f0gH3ITI2V1r3glGve9skEWrGck2iVjlZqHqGGUfrApKYWn7eG
/WAd111F88tfgjfIou5wWOhTJfGy4gPor/RPugeI0QvGf2/PZEqx74lCSbEe
wPucjS5n7V+BGS0iD5E3eqtc4VvHRl/cW8XuiUOv8zCOpjegU6UvLlwNGgRf
NvYU39mBfhiUW/PsINq6NqDly1l04+lLUv9e9GdmvOXj6CHwsqgH9OEUdKDQ
1uHTGXSBTpenZQ26aY0L4XQXPRJ3eoNfN5p68VXwtzL0qj7vLWFzaL5BHj9x
0TA4Y/1EeOZStTuJiqQNMYVM9OOq4oSKb9B0y5C0jih03Amt3A9ZaLFzx4P0
JSPgsS6BttEV9PWEzVON98fA2Xq6PZHDMjCrjxtMOI+DtS/n3TY7Ogk2nw4i
RNpTYCc/VePX+ej6oZ7kmX50ybrtVjtp78AakwY5HDt0hOCegvBAm4yX1a4m
0K1rj8cyWWoPED/kh9qt3Ix2eLOq32Y72sf9TWilDM1NLe72OvYePHr2uxDt
kx/Ax0WU9s7cabBAPssuePYRfC4g7e+/puVgqwlBG4syC/75vte2uUAF+BaT
Z7Vgyzz47flDg6ZhSnDjr79FyabR2cKO8RsnVeBmoeUZRgV6RhjpUt6BJhc1
bG3pRusVUVOlA2q/JhYX7b6skKHti/7otJhGl3LEBhUapLVqV3JUq+/pogc5
m3rXMNBmXEFyNQ/dFhWz9/kQOi2VCCQdJoP5zsxzWsc1wOKE/TYlxZrgg24y
5rsrWmBRdlVm92NtcKlJk/DABx2woaWpa7WSAv5UX0M9Q18AZj88H7mMuRAc
bfYgbecaXfC83G+QyaeCybz529cPLAInschjvTl64Buxwe3lYn2wZ2b8LzS+
AXgtz35d4QX0RhvppNUE+uY1W55czxDM4O5v6GSgBYWN3ElXtPKVwaiuu9rv
iEjHfSkOnuj2xAZaoBdaSAkj0n3R0ecXxt70R+s077jrthEtGhFbV4Sg+xnc
RwXhaNOU9xkZiejJ2jblQD26deLSMb8v6KuOZNr6n2hg3gqVrFzfCOw6VRwR
Uoq+nzhiHepgDA6gPfSqq0TLk3fI+YQJOEKUPbOrFU0V7MkTbzMFF5Y9z+O+
Rr+I+fiUfcgMzCfX/ZmvQufxLHpXnzIHV9+i72RSLfBf8rb0I0K0yfiS10a2
luCkLl9zz0NoafMu1vYG9D+dZ1e0
      "]]}}, 
   TagBox[
    TooltipBox[{
      LineBox[NCache[{{0.363408, Rational[1, 8]}, {
         0.893437, Rational[1, 8]}}, {{0.363408, 0.125}, {0.893437, 0.125}}]],
       LineBox[{{0.363408, 0.115}, {0.363408, 0.135}}], 
      LineBox[{{0.893437, 0.115}, {0.893437, 0.135}}]},
     "\"090902B\"",
     TooltipStyle->"TextStyling"],
    Annotation[#, "090902B", "Tooltip"]& ], 
   TagBox[
    TooltipBox[{
      LineBox[NCache[{{0.428137, Rational[3, 8]}, {
         1.60485, Rational[3, 8]}}, {{0.428137, 0.375}, {1.60485, 0.375}}]], 
      LineBox[{{0.428137, 0.365}, {0.428137, 0.385}}], 
      LineBox[{{1.60485, 0.365}, {1.60485, 0.385}}]},
     "\"090510\"",
     TooltipStyle->"TextStyling"],
    Annotation[#, "090510", "Tooltip"]& ], 
   TagBox[
    TooltipBox[{
      LineBox[NCache[{{0.66529, Rational[5, 8]}, {
         3.31569, Rational[5, 8]}}, {{0.66529, 0.625}, {3.31569, 0.625}}]], 
      LineBox[{{0.66529, 0.615}, {0.66529, 0.635}}], 
      LineBox[{{3.31569, 0.615}, {3.31569, 0.635}}]},
     "\"080916C\"",
     TooltipStyle->"TextStyling"],
    Annotation[#, "080916C", "Tooltip"]& ], 
   TagBox[
    TooltipBox[{
      LineBox[NCache[{{1.98759, Rational[7, 8]}, {
         6.61486, Rational[7, 8]}}, {{1.98759, 0.875}, {6.61486, 0.875}}]], 
      LineBox[{{1.98759, 0.865}, {1.98759, 0.885}}], 
      LineBox[{{6.61486, 0.865}, {6.61486, 0.885}}]},
     "\"090926A\"",
     TooltipStyle->"TextStyling"],
    Annotation[#, "090926A", "Tooltip"]& ], {{}, {}, 
    {Hue[0.67, 0.6, 0.6], Thickness[Large], LineBox[CompressedData["
1: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
oQ4sJ0Zrppz2By/Is3aOoQ5h6qObsiMT/OENt14VOFbPRK0bPLDuavP2l2MO
LSfvir9+OASO2bA08wJ1RDk5WuIXfxdsuLE69DW4b5OH8x9wtJGE3sJXrNcb
v5izE9xjsrM/GFxUkdgcD47aOvwhh/pGOXGtMsxsAOtvvxnfB5as6QwVeT3m
WGbemmmdVgC/qQ121gVHmn/aYQk+UL9YzwOsa+Gtdhks8bF0ThJ1PHMfd82b
lA/ObTzU/wkcsTun+S/YuWlq6bSsMScx+bTek6kMnvHlSbw+dXI56bDhuWpN
nVpOsptNTx8Hh9nedb4K1rbT0ysCt+/7Pucf+HXrskkzsseczuR5v3+/Cnh/
e03zeupMZh45ypfagludiuMjwJddHE+XgPf9zHD+BtY8KGjOlTPmrHIy5ZeF
3kzwt0MP1NTBj/OVaq+BvWYlnRoFP+re0CaeO+Y8Zp9788NYDSx2/ULmBurC
cmJwUFF2L/j42rcXT1KXMPNxpuPfcHDTT4E9j8HT3twvKQbrRa5f2kJdynwP
HGi/9Q+cqBswcUYe60YJhcMq4PsuCRJh1BXlRESiraMQfCRXLmsIHB9RKC/2
Zsw1zD7gbH9lEVhoDf8/fbC2eLydNXUD009yvi8PBU9yXihUANZaXeDeRN3E
7O8z9jX9Bd/p4Fs/LZ91VXbcEyWwptM3v93gmOmy5pfBlT/e5CZStzL7UPZe
5TfgFWG84Y1gZ8e7XAPgaO21DlMKWHPEvpYrUHeUE94fvqt0wRpZMvd2gaMc
bD1DwDxisRtzwR/2z++RK2Qd+SomMhisMRr6fRhcTc6pOxaxHvmQW+AHlrXi
2hkD3tSt2fWSupvZ37yPna4FR4mkifaC30T/vidSPOYe5v6rLF6pBBbNdnyv
D04ZZzkrDWy02she5i1rD07gEKEeKCe3bIqCd1IPM/P/N6/0UXCXz+qnl8Fa
dzLqi8BBuerc40pYp5ocuioJbmh+IKcB5nFrzzCh5qogSjwLNx8Am4bu+RIA
Pi4TfSQOHJPawJ9DzVNBinUlbnyk5q8gvyu2Lv5LLVhBJPZezhF9x1q79/1W
FbD92UltG8DP7vpOPgPmy/+35AV46zd3i1/gWL5uH7n3rEvClKbrUotUkB7Z
/Qm7wZLP7moeB6/R//IhDHx5386+d+Av5yokeT+wFhCfkixFLVpBVOM3rtEE
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
qOp+8hrscLpwZi24XzH69G/qJKaeZmt4P2iwFvX95p+4nLXkzPRiiRWs5yef
F/QHx4qN3LgDlj3uqvwaHN/07WUddTKzP+jt3NQHXjRF94DyStZqDUohtuCl
98QeXwevcB0p44Azq11tusBaq77/nqg55tR6khWz88wCsA5/6TQdsEHU7a2P
wEbqh8Nnr2JtVqxbewG822r6rEFw05uARDEt1jaKoytVqTOZ/SfkcIkh2K7v
u4U92CG79MQtsEvg86gqMPeVbdu6wWHX/ggJkDFnMfWMDnkzH/w6TvnEKnDr
k30dB8Ei2bd3xoJjC7SmvaLOY/rR+/rianBJhYfPL+rCemJdL7ZikjbrgNbN
CVrglN7z4q5gvWHZ0gvUJUz/4847dxfsMtGavAaPFxnpqwGbKrhWEp0xl9YT
r2VJuofBd3W/PYkDr9hwxjGLuqKevN8iNb+OuoY5H7OXdX/AfZbml4VWsw7Y
279uIXiOU+g4HeoG5v1cVZ+bg/WPvT/oBj7ox990DxxxZfXmenDbgzTl1WtY
ryhUEEwAv39fkJsDtqm0Pd5A3cQ8b/24//rAF75EtU/WZS3VtjJGHpz6s2bH
GrBB35Epu8ANw1OL3KlbmH1uxrl7H8EnVYfO6q5lnb+q6OJ8PdbC68Ovceuz
lnonYLECrGZ0co4rOGNK+mgQWLf8V1MCdWs9eReqmPMGvG3b3jufwZ4WhnJb
DFhH2fz3IAuc/DXuwAA4x36mmso61hsUTKcZgit+BPXso+6oJ7seFFSeAX9z
GffsFljgSOvKyetZLzr+Iesk+JnmxJhIsPbI6jNp4KLXXrYcsPHp/2O6zsOp
+t42gIuMlSQkISQkSVJfSTYiKgkhhCSpZJ6iJAkJlSSVhEoyp4GkkpApUVIo
w3FSUZRUoqR3/67Xuvb95+dy9rb2Wuu517OKDb8QD72lXKYq8ylsZBx47FK9
AzhaYNaJs+DkExGbn4EXbC5T6wfnCY3O4jZhvLJ52XcZ8KMz+1q0iX+8pVSk
f/7MACdnhc6ZsYnxC4+1SnpgvuV8qwLAGWfd9E6BqdGG9dnEo3T92y21qAQH
Pjxt1wnOD7feN8uUca/RvBBD8OGcQxHbwRIzWHHB4GIv/bNnwObNGZfyicfp
+Tu3t6AHXGav+kh0M2O7R/E1S4k5Oqifst+b1oPjI6zadoJVPt5lHQKzhbpc
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
CgCHB7U7nCZOp/Mh5J58PtjyyIXPteCFMbbBHHyMRxLm8mqCL2RckLsO1i6e
qyPGz7ir5oJtJPhI+9yAH2ALdjunigBj+c8X4neC474Gbz0M/vndVvoi2HF0
1fticPX43Lxm4oxuymythMSp6YzfHpeI3ijIuLllscthcO38Nbq3wWufGKo+
A5e5mUp+BK8S2iowZeaks+jzvWj7qAQ4fWN4YTg4ridjzycw77F866lCjMNV
ig2kifO6qb8vytQ1iQu7qaD9NTIW4O+SzwXdwZ4VbeORxHe6qf7dPZ/SwC4z
PrXdA5tdnX5adhZj7VVL1x8H3+3677+rYPUI3YUPwfmL1s9uBSs1mU/5RlxC
n68SOzvlhRmL7PK/ZwPm+JPkUw4eiL+3SGk2490rK+bog9lv67nticu7KYcj
L78HgNsUOnpOgbc09DZlE1fR/ZHP4MNK8Po5I7md4KoHExd+gSln3uhZIoxL
eYUCF4NX5Iu7GBLX0v20hazFdvDi0UW6weDMS+qqZ8Bya1dL5oMv9a0VqCFu
oPOq4ztrDMzx/OpdFVHG7XV/5NaBb1VuObmd+Hk3FfswdyyIuIVe/7tcuxLA
tak7hUfBKlGVjxzEGHOHzVu8H9wV7JcUT9xG7w+/p1NywPEeCzwqwd8tj0os
mjPpDjr/jJd/2wa21n5XcxK8dOXq5VlgPrUzqY/BPYs+878l7qXXY8HagB/g
M1IXWTPEJ93XTbnP+b5REWw4a+NdXbD0tKtyduDnExZjceAjw5zPH4HVP9zK
HAb3tjsfWjiX8cOXpX06xAP0efZM2NIG7FXj9sgHbPy4QjkWLHtfIimDeIju
j+/4Tikj/tFNvSyod28F52XJtQ2BHVOaCxZIMJ4ZHx5pDe47/mbIi3iUvl8c
Vbc/Dr5wKKbmCth3P1v9AVh+XwL/V/BrR32W7DzG09VFNeLBa7n7jk2Auzxf
3FwhyfhAW+lbd7DxiRve0WBR/QzuDOJxuv5Hzic/Ahfmnlj6Fixtsbz1rhTj
2NG20ERpxgrOFVlPwRVPc5s55zOOD0vfLU3MwaIcVpwdXwVW/nT8tBV4NDVU
wQe81Nf8QDfY1VC+cZMMY43f4jv3gqfcmDEaAW7cyXkinZiTRaWI/5J9AHZ7
9rm4lZiHRWmGszZ+B/P894olKMv45ee6AGWwp9XttB1ggUcpdefBbX6nHe+A
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
0n5pU+BnA/l7PIDTzytMR+Kuw/KJ1oW0emB7NW/DFeD/ainE6Q8g68vHUwkB
nygTGFPDXY/1U+LltReBuQ5+crsPTLZ/WfAtcPKi0+YDXuSjH2Y6LfmQhUJd
z38XQOZVXxu4LASe5zAx2gmsHfdpUlkY+SGPnp0p8Jf8lhlPYC5pDYcYYKvX
DcRnuBux/dZd9XMM2HeyZHm/CHKdq6inLDD5Zu6qPvDZUP7rjribsHmRIX39
DjCnQPxmHXCuQuT2KnBPhB1Nj+iOm4kEdtbxe/O4P2Dr8/jSnt1iyFnC36IF
gKdfGDOqAnt+0GG+Dvxv8CRbMTAbpTQXlziy2BE+/ghg9+rU7CfAlSfYDzXg
bsH6p/bY3EFgdRMGoXXgdkdK0SMSyCa3/orbAjsXzEn3Aod++npM/Qgy+V2u
pkFJ5BCVS7rXpZBl4vMeFwCPz/1cHAJW2heXtAYcp66gvlcameg0OCsCfDIp
KPYk7jYiIUdjr9wzYPKVzP69MshNum+5R4BvPx23KpRFrlCffsYphzz9bW4l
Ali2Uex9LnBwvlNSI+4OIqEjuthhGJjT66fyBnC5mtvYUXlkXfpfYdeAy1U3
2DUVkDk8SJ8JHkOe/MLQ+UMRuUyJ51eGErKEWVM/tTLys+v2da7A9mHKz3OA
heIZc/qB73D5pS0DT2b/SKBT2XEXkXBKVCdGEDinrOKuKnDaPNl5RgJygpAe
7ygwk8YqhaYq8v0rKXMlwLruzsM/gOluqXXvU0N2oH7WchS45T5Lkxaw8L6A
1zbA4elTFYG4e4iEW1+lg/XUkf1YgnQOnEC2WtbYNQd8tmtPdcVJZKrC5iNd
wE13AnNngG9dUeDedWrHvdg8TViK5QKu+m11Sw9YqrjXORhYkLvqzDTw/sgU
AV0N5OnTwjETp8H9dlVu+p9Btk+mS03E3Yflz6NWSuXAHe8rBzuBAy323JwD
lly14qY6izx2r+o1P+5+bD/y01uoAGtUX9k2Bd7DUhP4AbjXmZFUXgs55aNt
8BNgK4HXu1i0kVleMeUcAW42sDupBewz/XrcFlg4kDk0GPcAkRBZWPeuGnjx
6zXKJeCA+2y7O3SQ6U69pX2mi1z3jb2wGdjV3Vl7DJh/dxPxL+5BIuHT4/1R
+/WQ5dqb2vWBkzdc6MOBL59vvv8bWKiUa6+NPjJxKrk/ALj0wP6MRGDPC4+u
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
      "]]}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->False,
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  Frame->{{True, False}, {True, False}},
  FrameLabel->{
    FormBox["\"Stretching Factor\"", TraditionalForm], 
    FormBox["\"CDF\"", TraditionalForm]},
  ImageSize->Automatic,
  LabelStyle->Directive[FontSize -> 10],
  Method->{},
  PlotRange->{{0., 6.6810086}, {0., 1.}},
  PlotRangeClipping->True,
  PlotRangePadding->0]], "Output",
 CellChangeTimes->{
  3.609639093086679*^9, 3.609640632308679*^9, {3.609644457796214*^9, 
   3.609644509285597*^9}, {3.609644613264613*^9, 3.609644618484446*^9}, 
   3.609646596795245*^9, 3.6096497677302227`*^9, {3.609650924860756*^9, 
   3.6096509379553347`*^9}, 3.6096643433986483`*^9, 3.60975816872265*^9, 
   3.609758200560717*^9, 
   3.609972970485259*^9},ImageCache->GraphicsData["CompressedBitmap", "\<\
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
WQV944034NRTTyV9QVC6ovUbOhReeuklrcwOQ4YMgXPOHsDwd94+9a8RyZtv
vslSbyuSCy+4l+Ev/VXYKny5XIbVq1eb4ElXSGdqZa04iZZwrL5tdCrtuzPS
9zumofSPdJh0me6OlOzu3/+5gZVdv9sqFA0mGlR0102WXXyhGJhTo5n2LJkG
FA1pkpNe+2qXMMYPemdbbhD1CVkbHeeO3lMZp9ctr1nGIcNHBlDHmTxpDeNc
eflYyzhkiMkg13DsOCK3GgI+cOALrnBsc6h3332X5wgdSp/61qzZaRWKpiua
tujuKFl2+aVjGCY2c53NKg5NnzSN6jgP9pvNOGPCaRNOvXhptwbYNMvTbK9j
//7ZxYx90w2TTNjCg+7aOPC5YhFt7cnckRZeLuba7NXV44Mcl6lTp5r4GDni
HebjVxePNvFhOXqK/5YzYXD74xz/LecSEM+W6y1dFRtk3skLq7Fhh8SinOHy
7twpQqHH6Jx0GHxVznU+5gNvJCfx8MPr3OPkr+Q5kgep0/zyy6/gisuEqhD9
ejTrB2eVk5/wuSCULhnq0FGLyf+laUGJlMru6TODKY8bK5WrXXMbhsiqlYqK
t4u9KVeU7htxkc1m2bHXuXjm6TeYiz/+4c0OuGgYuKjmY+APi+h0Pu5Vm++N
uKAVCq1UdC7mSj+hv3eOiYtGy0mVq0UKShlIRIu+wWSh4YKLFlu06KrRt7O9
EYNgFHzxxSGu8D3BQqM1XrVSNvbIG5GkJSwtZXWS27btNczdjh37dJKNzNTm
zZth7FiRIMN91IkQeM7KGw/z9TvNwbZs2cKxUAMMy3594yTmadLE1TarTOXz
eRg9erQJ55GH44wT+P0Sizgkk23w5JNPsteBDllX+gOXRuSbUZH60v2jj0wR
E2q/WDt0Bj9B0iHbS64G+o6or3RtUfd8Z5dXKhvynHCaL+kxrBnLakNt+fK8
0Y1//rPYf/pu82o0V6pqq1YVmlVTMYjLLhllnpAs1Bk4YDrXeWLQQst1Xnpx
Ide5956ZFuvYYcL4JNehFUy1KoIWDXRQVVsw/11DEhs3Fq1Wo+AEzRVULTJ+
ldVqZHyucomVGi1I21bjWuphshS9bhVu3+O/XWCVBlXr98BoFVCwVq2Vqw0a
FFaTMXz++SHx0Let1X1l6NhapGfzHst1P/jgA7aHzvOGm+ejr1H3kh6iuc8O
Xvy16pJR9D8lFnF/CCyxXFcZ1BHDhfPSxzPdYt3ORt2ZM9Zx3Qt/OcLQ1281
qy5sORngdet225Tt3bVrv/EcX7+h4Wgq1dmoTePfeZ7orHdWbLdGvLNu/Q2Z
Pz9kabPqag47dOiQsUQ6rg5kr1tfE9Pwg3OO0ZqrYoqV5hRooXfUUUe1o0A7
EPQZFlrBFHAdoygMHjwYfD6fVQp79+6Frl27woIFC5ACXbsw/wMHDqQ7CL4w
wwjrzJs33/Y9fqYFevfuDX369LFKZvfu3dDS0gIXXXQRkqGrHc4++2w47bTT
6A4uuKCn6v0LL3RxET30Hb62wMknnwyXXnrpXy62LvrkzLETpS4zZqyzfe8v
k93BgwcNruqRoQ+uCJnMXXdMM8iQuzZixAidjNUlkEOS2bp1q4nMo48I9+D6
ayeIhwWg9PgOb5b3oVY5aXT82qZm1jMYbckvmL/JGL0qMAVq9AoXzfIKaG+p
wK51LpeFqNcJnnCSMmaYHV6DdNeYkG4Sfz75+IDBxPZt+xow0TTzJBvGxQHl
Dwb8IlcXRRfPVToWSYvOjbFovP7aCPfK0uRWkyGzlKsikpSCXk5EgqxIbK7r
FysWdL9RsaD8xheDy+uzUH9ZpDaXaEHiDSYhHXJTPlcz6qNGjTJRf+Jx4fh4
+83ugHrd5VBtDeoXa5B0qWnDzaTt5HAbK+CvvvqKKwiyDZdB+nkF4oyS3xqR
/vDDD9uRTqcLtQ2Mjw/opOstfzoe52Z47hOl4LRJoh7mq7B2DedaAhs5cmQN
DK+uK4R9evnFt2w6o18XZxA6dHKus4xD65O2OLNnZc1xHB1Hm/tFbWVFjb3Q
zE5D8qU9BxlAjnyxzYpyL0A8HACPxwMerx9i6YKKaXTEYlsin35ai4IuX5Y3
EenCSuXmtbMLfH4/eD1ORnaHM7bvN6C0fft2g5JSOBVNmTB+lcmK4U9Jv5MP
lIA22ugEgQvJpitgO/Zrknpo4Fwm9dhv5rclFfQIE6R3UwFHporUHNOE1PDh
w02kxo5JM6nr1FxVIxXxidM/Oql8PAjxfPUvIGVH76y2XavmpaNqMvTZwOGL
QUE7jgaQh4AnQOkiDWW4Y8eOdtQKhT8b1CZOWNWGWi6dhHgsColMsXb4LZeC
VEG0zSo1FS1REXQjIqCRSmXkKYmaGIvpOIgOayxGIjVs2DATKWXGUUnakqJz
PzJUJAD5Kg7sNCNVwNk+FArBl19+iaToaofRo1bK3ZDRuIw49BMq/qhGLRKC
eDoL2UwGZZjBawtkcxkI4WimIyYsQ5OV2L9/P8dAnnrqKazh9/tb+E879L0/
YHTWo48805mLW+gJ+ovvjqhTJqq36mX8xXvEp986G7/Rv/Ql+nv27ClozYi1
U/NMyKe8kbpC+y+pZJ99VjV8V1xbniwf1VM7dhiEUnxUTQzTmoYXIejy0mmd
ujp3pixTM8PduBhUVGhxSgtNnUoXPqdJCIFYGgrovBbyaU72dgRSdU2eovC0
XyxVb7l5iomCyt+otYM+xXSY9UtF6ek0qDJLHbeDIiKbDEcAF6b/Lh+dMGFC
O0KHQy6ZEqCVMhTpGI/Mty6kYjR6GtEpFj/VZ32djlrx1RqUqTtsnA2HzVmy
7IaeE8XKZfpam6Ki56rUWpOOhCGZzWOHpMDn8kEK/STylRIhPrJbrzWKyJDn
RHrBC88vMxFRWSwakWhcKnMFwr6wcWZFHn1pRET5aLf1ihpE9FQZRaQztiRC
JhlKqAQOHNyBWIbWSPWmbgX+vvQFrr5qvAmc1hY6eCvkcDLzBBJQrlb5qHK5
XDFise2R7bhmPmjk++Vyn/xYtUbLzJHgNa/lv+VD114zgestXLDJpipOnjy5
bsU25BXEdRIC13wmCJXNYwHirjuniSn4mgkGhJ4Q1BTCbuT40HfnzvKPNJS1
a9daRaEcKoWyZPFmhULbWRZQfiHLcNXLCD6UiA6h8pIsQPR7YJYMX400ICg5
qQ1Eo6MddGi/JAxG3SXDL+Qvr8/JGgbpwIEvFFe0k6hSoSQ1sVA5qumpDRoV
LncAwkEveEIp5qreWlVxQOEyiokSF4vf2KxzoDKoJAfWty2JGwck2H6V+Wgv
Tsj1mPgfWabUmCyM4kDP4TJx0HTFzidvxW4ZGAdH0+Va1EB19ONyoUL5jjpZ
lU/Rlmzj4yTiwC+9GqCCE1SIbXi60qDddo5PKpVf+/6uE+WjtFneEQ+Nti7p
jGFWrDjQwgfQ3Yihg1lP/34gy8gIBoNBvlPbOsqjQLNv0zlSWXDnyjIK+Sku
x7flsu5a3nDjY7SdGeBTVfXyTBV3zz33HPTv39/EHS4GDVdEcTdjxox23FFE
UeVMSe6ar/XtkMMVhhOHVySR6Wi3VXHndrvhuOOOI0rIHV3tcM7ZvZm7c89+
AUvO/yEXt1CSEpxxxhl8d64sO/roo1XsVjFYLyLQWSsr5Ataum99rgYNGgQ3
3HADtR25oqsdZ6MFhpq99OLsH3KxCHHSmpvuzpVl3bt3N/JzJFf1TGW9HlJl
1149nimhGZVH9cxZiw16qBEpWn4rr/YHsrcG9H/diEijP/cDjRrlwejUKJll
3759zaidI5H1KW39ut0KmZJ0FHKDmUShUOKN8g6efGKhjqJyL9t5B+fKun08
041csK+++krp/+zZs+vWbcOBQlEpnXLrSkdRWZsWUA4erO2poqOmUPTczwYo
58kyNTVTQoSCoCysFStWWIVQORW0K6VDqLTRphB2Iz9LbivrGaMWUM6XZWqD
dMrkNXWTTi1AqHxUGicKgpLbvgbEE4PEYrzPXdNNECpltSmEHZJvbtHFobxo
PfG1nYqqujt21IIcK1Lb9LrLly9vxoFTlqndtr73x4ycIj1ztimEnbM91YZj
pVJVC03atPoaKFOm1DRjzZqdOoqyUxZQyKFSWXLPD1mqUPQc3gYov5Qo/R6Y
baTNoGU7VkNRqboWUBYv3my06L10QaHoCb8WUCiZS+k7OgU6CiWyNkG5QJZ5
Zcbfre4pxhqd0k0sQ9hhTLiW0LBt2161MKYEXoqrLF682NaF7rAM/+Zyujui
TllLnTJ7nbKf1Ck7sk7Z0Q1oyAmDuR2gtZIbqdq2dWvJEPKw0ArVNtquIAkt
WbIE78RV3vNdlzplx1osO6JO2ZF1yurRtfO11Sijf1999VUKo9gGdtyTF8rW
3nfvTGPiLpc/e1Y+qgdiBjRHeWVoLZ85sSino6gASAOUiySKiqH0vC5CxmOw
fFQPo1hAUUESuaDXUVQIwwLKvn0Vwx7edMNEhaIHQhqgXCxR1FDjZcXaXc9o
KCriIVGavp5AnLOqu4ZQ1Fa+U1vEPPpwXFGjEEgbatbePLCfcw5dvjBEcA3r
DaXrEe8hieOkUQsaLNn8O424CqNI4paXr5UUv35FlGTBhUu6bLXuSkAxQWlm
atXUr+8sxYQeyzEx0XQFyz/bnPxWs3SYEjB5sVRbwSrKaEx1N/VpjbKK37Sl
XH8Rq2/yimCkk16SUU/0l8iy66Q7d8ftU22KsB44atfkxitX9YI+TxCCXje9
3auu1l0iGVWbjNIJ82sMqGhROwYa5tvS0tllvMWKDsbXZF6Xh1Y+tqds9o1o
ReiNDk/J5/WwlUn9G5/gTIW8/Lq8kM8Fvmi2ngQulY8OlIsf+qbe/lAnrCJV
7UZ5nURbfglJx6NcUaPzHsqtQR1X1PS4WAPLdJlE+WPgTYPnHdv3PamhqHiX
BZTt2/cZKDNnrFMoetSsAcrlEuX+e2PGHITu3hMaioo7NUVphfjcjQYvNJPg
hG0bJJ/XQ1jtJv4rJBvKh6fvb3zz9LoqutKAjSskG7QRTftkhHKBcwRa3qLt
cfm8Hk5qAHWlZEg/c/nQwLkqJYEWnXSIiO4e0JBV4EWV7dq1y2h0p2bUWtm5
vO8e4Q1QnuT4ce/JM0a4yDr/fHaodHg91qPKaND37NmzGUmXJEnmmlYKKvA6
f/4m4+jUz372Mz7oRZ7bA9J/o3072gbVyx5//HHo0aNHM5JXSZJztdN61D2p
1Dbj1OUJJ5zAwSGn04nwdG2B008/HX7+85/XyjpRelxLx4SuloSCzy8zCNFw
Ra/fOIpbT5x0vkcFZr6mOAXJzryZPviZxQZZGk+4GlSHyvv27WscfFUU9HCQ
KqO1AAWvmlC9Vjb0T39MGhRJbzZu+Nj2iAavojQNFP46CTVubNqAuvP2afDx
x5/aHpbP6wGfdkP4ei6wGxl3PGIGvK7XVaGaBmxcL9mgIey6spZpPHzYCttD
8nk96tMAqqfsElr3qXNxFH+ifU+cnAZoaCpu0wDtBomGOgSXXRI2GKNc1g0b
iv1lFT0K1ADtRon2+eeH4FINjcKF2HkPamgqINQA7Sa+doEPP9wLDz8016Tz
ZFGRP1s/WU+PMTWAvFlCTp+2lseooV2U7hrfyJa9rwapokUNIN2yjA5I0qEk
tDZGWuJjvvk8kdET98nn9CBUA9hbJae0Y3bNVeNNluV5XIfgiLTdq0GqiFID
yF6yjJTwd2Iv3uCUQu703oTdu/fb7pbP6YGqduOit3yIKuEqRgOzs8Elp33Z
0q3wyScH7tLwVLypAZu381XkXc2KrWe7g6ppl5zej8vKiZHV9LN81BzJaoCs
GMFG0rl+Tn6yS56vRhk/87s3OKkHtaCXhqziXA2Qlch27aKTuh+xv6wYvvWW
KayuuEqz3SKfo9iXBVilM3TAik5T4rIR7wi2lTf07sVJlY5WUwQ4k9kpR4w5
tNYAvq+UNL0kgw4y0jYx9l0rU+jCi1RyefvcNZ1zNzZt+pi6k6Zz2zUSTg+/
NaDk5Wsr7N1b4Y166sBnBy/mGG8XSY5ipaTp9A61RYs+4AFFRwNI0y/XyKkI
WwNyIjrRhSMrNHWRNzBy5Dt8/vf66yJw262vSbKHs7L2uGgUZ26Tx0BWkELQ
xAYKpYW9lc4cUiYTuwTNLsVTqUvQAHWiAYoNozAp7QRQ/idZvy++OGT7T8mZ
HhZs461X5Ytwq5VqG28dZN+0b9xjfD2cM4OIHL3Fg06B3O2ZwUFSagw26hjZ
PhIreY00gVLb6DEKHuAkRolenaixSPsFdCpefSXF2Xq41uLDv4fDnNlZvJJn
Qx6j+tKxZXo3AfXSurW76FDgxzaRhE3WbufOMjK+Z88BWwvvKtD7CkkeXTV5
qNCkSR5HQjYe4LYGoimxtdvxuwrrysYvO55OpFDaBn3no12fNGk1Zf5T67Ae
zbqtlALLcqMdYjLUnrumIxrlpthZ7WnSIoGhxXXIoUy6QqPiqivHIQAqq40O
lY3EGWkU33Xiaxe4+abJZAJ4fr74wlF4P4m75v77YuiF4tIKa5P8yalQX1w2
4eqR9k1a2HjecvMUYguFgmXfol7GH0aNXMkpc/jFO3H97W/mwwN9Z0HwheW2
H5E9PsysY7w/7+BXeUunq0ujFzfaahGIED/djTWtVDoI23AiJr1fkfqQXxix
cuV2WpWyTsybt5EzHSZGVnWicYMwL7/0FvHOGYud+dqVBz0ZQ/UlwdPcfuUV
Y1lTb3FPQSZxnGL9X6PU6Dxlz+si2CUk8xZWbpIodortCeqVdo01XuRuU//p
QQfvleTP5c2rd/AKyfrVy+2qd/AyPr36N4yxjnIupMEjEioVQgevN6uPUIFs
Iqzeoa52vNu8M4prytd82g77X8SvmZ8=\
\>"]]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Correlation plots", "Subsubsection",
 CellChangeTimes->{{3.609644801281474*^9, 3.609644803015127*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"highFraction\[Kappa]Observed", "=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"0.0604813", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"1", "-", 
           RowBox[{"1", "/", 
            SqrtBox["17"]}]}], ",", 
          RowBox[{"1", "+", 
           RowBox[{"1", "/", 
            SqrtBox["17"]}]}]}], "}"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"0.665059", ",", "3.31859"}], "}"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"0.124288", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"1", "-", 
           RowBox[{"1", "/", 
            SqrtBox["26"]}]}], ",", 
          RowBox[{"1", "+", 
           RowBox[{"1", "/", 
            SqrtBox["26"]}]}]}], "}"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"0.42816", ",", "1.60589"}], "}"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"0.141906", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"1", "-", 
           RowBox[{"1", "/", 
            SqrtBox["51.1454"]}]}], ",", 
          RowBox[{"1", "+", 
           RowBox[{"1", "/", 
            SqrtBox["51.1454"]}]}]}], "}"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"0.363328", ",", "0.893781"}], "}"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"0.0572066", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"1", "-", 
           RowBox[{"1", "/", 
            SqrtBox["27"]}]}], ",", 
          RowBox[{"1", "+", 
           RowBox[{"1", "/", 
            SqrtBox["27"]}]}]}], "}"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"1.98748", ",", "6.62006"}], "}"}]}], "}"}]}], 
    "\[IndentingNewLine]", "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.6096451014355288`*^9, 3.6096451374568987`*^9}, {
  3.609645222026988*^9, 3.609645227887209*^9}, {3.609645393051215*^9, 
  3.609645428989118*^9}, {3.609645463432189*^9, 3.609645477467903*^9}, {
  3.609645609781362*^9, 3.609645642394065*^9}, {3.609645674156782*^9, 
  3.609645706993593*^9}, {3.6096458067672873`*^9, 3.6096458371022587`*^9}, {
  3.6100006551482983`*^9, 3.610000671716674*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ratio\[Kappa]ListPlot", "[", 
  RowBox[{
   RowBox[{"sample4096", "\[LeftDoubleBracket]", 
    RowBox[{"All", ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "4", ",", 
       RowBox[{"-", "1"}]}], "}"}]}], "\[RightDoubleBracket]"}], ",", 
   "highFraction\[Kappa]Observed", ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"All", ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"0.95", 
         RowBox[{"Min", "[", 
          RowBox[{
           RowBox[{"Min", "@", 
            RowBox[{"highFraction\[Kappa]Observed", "\[LeftDoubleBracket]", 
             RowBox[{"All", ",", "2", ",", "1"}], "\[RightDoubleBracket]"}]}],
            ",", 
           RowBox[{"Min", "@", 
            RowBox[{"sample4096", "\[LeftDoubleBracket]", 
             RowBox[{"All", ",", "6"}], "\[RightDoubleBracket]"}]}]}], 
          "]"}]}], ",", 
        RowBox[{"1.05", 
         RowBox[{"Max", "[", 
          RowBox[{
           RowBox[{"Max", "@", 
            RowBox[{"highFraction\[Kappa]Observed", "\[LeftDoubleBracket]", 
             RowBox[{"All", ",", "2", ",", "2"}], "\[RightDoubleBracket]"}]}],
            ",", 
           RowBox[{"Max", "@", 
            RowBox[{"sample4096", "\[LeftDoubleBracket]", 
             RowBox[{"All", ",", "6"}], "\[RightDoubleBracket]"}]}]}], 
          "]"}]}]}], "}"}]}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6096650972532883`*^9, 3.609665121188483*^9}, {
  3.609665203832144*^9, 3.609665219118981*^9}, {3.609758233235594*^9, 
  3.609758267152817*^9}, {3.609972985348139*^9, 3.609972985476069*^9}, {
  3.609997080802047*^9, 3.60999718294445*^9}, {3.609997492052512*^9, 
  3.6099974988324137`*^9}, {3.60999762567321*^9, 3.60999764980855*^9}, {
  3.609998312612007*^9, 3.609998373699478*^9}, {3.609998417739347*^9, 
  3.609998428640561*^9}, {3.609998740747856*^9, 3.609998744360976*^9}, {
  3.609998779712817*^9, 3.609998782993621*^9}, {3.609998864461544*^9, 
  3.609998889124649*^9}, {3.609998926692957*^9, 3.609998992852491*^9}, {
  3.609999065492115*^9, 3.609999072633073*^9}, {3.609999106131126*^9, 
  3.6099992564416437`*^9}, {3.609999461538074*^9, 3.6099994623562098`*^9}, {
  3.609999503850231*^9, 3.609999569720736*^9}}],

Cell[BoxData[
 GraphicsBox[{{{{}, 
     {Hue[0.67, 0.6, 0.6], PointBox[CompressedData["
1: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
oi1g8ypjB535ZnhvuTwFqmfv3PXA1PgwXXps37sa+DhqSP1Zh4DPSV3oFQgo
hU9UR+5+OEnA74dSpLsZ/oHUhQTTkT8rqJzHcTtMNwB9Hc1jsKjbQJ59JXFs
Qj/gRm3fi3PhG8jvoVOJbkgUWiq/E9S/RcKOvqTMxtoWiOym+fSDRMQusTfQ
cbNseJlSoEw/T4PL7BJuRoc2wK7D4k9qAqjx6KfzXDYPa6HBCY+b1xHwjlth
sfpgOdyWHLJKY2HA4zznonh9e8FMiefaszYSrpOH00MfWiDngtBPblsaTB5l
809grofnEe/mdlcuoaDVEksTrTzEeTBuckmGBXvKF87yZA2B9RslOYIGFfao
su1hD8uFj+MKJhm8i2jHqPvEiZZk9Neb4VwSPxVWlhP+oriaC7bdkTYazWz4
Ja/sMoyOwp6nIf4XPxLxc+OWT8N2pRAskiVQS7nf9rCK+nejfGgUv/oi9v46
Snkkg6cS/gCDMMendR4afCaw5VlAXB1E/j7Fl2BMmUfF1bycLf3wo+e95vUa
KpxS6CsU0IRBeb7dRmeEAf/8rXCVT6YfrG1vYeUnNNiC0bjkSlwDFIc1r2Pt
JbQ4mmmxcSIVrd9OZj+wOYsatE4lpbkUI7P/kl6L9HFgQ52CMYOXk7A4E2QK
Ymy4mcGd8XrrGPi4vPs6NEXCdkoC/k99W+BfiZN93sQcap2oWNdDlP4/Lv2u
N4ITO9Sr8+p+noHmSPfQm30MuPlV9jrb6W44Gf9MyYiSD2dcj8nyr7fDvIeN
VhTPMlKZrzfKr/qFQrpRCkPxFgo73diLcjPhkTeNkxo/Pd5nzq37wbIbDDfG
fn4W2kb2dlQmF86HgLyacc+fmjU0wTHntcj0AfmnOAi3c1P8/Zcc86/QRuAX
PnFOf2oLGagHlXla50CB39WK7YPLKCtix7Du4R8kn9TO4y5Dh3cJGfzn9Z3i
P7dV3B6yU+Mo6z0dEek1oFs9sJG4OYf+zTpyin7NR/yZNQv7x5hxQfRjUujL
QbidOPuKLmUNeduuxYiYf0Ib9dzvR/ZvIl5pYhW7ZwS4L93LGL5Iwjz3I4d1
kpuBRYHDN3hxHN2+ukfo30wpYuIa6Hl5ZAO5xjdn+30NgSPRntcyuWgxn3mV
PVqrhQem756rDWygYbUnroSPaRBw9e217RE6vFs0+mf4u1Z4ucyheomKBed/
4FuQHB4G1cJpNrnldWSufgHbED8DR9qvltdztJg5gpE7zLkZvmhq71iXkfG1
oxv65fTdwOrkFQf3WbDBztt9T7hG4KeEZ9bMzgLyYhU12vPxHxq4vR//c1tC
1wYuCdfb/EXbX379+J6wjhis2l+HrP+B51GTR3zYFtEhjurw+yoFiF9Fov/O
eToc8UCoJU6iHY7F/HY8e5oat/0IL/OvqYVzWbvPLmRtIBbHjuPu3bGg5HAh
s+DdNspkYmSvasawR0+W06N1Dk3PP5/vT8xH2cm5NbuSlhCdkqfcP9q/SO19
Movs2R304MwB+UZSKoT58xqQGxjxtKYkLlMbAPHRjOBd3nT45499+fPPOuDL
PV//hSQC7n+7TZy2zwaDx1TT/X+J+FyenKGXZz68+MDlJSLEhhPV3txrKxqB
o1yGx+mlKT7sHHnIvb0N8B45+UcpZPzIdv8y45Mu0BK4ty/s7zaKSvWG+txA
kCr0WRewo8JX9b51fgsvAvWndphxYhNdenLYRMs6DuJ9GVomHWlwfMWJQO9X
9UBb+nDf09s0eNPx5DGbtFqwETv6ZGFuBqV0VtAf0ihCGW7ML4lfabF6b9Hw
MdUmuGhaQSuvSot/8iQLKsg3QF/XTutt8VV02rLAdyz9N7IqLdqvIUuH2dkG
T0teaYezt8q/fOrcRCQWYlwK/19Iq6XTZ7Kgwt2X5dS6TmGIKNPg+i5AwETW
0/dL9Eth769jHuEG64jvZoZQ3u8P0CVq8DLxOiNOSH7/9ZdAFwRW1IjzPaL4
yZ9/l+6Eh0MgUf/PMsWPHb1F80X0iuBhMKdM1S4CvtL68SL9cj54vV/8ku9K
xMIzTW0pv0pg/jJ98Daln9KlCtOYz9QC76HcyzN0jLhyJNkhKacPeH4wOIxv
02OReZ4XRRx9kEy4SHgzzo53GStfq+ScBLGbiydFjEmYujBq8rlkC7xhajF8
07aMFnhTrlU1pKC3dQ+dj8oz4ehTPFQ3dAZhML3wDamBgFv40osOS5ZAaKC/
qZU8HeaQFc9pF22DlSFNU506dqzhufFoXHMM2gJ3jSVas2JRPdPl1PpBID3s
H2mMpcJ3r9s9nGvKhwVu/d9GlPPq1vqrF19RDznVH/xT3bbRptSBnJvxuUBn
uKvomPYmUj428Vu7KQmOdhSS/6nPo7g9R74/zS1Ari72BrL660i3gWaY+XYU
aFdpTZ6jIuK8xMRPn40r4JlqV9Rfl1nE7c8jdPtDCfr46TUxyoaIZehCIvUP
lcBHwnDnZ092PJ3oN0E+OwETvb+sg2q30BfjdHK2xhfIURgtUTjIgdmmbqzU
0EzAtcDnesEDa2idfH9t53AsbPa/ENIwo8OqRee3V/xa4TOHJ4P0KBnrCYm/
4v/bBcmV200uClR4297+UvLOD7ijcSN87BcLHqGeeH/RrA8i3kQY/j5Gg68n
+1w511gPvOv+k8vly8irQ16H7WIUur6m0a9xYw0d5BO9pnUxB20fHTxpc48e
S+RFJrG5dMO5u1farHQp/MTtHpt5oAP+TYk+0XzDhgsCR1uvjY0D4fgB+d08
ZLxomqVTld0BB2ZfZ1i/osPh5hF8XX9awZ9+92cdSv1/W32zf12WUv+JIXVR
DOxYyuBMCq4Zg0JjSR3jyHlUwCV9efBcAVIJ1E2+nr2KOkz2+fq6RKOLNB8C
Q3p3UOUPtfzbTfFQvtP9DimvoCfh1NuJ1cnoWOjA7DTrHPoeV+M/fr8ALZ1g
uuloTIVtRLV6XiYj0P60l6FfeAfV1l/vj2PB0FqwzU5vwIY/r08POl0fgpKe
auNobiJeCJ8dcUZ5kMs2+ydtiQZ7Fm209rY0wgHj/9zGXNlwq4rQ+zW6cciq
/nOnYTcL3n2L4fLS+DCEc+VvHareQlWhZHEOlAN2Slx3HKnnUYTYyytzxSWI
g4evbaGGEWtxiYW9xgNwN2GFJmd0E5127XB+S+FT2eVT3y9oU3j0ogprtUAR
aNwX1C48TYtjDOhsREn10H5T7Uio2Apy4s6+eP4AQqJRs17Vr9fQths674f/
ohlXtY14TUp+/FniePSvDRL0EuYW86hwWJ5wUn1zEVAxdQvp/NpGF021Qko6
XIDhQOqu94e2UMtZZ3tB+1/QwEYfT2/KgjkCGbz6E0bgY/rBxif0VHhseGi9
uyYF+I5M8d78QMJy9r4eclONkCDlzTN1nHKedeq7rlk0gQKJjcNlkArnndpb
uVWWAo/v/fl0TXUDNWxGMEnqfEG3C6S+Pq2lxhOnowJueVWCHOsxiWbpDaQ5
E31IbCgJykdnEuhfk/HsqFxlZEMb3Bmn7xopYMNrQaqftO0m4Jjiq6dkPgYc
93iNBbj74GyO65Hfl+jwI5buLyFGLeC+8jVcwJwBH2Dw9sxU6YMD9BESYmYE
fCJcpBS5l8HC1KGK8DkqvC6pfiekLB3cPFeVSxTXUeHnX/uEWmLh+iGz+vYw
Ar7YPzdQsysLuDqzkwobZtEQT81FMbV/SCz8ID/KpMY3xnqfEKvqoOeKf6iD
HD1WqgqiCRLphaIwI7LHLwI2jkgTyniVDF+F6mY6by4jzlbZZD+7vyjvAb8Y
X+86OnB0LJR29iuk7sTfi6hmxW5/1w/ZvB2D9dOEeu5aOpyZnnUm9FEnjHpG
0FySIGHjw0+mHE61QvJkvcbR0VUUeD84/Wv1D/R1U9E96c4aMnh1XqaqwQt4
nZ16VIKp8MMrQbY8bhiqi2+8GhxnxLPt9NFNGd2gMyC8J89yFancYP1v7z5v
1LcWzjRJ4c3Y9qTci3PJoHx+H2tZ2xaaH0uj1T2eA2fpD5lVKi2hly9Pdhef
/Yd8HaWjzcrJOOPRXr6vL7rB4F4d51sdOhz1zV+cwaoFdHpl+R1JZKwk4vUz
06QDyGGv4z23WXBSvdhRrRej8OFsp2SwORGv8LE0OKpVgNM15S66mRUk+/Sj
m25tHPI9mX12DjixieaDlinjEeBNieLQGZtH4tqp/0nzZ6PUzV+f3YZXUEix
H9ffulz0cfplJH0Hxe8Uj15SS04Gg8bIijNnaDGEsIXl1zRAuUFtm7UnI24U
DPe/f3QAAnKdLz39Q8K9T0+8W/vQCjKnL8zYXabHsR8YS0LoeoHPf4B2K34G
PSnU0ZnyKUENL1d+FlrQYt6UGG51o0Y4pJUSHTxLwPQ+mS/j75RCBXn45pr5
GlJ5MfzBO+INMhXYGqWRmUcjz0mTnfZF6MUUkUZhk4QfcquPBwS2gcQjXdEU
PQK+lRpZwnu1BNQVcs57+lHja7qHE27pVkDOLX/q/fJbqI6Fj6ZO9w98u+kq
a3CbhAu2PUbWjzcBrUiri+nXLXRaK+pJ24t4SIzjssSOS2j3CUK6tlcKSvp+
u9Muehtp1230XqHzB+WUvT95p6hwkxWfkEVeETz7M/3kktY2+lohduRhvhns
LRHRDiheRvdbi2RpuSLRhpKQv2DpIqIbXel4V5OJNMhS/JevcOGCo25Tvgzj
sGEq2OK3TOEJ/ZGMv679YO98qmqVi4i1RHsBhZZD165nIufj6DHx3U9pUade
aNWR7isRJODS4NvLsmezQWLP2vrX/C30OKvpzb04f3jAU0mWFWDDnSsqinzn
xsBOIVxehVKPOzpWDw4fTgMzvxMPOgLpseR2oNsV914wjLgX1b7MhqNWWq5L
vpqAx03rpN+nNtDYFTLPr6+Z6MD97rI9R+nwRCnx6u7ABuhO8b60dXgOaSt8
dnXyQqi1+8f45AYlHz9OPsp72A6rJXI9bC6byIy7q6L5WBLEpll7vImh8M5U
3gLN+VJ44nA0dFcBAe8vEi5vnMqBPWOuM+QuOnz/utM54r52KAxR2AoPo8KS
d2doyvwy4Wjc5Q2SOBH7aiRshorkwOie8Iie2v+w2ve7grt+L8DUbt5/1FdW
0Nm5Yd9VYTdU4PdLwHhrAQXbar57/CoZLVc1b4r/oMfW6naFRx06oCKAcVaG
8j7ato/V5O/Oh+rbzrbXftHh736W4Y032iBMoVxtfWMVncMHfDL3eUJc6jda
7xwanPdkpWBvVAOIOyk+zntOhRXYnrqeGMCwuu/JLp1FGky3sVRa87kB6OqV
Uq9s0WKxpG+x9zqbIZ1e0P1gzDpi6pWTesEfC78EOfidD5Kwf/yI/dWaRlj+
FP5F1Z+EBeuo8lsLWqGl3eHZwRdraP81qlNe/6WgdP/800y1THh2UNkkgmoQ
PPyW/ybUrqN46uTZkyl2IPK+lKnAgQn7LlclORYOwsBkWq1D5TpKenA8JrTR
GaVnbp6prKLHxUYO/XpqveB2N8hOtIuAh/0GVp2nyuDV1Wu7jpgtoxZP72+r
vfloX2lYM5cICRsIcs0EzTXCR6GTLC98qPFDngnteKFq+G9+w1nmGxXmru0d
5jUoAKaCrJYvNPRY6HSrO7tRDwzRcDuflafGDyLkusLf18KgVuRF4cEtdK0z
xjoAJYGLzN180SYC5rLSXVKsKYEuFeHMwA0a/P3pNwPZjEYwdb7cPOW6iByK
u9l2JeWg33OWhv5jNLhqJye6PaMONmInhxJmGfEjEcko66EBKExY2H5DNY9U
hCtWTThLEG/UGUtJPxKONdJIm7VoASo/jrEnlpvonvoC/0dxL0jLCf69tEzC
54Pdk3iu1oIgqZjV25sGf1QVMvjbWgVp+9as/AdXEPM8q6h0TQC65Kxhs//6
NtL5uZDXvDsVVFinOc2FV5DrtamDgm35KLHI6MlhQwKuYWpfFZNOgBRXDQ60
sog6e4I96IUKUPOaYIdzAz124bbmfdjQC4f3fHEmPJ5F8z0JJ84GFCIFfbFP
saHLiIYq4Oe5yWSkieZ8+w7T4QQbUXYT3XY4En9x5YAaEedqS595wFQOmuWO
fJ8+LKEvHzzYDbvS0L/1GTfPNDZ8fuwYc/3eMShTXi7ztVlADB0W4V8TKL55
eSGFO5UJN9KPpUQ2D4CSeZGqPWX9gL5zh4UsEdK6pRntWsqCS4e5ep8nDcD0
Ub98kcUtlCzZv7Z0OQWiX6R+fn+AGp8XunIn2bkGDHtkWH+8YcS8Hx0ljB4M
AJtTr9p5ziVUMjn3LawgHjUPWgupvNiNHd2M6Zo9lkFRUiLSZo2Mnw0F53kr
9IAOcr1R7cSAG9rNd0x8+yDHQjn+CoUnRM26c8teF8NUNVOvIcUHA0y2Grhi
66GOw9vOYGQVhetu/dLStkTUaWNXF57NIULBof8IYhgdGuYy0NdbQQOEKk8y
bSby4HZKmSdQYW/rdxshU/mgxXPy+k/rReRyL+SUlXEOMnQ7snaIlgrLdmXP
GXzMh1dDE4W785hx4Og2v1nwMBjv9TbTcdhE+pz6EeyaYXCIeFn17jIRn4ED
RSdxEcwwHe62nyXilJx3IkeHq0BD9IFQfgE1rnV781PpUyW8o5toflFIxKwd
VCP57BVwr9JvqERvDa1KtPkpRSahEsY7QzmPV9FLCSW9mwsBsDlXLvOOch0r
c9863vE38vZuvHpCYAtlZuvR8Kz/Rbf5F1qR5Cw6vPftkLJkKeJfNRDHXBtI
8bBhoNzrWKTL0f2alpoa7xdL56wJKoHun7tpTzVuIKccpoNdS0GwGJOd+vrL
GkrOqgym5fuG3o7rRq+KUeG01JSy48x5sFfpxtot9w10RVmmorIsEdyuxgXk
dRLx8wSUqKdYBsvO1UX2iWvIJsSMqUDXFZndGglLP76CKljZLui2vUfxhX7W
xXHLaPsFI4v2l0SkquqbvvfGLBoe3KS/LlCEGtPcmIzUGPFdxsntnxd7wDyI
+8ctYRp8yeWoGadSHbSOiztVlFD8i2dJHQra4CTJrS3Ekgv3+SxZfYqcg1M6
7+qibHdQaUC68iqm5LVkxrFPn2nwtMWTqByWRvBW77IiXSXgXps109ebpaDf
qt82KEnAls55Xx6fTwcRA5qy9F3MePvakb/xVEOwqLsvkV6TgGXZbqhO1KTB
ofOpM7p2a8iT4ErH98IM0W69SicoLyHjLmUOhTs56IVmZP+43QrSzVSODmP9
i37UVcy0B5BxtEKg/mRNJ4RKDNQe1Sbhhap5GsHcZlhUW/JjlaTwUNhjqSOs
zRD/JxiCpmiw7QFCiv9aPQiOvGC+f2oLrXGWCTyUD4TlF5fKVeNZMcdJI/HJ
O6PATHy7VLRnGQkz8NjcV81Cc52X03wvTyAF6mTl5/fKURdtYTfhARGr9LcX
NiYWQFvwSU/LI2RsJvbgiExwJ5yg/bbKukmFbUebuMJt/sGEhtSXM7br6GKi
vu43vnCwyvZNcKHku6/+XqODjnUg/aymIS92FY0MZ7drSASgy7U/9DyiyTjv
/KjesdOdwOmS33Ffg4zrJmj7Wk0bgdwbd6RcYBPteWC7U2oXC8P+7TpNR0m4
IuJ7/nh0CySUSH2vy2TDbsNJ3GIcA0C4Xbqq+X0VHVZ5GFJjgVHk5RtG3WQi
DmO3IzI8LgCN22oWYrls+OfD4/+eUHiFUYZjo0mEGosPL9hcC6oF8Rw2K7uv
9Lhor5j8OacecGNMyzn5lxn77io8mE8ahEThvXsvFdPhN5ZcIyevdILwhxPi
bguMuP7llGul3gB8br131ObPAmK2Ec49kJ2PxHX4egYJq+jFsv2HuXkb0OKs
P2XOz4HDVK243DmmoEZ0+NWT6/R4Q2Op/mtCDyhP0f9VZ11Cktv6G3YH89D7
ehOllBe0+Mz7LveK+SYIkI603Dg9jwzsaZYtruYhhURydsNrWnxwVoSB4FEP
HQc431oIcOAr5o+vidSOwZkJERPVKBKOaXRFs6vNgFrrhEpy51GJj0A6UilA
gpv92oVvqLGNCHnNi7MKzHg0PrzwZsJeLqf6+28Pgu7N29XFjgT8J6SC//nv
PLhnMdlmnsuEk/+xV9Vd6IeM8gucx18y4Gi2hRvvrPugYmrKU0CXGt9N8Dqj
SqiG050Pv9Jv0uHaMfeAg/SdsP2aYQ/dK2YszHnr1VnyEEC6WfmnYRLmL81p
hJU2WBmVt7UMJ+BYx/Fws+dlED3Yy5zxlAZHGErm7CQ2wCfh4ouVtavIes6d
fKTgC/pw83uAieU8Mt38viOsnIfcB4/zL1Jvo6e/h99VU/+FK5uOZt+VF5DS
b0ZbY61s9NRo38Z60TpaXhOmfv7BGQ4nVli87qLGhtepOtSHymFThzpaXZDi
/09LXrlVx1P45WvMmyts2IvPLb3v8jh0R+rz16kzYTE7VjP1Xb0w4ndJw7OG
EV+U1BSSs+sHzqJt+25jAtZ6tR7LnZEF4x/vhlKprCNLL+2lfcgZWQ9nX3hF
qX+r6c+x60ve6Hy5oKbKZSqMf2VHP8wqBIGverEBZmQc7vk57d1KByw/PGpx
g5KXGfRmN51eJULXyUWVZdptdMnd6ZzDeDJ0bH8LdYxfRQoyisK7YzzBw3sn
jCVrAd3LmpeOXvuL8nerx0yXrKDCb7n1L7xT0IR2+KfHdBuIuWnFVP9WCNTY
LqIzJ7YR2bPzy3ZvAmxVy3x6IsKEF5prqEzvDYAUkbf2Dh0Z7/v4WL7Ipx38
bEzkHwvPIb+EyMf1Rfno4ju7tfBHtNhbmtHVAzUBtWUo77MhWpyyTH6xktME
JDVVc9dyAn76bsb/siAGs3DEuvcRA35MJktYWPSBgVFOk8HCIjJ6u5G++jMV
XWC5unu6mB6b/hej2KjeDT4pX1h/2m4i4dv99Tc1vgCuW9T/6TWPSndSabZp
C9G5qWa66XU6zHpV5cliWAv8uZz9LOYlATN7LD2IGMaQ7XIsP8ZhBy0Z0Ttk
fcHw+KNfa/RNGsyz9jZ+0aMGyCoewgVrBHy520XuWVshMP9Q7CxaXkE5tBYK
8ZeyUNYLJVctjTU0IxwgeXzlD4rir4Bh521EUNB+0k/Mhm9TK7NzAVuo9f2t
6/SH0+HoJTLr2Rs76NMdM4LFxVAQO69j8GV9HV0pr3x+oCMc7hG/l3kIE3CC
YkXe29gUSDOL//hPcRORySO7s/d6wvPrDNQZH8n4iz1LNY11FwT9uTd7cZKE
i1Ttwp2vt8LogL7pbW527Glj6xReMQHTV3w+uRnQY+5po33Pv/bAD5pPaKaM
hF/p7GtebGuGH3taaHhCFpBNvb7w4r4CdEHO2TpDloClCmNO8MeUwN9d7X/+
ye0g2cOZHf+x5oOJzOq8YTcN1ibYbBxDtTA+yCxhSEvGPsi1iKG9A4TfLXk5
FpHw22KVgNzwZqhOGWDNkt9GxwaTtAPiI0FHXl/Rp5QOv2RFFn8YWuE6m2LF
2e8E/B/R9b8Te0ugR43XJMaKHZ/RPiuYyzoJ4dH5iNN1G0kcb7L0zbFErEE+
Z8xPUmGan1W5Ay75cPt0pIqjEhV+Vsv/9I12IXCHqL5TWVtHdf+Zvq778gMZ
SJ0q56PkA2eg6XOGxQqwrUH+OdULyFy/YX1yLRn5OKzarDnQ4lCqKimSaiOM
idrLJjdso8+sTqZ60r/hT4brJqmSHtMf2ussptYDvka7auoNxlCVtjOjXX0p
srV6IaJRS+Gra9xabPMVEGUu+u+lCzXm2fvE3dyzFs6u9Q69kyBSnp+yS5Sh
DDx1N9WPS9Hims6jXDxODSDH2i7hskGNxd77iSiv1oK+1ntv0R+b6FjL0J8T
N//AYeYwjvOtNPg8Azq/YV4LWod6ggus1tFZo4PUJn9eonNP/IdyuJjxTk3F
vmMPhoBXf6/y/OktRMPpa7RD8et18QvCWpx02PTqnnBtlXYw8PeQVGxcRo9W
LN3NXXPRg4/y5WsUvi1J3ceqfaYBJK4VM3zTp8JV19TK/ZQxZAQZR1/cS8Dq
N05nu7gUwe6I0kT9TBJ2lq54/yukBUKE1m5msm2gC7rrn111/8DPEZd9RkXb
qH/nZ1q0fSTcp02gzWpdRVxYGmUPRyB98t18dk+K/x0+9G9isxtMy+TM5enp
MMmMj/Gabgv8ZkwbSB+hxfShqgk3DVrgqZL2tMxfepxz3L5puLsBQiMTmcqz
NlGW3rdsKYNwqPQcep+cSIMfnDr+2KO+HlaVx+fTQzbQyH57d/2bsbDwmlHr
5D02bPZQsLPnwjA4p/8aCDZdQU2Gcb9+m/5CZUvgUL9KhS8txgnqS5dAlYaU
m1XuJko6LcPISYpFLhmB648CV9DEJf8zFmaeKIW6ZHCYsp/To0mCUSLN4Oyn
XHx6agdF9yVblv/KhM5kFZrdv/7DWmGxd9ZvL4C9+ErcaC0Zt+VGdN3a1Q0Z
TREsI0LrSPSFy/AXezdglVO546JD4TkFxobv5e9RoofErffFO+hnvHZ91bUY
kP/Twkt8t4KKb2o3SfLFoGhj8XYzJUY8oCJweM/hfvDN3JXJ4kODFfWU+L2v
18OGQnFbWcIyutm5mseomYdeuRH5b1StIbWdfyYRdxLRnP0J39NfqHH1QaGV
xIfloKw6zaFPZMN2b8vkaJ+OwREJh7W3+7fQKY11/7NvM6Est8B49uwq+te0
SvtozB4WROSFaIjz6Cq155eIwkKUTzQwkPNjxMEo4VOs+ADkFxCrZKVWEbGY
4cW4WCbK/jHMNTrIiFd+fwuoqhqAfyoXDCrrqLH15vaPi2/q4MozRL54kISp
X+8vEvrSDCn+vxa084lYYCuIha22FNgW7jNKn1xDcten1C2qAyDcT/q6UjAV
tlM8yZtlnQ2srpo2nxcWkDjBGDo/FqJ39NT/5d6lzBevmtz6/Y2QR+XynP8F
Ceu8r+QMiWiBSloDU5/fVNjHWNxClCsNHkzd7BSbo8PZ7uws47ltIFxzwI2t
jYC5jJlYs3A6yCcfo9WjnH+eXPgtxYE36JHIiXxUtIo85BUYAgpy0U0JtVUj
Pxqsc27qQs9wA8isXpXsyifhmUfC40SOVhhv3Ev1Q4UGD7zjDbCWroNp5vnQ
DaFN5CsuqzShkAzMR/gtOg0IeEngcNsv3jJQufZCoUWWCTctKo+oBPeByGB0
bGsIPf4kPRQv8K0XLBfUno1asOGYlz4/z9dReIND8JbduW1k9GmJl7o3G34R
JKwMJjbRs7LWwaauFJgU9To4bcKK9734feT051H4wRc1oHN3B/F6ArMWZAEH
ZuLqDCFgZ81QV9KDDLg1conmGv8a+j7XTnCw/wZw5K2siB4Rzz6VimH+VAV9
zA//aC3R49LBGlbiWC+USXxX/fGcsv9VPq/v74tBkNQs4W6+iF7n/+vGuRgR
/R9HlumScdixSq+HqANc+z7vYkgeR1+WXqnVhpUiqu4HolJJ0xQPPXftSl8x
MpZOCxGxosJcJ8+RFk9nwl7rPMcVVna8Rb+rx/7OOGQRDohtF7Bgq9mFCEmJ
UfjFJ3lqUWkZndyy24oIovC07t0TxOF1dBuL1U9lxcCtaItmbtd19JFv84wY
yQK4JFZzsijXchfMwniUHsG+/9Y0TnmvI8mq8bhKnSfov7WLW39tSXjLktMu
NLMJNJYr99+QWEW1Sz3uJf8iUbGa6LzTNi22etnEdYK+CcJ5HmcNrzBin5BP
jR9Dm+Hdsd5rcwRKPx6U3PPYpw6ELblJO4xErGh67rmbbwHULJp+f/6WEavd
/vtSfasPBAYsRdX0FpCD7I8CF44sVLhpv81YvIbIb82ctZrT0G69O3KGUWso
yETgaVOlCuqNHcr5nE2FHbissHJZIYA/+QDpBAP+Fu04tce4D5TkXgzYcG2h
zy9PDQ99SIW0Eve/PQ930IZ5xzM9wW/wWpHzR70nCX+45p1BFGoBLznHm6Es
K0gjj6W0SiELlV3RSOjw3UTBDmVUqtOJ8Dn/dK5cPzX2Ef4omaxRD0/qw6aO
5i0gL+HXscO1acij3M8cCNsoaqfJxXp3AEShh7uGbQj4TGTxM+cLpRCwEJ40
qbWDgqYtf2iif3CC5Ufl5Qv0+KD07cAtuR54NvSs7wMbEb/lWzy71V8BPqIs
kXH5cyho4s67lxvFKFjZbSWFZwUVfC1n3TOYiFSYnjbvekSPnwNh92ezXvga
LvivsmEN3b7fvPgkJAPNhJt+b1SnxjrL7Ku/+SvhtVEwcj6/gWYnspU/NH5A
u5vzfffOEvClbv04B588+H1hf/vkFhlLqAz91Mxsh5CVWENTCzKmtjlycO/9
TkiBA1k+GxRebLO+szxQBuKhkUGmvVQ4+a555l8Kjz9IDFt7Zr2DjoTGcGSP
pgD7nveqEQvraJPTlI/9Riy4HY1OYgomY6OJeB+Ls01Q2sA6uqeJFt/uiQy8
cLoFmqWx6fgLesze6SV+lMJnkef/eHK+J+KeT29izhaXw27zcn/Fm5voCl3F
/dZHXugy6WkzBK0hnv63vRV3kpD12QnTVktanCVzva6ltR4k0w4rVfpPI8e3
RN4xIqW/lN/fazKixVt0Y9nCzpS8FZdilG9ZQeS5z+283NGokXo+weHKPGqy
j49PFcxDVGtcheHyy+h+pKH8xuo/xHQ0MNxQexu5k8+OsFB8pXnmyn6yFxGr
q49G6BsUwUPJXhdnTXr88jX3/ke6PTCashQh/JSMp27tTXHc0wW/7/drEG9S
4YsMHvK5/n9hrTdq6u/lNWSTTyPq+8gNCOO1TvR6iyjk8SlNM+9/aOzjPc/G
1Xl0b1cQ3+2JVJQqHWiLETVmSxumb9Qpg+4vK1tppzaR+SMPLbv3uuhhFX1s
A9qh+Il/7VXVn5C/7vmeP5IKb7x7+NKfcj4PDU0uPbOnwt5B9kv76fLhaIUe
WZKXiH88ZDjJcrAA2Obj9u2zXEB3h+aa7l/PRpi2RT9fdw6d1L8aF2SQi9gG
OhQ3QjfR6+qW0qf7LeElw38F+BQRfwsLOXFQvQScPW5eTOGbRcU9DO3UtwrR
YY2gz2bSqyhNyfnqc1Z7dPJvZS2Jwit/Xz0evcGfCS/PlTylfzyOVKmuW973
qUBid/RezeeRMGtpmrxpTDP4Zf62Fb6xhOw/3tiOYk5Eaxfnqz9EzSP1HVuX
/RSfb5VUDN+/lxq7k53yM9xKQUnKet68dAMlcHy/EPM2Cq6PC2Qd/7yGfvJ0
fLy1FIUWQOXoif+IeBf7BMcxjSKIkXey6NQnYJcr+ziZ07PghS5d7OuVHaRi
Pl/ySDkCKpUslxJS1lGwZ9vw2t4olB6iF5rMTMQVCd5ePwsL4Ne3oKrjfVSY
P0e9+ugxDJ0MvgLGT+hx/tU2vsXJHrCh1zrZcHUF7W9tWfcbiEFkt2se6xnr
aFLoSOhGcxKIxZ8O7c+mxpu9V3xSu+tA45/No7rdi8hG+tcbBssCVH4OG/9J
X0fHdv9eYGpMRwwL13N6zKlx5gv973fbKmA9Z+HasjEJ2335UOyb1gSX6Gw2
5WVoMXXG8B5RtQbgq/SlmzLfRMsrj8+Zpf9AfaLhDfGWrDhQbu5KK2kE5LQv
JjBk0uLxgyV2YoMNYOb37t+a6yJamAviHvXOQ1EqukqniZtog8ey/fexVJCy
jJoR3k+Dfd+kaj44XQumLTeoSco7qPSp0/sJoXz4vj9W+ITRDjINHImYHYgE
dx9G6kNHaXBZ4z+CnUs9rDV6kCX4aPB8CV6iZa8HO91k23tv2LCM/G/T11tj
EOyqYvPXfAmZ/NFTPOSQip6bfZVgiSPii1vZPWyoAp49I4xu61LhWyGlrQLT
CM7c+r6Luooe87/YY1/m2w3zuXTWzHErqPNq2ONexYfQny9U9PQWHV4QPa4k
LNsOlkGbeTN0y6hWTfOD661UxBN+3W9mhQbfXHJd5JNphKJon5prk1RY+9yN
/Yu++dAnSvX30dsNFLcXOe2TtYOvA1r5/obb6CL9Zfki5QRgqd5xZaLMA6+6
1vqAv3Uwcelr6CWKH/kNGkkIOPTCis69smO3CXjKZ/mngXc+nGZ+e7+IjoyX
xxX+8vW2g/WYWq6NHid+wp52vgXNwvfgvAcmX9lxqbp/lZTiFMzJq/J2udBi
kUbleaqeJkjyU75/+gEVVjWUkxbgSQSaXW86A3mI2Iq3jJBVWwb0bi1nik8y
YCaRzsbu+V4IHV3ltN5Lhc88rB23k/sFDz1Cfs1wE/CQ2cEQ3v5CeFTEZB/h
zoAvtvT/kZXphQ9ei0lyI4zYrqPsa8b0ALxad7pq68+Bd2ucJ8f4T4FM40jv
5VZq7N3qnC6lVA8m3icznoszY6nOQztuOUMQZ7Fib0Lhd+e5dPYHgSkoQMR1
4JgtNe7/prXZ6lkGN7N8GfmWiDi7ivD5zFoJXKiJOdUiwIif5eqlBjh0wkhG
W1nXPxImfzj+i1+yFTrCkKLnPhos9t8dOZOztXB8ciRhKHweqSZmy4THYeQr
cLfv6IEt1Np4kXSEIwnMj/tVFB4j4AWPZr3+MAwLgpqWPyn+3sNhFKNkiME1
2XFippqM10Tsy/n6u+Du7GVbrU/b6IKLdcz8YAK839qOf7qxg3CcvYm7VQo4
WCUjh6dEzGIQbKoTXQYnvh83ZHrOibdp7NTj5qYhzrfLMiBqC13976Pp+mgS
AOdPXo0dOmwSFPj55u0O+K/TTPAxpsHrpy8SrGzr4ch/RoTUhiVkcGH7ZxBv
JEKs92msqIg4qMtyRvZYPiht7DwfZWLBI/Ie+x3Eh8GxTPf0pP86UqoQ/ibR
EgFKhx9bbaqzY2oS29vD98fA9bietoUmxV+c5zbFU2tAqnvsdo3wMqouIpQf
7MxF5Xttghljidj6W3BZyNtCcKETDD28tQvbSSwVBC8vwcvJnPu77y4jnbMv
j51Yt0Dvo+NY40bWkTLD9erUkURk/KxokM2dBls7R5xaO1cFp38GTsUncOAg
HZpqI/pZ4FmbF7gpM42ir87Euz4vRRyxkvzeNxhwlrpUVphjOzjQXZUJ2EeN
S1TUVk4vVoPAE8G7WyVU+OWMa9Azgxy4zHX83rn3dFihVP2l02wrnP3kNXsh
m4CHua31+IMxtNurH/aZWUWBkwtSD9J9QOHnHkUpXzrMdWSHVHCwAyydJo8w
Vq4jLzF7B3eBGKgeqj+/dpOAVZi7DJl5koHdN0eBf88OEkuujhG2T4ejAyIc
l9SImEzIb7nXVQHcu42Ep3R24Wj555m2JYvwqPXgdULSPPq3/6Tm0ttMlIue
0h4I3UJ3syVe2/UkwfvRR9rXaGaRrW2u/puHhSiJVMmcGcKAj/u/XPxe1Ayn
dDLNcs7PoT7j9vi0ojwkXnqZvUCBFt9irzucbtIEI333Z07cIuGAo7dIqTFN
YHyi55yUEC0W+ioTfkmtDt43+WvzJC0gu/MX3Lff5SEyG+M9ITlGbF0ipcS1
0Q9hl3L4HIuZcNgL991aAkPQUymyJG24G7eZHI5wDVoAtTkLuHZ/Ea06xWjp
f8yk7FNhDyFpGS3OiGUwBCejccEMeR8iPW53EODMPNENpu+mV1Mp/ai5u0co
yrQcLI9n6s6RSfjEUE2oaH4jPL+EbtI5EvEX8s+vX54iOKwStPMlZBe+cktv
3P7aEqTaHv9PIZMVX0vVO6TtMwLLMzHM2/Us+IruR4Mt00FY8XqSH3OaiP/E
fhLJHK0AECJd7kmaRLRDF9GZknL0I/ufQ3UNCUcttEYUGbRAOF13/bTSFjpW
bk09NfUbCjwqz5NLmfAXkcy2qbBeCNvL7Jb6kRn7p5cqmZkOA/VceWro7g30
ZJDz9/JELOpQNw4JMGLEkzOWyxWEAVA1HGB95Uzhy/J/KdsGjXBm5IBGlvUK
krjkUeK58xuRgtr25+1ZR7PPm++Vqn6GbmaLBcKVBbRPi+GVN6EI1UrTXrqV
Po1S13KCtW5ipKFUe0pKeAN1BnCPvf8bDxrS6gKjwdQ468zXMKXUEkgjLfTR
vSFgo6DtiT+7y+BA35E3DAnTSMV3Ibp1dxlqPJ17SoJEj1entzxrYruAPnYu
uI+bhJ/QxPzQ/dEMSd25mlMcZKzhetNKxrATkkM6f50grSE15ubBX8QnqPt9
TUHbdyr8ePqHnFc5Bsdk43Ydelb83M5o4dKpQbhOOEjvpUbJ370nHsVdCETM
F01C51aWUARXTJ9jXyIanS+q8VbcQgqL1tEqdhHI7M5WZGz+BnLZuPmZifAb
nlU1+1saTaFjV29WnxopQVc+JOy6qsGBCbySI7Uj08CQM7olcHsbnWe1Uvtm
iWDl7pv6o/upMC5VuEht5wcbfyMnNro48CdFg6sdJjOQ78u3h1eGgGMuD3pd
fJgEKenZKlJis0h3+fX3bmIuYi42s3o+SZmfl6nnb0ZVwh+3xxlvtBhxiFdQ
qVRqP9x6JxaRLEaFDXhjBUPSkiGKF5QfvSDi14+Vru/5UwxP2oIzFwxW0a89
6cpxh7+h5Gvn9P2pqfEFMyvqLIVaiCz3ih2a20BGjvmnLncmgewPSzsLCi/p
LVyvDC1vAb1Mi0l70x308apjWnnIT8h56fNVPI+M6fwftfRUd8ObY/Yffsey
4eNtCqd/942Dz/19b7ozqHH5pNhxLtVa2FX6ytoqnA6fDBYzyfrSAW5/r4TM
fllCqZ3xMrV9SciG7XY86ygR6696KYVpVQHBIf6cewEJHw/1u3TsVRtsfb7+
MFtgHoUKDftWPClCXiEc4b7qaxT+ueweWZyN5n8Fk/Y/WkbyaR23BL7mIe6U
n/s9EC3+ds7Z5YhtE9wKd9ocFSDi8+RvSpeeFILR6uAewSF6HBIwbtPA2Acd
L688/fGZAY/YX5TI2e4DUqWufrziOnIZc2Q4IB4AjM7eiwR9dvxIxJzR8MQQ
kHbT5xOpmHGzWkDQG5lBuHCF6xr7Mg3eyDbU8b7bCLx8v0N//ObEJ45f1tf9
Pg2MHL9P861TfPBu+YpVfhnYxSS4eI0so00fCd6Ttcko3Jr2s+ONKfSkJxB6
lYvQJ3OZyo+U5ym32zM2xdZD4HvLkJ3nqyj3Vn8V6slEDPUWxWVv2PHcmYLq
D5t9sH4+m75JdAm1SS5ovJHPR1FRxd6dEkw4fK/UPaqHAzAVQKwgT6yi/T53
Tz7qjEIWv/72Te9bQE43WlTdNVIQe4RaJKzQ4iC21Ti9L03geDBx+juZiB8U
FrU41JdA7CnN9bhVCm+2a7ec1E5Ftkw+49ot7Li9O4D2GucA/FztcKbOYMDe
M/JKh/b3Q4PfhFyQOTvWkI0xPlgwCYqfjviWq6yigzoKafZxn0Bcc10p+AEZ
850Sb4of+P//HYYAl+ME/Ob9GfMbT1NB7rkE9ajlFlpnpfcLDvZHnwLd/6u/
S8Slijup05ElIPY1MZY7lwlLxK/GUv/oA+sBxFWszobvCHfFTlmPQ33n7uY1
eVpce31RwsKjCdgr/WdKWQjYsv/fl66QbCiX+WcWS/F1TV63rpnpDiA8iHLa
kWXAPsL3L+9W6oOE96oxmvRsuD8/01nm2AC07bYemLOgxbYXXq0oqjVBznza
/c5eOszGQ8L87B2Q8MilVLGJgHsDDbKKWUpglkbZiqTMiUvKhf+T/zQLI3es
uwdqaTHT7ZybH/wbgSf0kkj6/BJqYLpQWlCJ0d2QrsDBY/9h9PEhtWzfPOST
SXPLVwl4bPIY1VmJcBiAvzyd56mwlc6Uyth2LkRgKs9ExjV0vmnRt0nbBko5
FAuZdLZQQ5S4r6ugNWylLl3WIu3GWWHa/S+UliCuimojcXEaVYktfbh/EiGH
KfKrYR4CnmUnt+EHEVAr48LYuLOCzqvJky9qJKLV+5xnv6QTsC2qaGhhQRQe
oOes+7COHth0kvVXfoDJ2NxvY80ddOhOqpzekXyQsIoXvL1nFQVjZ3mLu1nI
60qhxlUhyvtYG366MIdBHrecM5pnwC5EnlDLzD64/u2gxOtfTJjU+5Rl4ccg
PLNmvc7FScRb4zQjYhsFEHZENzDRZgu9Hg+mbiHlQPyY/7e12SUkG3jIqpqc
jNi/LwVmPZ1Dt3dHyx6zK0I6nFUhkvHsOLnVo9G+bQgq3youT4hQYU3/0b5R
tgQw/+zTtNuIDed7GSXLk4Zhb+HJzXVPFhwvcqlKkn0Ammm8xHclEfGZsx/N
gp2roYuQadhrQou5l9Za/drroHLP6UD8iOLzpGdtVxY/I2KucxKPOTP+Uh3/
UE54GF5Hxb+srVhG6Qbf+EZlI9HEynvqjHNkLB4y+UFcpRMCC1mUxcZn0Mmg
KvrK1nzEoYKDuD+SsO5IoQa61wJuMfOHRC6ScD6vlUR6awsonKhP21mjwu8y
HOydOIphbP3qyTuzZDztMvswVbIbfDgj6ncoeSZTaNyqqlkAdDIZera2TLhe
oVcxJ2MQ7Cd372s7Q48fXjiizCPbA0QCp6rOODVmO/jxEvl2KQxLt+fPTK4i
Po97ihV/PZEZt/7vledEfFvLNEc0ogzqHcj6ET0bSJBtL5WLUxqI5d6xa5ei
xaxUEZ945xsAQkdqZNPGUWOHK448VI5E31kyT4rS4j+ub//+Kq2HmDf2teoh
tDiRh11+zKsRTH2EHaWmKfloLqRqf68R+B+XB+1LW0AFf6a7RasK0I0DHdW2
zpxYwyFJ46PPLLh6nmXuD6bByXTnmIYp6+mOv1DtDqDGnYl3T165XAk6kjKt
PsFb6BVneOeJP3+hmO974qnPRBxhzq8gIlsOVXZB5kInaPBUXz5rqFYdFHwV
/pxkNo+Q3COru4YFiI5TLTRehRGL8v223EseADmOpqkW5i00n3dmLyEhFR2y
yL96+cgc6nAy1Xz/tQSZlXBTqc0uUNabCY6/WoDmPt5NEti9jGju/Xd65kcc
unQ4g6Xp0xo6mJNv0OD0HRkWpr/Y+3ICnT2ped87pARpiTErn/9KgxUZO0j+
zPVQ8qNOUeQAPTYjPDpqer4d7tX/2wnTp8eePR3tenfawdBN75E3KzUWTNb2
t/hYDVFpUyU5z6lxBySLzLDUAv0XYaYr+XT4l8cFQqpZC5TbiN9WZqfM9+Wj
lVuSkWgq1d1UrI4GV6mr5LmS6gF/0EwQ1CRhbu3bU4fKG0GvyXOEWYmAne9t
NIB8EVyK8XOcfL+A4g+aeJ53/oeSGzre5YvT42dLktQEvx5ofMtjQjxBhe+O
iU5hqX8QPS9wvfY+A843t5qVjeiDdPO8miwxFjzB8D2PJ3oYXqTsjcog0+NY
MXvqLtMemFJ63VsYsYEe4sJVs0epiNii8OTCf+y4fqb5wuq9QXDeWotrmmHC
cT7Cl2/aDIKswArKO7SD9FI6Ru6IvQPuAwnfxWXp8a3j57ZMyrvB/Uztyzj/
TWS+djDZgzEAmpw2L7X5L6PRpuumBq+SUaiuLJP0FhVev1MY96GvGCwXBBKD
k8m4bbZ9SrquG/70x3/1TabCe+gcfGXuY6hW3feXJWMVhWX/FDeS9ULkzmt7
fe2IGNEl/PZYLYeRJEs5Pkp/MR43ITzf6QKVebnARQrfRChkdOgeL4HPjVK2
TvvpsZzgjofu2W6o9iU8uXSPBnMm7Tu0678G6JWdN+vLIuCLpAHpL4VFcL3W
QiXZeAVVf6FvLIr2QvuHqG4KpKyjjLNCetIxwdBN3rowdYaAnyR94Gb1y4XC
Nf2MA95TiKPPrHNhswAlxZ7t/vmchGMv8x1+Lt4CM3+9/is4Sjm/45klCkEY
US8mv2wv2kb7tDk47RXSoCn599k8h3kkb0Jz/sHRfNQuVXCdS52Aq7Wc96iZ
FMBhmdr7o0UrqPDiPgY310h090vo/SHGdZTpOTWwXyQUvT+nmOl0ZgOdWOss
nSxJAvmWC06a/Gw451hfkuX2EHy5HBMs507G6/RSNY7f28AJXr+qrCfjYqfj
IYFMFH+6LcSj/JgKc24L7HKWyANJ346DRWU0OPIR358mrUYgdVy429jBgnXd
J+Tj3w1Btt3lE0KNZFz9qDzySVEXjOTbuBM2WHH9/rTR3KAhuPXSQ5uLMo8O
mBh79V8KBqrOazXkvZT9PN5d5VA4Atx50i3mh+jwqeWEV0892mECRe8d8uXC
73ctql61n4e333Rh4vo0CmX7oaM7VoY66n6lBfPS4WWRh/N7zFsgJNjHZYV+
EzmeDCl0aYgCOxZ000eHhFlNhwXn9Jsh/1p/1rOm/3+PUv9wWGEO9rAeenmE
fwdNHVSQD6KJheH6Y29f/6HFyT6zyTxLjeBtO1ygm7KCBHsZ3rtKOyIvTPdY
+h8dvhxsH6z3qw005XWNWgQ30YgGQ0llQSLMhAUxjFPq37Hda+5oYQqsaIr0
nAzaQbJ9rwwqKvMgWvBwzPcpaiy1Z+zu0YUKOO/DylNGRcI8bFauC1eawMxt
t/3UxWXk2rPkLiqUgoKI/ROMJbSY0HnvYYlhE/CwGfmkaTNiw3ekDyu1/eBT
SRXAYUGNOXuf6coIUnxfzeSgYtsqOjoWftXQ8jPSW1fv+niZgHXeVaOl9TxY
qBw0jtVcR6q5tiyKHImosX9H/3v7KvLOWX7R9PUFNJ64F9pqxoT/PT0SHh4w
CCluAwdjpbbRxNuIhMlvucAffTP2YSgtNt0v9kT8dgPIjVxYfz2xhYwMRfbe
6baGUwfa9BSTGTGziEhsid8AJOuOdOa47iDXWOlwIToMHYL/+fO7ryLdOOkT
6RmfkabA1fWh19T4TcNQNUwWQewtPsafEuzY+ba/x9j8BKi6vDv16d4Woun6
+pF/IBWGlvtvyx6lxfYhRhw0uQ3AL2CSED9MmZfseRM3snvhCN+l87Zn2HHY
gWPBO0+Hgfwv2uE5xSdpFtvtqvYUw/pIaak9LSU/FuQ9eOvfA5+q6MiIDDU+
0h89ySVdDsKHPh3PouTL+uUg2eClXHiuuTnsiXfQYquAjOHBRDhyT3FNxYkW
/zgLN1+3N8HTM5e+TsyT8AUaIefF5jZ4oRBtb0xPWU/4WQ8h6zsl7znUl2gI
+K0N39qJ1+nAzRC+794GDbYiJ099/FYLZs8r3VhHd1D0RffI+gMYUuTdfA+R
OHG1bPedbc1ZOJr5xrjjABFzf0yqkxqvgGl+W5sc1XVkRvRpUZv4jthucTgU
l3PgB5xNZs7zM6CtV2JyPo6MvZH1S+nMLpA/Jfh7VpuMhwd0M/z8uuCk4P8o
OuugKN8uDLPLsnSDIgiKimJQCiZwQCQMWkJFQaT0h2CBgkpIKCEhLSqgdAgS
0j4P3d3dqSDSLPXx/bmzM+87+z7n3Pd1zc7sEoe30xfQveaDxH37U9Ca09zl
1Whq7A8EFnbmGsjJ//Dm+85r4vdtka2UGhh8fls+/NACsix/ekNNEyHxUtkc
xnO0mKzFi5njO+ENPae0ID8Rt3CdoGNkqYXHBKuZG6+YMCHzr4Vg9ChYJ47d
MzEk4Do+fFF6pBiCG3ke6Bvs+LjhhLDO4EtUhF6yetWTcdqnK8bDuS2wR8zt
M0srF452qt7WNZyHCR0P94Jwaly025qJKa0RNt2f8goTFlDXRGzh8MtiJG3a
epr+2CrKCtbKLj8RiiiFeXwVj2hxqmB/wuAOj226aMZyZhLwxUj5+eKKaoie
TSfO+RDwqv24T618KXz5bcW7h3fn/EPZz7YXl0G1QMb9c7L/0DlSxDEt5RJU
xT/2QsxiCYn23RjzjotCckJD86vqVLiEyOeuucPPmhXpZUBNxklEu6ODH1uB
WVHY4fQgCR9ySD73/98/sRN1afJUosFHWT9UNsW3gcbYr1lXfSJ2zvExmzlS
DO7/SYRJ3GfDZJuM82//jAHRa+NP6KVV5O+3ZahBSUcy4ocUPwpT4aoJDa7k
kwjKPe/E+wSsoYt1No772FPRC91NkTM228jfPEdwVtYT2OqMpi4pUFBUQeN0
VZE+WtHRt/ffud9AupcgPVMtuAZoB7ekM+H3svVO3TwjQJ7EYWmn/59nqZ8i
33YD3beAf6z3mbDBwdbRwOxh+JpepfBxkQovVWbJLT4qhs8Kp3UWT1LQBYl4
j9DGD2hjdtrnizYDflAXYTD4dRCCX2hn/RLaQNWtM5uiYt8gToB26lbpBpI8
0BzzyjcNluYaDl55TMA0p1J7j6VUgK01X6jhD1rccYrfT7u6BxZ2zTobLdLg
I3cCgrbJ7XD2vQJlPZWMc9/z6bWztoOqfrMv1QkiVh9Dz1UzqyC+V9KRtWgO
iVosi0lVVKA/Lf6DOTV0WLfzyUp4VD8kmd3WknBcQV/vleWmWqWj2OzRpIxX
S2hMdK7yzNMw1HX4iQLzLgJeOOyn4HGgFFIvEINePF5B58uvmutG/0D1RKGn
n6uJ+EecouiGSDVQxiaJTSlL6NKeliDLRowGT7yjP1lOQc3u1Oyqqz/QAHXg
iGc1HX778vjxw3sGwNFHg4Zh53lT23F3nqEeA5/oXfN5tvMoj1vy9nfqClS3
h5xwQJeCpK+M7VbliUTNxDPJ8wy0mFQTgUgcXcAiwB/0MHAN7Tt09NCaRAyi
J9z34WxeQKSfpeEH7fPQ4OJhYpMLM/bhFjzgcmwI5EsF1jXd1pFYRGmrcmw8
mBDCTqdabaALzEQlqzc/YWrs4hPPZBIel7wxEmfbDAy/ItWNyqnwaPzvDLbT
GLhteJ88ClpGJzXJ1Pw7PHax/lP8Swsi5vbPK7v9rg6kum5WX9jLgp/eKZp3
PD0Brx/curm9TcD7Ffm/ybTUwNi3X28G922gB92k8cNiqUB8yZZEG7eNVD+b
h3DQpYFIFeWzyWs27NKrO6NUOQ3VN2c13gmsIaZ3Oa/xch5iujgleWA/C/5y
2jU8YHwcYoKDu/e8IeLGgDtaeXfrgE989bH1t3WkOx7GrGT+DWr54x6WK1Jj
WmrWKbrBEuD6m5cuSEPGZ64ff7Q3oQMO5lXuv3STCiu9ZlGLUPwOB1TCkQAT
EY+f8GLY/6caRhvFA5XxP1Q9rP4iRzcH3ZBbPpfISsS3K6v/XJnKByPH8ZVE
fxLuyQgJ0alrgpwj/FVpn1kxp7PigDTNONyLO0PxUmPE2hK1a6aX++GIb11N
Uf8quhmdpVYlFIcOC98NfDBIgxOXrXM9oR1SJc0smHwYsEbRu+cSj3f4W9P9
4pfjW6jrvqLVZFU2dDpd+e/tMxrMfXXRPEumGeqnFK5HcVBh5SCDjqT7GEgx
nSOubVS4MsvMpYOuGJQa5dsPqjHgFOs3bQpsQ+C56ur4wmPH34LmA6Iut4O2
r1XpvmUOnDn2Smc85i+c9/I6EZVBjzVvplXY2vZAamm0cnUzBdUiiURG91gI
iG7SNdSkxW0lA/jLvW5okHJ88uESIxYdM1g9HNgNatyL6fmSFPSTi1uQO8Ef
HrZ+PDHizIbVftzaW18wDabUzrN3RSnoqueBs1WJ2SggXeQkcwgR//ddjpR+
pwqsHOwCzpRy4heVPePny/6Aq9+4iP6PFVRzK3ix3P4nkpI1390TS8TpWn8n
3nBXA/03QYLp2RUk4eEkm0GfjW7Ymng8Gl5HT2srbtlJuiPR0tfrhy5S4bdy
RNF/UznAmvpjv8o1Ih48enpbW6cQKNYvg1zWt5Cj58g453Qh3Orz1tUdX0Pn
fOpu98nkoorIu+98iVTYe55eZOC/WEhu1mV8N7+KBJPLLc89/ApntqYnbT/t
+GmWWfv21TLolGj8j4GPCgt83NDWZ42Ej7kHbErOEHBraNw/p50859Lr42H0
ZsK7lIUdmLo6YdArv9U4iBqrHNudsfaoCZTfGB+9U0+Dy67cqtMNaYE/qtHu
jEqcuBx2ZSzGzIGilMjeqGQqLFnMtLRbqAzKjY8N0LFvonp+mUjJW8GQYNW2
eEVnARnBWRZSLELaubWM3ClELFAx2tn3px4+Lyo3Beyixuae7EFOZnWwf9RP
pZWZgAUcv36bOVAMbHSOD9h62XB69HL+8T/T8P70vhuhO37Pl5v7T3yxBWR2
JywffM+EhWe9bnUNDsCRGXUdpTUi7g8anODUL4ECyb3WHytZcVnkV/L47jF4
JiDDVsVCQaTHiw006y7oSfNEYBY3FX52+H3BQ9Nk+O9d2+eLp3Zj8wfbmczF
S6A1UHaCQZUNa1CCLMV1xiBYt1nq2879n33KImuNNwJbzu3S5nImvBocVv2E
dQxmbusvu8oScE9FyY0XD0ug74TKfPweamwqmMxxzqsUFNZLS9yzCThmfj9P
oFI1pJqX5BqqkPHv1uUXx0PaId/wm6zJTv/QtGeVu8onwIHdVw8rGy+gxoOM
jvCkFOm4jEWn/FtCPeGX+brHEtH7JHYv3DCHCvb4N4ueL0K9jvodowq0uL7+
xxemwm44L8nw8HQdFd7vV+yllV0GOQvpthwOG+hdG9O/hOgotNZxYaOsbx69
fXaBTfxeCRKie/PxfCUdFlX1/Gvr2A8M5+9cK+KbQx0Fz7Jfs1aiG2pJy7sr
1hHHmhSLsFgU7DejUbs1QMYZVa4/tms7QUvkGNN61iba5hL9vF82A/a4MaYc
BhLW0tcdS0lrhheRLJMU+kUEZ0tb444lo7dt7DcWjefRQNaSFW9hAZLL+Y/r
Cv0yavtFzB/JyEfR7+PL8GcqfOw3/8//aIvhsPl17TuyNLjxW/ub/vAWqC5Q
/7BxbRVlDyZZzUzu+ChFmdTtsInoqn729NmlQ/DKRNQH4l/kKM6R8tazClU9
uq54evc6avlrX0qJ/QwJukwVBjYkvPhayP5GQQtcH2ETMn+zhWgaYpWy634C
paFM9mQgFRb6vNi02yoL9EJGEv9cJGLCLtLyNE8Z8Nyd0DM1osHm5ZG0fuQm
+Ojz672yEAlfn36c3pjWBFTnj+XlelBhaaGgWIvtMniQEM+vO0PCe1Lt2TK+
NEPvMbK5zysq3BkUf+vCi2w47jIaxD9LQf+MDd1O6X4ElZl/tN/2zKPxBtex
dChC6vvlY8ieHJjjXVP4T6PfoErWz+MKWUBWdgL33qRidNnUWdWSn4Luar3o
tV23RS0xLJxHBwlYTm9RbLK5CGbvD7xOVVhE1FJ9ZrU/S9Fd/sxn2+LMOCH0
mreTyQio38B2wdybSNyt05HGIggS35gW34tcRqlSaa7OUV9Qa+Tr793LRCwV
n2Q5JVAHhowKDMW1HLigitBW3zANZPHbcgKfifgoh9q9uuU6uNL/Mv11GDW+
3H9zU+F6BVyuD7Vqd9tG+75zpXhtJ4Ezu+oJatZVxMjiKFh27Sf6XLh260jc
EsLR/eC+mYnS3nP/2XtgG01lOr3eV2aBIjUIxr+kWXD70fRUOeMJSNrv49L3
bgk94Mp5vhKcjC50fXN47zaPIj58+iVOW4QcdzNV/z+/niuX2TZHtECcMd/l
vRo0eFUmlHG3WCucuRJpas/AgmNKPgqpuY9BoEoTOxF4cHmCht9swQqws1GO
0H0m4/zn9LpfSjpBvOta4NPvFOT3/WqKpYIv+jVncc3gIxlj2y4R6jOd8Lih
sPSY9E6fF7m3jDi1AmdO29ObWiyYVVPbua15EJoZ1hyFCxcQ312lUBf8E+nt
332WSXsJrXtwpA7kZaIXSjft63UIWDTrvpTMr2LooNa8nniXCnNcvTR3jaME
9lcwPQ48Qsa77xXS9/5qhmwj0PqPhYB9I61/FeEikAukGtV+sYnanL/nwn9e
MMxj/3HQjA5/Pf30qBpvLwTWlRDY3Ij4wVqklk9DOaTEPFHOHFxAytefX7sj
U4wIIFPdvsGIie3ekcbkUSDNuflaPviLzL3o+G7XVaLBZVcW/zYCLtec9Z3G
pXCryb79VNUaUvpiRe/gFI2ut3iMRWkvonkV0tnzc2no6W/xTd1JIu5+7CKs
oFEPnoHxmYWV1Hh3VKDm6p0m2N7PWct6hQP7j3pb9/rNguKy7r4rtcyYf/X4
0XyGcQgF8RKdF9TYcppKm+psFUiEzKhK65BxscXcvKdsB9wKjox12vHDJsNn
U4YCpWjvkR7vGeIqKj13UjpPNws9Sug5u9lIxh1PrPWMcSdU6xJsD41TYe5P
osJmYgUgFyD2/fUMGfsq7ecmsnfDfbpKCdm7O/kofcEtqCUT6HsLWe/lMOC6
ioyg1Yd9EHLKZ5ynYR1ZSTtX/v70Cv6doJ595EHGlg5VD85yd8K9wZqrDH6z
6GLGI8b+g1Xowp3XV7IVuLD42oVgGcFZ6LJmC/r0dgm9JjbysWfHoof1Geb1
9mScKie5rpbXAeeeHzritryBxq8fLYrViQERVs2+C6UMOKefMpgRPQQ3i37S
Hdzx00BLyTltl2LYK4GG3BdWUbvPcwdhznSUZlu+1tG9hB4TYgXpE36hxmTJ
9n0azFj/Zsm7GfVRqDKjcorU20DX/d08hd0jIYPfjoPz+AaytBpkO5SSDic3
Ra5M0tLgce8HbLp0bbCuYLebPmIL6Y4MLJ/jyYES0Z+DJ6ZZcbG4YGa2wCSQ
30J1wutNRJzPuHZMxx1+u/i+PPFtG62euKSR+i0Vlu9f7r3ttYHOfL7ppHk8
CkgmYsynLq0jitMdrTu30kHa18ZwS5caTwie5jkhXAuyQ++GkhUZcDF10zFd
PAhsKwVQKEONleg1iybjq2H2xdOSKn06bBvFhfikO+CPjTN+uURBFKMmRn+2
NBD/urTQETSP3h/urVk4moU87pOTXIxp8BTZ/z+842PkfiGJNzVEfLKuKtOu
pB7Ickd+TV1kxU+oLjyIGJ2EgYK46EEJAra4/SxbcqACyvFHUnUqPS7RkPW6
zDwIibwbmk12bDjHgNKv7TgFnz4ad+RXbKNHjxP3LPxyh8LNrDllPw48wHzW
bLRqFoLMx1h7w2mw7voNqUmvdrDT4jFhnPuLukimKrfOVqCJVR+F/3LXkYGz
kU+OVDR8VB2q+zNEjZuvqp78ur8R8sxr43LLCPhUn/P26HYJuN0MnlZgWUCG
GnavL5cVoazeqveC/kSszJtKtz+pGg5FHaukLaHB7J8TqBQHmuHoxr5Jh/oN
9Ohwj67F3ywIbSPlENQZ8Laa6ZfTkUOw+VkqlPRsHmU8nDjV3YDRbhOi9n6D
NWRPFMm/+SMTVc1cpE33IWMunrvLWbvaoflT51f7xSW06VQv80m6ABF/vjpU
FsSIc4xzngsdGgH2XYyeSmKc+Dbj9bYu0hz0vnF/J1u/giwXuG51+jih60Em
W3k5VLj/TyN7+aFssIne5Ehz20Qv01HIhOVPKDpy9oJS0Sry5A6+caMsCo3P
Wwt+0SfjexLVfN5UnaB8UdfhnwAdHul6oPKb0Avt/5bYQz9S4a4bOQ/ZvpXC
FaLqpTZRZnxfS4yP1WMULifRfLAtmEf/zXQrpsuVIRtFSavKJna8klI+5/n+
N4TttS6N0FpH73XiVII9U1CjJ7t3TBYBH9+75+rLrXxotX3faM9Li7uNfC2u
aXQDVUa6wYQzFfbSKjkhMVwEfFpNYn09SyjxsYOZiRdGkmWG7FTFKyhu36dz
GsbpyHRT0ftlDA2+gzYOeTxugd0flpf8ntPig46SBhWPu8BHsLBUdPAPehQk
5HFVpQo9fyXw7S+RhA8GLEgfVm0GaRHJoIdX6HFAnu2DStcByKOqqf/dTI+f
f8i+Nl83CF98TJMfpFLQ+sblI4ZEJ7T57ZRU0E8O3J56ZvzIwCwcLvuYz77C
iMvs0xJSOwZhQOZg1LA6AZNorkqFBecBjsL5Lk0kfG631Z2nlS0gO1Ywd/U9
CRvdONHsd7EeIu7vslEeZsCLv0bHOb8NQojo6YsdO/tEtc+WfZu9HZRVe8hJ
V2gxy0vK8PWmTpjh7aP79IGESe/lJselm0HZSZYkvsP3DoFGpWl7G8GCVKUg
foMen70fd+7atwGovS30euHOGgp7Eq9B7vNFXJmZ9fvjCTg8QV/s5BaCD/vk
SxgvM+DA53etkliHoNZISZSKewu19l/kftmZCezm2qHSMQQczM2S/19ZBUwQ
325VZtPiWHKYIlrtARYd6jntlA0kuqLNOm0WAuOlr437Qki4RS1kzzuZRvju
Xzz//h8TVrG5/uLDuxFoEDPu4CzcQo/3XtD9xZ8NXnKnxP/rXEVWgnfYlc3e
gqme6DokEPFX5kI9m2O1INFz8b5mHBmfV9VNF77dASMa7GP2s+uIfn/8sX+J
6WgYNz8XmiJjtvNfuDqtO4CRJH60LYqEXY5wh3SrNcPxXb/9WOo20OOtqja2
uAyQHs438LX6iziVbkz7C5ai3P5q3Y8qDLhVh/umr1w/yA8c/g2lHDg+jyaV
PDADuUdETRxGiXiNKSWmp6UMNA/T2MIWGR8OXZf01egAQ+PoQI+XO/129h6N
YGI7/Ks59SKSngrbu9gjpnkbcLoUUKKst4Za8h7stRKJhn0lyxR2whoSfTrk
YvvRBfWc6RlkO0XAIhPPJoKHysDic2+taAUZn/Lt2xWR1AWTU37av7qocciW
5Z5PiY3AwGR54OK9ZVRpeZ9xgf0zyr+tyfiteQOdzHLsYUz8CpIVHSJrdSxY
b6ZcVh2PwAoP2vjwjhrvOfhHMOZfFUzLHZHuzmTEi64T2/QfhmDkJePnk/9I
WG6LgOxLWmDy7S0r0VNUWDfWrTIwvBSI45LeeT/IOG1Y/HkAdwd8oiXnGbou
I42aLqfPc1Eos8A/7PYXRiySaOsnyTUEqnIW7sfolpBCbFf6bs9cZPlZkLd+
Zh3Vbr9xohMxRa1Za9u9IVvokWlN5h2WSIg/0zXJV8iAOwLJHz3WhgCFh2Yz
6lBjJi+1xyXB5fBd+KJplAMJD0nc0PSRr4XjI4lHrCX3YLWLXKYX9qyBacK8
OHmVgqhZcjL4fGKQJcFSLWl9FmlFuCbs8ylDThl8/Ef+knHigkawzWQH/Ohs
+8/cbQHduSwWrlGcgQpfmpoKP6XCF7ozlB/MF4AFo+wGx9019KtC3uRHogTa
o1p4ZkpjGSGRvfoK++ORtzPFZ6R/A73nqf87tJkLfU6T6oWFy+hYozLT8XeJ
yOsp0ZL5/RJyWO2q4RcIRb1G/I4MLFQ4+MTBWCbeEvA48yn0wBsOfH9z/w0K
118YOXs+RLyPiI01Cx9Sf2mAdysGBFTMiG0OxC2dChwB8+KaGrF9a6jwx9Vk
nrpouLXvlfkua2ZM2mLo8d0zDkwO+ftoredR20GzBVOeAsTdlmvC5TyD1g7L
lUs/rUa+NfKy8xdn0bl3F4/dMytD4kWnxpN2bSNSilwb32YRyNrm2lVtMuJa
3RHPQvNh2O/yxyanhID1ocGBDVXCn/n40OId302OqznRxd8J1gOt5c7VDDjg
0vIjYTwEyQl7DU7AHCra5Vu2eqgIvQOjtxtfCfhq0C3TG92lsBjp6pikuuOX
jYKK1uQyKPn6qj5nZQFNNaR5HK/6idwzKbUXcjaR6ifB0N8GhbDlkDcmE0eH
m57aWoSP9QL5uRB9tjMTvq7AKrq3dxB2S520Mj9Ng70CRm9KQxvMa5iWnH5H
xm4Hvl+4/7od9r95335zNzVW1RHS806rhn9eAYyWOtx4v5XrFQbiAtB/kH46
Ik7CqS8ltuvrmuGmiGjhNPM6Svnl7E4oS0GU921C7yNZsISk0/hJpwkQCTWq
+6KyMx/eK4ovj2fBzbCf6p//m0OqqTkPO38Uo3VwpfrbtjN/dgQLW7sA1GFq
JLfsQ0HPlhnS6TxjwNWp3KzIlIwbLtxONZrrgLmVjGgheQL+uK260HN8J0/X
Va3D1bYR80xj1Oy973BaQU6rpXkbdaVtEVzrQqEmjZHz+1daXCu8LlVd0g2m
p5+b3t+mxh4eRWdOsTXDFZl3Cx20y6iKQ4dB7lAaKuf6dY9ZdRVp1tbfiDzu
h1o+fz8YcYQG1ybMnTFkbQZn5tp/u4EOX8EHZOPc+uC/+aq1EZ9/iOOfHfdp
oQrkTasn4ifIi5X++HUrCqzDUaLjIYWrtDjSLMB9X3g3vH3Q9paYyITtb1qU
CKyPQnEdyZwwyIDVy19mLFsNw4bCw7NMO/0++rOMKskgHy4xZoXyJ62g7ZjV
Vi//eJTW+TepKp+AlxTefkheqgbtpGN7qceYsGHvitwLrlEw4a59tX9nH+qM
jn3n2F8D5RFcFcKL22ilgTaj/14JqBqPCGlf5MBfWXnEtINmoOp1RtqrhC3k
1yTlSB9WAA0C7QxcWkuo5XiDgiFXMmK78DhndZ6A8ehUxT2PIuBaq/re9o2I
+3/uPdmyXgPsWitixR83Eet0u7r2sywQ7TvX6LKHE/+JL3dSeTgH/Ip04ZF6
RAyllMKRjQo4r6TiTr69gLiW/LClGEbJFt/ydBdocJfATTW+7+2Q+Zu2bM2R
Fk+Q7ZdCnbpAYmTt2CF6Onw5+/Zp1h+9cNekvaM7dRmdu07zMlUpHRnRB8vU
lG+hn3Zz41bFsXBBJrykS3KHF5psW4OcmqFx5KL5UC0d7nj4YUJJux9QsPR8
xF52XJJw7nioxTRM2GlqxrfPI7WwjHFOvWIUXLmGBIupMUSYixjR14O6wqcZ
vS9r6NlAg5ktjS8iin37Fmm346ex5f9+ctbDYCqF5KhOQdV9Iqdsal5C0jAW
dV6ixsWXwybNrjSBb2CZU5YVK/47p763YHEcRG32SV2YJ2HB3Hi6BaUW0K50
vp9cxoDbDry2+MLbA6p2a0t/zq+gZ62qMr3/IVQyGfshgWeHnyx/0++J8IYC
9qcfOGf/IR+1NYkrX8qRoHBInFs5ER99Givm4lkGWfvWYl9epcFVu4ye1Xm0
wW3b/RTiJwI2V6H1HNMtBVr29ZIfM3TYe3N87eLDfuiXDXu9r3cZVR/+vnBV
LRJxRTI2Wjmto9XrSl/WgzPgMc8ibdBNBmwxUM2cwNEJ25rT8ToFf5GUcMKl
O5cqkZDaNTW9syvIk9ntxEnHeBR+wJuPTYuC1PX47e498QHbckc76s4VFHmX
R1ew3Rtit27Yh5ylxeIzweJT1N3QGz80IOzKgF8/8n+8UTAE9v+FLz73JOCY
8MYD/Eeq4HVD9ebvU9RYLazxqLNPDZDbDk/4lXJixn35Et/fzEEPe+KLG9UU
JDmflUbc8ROOJxZLxx78QV0TU7IO7uXo1dfpO1Juf1EQy+UcMa0q1KspksJ/
nYBDqB6bOY0UQzojD+fiMzpsIpvxrIW2D47p6TV05M0jJ775FdmzRUhko94W
v6LDSh3qv/eu98HAZo6euQIJ/1I9nOrXUQ0y5mEdPn3MWNknd15vYwTeRYt3
1tEsIONeQ2Ud3lzEWCRqhJ5vI8bpii/jTCnwtn+T58ZRWmzctNtcKrIL3vuz
s+9KJmLXhQL/2slqaO12H/BbYcP6bxvv0NhPwwPPLJJtyyKS4xbc0nPHaOsa
Y0iLMxtmcdZbD5udhFPDx5ZPWJOw0lE6+7ObTWA45nCIyZAKO0W21fIEZIOD
5obU62kiFrrLrvlth29/Eg7RWxlS4+7A22EdyY0QIj8yPs9LQbbhw5MRwslw
h97JVsqKjMWl613GltphEi6En+5eQ21X85QFDzrCzdd61+uWVlCxrYTcwKso
lLpJ/H1YZhudIPt13y5MgM1T/16inDUkySl8by01DCZkDP8dCZ1Hz0illHW5
fITKQ4I+PGXDXtcvzLxtmQTmJW+p/uxNJMayhy+8+BfkR0hn///7bd2cW4+q
vpbB6n0BzQAhIv4umh5Td6cShGJpBl5e2UQ3LGoDrWt+wGWWzx41cjRY55Gx
l6psK8jJTUY09M8jH/ULX7KXCpDIEIdLyVMCfnPF9m6DayWEnOKS8rOjwX8P
9XyA6DZwC/gZp2pJxLJHbB0dnCrA+2UciounxcvqGgMSNl0wxBpBZ8c5hx45
RdwJtixGTPrPj/YhEma5eu/UwpNm+BlnGvnqNy3+kfFVVeJRD4zKLw+eJiwi
XxOBjLUrmYgmnPeLUCIVvjxYdfnojyKoznnrMgiLaAKa7ulEF6OV5ccX/wtj
xVvJSyHE/ZPQKqiX8GknTxRq9OeozNIR+4u9XZ6Vm8iKSiVhbOk76l3j+a2p
t8NfwQqhr9wLUXk2sMkrMuNOvz9xRidHwXmIws6XwI5tisS5cp5Ow6VnZhHL
fVvoxftgvrceeaDgFP2wz24N9a11t1jSvocRCj+RW5oJR1hcvKDVNwyVehZB
kfL0WETQjYt3/wD8EVp4YrKzj99CrHinpEsgKMKnSc+EB9toa580bVkGa26r
55eu0+HGtb5oUngfXDfxXXp4eR4NH6e4163mIl2hlHGhpGV0sbu5a0Mbo6Vj
X0avyO/wRl7zo7nkDggXNQ5I7Nzxo0hj82pCMSyk3Mj1laTC4dnTPLMWcZCq
1jUj5UKDI06Fqz2KbIPYsEdOghVriOptfH2oWDp6etA2Vf4/Gtzik1hKvtwG
WdkkE7XkLXTg6mHBe5yZwPfhuQ9VxCL6S2l7c+InQmkSDfU1NLSYILrnZMuJ
Lmj9b+licR4b9tnHKGByfRoaB6M1Ctk30BNgXnOWjoIzAYuld3zp8XrREs8d
zUHQKLmxi0tqZ597NPvWwlNBL0pnctSbCpu7Uzgy5cNgU9Nye+wWDU7wf1/6
rrQNht/+EY08PY/OWbPXHnEtR/Z66g/Guajxw6ERi9/5FdDgve3tdJCCBtS3
bWXOJkLCh6+qP0Xo8eEnLWkzD/ohwn6TvE1Nwu3/+lbFxxtgzGY0SkKCgviD
3t1REHYDIcYHDLpF9HiW0Cd5Vr4XYnOqKjlZaXGE9z//zFcdwPcwN41+5/rX
rJUya6rfgEK8xrANhQGzpDQwmQkNQOwfptapjFU0bHBc/5qeP9xhmcgslNhA
canwNkjaCXksL5IXrKnx/WsZNi9u1cOul3J/wm+vIpLIk8nbxplIKPqayMs3
ZGxQK7kQu9EGU19db7F8ocJu3S3n81kLoUeP6/tG6AK6HM9rYl/8C53bCrtd
wrnDJ8ylAapFhUBtfPjPu8BFZFnvnHL/+Df0aTzUKFh5DTHWmTEqnolDoy8m
DJDcMkrS6tdndS5EHFx3/5zIoMJaJQKvDNUw/K6Saqa/vYQavYuGbHMwyvzy
11+slAXzRgY9IzBMwOs55l2TLSvokeO5GoJaPGpteSnvu0HABxpGZOLNq8D0
Wlyqyg8SvvfzU5/+QgPMXOa7+oV7AXEIfu+bEcpFPv+tHZBv3ED1vAaXz66l
g7xmmJYYzzxKf9UfzexVhEr2sWo8ek6D+y9f4bGnaQax2gsdFhQKMqS6VPPd
2wO5njpZMTLFgFUDUqfMDYah+SG0BF9jwMY/+zbOfxuClUHF/R1s9PhpxH8X
PrENQM5qg1dHDRVOoTtpPBpRDMu+TyUOnttAPLwCutkXYsCo9onxZ+ENVDjC
v97wPR2KCb8trJZX0M+groPBD6JRfrXKwZGrjHjXY97yreJ++IFlvx5q30ZL
zyWp6VeKIC/kWcOhK6tI6rLpT1fPn+jOJ+WeL+EkfHEyo9YyswVqR5pKui5w
466nHVJPU/4Bn3ThoYBIBhyyaNNwp2MI7vfs0rDQZcAGIkZ7D3oOAUvfrdMZ
N0nY8che3VLtOrjM/Di4MGsZsY8uMm1VFaGCgIoMCQIT9vsbX+Y0NAL7vj6u
svSmwTbXRsnylW3Q8TYtdu40BenOb//aIx8NWTf93wzGs+HN3TERVqK/4YWS
IvMd5Q3Ee2mOfsVjJ+yi6gJrji2iPJezPRILGehjXqfVPlEKcjwq4fJZPgdV
z3oz1FUvIskQqTrpZ0VoedjwoY4ZMx4XVCsiyY2BWp+02lrABipQufxfhEw8
hGqspgj3kbF+ud2rt22dwK1WPSxjzoCH6b4+3Kwfgv5rueSXTtRYvtqcU12v
CQJjyj+b6pFwBE1TZq93M+w6zl2sKEGH5cMYm3/G9sD9gI+jkh82Ua7uwSau
a14gPy7H18LPhp/rT126LDoF37Yu2RfLEnEEgeD2/Wot7Jf7xn7qPjN+5JVg
9/HZCAyznHilpLmOru1ayITaaKDMK4u5ZG4jrDG01JaaB/8+Es89NaPHNvR8
0/2jAzA21sEl00+NLzk3o7slTXDSiM0siWkOBf3ysT5vUI7OaWxP0Ssvot3v
F3X47crQpwqdey47n1/niAJj/Ox3OF+0uGt0ewVZvsgv9k7xB6/5J5TFUCIW
PqQi/+5qPQw9rUq2NFhFLMdKa9XuF6GjnAsB9s8XkG7gxGEa70L0a1X/k4Pl
ApqNOm9ktTsNnai4cJOfnh7vFkoIv1g3AH+XotrfnefGj0xOeh+/NQ8xsuJx
T6x3eN5RQUTlZC/Uj77/d1xzHgkUbM6NCBUjA5XcAuK9JcRcdbXya1A6yhbs
PsBct4126SmlmDPbgfN/HlHjO76749mzBzjyILSHQvzlu45yewTUOU8ngWJN
5vGiY8uoNIHwUVHqB9KIIz5qrltF1EUsFiLqP9CvgVPWxmu0OCmnqqvMthU2
5UOmPmnT4ueuewbXbnbDuV1bjvOW9JjeVivJQ2wQZPdzmcl1b6Pe+0K1/Q+L
4HDGmut9yjYa+ZZ3cN8uf6gfzpFcTCDhwwZo6f//D2wwwR5xrWcb3WUs3vXf
Zj548/oPmF4l4ySD32Q55U4YyWPVtzMg4eB6doafYU0QouFee75vFa2EnORc
UrGD++VGepRTRNx50uM0v2cN3Lykd3eomYxXQgwj1550wa2mMRquOib81pDZ
vapkCITOlmw0ylPhg0wN7cUd2dAjqxa08ZWEJ69kcX+YaAH1o/dJEy0kzBVo
686xvw4yuGl/r0mTcJaNEEf7zrykuXJ1ks9QYUMBpBZsUQD8NVl/J3WpsVQj
Gu8+Ugs2ND/vkC8TMFHAnqDSVwlsDTEjEkbMWPM/l9tze8fB7CH+z2qTCd++
1pr70WoMCg+2xHAqryB1El2x1ClnEB8R6J6ZXkRSxZ96fN0wSo9iPS2/8/w5
lp0SVPm6wOlkiql171/0+7qA8nJmJWKp/8Bs85gTO/QUWjKR/wIKbBn6Y0qD
1cfIRh6MzRC6Q8qlOWT8tybmaejhTrhPLO2+95sJ0zedNidZjwGXJnIrmaIg
ilWhgKxuDLyVGuv6bbOMOpsrv+Rl+iBN8xjdaB8afKlHdW8USyu0NQ5KHhDl
wG4G1/XDXv6GzxSHw0qjW8hn5kGhzqMUyA+x97Jyo8ZHxl8M+t9ogFWyz8pv
ygxyF9ciCXypRDPvrPNupW+jPkUeC1WDPJiIt1LNStxEt2yS4n46ZgL0D7bq
WVFjQumS2gRPNZxLeDrtZs6C0ze4znx4PQEfuuLMGaN2zovPbWpWvBWYD8uy
edbR47koutb1qkEwaeYz9TbdQt1DHMHZpDyIHRhUOPdtFQX5df7a+zUPhd42
YHt7dQWdZ/rgTU7KR5lFzc+lgqkwp5LoD+s3+fDrCFtzpjoDbp/EUxIOQ2CR
vCsnI5iI1zWU0wfX6iCR7ochRz8Vpq3SbFd+Ww6MlqMGuavzaI+b85tAhSLE
+DwhIOr9Omoaf/1Cxy0VnZcPc+KTpsahjtr5xz0bARWprHprL6AW/aNH05Oy
0KaTeUJLAgE3l7LEKWZgaK1qGFpZIODCofLzWrvLQKU2MO5cAiMm+ygrHF/r
gYagPyXqnAz4t86yvNnLQbC9WPKpWYoGz9B/aviz468BpmKn6pZo8WyWistn
qx5Iab9sd/0gAT+O207/e7sUVhe/CO46so6+ThykylhKBphXTWkqoMJXl/dV
7prNhcLxrdjEGgI2fur691NaOeyb2qRTlKfBV92U9g3VtMGtT8qcS7EUlLz+
3eR4Tih4BJ3wHvCdRaWH2lbHxyqQJznqafgDIp4rcL6j0FMObs0/DLkV1pDj
QdY7xsYB6LhwVUnrq3VUc0GU/4ZIBrpRzBXMa0+FX5wR5JFz/gVd2Y+vFKtQ
YZebFtXM4ulAvnazMSaKA1OC2C53mP2B0Hh5ctNXevx2JfSL7tdBSP3XzKDi
R497P0/PP67oBtUKsfPLJbS4SsNR8/zzbhjKcAhjctlE/p27L/NOB0Bd8oEb
5S/YMWXrqIf44Rl4rBn0wNN4Hu1dnf/wtLUAsYYfthmeI+JQugHPk30NMEr7
Z9hfcR41FmC/DMkSpK3dzKBeRMJ/SH0NXX4tIE3Nm71FR8KDdZFur5ybQYvu
+nNBzRVkxXJX+AjhO4quk6tiqd9AjEPSyc/C02HtlTw5j4kK65PbP0nX5UIi
wWhgjxAFaWfFm7owJsLzCsIdv7cUlCI6LXIjJgzZiW5zLBsQ8T3J2e93Jsuh
wKRbw/c7HTaPYSmLLu6DAu8sNU2LbSRG+9BTN6cIkuYUEhf01tHui/cI1x94
oAk6D66vCquoNiakVE0jDx2vclQtvUSPa6VCPceGWuGyI81CfQ49nnZI2uQP
HYRvnTrG3k8oSPxcBZXljzho3/cxxreaCucopVoILJdCJ3BVq7za6TvroYRT
zZWgYXqnIUCbGrP7bodxn64BrW/iWkRWCmrko8quOPcJdJ/MoeUAIqZ6Phtx
db4UhFccLGR4yNiygiRw91cbCCz2XXJZWEYtC/bTxzkwsg4lt+n2M2HtykH/
uEcjsGDy71LtAgu+navCopo2Af5Ujzr4XamxewGDaLVcGezlrXfYMN15/2e/
5HmmCbC4i/a98yLi+z4z9cU6NfBojj/txd1/SO7f+LH0pTL0NmS6IqRlG/1V
kv6m9OrVDl+d0Qi6srMvFZO8ZctdsLE/VipCcgNJ8zHc9xFOhV8/zS+JbC6h
gp9nepQuRiFa4yps8GADqdxQsFI5nACu72xjl9lXkaHiNMulhjTUFPtpwiiI
EXuFjnXuuzECAcbp/meuUlDcvWvcR1aTkepDhTPzUmQs8osl+nBWK4xVVMar
Z1HjfeyH+Yi2TTCz/3zDMSk6rP7ZJ/j1w07oy8xK/+5Niyd3J8kotnWD9qOt
eOk/7Fic4ktX6v8HKk7m+Vp4baEnB/1yNC4lw0pk582Dr6hxF93hkzw7/Wrz
+tSTvu9s2KShmOVDxxRcOJZ3aDGEjHfH/JBZLWwDTfcvZZFHyXh/sf0Mw3Ab
ODwvUPn+chvRGFVkWo89hrILEUwiBTTY7C3XgEppK1hVUG9Sp64h8u8xFv4z
4eh9EvlGbB01dmsdHtBvqIODUa86hIK20VVr8eDIfAzmYk6SabZrqFXm2vKg
fgg8+OvLyOWw089f1x2SGduB7an7IfOCLRTLnxK5yY5BWHym9QkLEZsnqMpp
v6mGuseCzr94aLDKGuLIk2yDPwJfw2y4ifhKJwya7q6GX1e5uh/2b6Kmi1Sa
F2J/gByr8hEh0iaq35MxrdiSBmFmLS97MxnwbpmHUg6qQzBMY51205kTW/1w
1an9MwHBxOgX8ZIUNCbvRc+koI5cQkk+WWFE/G+2jnmWowq4J6P8vF12/NNu
2sL5QRm4B91HBTZU+POn6ia/p8XQXK9e+2Knv6nHNbo9b4Ygef3XjSufF1Fg
IJtSOAtGivYCylcPzqM3p7+FO7wtRS2VZ9lNAmjxba7MeF+FLnhrOOB0WIcG
T87d49CdbAb8ijuEWmsKzQWWz3/Qq0JW/taJpEO7MBZMKftxaQFMstOlJ5L+
oSuG9HlzohXIlS3mQL//Tl98WpC0sS2CQc4aGkUCAZs/bWAJEKqA82Gn5p4q
k7FR2b4QiZx2WOmxOj4VRYvZD9A1RLt0Qa+lOuboZscfK/XtJAPGYbDx6uTJ
swuo6N0Tj4GgUvTnAqoRPk+LjR8ds1MU7gZHw+lvt4ro8MqZDJm7nv1w6YWt
mJ4IA55uauY5tzoIin6Tks5UBNz6nrYsQr4Ihr66mSztoce3z9T9ZfzQA922
sV0hi2uogtvsyY3eKMhud2HocmHDZv2xfJdnRyGptuUIQY4BG94sttiQHwJT
l+pJzltkPDLzO0GFvw0sGq2rtjN+I0XFBZUfGhUozkvxRVQUFe52a0v4FFgC
w5epXYd5/yHWW7OG51Mx2hZ50cUcTcDpmVC69awCcs6+PCTWzYxnhy/I1s2O
gJhgZzaX1BLKuyai+lelEBV8qRqM3+k/U0PaYLvAdPD5lBv4/PQKus12601p
Ui4aXzlqu91Jxu51alEenB1QuX9Pnfh7OqzZdPszy+5eCKe/G6vdNYdO5vJC
kGUlMrJ7HXqNnYA/eOaZiNcXg9rUtIXEBgkraQjPMcu0QlK0//PQQQL+6n8V
3pSUQYaGXVRGzAqKq6zW2n0gHzEaX02+QaDDrwxz4i9HtYMNm1V0yc1VNFJe
P1Uz9gOxdvX63n9Hwim2c8vMvI0gHKg4K7RNwHXPTtvfjCyHUdLqBzy3jXI6
Wepd9pWAFCXp5vUdXlJtkAp/3j0ItALGNyK+UuHoH31UP+6mwruNL5UpO33P
7xPwb0u+DYzUGxP/aW+gi8dGl/erpQO91mue75br6BTbk/3nz2bApfxzfKfp
WDCXhSrBtXIcnghFOQTeW0Qa4g7LpNQsND+ic0zAYQuF4KACm+EfcKDD0EKu
Yw298PJOdjuTgPJVRJNdNajw3l4/M8Z7OfBsxCpEpnoBNVGOH1FWR+jMbtnG
Rw7r6IvVFUmxyFTwLImOOstDwANHLRy/3i2CfCu/bsEhAu58WtCs+joLHKVT
J9PvEjCv0d9EXpMqaPQ2j1Xa8eWshm8WvD9dYGmh/uuIHDOWFxK8eUltGB7p
Wpsukkg4sTPmSMu3anDf+OPtePMv4vfSSXuxWImYnSti/MIIeMnic/OBC6Vw
X3Hen6t1CeXQiD02W81DnpKvSKvXV9G+vZEyP1mYwJPzzRnJZ8vIiulNTSMq
QF1elo3D4wSsk7RisOdACVQEKoYV586htGW9Z82+Rch14WJLxs8l5EdJVdZi
zUMmvM6F8okEvCc+XK3dqhT0Tx1KHgvbQAJyGqO8ym5IXi6gPGKWDlOdKJKK
2ugHs9cPeHVL6fChh8Wi3fG9YP6B44b/WQKuqIpK/X2sElYejbrlBhMwK/OU
6zOeUrh2PqVJbJ2IaRIft92MaoC79psHv6ivoiMPrVq0XmeiL6uP7bgnSbgq
jnF5JrQVpoXvXHSLX0XL63tt5G5HI+LPF3t8AqiwzK+li2sNWcAxdMqDnpGI
F6Vmo9LOFoPrhn20zgw9Hu/D749ODUJY0bELxid2/IE0cpNwuBXi7gj+J7DF
iNMeZ2ZvPuqHHKViN25BGnz4XiOt8HAzSAkrJJx7s4oIt2vbj3xORoZSlO/0
Cwz4zbyYzdrxYWB6a3zvrwIjPuiVZ7YtMwyi5QsVvCJryPq15N/XR/LRMq91
8o1DVHgmO625jiEPdsfL9B4OX0IhN0TMs3hKkaXWq6nwxVXkcVyjVsfOGYGN
W6ZsyM68C3GqdCu0g+qtj5RDvGS8nfjYxFq9HQYpn7TC9lGQAUm4qHDEA1Ff
/PRQZGYL3esUNr8yHQdfVGIHZmdI+G3k8X6iYBP83mAySBSjwXQb7cNpS007
86l6cuMkGc/T30sy29MJnn8/q5cVUGPNGywnHz9shKrShPLiaRrMuZxy3p91
Jw8SRl8bEdnwyJXpZ/WmkzD2WE5K5vwmEtTjNbj96SdE7e2nX00nYvsIZROP
PQ3g+cfJX6ViASkg5V/lgFDlyqHhi3LTaKswfWqYthw5Ho8++s+UGQuLHKka
PDUGTFObMtNbO/sZ46YhH1eC3hfGjGfbs2Le7ROB0meG4IPgNcajuf+Q9gTx
kJJbIarLbDq/IrmGzDKdHihWpaHGq7tog3WI+HsmhVEmohxSLMb36Y7T4et/
0smXduaRw8XtSXLrCnrg9fLqt5dGUDPcNvdwkIjP3zn+PZu1Hm7x8KkXJ9Ji
lyhCsBO5B4aiaGr7H9PgworGN0bCbbDrRzrY61Fj7beZUie4qkC56k8fukuH
p631FsK9euHaizPUM1TU2G9cyyk/sh4sLprE/9ZYRy8ufbcysLKByyGWw9Xi
c6j3tqRDTtRO/mvXrJQdW0KXHH+5XZQrQVtPiQoeP6jx2UfhLlRbO34vvpyV
EkPCXdtrk50HWiFk8+6bO5E02C4u8VhdRBtcOyWt+/4ONT6IC21p9lVDbEK7
jXAaNS79a3VL6FsjrGKBduGsNcR3TIHn1qdA1GKVEvGZlQrfRKoVQvTZEBSi
f0/RdhU1zvy0zKa1RXtiNeo1DVixA8XGifLfJKivK6UXRFBQr6/Sxa5GU2j6
oKbl1cODsfIQGwvXGoQZXG6KbqfBa1wRBTzy7WBihgVNI8nYMSRfd9C9A27J
vtg4o7+AHqdQzOeKixDLlwSlS0msOMjRYa/DzvXfna0VoTq7ihKPzXM8DP6J
Rm2OO1zNWkJYO3avoXwqepAXrdPwhxF3z7utrdWOQMG82+FudXpcozBZpt47
AKfEyN+vnd9C8n978zP2/od8g7dPyt8nYjt9Wf7H81XQk2HwdvXUGlIniqiQ
+l1g9nyOWM4MBdnQqDwj1iSgZRePfPXLNJje4KsHhLaBgZQyT9C+dRSZrH16
JiUdOE890t1lTMavnF9HvefqAMaFtmLSFgXZh1woYPR/AwviyzJjt7YRZ/JI
Jt/jYhAjXFdyTabGpPyHf1jeNEIYlerzzzvnb8evJQj8SfBbkY3KdpqIn0Sf
tG6wroVQDsb5xS/zKGOLfS35Sinaey7xgkk9ET/7vRio3FQPkr98L+XdosfP
vdjlLRQGoLe/qjz8MiOOSaJ+QUoeBk1B9i+tR6hwXfH5NlFZDLLkA+LEqzR4
wGfYXu1TG3hcvCCkFkyNXdM6C8zKq0BEOb6l9dgGUj1BLb3NEg93RwfNfc1I
+OrjImn/iCbQffhG30ScBV+SrJSYPjoOuQqzsn17t9Bo/qVzA0eugmRkJssw
xzYi3HzaQKWGISWYbO1+aMdnFw/aU0I6gXXh+w+dHT4mW3eTI1Yq4bX/0qmk
ZRZssyFcKGYyAdo2qifmNWgxlIfKip/thIy1NB56TgLu9Yk2HtsugHmOiocp
KQzYI62pV61jCGS3dl/18ybhAm+qN21rzXDJnN2aVeMvGj/RyB50qRItqk2Z
pYyzYzavBQb1ihlgiP/I9qJ0BaU37ykZ3vE1l1tl0vTHiNjoXJlErkg1JLqb
6h7vIGEjQr9+Z0oDtJidOcPoRsJnJ1KyWwObodL4Uvs7bRLWPTUb92e9Hvw6
VNIvdC8g+tHCyMwejEwfGtK96iVhzubBu2nLjfD+Q6Ph3nhqLBcsNBQyUw8C
h2xzP2WxYT0PmkRK4TR89Ky6aqZBwFIyg94y9ungWW5Ey261iJzvn5dbYUxC
IvIlS4c4F1GPi8L96zG5KOss3S8ZRhrsXXI8gFlhZ99/vh+tlSNhvg+K1Et5
dTDCNk8VsLyKVA8ewoEzGcglg8vU4yQVLrXThHL9fGBjj4qNbmLEUvLqB26V
dMBxhlXvG9kE/OYef9r1pip42KlvkDfIgE/8sNTfpzsMYRYX5Eq+UuMsSWpR
X4UGqHpJeF84vIHc4zYqUxsyoDku74rC153+Gnqb8jz3BmIqex9cfJmAU8rt
2IcUK8HrWE6+GScVTmVPd6IKLAS+BalD2vKzyDPjXja3ciVy+bGafPP+PzRl
/sqkvL0E0T28eX1jax6ZmJw13/sKIY0Q+0rFAgbcINgrscA2DCPaf9dY91Lj
EQfFY08jGmFUzoqzdGUbFelJkMuVSmDZVHWZbYd3Ri+bCZAkMKjzOgx6xdPg
mcdD13/caYODRnTpvxEjnlSabnGNGoHu+353SqqIOG46ujvsaTXccorBARN0
WOXswpFDFv1wbHQw/OUQGSvXUByjgjrg1D/JG19fzCGjvl9dz/SK0DN2hrrw
pyQcJh/V6OLQCLMHuvs/FC+h78HnN8oXEcos1Kmt4SLiJsXncUq1lfAgaNM0
8PkS6r7toLYYm4ZOy26lEygUdI1/5XA9/Q9Q9ZhvbCn+h9QifAs1RnNRgsWn
8orevyjojguRg1KC/mp/qHp5hgUzsbzK/zYxDt/0zyc/ekDCIo9i1LhuNcOP
c6cvyYwuo3c8Kl05/PGIW8m9n8NmE8nfnpFUNs2BAbFrdWGlBJzwJZ5KULsU
hH9F6CxfW0FSmw2L8ro5SEDz9fMrK1uIX6O0Uf16AZitMyYkM1KQLv3wtuK7
SKQVhSU4THZ8O+/k5/L3HeDOUpalX7aO7vVxfT+ZEodeNVfGnpRZQnDvngSz
QRFSHTEJND7MgAPaVcNd73TBZVNmhyandTT/62FIg28Iarr2z/zS0XVEK3tt
pOZzJLAIiZM/zjNjiZkD9prh49Dhw5lUe5cNJ6OnPKdvTcGPN7da2HKJWJrh
0eEXdtVg6anSJKRKg1tgNPTE8xb4cOJoib0eGX8+rhYgRNMG62+FoSmSFetd
ntXWU50ExQw//vR5Khzgn0cTvlIOxpzx87G/6XGwNJOre8sgtCaLSjl/WUOf
BTJT6N094K3F7ydZO35xwe9cadaOL4vxZ/4YfraEjE7QzZW/wogJSbjzv99E
5FdMn3f1J4OS/gJhCTNg18Bdek7jgzC860M2eyEtXscx6oy8veCdJFen0suA
D67YWvjTD8P8xXtpic0MuEaD6Ga14zMC4gSmMUNabHHKszf2WSdc3ycjFrjC
gvXa3piu352Ehq5NJf0NCqp7xk2jfdcfvS+R+f3IioCNmU9XjN8rg6nW3y8M
7i6iX1KDH4RXd/Loo3++Ug0THmrIpiWpDcH/KjoPd6rfN45zjr1HKKKQtEhp
UHHTsPcupZJISxFlZCVkFGmY2ftb9h7PY+/sTXay916/8/sHPuc51z3er9d1
fQadQWuRgs4SymX6np3x/++3chWRLk2B4Sxj9CfBZsAuavd8Aylx4I/C59+/
tIOq+y0vdfYNJHGsqAK1JqEL9J5kvHHMOGOzp5fcZhxCPnX4FA5R4FwKkZR7
km1wA1zMTZ5torkHWsFnSyIhke3CB75aKtyfXxetT+LHJIX9QUJrG+hyzr7e
js5kaN1AQtwPF1ESF+9fMokshN605y6T5iNiQDu45loUMp9S3zl4iQL/Rxhd
+83QCr2vqp82mU2h5VO5sQU8dUglr28x98YWqr+fdtLSKxgO/rJ6djZ7HV32
+OWRPJOJuh18pU0pCPibmekrIdUyoN7kCx0fo8DMHa4sbQstkJVeysxYs45o
l9z72lUL0VNtqh+nhYg4JSIsxCPlN+TuXZ5wJfmYLcXi06ijRUD+215IPnUB
KW3IZuhnFaHfrFacKaUsOGL3J/eG2Di0qU99eTW8gUQy3jW9JmahjCe3j/G8
3kVuRwz3M5RlwNGXRYEnzsyjdS2brgLlKmQl9bV2oo4Oh9BcdxcnDsFwwD7q
w917SFWGXnNtswi0Z81GIkS2UQonVJEYAyn78v5Ter6F+C/nmwc/DYPiTTI+
/zBmHMb08eU7jb+gb5CXIn2RiE9+aBP1za2GYbmTdndPk+OQSUtOQmgFSEom
mhey02IDccOrDJU9MPXOAeRXKDBd/ZpTzEwbzB8lszfgmkcPA2RdJg2qkXTv
XLH2UVL9DYje0aqmUMTbLfrQdRdF1p77ID6YBtYhL7LbDy8jLqvMx9OpZajU
T2a7W2YbWXE9OmgY/wqtVh2nrn5NjXUMR7CWai8o/TVlKnbaRiPRpTeabokg
U5/U0TcKWyj9sG7E31eOSJZJvGXdcweVfzp/IoQvFXzlPn+IlmDGYx/jQw+k
/IOnaa6DwTK7SKipyEF6OA++WFV1vFAgYsOv19sqTGthkkflmk0JBSZLYIta
+NgG9cNzB+UMaPG/7cXzBLJBEFAdOOzORYuTD4/q95r+AdHF0YxkZQJWSKbf
WmavA0EO1jM1zpSYRfx1S/TTFlgq7P/7+D4r7rAPYy4wmwbON871x0KJuKVk
ZuJteRPcjqeRNrOnwGU56Sb5cS1Qci2Afr/eMsoS/O5+OzwHLXb705RdX0Ju
fCKm8Tul6Eyn8df7QuvoM5XMvUc0v1CmVe+U3y9y/OKn6/04HQQW1xVcmnup
MItd/F8elW6gwscJN5/uIsuRkN53lUVATJtvXdelwF164o7LOY0wV3JGx+Mr
Of6PYUPMUCsPMsjeFb5V20QPt00LWz5FIeqzD1hEErbQZcnLvpr64ehjhILY
lWhqfDCT34pzsxuMcjh5t00p8VXvg9HnldrB8tRSbnUoGT7ypXA0LTALbIsb
Nd0ltlH56bU7982TAaoCl99U0GF6XrM8bYFh8HmQwXdTjAzbw7SukVIhDL+I
O8h1YQ8p717oMqIqhQZiQNQl8S1k0uLfV/gkETY+HmtYvEKNX2R47Hc41wM0
PBQfmpRpsP6JqraxrT64rlR39pUcGZ6sKfcp/FICaduPptulyLHizR31P4Rq
mBO4ZCvKRsCaCi2x/VKlEK7vzGz6jQ7XnPccUjEfhEchB5wMP1Fil8M/FOSh
A95EfEuR+7uAUrSZtd8/LUAy3QG2JSS+0BmO3ai9nYe0/PWJIb2U2JwnYsz6
Witk+vhu+3puo6sXhN0yRLKh/JuW7ReDBdQp2eYwsYLQVTYt86l9VHghIkAq
i9RfVs0V36+VkvgmpFpNPKUQ2u7lX6Ry2UUjW24ZDn8LoOTihxyttDV0cvnw
wEOLOCSvzfN4tprEE+tBdNu3OmGl6eirMblVNKb/4ewl51TUup/JimVhAy0c
DY/IbPgOuQZOUdrr1PjtvNGrPzo94FbizlQjSIHfVy472tc0Qoa0vHC32BKq
7vt0UvNBOpK9kuNDMU/E7A+DFbajGwC90Du0xk2DDTJ77u3v7QEL/4sZNA4U
2J1KjbpmvAUsPt8d5+YnwzJtAZXL/2VCzfE3HDok3nY5x3rfmwfB+R9MfAz3
t9Hxy5nuUik58OmISR7nLCU2WrguNhnUBEJnJSSffKTEF+rjAt1K2mC2Aeey
d7HgypPq9/1+TIGXF1v/lgUBr7kEGP73oQ7YjkYUOtMQ8b0uFm5x0xIg851n
mGVmwW+cWby3pMeha9J452sUK5Y3/eQ+u/AXnNOPv1O7TI6RhQFTnWw1XOmK
v/roKw0+oZHMVE/ql1ob4SVFPXIsN9BiuzVaATYsgepdAjuIvHyExjA0Afgt
Dl/pe06F3W4/leUL7ICqnYT8AnUy3MFfLPnzWRHU+leYWWnuopYR47bc0Tx4
AZB188cm4goff/y0OAzYyYq6GYnbCGv5GbjdeY7Go7DVf7dWkc4++1PMqvGI
nSlhyVdwEbWomym6Xq1Ekv2JB5/KUeHmraXQjrlOqNH9l5UsuYckXTjGDOtJ
/dGPWGPMNxCf/eL6makwGD6dd0OIlQHvO1lK37oxDIelqh0zIimwt1LCs6b2
WnCxlj6sYkCJG1wyVCyDW+GblvbEZBcRcx2s5DK+3Qxx4doTgQ17iO8bpp2m
KwXLv+oHD2/tIdeDb2v8bmTDnBZxwO7xIhIJ1FLielyOji1Jtz2R3kUy0dds
tHdD0NxiEHW4Cy3eYCTSSYT8AebdSFsXqj3EUiAT2WWFoaWEbY65bBXpp3/2
MZIpRtdTNiWD/ltDEiesG4kuCHmz3Lkm1U+Btbl4pKWLWiCX9ra8tSEVTl+e
FrjB1wXHzXZ88joI2Nq1Wj82rBqkuY5++K6ziNja/K5yzZajp3mxJdibHl+2
mfgkJDECTOdP8CrfYcBusrH7D3uNwnsV6Tz+RBbsRvPGqUp0Ai7ltB6Psybi
4kvs5KdEm8FsYeX+oVh2XJATxaqoPA+O3c/CqQqWkbIoz9i9qQz0popn5xwP
Iw6pSrlgxDQGp4QGThVHbSFXBd1fW3pxUHKuxbyLYRf9WDtexa5fDK03fnxH
4xRYzeTmJ+9bLeDzjeGYXBI5XkzAz1ljy4HjrGau/Zk9FBZIUwQ3bRGj2jcO
JdLvnQ3oTK/1wMj2VXNMlRA5dqbmqQyqjAJLuRayDC0ilrR+BlVKdSD/sYJx
aGMF7eoiT77pUuRfOkAbtUWGvzfx+gb75EKUas4BJg12fDwwN+CG+hxcF/ik
Z32QGq9Y3jv5xKsL7q6qaZ21IscVv7kV0kh+LTbJVB7UTIOvf5bU5C/oB5U2
pbPn9Vjw/DsGBrapMRB99sXU2YUSb9ozSi5eaQdZ568XM/p2ke/kp7XzRtmQ
GnGut9SDGmsdpbn9MbQX9icFfMmUJ+DxQ591JZ9XQsoitGm3L6OIsO3lYsEs
tFDEzCMUv4MUVlb2n3qWCi2pWoX7acnxj6D9Sw7nfsHduuyLd0l+1rq2n/iT
vBF4yH3Dq2AbqY+8y1OfSoci6wyiqRYLjt6nueL0nMSzZ6pevyghw5n0bHQ1
38vhxdwLzZZoVlyYT7u0kD4D8dxbrE0FlFgtIMBo7Vc7ODByGLNiamyszmMs
atIBtIdPHDnEQsQWr+NZTN3roEhf1jIuhRLbGf9ecuRuBYVsE/+g2TXEFfbx
iAjxGxq051mnfETAkczTnkdvl4As1y3TRd4ldN1CgfuFTQHSNnjk4/BjC5Hx
8ZqFJWeAAf3pI/EWRBw71m6v0lkHRoXrYykZlPhl/cOZSs8WCLWQCn64t4o+
TDnTrQ6XogHf+n1y1ATMP5qzLySPdJ4/EZsNmTRYUA/044f6gPrP9OmvPjT4
Ggmx+wW74R+7a5fHaWrs+GSKmajQDV+K9s4eu0qHJSTnwkqohsDcfPeXsCMV
7mEz7u372A4TZOnf++33kCOjhFPKEQyhlvTbQh4biHPOXOSO+wM0coV3RH2E
gM84DsKZtiq4QW8qXOA1h75TOA6eVShD6RaPKBqSNtAV1wjPmzl+sNl/hC+P
iYCr38hWuvaVgcr7jjvRZQQchfNydDIaQC95yNmLYRtJne7ZVGJ4ir48FvPX
pqPGx8LLn7cNdgGNgY6Six09ZjR71fh9dACcRHVlDQPXEO+4oXDv+Twk7KnD
MLDJiNPv/6AZ6R2EvsN3X5yzXUJhsiafvBjSEZtm6dP0BlL/C99kyLWOJ+VP
R0PLbSL2DGKVF0lsAo3Hj1y/kXhrsyTkoEBVDejwU936ykSFOyPzJOlyO4Bp
l/7NlwVKPJUl3xBj2QbM92VZbHuW0TW6Rr6y5hT0VLkX1uwJOFRV4qvnhVo4
murUOyKwiKqkGaltnmO0f73z9hwVaZ9+IhtxDmqABTQuIlpGgS96xFLUULXB
5Z6KEKkyGtwcZvtk+GA/SEodMyh7TcAmNUbevIKVYP3oFo+8Pxv++6VIQXVy
FpIOUe6kmiygVcekI+I2GPUHWnYnTVHgyVs0v7wq24CFd5HuHclfBU3FWo3J
KuBLoKqUDsnfXstSKPvzY+B63X/yZv42etMh9y7kUCRMpkG3LQ0LfhJ8yt6w
aQJonp9NfSRLjlk85jXEo7NhsrDl9MM2CpxEuCAUoNgMJ+sn34eJbCFhjiAN
A9ev4FXw9EmGLzXesOEzuyLVC8evOcjY8VJhYtX+3E36dtgtI073hpBjBn5V
HoJGDci9SqbNMVtDvYFOoY/+FKKxzWjhx22U2IxCsDH9SDusqX8iZ5El4HfS
j+fdTpXAlXfxHrPnCfiph3V6hWo10Hy8G8NHTYaPBVw9rJodB5KXbgucVWbD
KhMnY4KOzQBlz3gXnltBk5oJ7sHrZUhvLUOd6jsjpp3lc7WfH4PYrscXKylI
fEjdnnrvVzdk5IbwutVQ4LmbH5dWqxrh9xFOw81n+3Ai+8afQZMFCNxrZh0R
oMOnDy1LvGnthkXj1NqI+F2k7Sk8mfEiFSzejl/aXKDGDdb7Xms/6YVLhFDN
cP19WEv2vq2JyRQ8tZMopXAlx21CrbHWqBJud8xR/ze3h4xYRxWrW7JgsDDY
d8ZlBfk1f7Ln5/yJnqaVlRK46bDfIdnGqplBcKqMMHk4SMq/h9kvcUEblClu
P/n2hICXF21l/gzVgTGXRXDKUVp8Z1903iP9ATgSbcD/6DEFdlgunmNUawVb
lWYasfOriA6P8kidTEdnL35/fcODHPfL+Hja1tXAgXfaapy9ZJjybhURyRfA
x2vHDvjcpcPx7gUdfG/7ofY+TbulADU++cvy+v0rXdC1b8bmjtA2GvLP7FjS
DoHKss7P7seXkGNZVlqdWiX6GTEkIH2UGv9nuveMLbELJgJ8n3nHr6Jr2X9L
BCgiUA8T1YOrRpS4h/f+9pOCVvDS5FaPvEWD+88zRpoP9cKrxlKnU34k33fj
l29YaQFnY9XR9ySfyBEgmB7f6gFLp1fR/LsE7BW//nZorwE4WWvblJj34/hT
s7heZhVK4kwaDZPn0BMKqxmFc5WoTr5Y5R8jAW/kC/dyadfBqbjX692YE5uw
cIvujC2Bmo5DDN8QNW7qdBdWD+mD5O5nO0U/VpEju+6pEMdi1CSRp/ZRgwrP
dOc2av5oA9a8hFuNbOvoi6RmruNkIZJXXTiwIriLfm50OkUFxMNJkaLIA6wk
Xs0oS2xMaIMWt8XAvP/IMH/q52NKYaWQ9PfmQcEQMnxJ++MjrffZwEw/nlYk
ToZP3JJpW7iQD6rpldPf7HaQ+t+avb6eMHSIaXRr9PsaOrFUf3XHrABxKDao
llbsIjHOExrKR/MhsO+3bXUfAR+0eCVvte83nBLgKD3Et4GoTZ6EceVnotcT
8cEcpH37RtlQLePDbzjM0F4uXLeHMlqy4y0qokCOI5jeM4GA62QeLjEZNECD
mHGwgQARf33+/NmCZw3QOlCoHXhIhfVd9FwaLrQDT/+i/OQmJeaUfdMYIdgJ
t3zdolZLKTH7K7uHgjwdEO/45aXtHSLWPHnmgMj+ZuC+qcDhNrGO2uWqqBZP
+SMq9w/d3QRa7KSdpLfPcQCkV00mvJf20KtCGS178XRI3fL/8I+WHvfqfkxI
1R8GrUmv0FuaDPhSm4+7/LdRMCE7oZk4SMTrqdGJmL0e7jGKT1Ovkfyw+VSS
4QaCT/dHnKLpN5Gss8nZs4RkOB/8T2ZEfh7pnRG7Hx9WgbSmJmTadAjYOF7s
4KcHtSAwkGBLRcOIMfeUHUPLEHA3HoRR5mUkVuZ0RBDHI4mI/y7rexBwoo3Y
SfrbvyGpXPcYJvEBS+GJihKhXjgsHKxo2ESGD8v0c33V+wmK1tQPFWjZ8MAO
nrjYPA1EqqO6dDbzSHylSD6dowptH8iR+k+SHD++pTj3rK4CnAxSh+zt15Gh
UIJRpk4I8uOuy1WpW0Z9D0dT0ssLEHvvdEWVAxW2Wq84PRXYCbLttyUsGvfQ
YDtFN31fFryzqOHzGqfDDX+efp9ZGQRyKdcP5KWk+hlMRGnmNMHpC5kxfCMk
sZwvO/Rt+ReqtMnffi9IhcW/plIzV3TC/e3S72z7KDDBOqZpJqwWiKP70zko
SPW8fTzz0f422DrzRzNWbxdNn/swyKaWCcYMlBYqvuSYdyqXz9imCo5Jrt7u
JfFB27yiTOTJFPS60+/qPadFZEer47lbX4iyPIxXPwQS8bXW8jvP45rB1smg
bMaTAk+r81UT3jRCjI48A/cyJfa/99BaK64DDs1N81y+R4t1NW4O3+z6AzKM
Fr8Lf+4ijUOC2dduFoGL5SVf2qg9ZOF5IOIOVRbUp0r2uR2iwN2RZMxeHvVw
tK5lW47EexbkBPInyZVQ7+/nOk22ipQN7w4LuJWie2E6Zdus5LgmXIz85a9y
UNGOb5Xeo8YP2EN/XCLx09+DyblyVhtonLZ1/rSrD2g8tJ4PMqDFh5dVpJZE
BsEkdzr0Kz0V5jjT4ZH1tR1WN1QeRzyaR/feBbbn5RSheMHO39sqFJhqNcL8
tXsL/PDwvyEttIYSLn97Yy+VjIofeV6NukzExnc00nKDGiHb8GSlTMY0It4o
6M/fX4uINxlCghTIcL/Vz82PLzLBgSc+i+8MARc4yeeFedSCfKZrGsMwJ17J
+ZOhJ7YC/zLGq2g81lEq8TnvLlksOlbgWDbEsIiOGs4vsp2vQA1z7wutrclw
advpYx9+lII+82aNSCIR/wv0Zw65WQeEeJNDFhNE/LtDu9rAtx4EKjuE8ifp
MF5RCuDc7oVaKv05yXBqHFp1vrDRpBe8tUuYLo1uof7LbN7u1VlwtsCB+/15
MszWou4e6VoOig5ufGcfr6EbL83y/7h/Q+lZstyeHduIjNuPfVIvHxwcx8YE
npF4qwa1XjxVB9OSw4ds1FdRjEJxc+LxNNRle8LRgZsdv9dKaLQ/OQP/KkRv
Hvm+je5McAKvcCpQZCqaq0huIpoYmw0ulVA0dvtZ9yk1Grzabc8h9agHMlMk
Im8vEHDpf7QeNh+r4OOaMGsVwxr6t6+AgaiRjlSpxYc8FnZI9aJ71UqfA2Zd
AQ/Ia5ZRQdD86fjJMsSfpbESRdrXnyzu209eQXDyyqXQe4V7iONGxFKoUSDI
P6+U/ZpHgcvNvOSFrrZBz3FvdjAj+dzEX3WlqibweXHRbCiegNcc6A50KZSC
sdHL033iTFh+pezd58lRGK5u/cxM8tlDYrG6k4Jt0Pf7UqcUGTkWT46U11/8
D8p1Hq8JDdNisqVTqm7spH3EGK9hV0iJF6d8X34u6oBgL4v6pIYtNKKxLa26
/QI+cv5sovlMwFzEIbPIDw3wlEl9r8pvDyXSKHfybBXDR9r3HcpXyLD1FYvT
9WqlQLNcZc11moipG1Zy/DOaIEzw6I8f2pTYifLmvZKzzTA+qTz4s5ceN1JT
7nXHjkB/hurjNkM2fH72xfwhj1nQP1t0VDeZCcftBsouhYyDF3nAFJUNOb7O
ciRQwaEavjzRf3aRmgL7cOqFR95rgZKeIrrZEXKsLpvlWk+VDzZPv0xsWSyi
rUfunvsqstDFb5HnO8xYcMmFW4175ZMg0yHteL1zHQV9MA3PYP6OzA9iycRT
1Nh1T3D9ZU0XcBslB25nLaDg+39vVJZWoTZawZP0lwhYYsPsDe2+SmBVmA2P
IifgiCiOISGGekgtvs2oo8mEH1wLYakhH4RFsS3OyjlK7Cid+uOdUjsosrd1
hc6S4xKqLTev+Gq4YbnlNUf6/x/lN1iW+0YgZqLYXGLfDvpm6ypd6ZoKxLPc
uEqPAq/sE8yP0muAkx4yIlEWy0h0+vfXY1pliN6xqDfMgRFf5l/v2psfBU02
c7YULUqsf9BKn225Bd6JUNSrvWbEVvfe2u9ajcFs+vIvjquk89imVVafbwO1
oM+LGucZsVcmb02A2hiofwtx0HPYQGsF799T1YagJ12f5rW9p5GTRZzzC+ca
tFJ8mEnp3xK6+ldMupYvD4V+8rI4ensVaT1iS3DHkagtu3fP5QsZdstQePPm
cyr4/gBjpEyJn0dRDbxZbQVdhw89n7ao8NFt46OxIZ3wQKbH7sfRHfR5NUD9
68Y7uGLs7nDZnBpnhHzt6jreDWtc3IpfYgn4ruuY6XpxHageUCicIPFf+Ql0
1bK6DDWmDD6kKdtE5p3PiWpOYfC2OLxRmJ8Wq9/fx/730wBQJZdWzYmS5utS
kMjTfxFwLEu2J69zDT26yJDV2f8QPjxrMXj8ixXz5w+HXVydgpqq6zYV4uuI
6+ZnkQe74aj/+BK34TcW3N9wSTHr1l+4VBNIPtO3h1iy7PHhEATiLE9foJtk
uEtYgfe+VxlU1X+VHs0lnZdBU3VCrxbOHdPljFWgwAZi9aMMJc3w6FXVucmz
NLg13P1kiFQfGMWy/u3TJGLHoU7WKYpmGPlofgflrCOn+B8p8Z3piFQ0qult
ZrxC6eN6e3QESks0KsQi95Aye1H70giGilwVNDtAxNOKo4MC9nVw+J7NrffT
pOufn1B+9qsLNl4uuQsNsuEOQstxuDMP130uT4zosuGhczjapWwWvhmXME3F
0OCKCeF6YeV+OE95kow7eBkJC52QnjqTiJjvz+xmdSyjTzOWx4yWypHEtt2X
vycW0PKS1DddM4xY+AsePPBZQIfGu/60ZmFkYMsnUb7JhBMLuvojdoahTrL9
gFY6Oc4buGgV8bkMIu4IZ/mO7CDPjVA+H59fQEHzLe9A9BbKZnoacZrTCf4N
ft50S11FAs1X4i9K5qJrvuOPEtVosf1hN1pJ/kFwHtAQ/j23iS6P253JqU0A
U1wV2H+QBh+3GLxrwdoGjUzpnDmie4hRtvinjP4voLLy57aY30IrCzPfco+4
od3nfVmnvcnwdN1gj/B6BWhVehk0vGLAnzNGE9XZhkDZ3IA4W7+Kfq3Gh+TG
RSPZ6hPfXuRtI+G2+ZaPmhngwle5eiaaDHPSHR8dqC6Dj4Ei3w8Kk+Ezh7Yo
XMVKgeBYGb1lsg/XxW/IvOVehH+qGqXpFauIF6WYpbtlIs2hmaWteXJ8KJ3+
j+ZNDCoHPT8/tKXFzkfMPHScBuHtD37dmHQanLcsvFBR3g/ldx4ZrnDQ4I28
W2Iua73womXA4nXKCgrPvvNB5Wsx0jE+IMW/So6NE81L+gPz4d3jCAoFuf+/
3/aWqqBvJpzd5k7TMNtGXhVBXyy/R0PaPWLUSDQVPt7+uln2QRfs1tI+GQmZ
Q+NOwj8rrSqRLuOkaXkFEXfFRsQc/9sEqxf+iq3ULKHZIWrucrIcJHmg8ffh
m0QsyzxBdfpJJbzgKKPU5KLGiyJiyj89u+EDR9rb4XQybDySpcnxtBLiTuqI
yyQS8GHDUBbfxnqgz/xI+HOFgLtCsqK2lRog4uGwhsfrTcSXe5E37tNnyEv7
MouebiP/50niDya+Q4Dvr7rURysoV+xDMQrIQoLQHJnguYZWdFmPPtWzQ4Zi
+Bdf3i5SPL4zQcGVB1ri/l3RLWTY66cOIU0SQ411JLuWAxkOVSTcUfxXALHp
4nGR/5HyzN7koMOhNFSQESq5WreD6D/z/2LbTQe7+pQzqUHLqFzRxrO4vhQV
3MHrkZ1bKNx9/uijB8lwgfpG7M+T1Hh/3/kOxcPt4PdMPZzJlBbnqE1Q/uj4
A38v+84u/aDHP3+ybml5j0CvQ+dt2SRSXv7c138ipB6kY9wvjw1uot7y/xyI
0gngasP0+lMTKX+5ElUPJw1Cx9vR51eM59EHnw2uAOVypD6Tmj9pvIYYZFv+
q9b5giDh5ZlfM2S49bPebD19GTjQ+0aWtS2iXBy0anexAgW88+oxdSDg9RyW
W3Q/K8Dy5O9FpaObSMxwxTV20gUlZ+frTDauIaF9Dq8XP3qi3qlAnvRwGjzj
/ljO3P4PCOBzds8idtAI25kyAcZ4eHdppYpgRMAsTPoSUbH18Fhd2GP4GAUe
8TP0/+9JMxz0+KckHjOP6lRPrfuHV6GDy/aFQ+Yk3i1YtPk2VwbtHsnXJUSJ
+MLxbic7/SpId/M3spDbQ3tJDo6CEUUgtrB3w/DMBrp8Pfq9q1Mq+nbtjGRS
+g4abJK3blRIga/3679k75LhfSc2JtLOV8HevaW/WdvLKPRZxVZEVgwK4Lmy
wnKJHqdqeUqajw2DXaaS36n9TNgvSXDU6d0onAloINw320FrAceuNy3HQ7fW
s2mP44z47RE9qhTPMdiZPfqoJ5YGh54Pjbvg1g/ywjPYLIgJK03JZh8JGAE9
e+Pf8vE0+FRNv8l9p37QvujuLCNJwLq2ksr3DjZApuFEfv/KJgq+HayoGZwC
itJ6GYffk+N/3Uf/O6lcDd0+8z+PqLPgfKNknrvTf6ByjGN0+dwi+mJE5/Yv
HSEhoVs5nqPU2ELxTkI8Wy9g52oTuYMUmPzap9bvZk2gxv400fMFyV+Wvl3A
bc2wP9TWL4rENzeOuVkRX9ZBfZ04berVZbTCvdJS+KgYURDfHX0xQY73RDS7
Wo/VABOz4dJKxhqS2HWKORrxFSku8kTMKlBh9anj2p7bHdB+aOYVFcmHFQ8O
yxWOpsK9TtPN/NPMeLM+4vw/p3EQ0tl1kdEj4H+5nsrbaWXwpQDYkjhZ8CVb
hg2u5HGYFXYZtj2yh5g41M5z+KWAk3k3jcJXMkzVLRpGlEHwlf/6jpXwMvrR
NNrqbZuBiDnVkvVHWDErUaIKOUxDufi2e2kYNdZLdX7RvdkD9C/tg/gtqPHR
/asngkS74IFO9E+1XkqcHpF372ZmByyyPaqcJPnnX8MTatW0w/Bph2NT6T0R
m4os39zLqoVXdmkdsx3UGF3tcH412QsDEtsm+5jW0G18Zil5IRjp3TihciCY
HJ8yY+bViy2AzSFkm89DgW999T8p5Eny16HdkmqSXzqt5b31yklC9j5OzU6h
rLjIZaX3M4mfxCXzjzTWkGONTxydjaZlMLlFleL3YhPJMR9y+eUbDLwF3KE2
0hRY98sbGyP6FijtOvVySm4HlQrJWV5pz4NrF842BB8m4IkLehOy/VVgrBpz
QPAziVeK8qYusg6C8DId+SoPGf5qtPH6ZkgJaO4oJZqS9mdYVg/H6czf8PlG
h46MOBnmv/H+bpl2Ljx8b8nfU0uON97o+39eLgfz/ttmSIWAHa9lM86JNsAP
2ufvvTsYsSL/KuNg2V/Yro6zaLq9hNhlw5yibNPR9WpX28BxKnzjEPuzYtUu
GGndPV9O4osbeubHnQzyYCrg73ZHJg2eKFMbrPjbB/+dGZ5ON1lH3h+eBbkZ
3QcLhxHV5OdUWOO2gJ+VWjtMv45MWmok4EJgkREprIY44sL6MGlfJYX36Gnx
loJrSUMg92ES304LXx8xLgSl13zCE2M0ON/wt1M57gfnE07z9taLiCo6QTmK
pRSxqBULLfuRYZ6FntiIfgx0HazY9Dgd5u36j7vr7gDgbzluX6bnUKGen0No
XDkadbTNuOhEjY1cJQ3UaXpBji7RxtVmAdXKL9nauJSj/NZTNUd2ttGmIsea
ulEs8KnEDzrmzyO5as4BPW+MzPXcltZf0uBgIbm4oMx+wLGv6nPU1pFw7orG
J1leVNAYc/1FER2u1mCiU30wBIUqajk7P9bQ2D858WHrTKThLpRx+MgOeuXF
8lLqTTSyMqAOyyT56m8WhuDxzjJgf5jGUz9GjVdGDciVxXpgX9fuj92DC+he
gKqQmXQFUm7S9V/io8Isw8rfIkm+ZuN1/HpdOgNutuR3l+sZhoaMKtpMVQp8
NYO6a0SuCVhuVCubnaDH3Vq6UaTkhTBpNvyafh+20Zo7LKm1AM7JogxBkYto
86GmIa9OGcq+0VR60J4KT4lFRrLXd0Gj9fGfNl92kMCz0l972UXg3+anafib
gKM3eNMmt6tBadIjPuvNMvrvjb1a24NolPh6MtakiwGbjQlJ6NaNQEd6inXO
zw1UV1Ys0idkAKPkE40Np+hwQpZShJnyEFxadAvyTyLHF9h23uqwF0N463s1
53M0mFCT7/npTR9YR1qKrpVQ42BqzU8jj3uAI2PmEiUVAQdX1b0RLaqCEiSq
f+PLPIq/X5WHisuR+2fGyah20vzpxL1j2pcHEg9kPpym2UAOKhK3muRs0Ee/
X1aMdwn47cW/zAEmtZCUvGtnSfJn17ySPVW+Nmg5jyr26ZFjVVWJcsXeYriV
cIP44ygBl2nuOf4KqgWPaA/JT0fZcScbYXzIcBqyTiXLFLykx+YKdx0pjozA
9YLPF272EDBz00BPknwjvPbpXH5A4ssDNqlG1DtRUJp8p752hwE/Enup2PGM
5FuslaaUwiuoatQkS8EqHVWmaww7NxBxEWNi38G9ZphevMt19ecM2l/Mzd9q
U4HyhDuyZhXIsFSQUvwTwXyoi/VXWhymxI3pV5kM/TpAdNef8EWKCueLT+SY
NbbBWN2roNp7BPz5idKPyG/loD/9x3mqdQntMguyee6WohKGE2UyhiR+oi/o
W/H+iUYIQlspStR4zazulO2JbmBONJZryabHllFrtc9sR+C4WANvUzsdfnkm
5eC60DDcjv/kuaa5iUZPLHMmPilG4YORAY9dyLEyZSr1ReZCSKT6FBASSY6j
eF8WspnVwqaQB9vK7z2UMIOf5T0rAvaweLlwTI+fPWp4/Fq9Gyao7w2yJ+0i
7zx4JnU0Bb5F6HjLmq+gf9Z7coTZGGSkzqU6u0jAepAT19XUCMerVDubP9Dg
xU+UGwHNPWBnk04zHUOLf62fIvuYOggDljc0lVbJ8PkfrFKjC+Vwz9yR4Tyi
wMzbL8+ff9YGTgf/XXHd3UH5g53lAX7FkCqVOp9zhAxfsCy+M2paAteLlEUX
E4i48wFOiqxthpIk3ZTSYhbsW+474XjzH5jSmgZOWVJhUT/6tKu1XXDM626i
8AQLLuh/EHOQYRqSZy+Gdr2lwfbPomk5dPqAEDV+xnFrCUWv3NrUGChHQ9ML
fbs3KfEP5jKD39LNcPgdtfAAyxIy7P1YycNTiGi4ZT2u/NxGn0xjPd5XB4BH
pYZM7ndGXDgfN/DyBilvSucO+V3bQ1FvztxU2yqBe0xDzXuP6bCYY/byr8JO
sEryMLIToMe0PWkPXsoPg3Jwikjlv3VEoBWKe9aWiiiofPm5bKnw6Q4TFRP6
LtD6sB199jsV/sxaz3y6uRO+HNCYeSdEjb3a7HIjW7sgbMu2oOwcJab4JBuz
37IV5ljXfTKjttEZPcUDz2yd0Bnrd3800R7i/82V2e9ZBDuRV6VGFTdR3FDU
EzLuc/C7kP94iiURux0TkMkrboCrkcl/xYbIsV2ab4QgXw7MWzc6DGWQ4wWH
XNY+HVI+WPW8LSXxYMarqplY1RQInzixL+8nI85j+Lc0Xz8GRH3sd3ZrF9EF
1L+xSPwJFKZ1drzmy6gqo8nnoBVCuTcsGjOO0uKbvN4aPAZ/QHpruUP6yDJy
XEsefbFXhATcZ+vf8q2i4rzkYf7GUmR2MUXs/BwtZnhaE1f4+w8saki86hmg
xHrFeuo2Kx2Q3eP6o92cDPsORxRzPSuBE4sDzM27dFhUam4jxnYYvDNrWrsZ
KfHpeGUDFbJ28I0ONMk7TJpX3Ze8CiGlIJnn+4D4jxEr/+jaX7o4DIFq6rU0
oWSYtlNUyz+9FFxeBWWWOlDjvxa/dvtjuuDnrWQcTuLljoJDF+pFKoDP85+L
PC05LvERNBLjqYKXZDuraqHbyGZoSUv25i+4smCY3hG0gqQFKitlzqSiG8YG
YqEPNtBid9zMo58YPT7XI/uxehvJ+i/8dObMAHn+PakA5SXk1yE18U4iCzF7
3A62YaTAuVSarMxv6yDv1zGjfd93UOeth9U/A9wAtJCoQB4BN91O0NvvXAfO
F9S857zpsR8z58Su8giIdatmUNftoYNcSlxKbk5ISPtFurPzKgq/++aFvwpG
wZWFn59cJMN/x5No03EZUJ1MEpc+zIA39Ar1XPePgtq13ewXFHT4thd3yr+K
QXhKeR1duLSFoi29E2Pl0oHrTPNB1cJp5FPgG9BKUY72ezJe3X5Che8Kn+j6
5dABha9UL7iQ/I7Lbu+Qq2AJ8Lk4advRUuGH2ndmiMZtcNQn6f5UwQoy+1iw
4RuSg96413+rLSLlbeqf2yryPbD91QxqXVfRTe7ht3rG/6HOAnR/RogcD7M+
8JksLwUV8XhWJgZaHCvq7myVMAC7sq+FybNX0RrDJDw3jkOba85iGotUuJKe
1mLDrRvGpZRtS3pWUMqf5rpynXhUfu7eiZbn64jz/Ip39etkZLH8/Wt+4xYK
Kte+/PxjGrCFtw5PrK0iu297zEpJBUg23dzFPY6Ir1wa8pUWbIC5rolPE7HU
WLa4UtVpuwcWDDIzr18gx2n3LVWVVdKhRsCZWNNJgcvlZ1KvJLfBrVPXnrzz
I+Iky2pNv9Ea4KWxsLHNW0Ope+HRugzmqKWLJ4sViHgodvXBwnQDaAd5iHAm
0GCfk2NeqfF/IGtK/tR4wSq6+j4hOiQqETEpCoa8uEmGVdJcKk3rHNCu+mZ8
lh0lrmBnDQ1ObYO6NGOdaX0y7NnWJCGzHA1Lx2jV8wYoMEeps/OAVBsorRQb
FyrQ4oDnvr2mAgMg8e3XssAxIha5W+bfee83cPPyfq0Y2UYtZZYpTbM5IKEj
eMNblxkf9vEav1Y9Dgo1SW3iuRR4oigxWIW1DWyLQ8Oazu4hgze0eYpQBC0c
V+xzi7fQ3HfGR/9izGCSQjWe5s8uwkJWXDUDxUBV6C+wPkvEnBtF+WOVzZDL
akJPV7qKoll1W70+56Lpt1S5LQMEfENwSOLeaANIGcXp4eV59GM+aX3bqhIF
jsj1OZgy4uXwBAkxlr8Qt1PYbfiGiLXiLr7P3G0C34TJPsFBdhwoZnPW+ss0
zHxl2yQ/tYiyqSi4+asq0MMFUN8XSYn72Pcd8aBug9a7DRvb5hvoDwNlT95G
EUrjrXWSiSbgdJson4bTdWBxdmOWw440j4/zYLS/GV7m7Yt05CLle7OirEZo
Jyi2Xe68MEyGvf47vlgckg0iWu41qV/J8TNgVVEeqwZOKTHCciUlrrykGv60
uQ3yJ+kTrv1iwB23l29RfRmBx85iFnKitDjwmsjQ3eU/oHM509SniRq3/dZ6
mBfQCxwJ99Ou3CDDLzLCfrqQZcObFdsLz27T4P1vz1BIPu8Hn+X7kjE806j7
4cjz8oZqVJXL45hATtrnA/MpBpwY/Gv+tXH9IvlJRr+81pMGmLGXfPvg7A5i
fWn3yCw9A/Cbl0EceUTs3W5Ho3miGSS2FmePhy+iP1WSPCWTFShVL/nATAwp
rybPrXkf8EJq4YMrR+S2EUu+eYSkeBJ0XYgGsiSSj+aHOmls/YVHtryiPiI0
+HHIXihbUR/0Wf9LpZqiw4oHKBf4Rv/AXknok+QFcmwg+HnkUUwJVJw5dVGv
jpTXOvuyHXimQPMyJ9UCifekqFqlrelrwJCK/lrxIDlemZe7o3KyBpS/BnNl
Jm8jy3IH8YfaH9C9W9uv/Jx3kGuWlnpXLqlfRV7tv7NBwMaGLLwWo7XAvsPR
//sXHZZYOxAzuzwI81pxpxJMSfMcu1R1HDfBltC9Ywwy1NiK+bauVU4P/DQu
+KhRv4Du3GfbWa0pQ4bBee+eGJDj+3xHRNQOlIJcbuO/UZLvEumPD1983w4i
Fkp3o4JJPmhJcdalJR7WnnJ/X+Fnx24TRXjachy8jk926AztIPrbfY9DHkfD
lym96NSPjPj7R+GGkZAxsKJT1Z7epMTPOaWTNOTbYcnf4ab4IRIPZY6YNt27
BSe+ENgWVCjxPNlija5ZO3yVZHpo08hI6l+K+BsnxsDwEpkoVQwRxwReoHYS
aoAP79jtVro2UXjm9+d3xp7Ay2bDoSerNJghYaVHz2IAviQ8zalm3EKmCx9l
tbLs0PADtKFLT8DZr+cPBDDUQd8QYTJNgIB5HIXKXX/XA88wwfvJAhGv66v6
3FKvhqIwmkbyv0S87+nJoIC6BpCNMa7Ud2XBQTa7TpJu/+Bx/X1LVxKfNEYq
31z0bge9rDDtTA0irtQic6lpaICQSJnSk7/XECUvrTVDTizi6f7R3NW1hfaH
77/xqikMsWdrKH2k3UBDal9ydIs+I7dboOfymh4fc6JOORo1DC4SjVu1f5eQ
/qaX2ZZpGQrgfPh0koIMN1t01hP5y6ApxUL+gdv/nx/yiFGv8kXzMWmXdUOW
kSI7e9upuCTUZvjm3M1CZhzqb5ebRjcKPhxCn5KNt1DoFj1/K5cGYtp5cWAm
fQexax6rZfZIB/KEMNd5GQbMpHDwOc3KCCze/vP2eBURc6uxndsabAZmjU6D
Izb02PS15r6+iyNw8j6L+ZQtJR4Z5bp8orgdvCa5KF3i6THl0ouuaIMR4DnC
ER5kuh83sq3MCtKtA3dzw/0fr3ZQKk8PV7hVERQPvnGYNSTDUxQ7O5emEfDQ
fe4R4F9FfOTP3HqEU9HfOM7ifn4KLHygKbjociMQzg0cpfPfQSZJCrx+7mEg
kHQ/n0l2A9mg9WYJ7IMOjCm8Psy/gZYdxs5HiqajQ51fXXoklpERm9XqQaUy
dHdW7cVVVwocf/R3BNlsM/yTsayAt+uoTODMBbn3OchcN5DfI58Bu+5FO+hs
DgCdzee/sydoMLL81WSU3AeCyxqiUwHrSEN/Q/ZJTRryOX3kx30HWjzImSew
qTcIuhGBDHcdF5GvddZcnEg6GlDXD7ReYsXmHppDR+ymQZ58UzK9nsSntDHb
ms3R8F2hUvjUZyJWkPzGfUerCX6LS7DMz26g/stJ3oq/3yPR4tNyaY5ziOly
VWntThXKCbt9+7wbPc5+cvWWNtcIvFpdFawy2kS5POL5FG6B6FdvrPmBfZR4
mGv0cM6NNijlzU8+r7SILoQkvQ0xz0K1vtIvL+xS4BR1ttMs0a2Qamd7iS6e
HLfc4jw+YUTivSHOQ5meNPhoel93zdF+2D4gVT88QIO1VwzMU2kHoDKzVrWA
mxxTyZ5MHCquAHe63NKHogSslDJpJaNZDq3MyhV55SvozWrUIq9SJGr69s2k
covEKwHngsG1FN1ZvVnO7rmNWPeos7X584HQ+5K+umkdOXke9KcpFUJfaGPC
f3dR4ew/40K/f3aCZJemkZHtOgofqzny/lsCOvvMZbCL5ONSh074vd6pg1X6
xfw4vS2kL/hfrOmdXzD2gdLnbs8G6t2UPcK0YgVHajwEGOspsUVP5O8Y2Q5Y
UX5laRO9hiwz1s69UUMoY/GOuOXFLfRmYT43hTYL/ZdIXOYtosVfGUTTXEj+
MSZrxVdAyoN3o0sypbt6YL0zEpxWT4Hjyt1ndjpbgbH6YlN9KD0WO1Bk73Bh
BKbOd33VOUCHhyXYZcZVh0BxOuzV4TlK3NnpLavK1gkcSiIN1eEbKJhXTsNZ
2wcFh5fxiY6vIMuXLCMvNhCiYiolL1ghI/n+7/dSDf9BlY23+c9iOowf6T5V
VxoGKluafUfukWGR1AiGCsdf4MOjkkX3hx63O0y/3r02Akkisi9pSP00JfYi
htK8CehuNXbW/2DGtA+UM7l8/0LgnVumcllsmCMwZ5r81Tj4lVWpEn8TsWmz
3zq7ZzOMRM862J9YRUZCB5afmeSiLDvO0KesVPg7m0JIQ1QbHM5/kOJvQIav
DK/YDrpmQFr1rNFcCDVueUL7dtu1F9TvOzUmtsyiZ8osCSde16A06/wRFd4V
NFpjWzL1pQhpjl400H5Hhm0qQc/g5k8win9zfXp+E+nnXfhsNZACsTdrnWUo
V5CDlJpW5+VItHTS6prJUxr8O0pJn5K9E5YlIl+0C84i8rbOGVn7SpTl4/sr
o2IbeWnS6/bsJCB+2RrxJyIM+MDFWhMz3VFwik6U9aJcRRq0wroOL7MRGf/i
lmPkKpK8xCJBo1yKGokhu5kvtpGShRZfx2QC8q0+sZBVu4BqJrvJfjBlobRL
nzec///8xmrb1rurmXBkneY72Qs2TJxzeBwl+g+2WgPbIscpsLJyU2ASbgOe
ErPEhr4dtPtf6b0nqdHwiQs7docw4tQbFguR5/6CBadA+0u8gdQZ08vebRQi
6kmHB4blM2j2sbe2vHw12jXdrVt/NoeuKb3oWEksRULsy5iCmRJv5Y68OqLS
Bp8uVTVaV64glRO2Bik0Zehjc/OOJ98K4rdN/RCtkYSi0DH5A1KUuPruVGdI
HClfW6uFlf+so0HHbTvWzBh04XCX7AOaJSSTe/FOUnU2qggzGZ+3WkLskeUC
JU8qUXp3zC8bZzrcEBXy/HrXEIwdpqlz3U+Do95iN3nBfqhyN35wnZ0OK/e/
Sey8/wd0D5RbKcwQ8UBy/Xnq3DpokZL4qOG5iSywxpVWNSsIy7xushM3g0ZV
rW/c26lA8ZLuuy+u0GABsymprKfd4Bed2MuzTo2zFdr/vNHpBScV6evRr2iw
nRXxrFRED/BUOwTFv2TCQ/N3A2zDRv5///68lRQ5lqeefpqqWwjRmwYDqbx7
aEXgE6/HsB9iFBqj+GpPh9Xeriv5zQ7CndJEs+Wre+j8ZeOSfave0Oco9dfN
YQu5nc4Ki8feyHYT3435//sksjTrooMaQb9AcWz15yJCTIdXKt+XoGuWGr23
9s2iCyNfqlzqq1CIS9WLbN5N5FWaVX5nMRo5R59TiLpO4rO2U+JlF1IhfD7I
6pXaFlr2mzKRqHkHzvHWeWJC1PjBSyaTBz6dsBAuKlj/ZA0Fd5l/PL8Sgeh+
sOry6m2jqKFBHsXVz1BAMx5r8oAKS4cKisr4d4C6I/F2+bctxMO5k3Pz6juk
+ZH85LdrG+jgkQyBX3s66Csd86VNOSKuINO7+OpdGbzku0fTUbKFpmQKfJWP
WsFar11OxPgqenLs+8UF3ULk+ZlAZ/luA/1oCwtz1cpARxKzbwweXUEXYmQD
6g79RNJhrePhz7aQi22X2I5qAhyf0V3/606Nd9bO585/6ARK48jdvvcU2H5a
pI4jshWyo2P5OPmJOGzmofmefCU8bD72+FgLI45grWTpdR2BP99k+brP7SLL
509SdfSt4KOtdBUT1R56lC7H359eAo+7rF0NovZQ+hGBrixCKcT9FfkxLMeA
TZjfnh1LG4F8ph0u6WJKLJK1I29P8pf7Qmp7ImcIeFp0Ypw1vBKE/Gv/GNkx
YNr5mv677wdBLf3e9tQcLX5Q05m83DQIWqsWCh3k7PiYvvjX8oIpaJ07VEkQ
J+A75svF15nqwKrzms2/MVos/J9tczrnEJzL5TEKYlpDi6etWQPMElAmccg5
Lm4LeRg50ug1xaKHl502aNip8SebIzc5mLshmj/HYb/aAtplI6Pcq69AEgJ8
ZQf+MWNPHhftbeIoVPVfUQmXoMWf+8WkSlkH4Z9/4g5NOSkvlAaX9ROHYF5y
O+n5FgsWZzJ1CgqZhCHqAjUDpU1UxcblobWVAKdqE7Pbni+ht7byV8K/xyFb
l7ai0eoVtOwrofDgVBn6lpEpt55Oi7t5DtrzXh2EiYnvTPWBtLi9w7vzHGU/
7L19MhZquoDyb2guckqXo4VzfDdDJtbRxfCEZsXOZHQ64CEH8RQZ1k7Se3eC
H0OJwJTv8MUl9Mr7sXlFZiVKCOPgWxOkxbuc44rj5weAXG/Ep553DbXlD0bT
GOYgpvPeih4ylPhir47pOe12OMsl53jrLhvOdnrxdHJsFvxCZlw7LMnxQTeK
5grnSjheufWj7zAzFqgS1I3x/gc/iw4UdSWT4+e/bO3J2mtAr+3K+nGNHSR1
WtRv1i0dmrdSWzpdybB8w5/Ocq9S+GD96MbjLSpsBzmRZmudIJsp0XO1kRzn
XbYQlD2bAyddIpKWpBix2emiW3JCYyA+VK4uEkODDR/G/szk6gdh0XK3RVs2
LMzDN3KgdBYIV3mWon/T4M8UNl0ze/1wurKG7tFTWvxv8Oh0h/AgbHBGdC4a
bqCn9A0va3Sz0f8ADcjVAw==
       "]]}, {}}, {}}, {{}, 
    {GrayLevel[0], 
     PointBox[{{-2.8054210526328727`, 
      0.6890510528715226}, {-2.085153825753332, 
      0.016881698868516114`}, {-1.9525904124119562`, -0.46433254031194754`}, \
{-2.861086002637293, 
      1.4594913827698772`}}], {{
       LineBox[{{-2.5882669019938267`, 
        0.6890510528715226}, {-3.0831998250883537`, 0.6890510528715226}}], 
       LineBox[{
        Offset[{0, 1.5}, {-2.5882669019938267`, 0.6890510528715226}], 
         Offset[{0, -1.5}, {-2.5882669019938267`, 0.6890510528715226}]}], 
       LineBox[{
        Offset[{0, 1.5}, {-3.0831998250883537`, 0.6890510528715226}], 
         Offset[{0, -1.5}, {-3.0831998250883537`, 0.6890510528715226}]}], 
       LineBox[{{-2.8054210526328727`, 
        1.1995399939231408`}, {-2.8054210526328727`, -0.4078795204573184}}], 
       LineBox[{
        Offset[{1.5, 0}, {-2.8054210526328727`, 1.1995399939231408`}], 
         Offset[{-1.5, 0}, {-2.8054210526328727`, 1.1995399939231408`}]}], 
       LineBox[{
        Offset[{1.5, 0}, {-2.8054210526328727`, -0.4078795204573184}], 
         Offset[{-1.5, 0}, {-2.8054210526328727`, -0.4078795204573184}]}]}, {
       LineBox[{{-1.9060740719807312`, 
        0.016881698868516114`}, {-2.303454292679214, 0.016881698868516114`}}],
        LineBox[{
        Offset[{0, 1.5}, {-1.9060740719807312`, 0.016881698868516114`}], 
         Offset[{0, -1.5}, {-1.9060740719807312`, 0.016881698868516114`}]}], 
       LineBox[{
        Offset[{0, 1.5}, {-2.303454292679214, 0.016881698868516114`}], 
         Offset[{0, -1.5}, {-2.303454292679214, 0.016881698868516114`}]}], 
       LineBox[{{-2.085153825753332, 
        0.47367812002812204`}, {-2.085153825753332, -0.8482583214823279}}], 
       LineBox[{
        Offset[{1.5, 0}, {-2.085153825753332, 0.47367812002812204`}], 
         Offset[{-1.5, 0}, {-2.085153825753332, 0.47367812002812204`}]}], 
       LineBox[{
        Offset[{1.5, 0}, {-2.085153825753332, -0.8482583214823279}], 
         Offset[{-1.5, 0}, {-2.085153825753332, -0.8482583214823279}]}]}, {
       LineBox[{{-1.8217123142198086`, -0.46433254031194754`}, \
{-2.1032142820084085`, -0.46433254031194754`}}], 
       LineBox[{
        Offset[{0, 1.5}, {-1.8217123142198086`, -0.46433254031194754`}], 
         Offset[{0, -1.5}, {-1.8217123142198086`, -0.46433254031194754`}]}], 
       LineBox[{
        Offset[{0, 1.5}, {-2.1032142820084085`, -0.46433254031194754`}], 
         Offset[{0, -1.5}, {-2.1032142820084085`, -0.46433254031194754`}]}], 
       LineBox[{{-1.9525904124119562`, -0.1122945002607559}, \
{-1.9525904124119562`, -1.012449271433876}}], 
       LineBox[{
        Offset[{1.5, 0}, {-1.9525904124119562`, -0.1122945002607559}], 
         Offset[{-1.5, 0}, {-1.9525904124119562`, -0.1122945002607559}]}], 
       LineBox[{
        Offset[{1.5, 0}, {-1.9525904124119562`, -1.012449271433876}], 
         Offset[{-1.5, 0}, {-1.9525904124119562`, -1.012449271433876}]}]}, {
       LineBox[{{-2.6850759132088102`, 
        1.4594913827698772`}, {-3.0748364200486225`, 1.4594913827698772`}}], 
       LineBox[{
        Offset[{0, 1.5}, {-2.6850759132088102`, 1.4594913827698772`}], 
         Offset[{0, -1.5}, {-2.6850759132088102`, 1.4594913827698772`}]}], 
       LineBox[{
        Offset[{0, 1.5}, {-3.0748364200486225`, 1.4594913827698772`}], 
         Offset[{0, -1.5}, {-3.0748364200486225`, 1.4594913827698772`}]}], 
       LineBox[{{-2.861086002637293, 1.890104433351953}, {-2.861086002637293, 
        0.686867504602637}}], 
       LineBox[{
        Offset[{1.5, 0}, {-2.861086002637293, 1.890104433351953}], 
         Offset[{-1.5, 0}, {-2.861086002637293, 1.890104433351953}]}], 
       LineBox[{
        Offset[{1.5, 0}, {-2.861086002637293, 0.686867504602637}], 
         Offset[{-1.5, 0}, {-2.861086002637293, 0.686867504602637}]}]}}}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->False,
  AxesOrigin->{-6.6296065469312335`, -1.0637425658214268`},
  CoordinatesToolOptions:>{"DisplayFunction" -> ({
      Exp[
       Part[#, 1]], 
      Exp[
       Part[#, 2]]}& ), "CopiedValueFunction" -> ({
      Exp[
       Part[#, 1]], 
      Exp[
       Part[#, 2]]}& )},
  Frame->{{True, False}, {True, False}},
  FrameLabel->{{
     FormBox["\"Stretching Factor\"", TraditionalForm], None}, {
     FormBox["\"Fraction of high energy photons\"", TraditionalForm], None}},
  FrameTicks->{{{{0., 
       FormBox[
        TagBox[
         InterpretationBox["\"1.0\"", 1., AutoDelete -> True], 
         NumberForm[#, {
           DirectedInfinity[1], 1}, NumberPadding -> {"", "0"}]& ], 
        TraditionalForm]}, {2.302585092994046, 
       FormBox[
        TagBox[
         InterpretationBox["\"10.0\"", 10., AutoDelete -> True], 
         NumberForm[#, {
           DirectedInfinity[1], 1}, NumberPadding -> {"", "0"}]& ], 
        TraditionalForm]}, {1.6094379124341003`, 
       FormBox[
        TagBox[
         InterpretationBox["\"5.0\"", 5., AutoDelete -> True], 
         NumberForm[#, {
           DirectedInfinity[1], 1}, NumberPadding -> {"", "0"}]& ], 
        TraditionalForm]}, {3.912023005428146, 
       FormBox[
        TagBox[
         InterpretationBox["\"50.0\"", 50., AutoDelete -> True], 
         NumberForm[#, {
           DirectedInfinity[1], 1}, NumberPadding -> {"", "0"}]& ], 
        TraditionalForm]}, {0.6931471805599453, 
       FormBox[
        TagBox[
         InterpretationBox["\"2.0\"", 2., AutoDelete -> True], 
         NumberForm[#, {
           DirectedInfinity[1], 1}, NumberPadding -> {"", "0"}]& ], 
        TraditionalForm]}, {2.995732273553991, 
       FormBox[
        TagBox[
         InterpretationBox["\"20.0\"", 20., AutoDelete -> True], 
         NumberForm[#, {
           DirectedInfinity[1], 1}, NumberPadding -> {"", "0"}]& ], 
        TraditionalForm]}, {1.0986122886681098`, 
       FormBox[
        TagBox[
         InterpretationBox["\"3.0\"", 3., AutoDelete -> True], 
         NumberForm[#, {
           DirectedInfinity[1], 1}, NumberPadding -> {"", "0"}]& ], 
        TraditionalForm]}, {3.4011973816621555`, 
       FormBox[
        TagBox[
         InterpretationBox["\"30.0\"", 30., AutoDelete -> True], 
         NumberForm[#, {
           DirectedInfinity[1], 1}, NumberPadding -> {"", "0"}]& ], 
        TraditionalForm]}, {0.4054651081081644, 
       FormBox[
        TagBox[
         InterpretationBox["\"1.5\"", 1.5, AutoDelete -> True], NumberForm[#, {
           DirectedInfinity[1], 1}, NumberPadding -> {"", "0"}]& ], 
        TraditionalForm]}, {2.70805020110221, 
       FormBox[
        TagBox[
         InterpretationBox["\"15.0\"", 15., AutoDelete -> True], 
         NumberForm[#, {
           DirectedInfinity[1], 1}, NumberPadding -> {"", "0"}]& ], 
        TraditionalForm]}, {1.9459101490553132`, 
       FormBox[
        TagBox[
         InterpretationBox["\"7.0\"", 7., AutoDelete -> True], 
         NumberForm[#, {
           DirectedInfinity[1], 1}, NumberPadding -> {"", "0"}]& ], 
        TraditionalForm]}, {4.248495242049359, 
       FormBox[
        TagBox[
         InterpretationBox["\"70.0\"", 70., AutoDelete -> True], 
         NumberForm[#, {
           DirectedInfinity[1], 1}, NumberPadding -> {"", "0"}]& ], 
        TraditionalForm]}, {0.09531017980432493, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {0.1823215567939548, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {0.26236426446749106`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {0.336472236621213, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {0.47000362924573563`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {0.5306282510621705, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {0.5877866649021191, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {0.6418538861723948, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {1.3862943611198906`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {1.791759469228055, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {2.0794415416798357`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {2.1972245773362196`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {2.3978952727983707`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {2.4849066497880004`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {2.5649493574615367`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {2.6390573296152584`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {2.772588722239781, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {2.833213344056216, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {2.8903717578961645`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {2.9444389791664403`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {3.6888794541139363`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {4.0943445622221, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}}, {{0., 
       FormBox["\"\"", TraditionalForm]}, {2.302585092994046, 
       FormBox["\"\"", TraditionalForm]}, {1.6094379124341003`, 
       FormBox["\"\"", TraditionalForm]}, {3.912023005428146, 
       FormBox["\"\"", TraditionalForm]}, {0.6931471805599453, 
       FormBox["\"\"", TraditionalForm]}, {2.995732273553991, 
       FormBox["\"\"", TraditionalForm]}, {1.0986122886681098`, 
       FormBox["\"\"", TraditionalForm]}, {3.4011973816621555`, 
       FormBox["\"\"", TraditionalForm]}, {0.4054651081081644, 
       FormBox["\"\"", TraditionalForm]}, {2.70805020110221, 
       FormBox["\"\"", TraditionalForm]}, {1.9459101490553132`, 
       FormBox["\"\"", TraditionalForm]}, {4.248495242049359, 
       FormBox["\"\"", TraditionalForm]}, {0.09531017980432493, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {0.1823215567939548, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {0.26236426446749106`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {0.336472236621213, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {0.47000362924573563`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {0.5306282510621705, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {0.5877866649021191, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {0.6418538861723948, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {1.3862943611198906`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {1.791759469228055, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {2.0794415416798357`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {2.1972245773362196`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {2.3978952727983707`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {2.4849066497880004`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {2.5649493574615367`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {2.6390573296152584`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {2.772588722239781, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {2.833213344056216, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {2.8903717578961645`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {2.9444389791664403`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {3.6888794541139363`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {4.0943445622221, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}}}, {{{-6.907755278982137, 
       FormBox[
        TagBox[
         InterpretationBox["\"0.001\"", 0.001, AutoDelete -> True], 
         NumberForm[#, {
           DirectedInfinity[1], 3}, NumberPadding -> {"", "0"}]& ], 
        TraditionalForm]}, {-5.298317366548036, 
       FormBox[
        TagBox[
         InterpretationBox["\"0.005\"", 0.005, AutoDelete -> True], 
         NumberForm[#, {
           DirectedInfinity[1], 3}, NumberPadding -> {"", "0"}]& ], 
        TraditionalForm]}, {-4.605170185988092, 
       FormBox[
        TagBox[
         InterpretationBox["\"0.010\"", 0.01, AutoDelete -> True], 
         NumberForm[#, {
           DirectedInfinity[1], 3}, NumberPadding -> {"", "0"}]& ], 
        TraditionalForm]}, {-2.995732273553991, 
       FormBox[
        TagBox[
         InterpretationBox["\"0.050\"", 0.05, AutoDelete -> True], 
         NumberForm[#, {
           DirectedInfinity[1], 3}, NumberPadding -> {"", "0"}]& ], 
        TraditionalForm]}, {-2.302585092994046, 
       FormBox[
        TagBox[
         InterpretationBox["\"0.100\"", 0.1, AutoDelete -> True], 
         NumberForm[#, {
           DirectedInfinity[1], 3}, NumberPadding -> {"", "0"}]& ], 
        TraditionalForm]}, {-0.6931471805599453, 
       FormBox[
        TagBox[
         InterpretationBox["\"0.500\"", 0.5, AutoDelete -> True], 
         NumberForm[#, {
           DirectedInfinity[1], 3}, NumberPadding -> {"", "0"}]& ], 
        TraditionalForm]}, {0., 
       FormBox[
        TagBox[
         InterpretationBox["\"1.000\"", 1., AutoDelete -> True], 
         NumberForm[#, {
           DirectedInfinity[1], 3}, NumberPadding -> {"", "0"}]& ], 
        TraditionalForm]}, {1.6094379124341003`, 
       FormBox[
        TagBox[
         InterpretationBox["\"5.000\"", 5., AutoDelete -> True], 
         NumberForm[#, {
           DirectedInfinity[1], 3}, NumberPadding -> {"", "0"}]& ], 
        TraditionalForm]}, {-6.214608098422191, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-5.809142990314028, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-5.521460917862246, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-5.115995809754082, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-4.961845129926823, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-4.8283137373023015`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-4.710530701645918, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-3.912023005428146, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-3.506557897319982, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-3.2188758248682006`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-2.8134107167600364`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-2.6592600369327783`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-2.5257286443082556`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-2.4079456086518722`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-1.6094379124341003`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-1.203972804325936, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-0.916290731874155, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-0.5108256237659907, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-0.35667494393873245`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-0.2231435513142097, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-0.10536051565782628`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {0.6931471805599453, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {1.0986122886681098`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {1.3862943611198906`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}}, {{-6.907755278982137, 
       FormBox["\"\"", TraditionalForm]}, {-5.298317366548036, 
       FormBox["\"\"", TraditionalForm]}, {-4.605170185988092, 
       FormBox["\"\"", TraditionalForm]}, {-2.995732273553991, 
       FormBox["\"\"", TraditionalForm]}, {-2.302585092994046, 
       FormBox["\"\"", TraditionalForm]}, {-0.6931471805599453, 
       FormBox["\"\"", TraditionalForm]}, {0., 
       FormBox["\"\"", TraditionalForm]}, {1.6094379124341003`, 
       FormBox["\"\"", TraditionalForm]}, {-6.214608098422191, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-5.809142990314028, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-5.521460917862246, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-5.115995809754082, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-4.961845129926823, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-4.8283137373023015`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-4.710530701645918, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-3.912023005428146, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-3.506557897319982, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-3.2188758248682006`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-2.8134107167600364`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-2.6592600369327783`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-2.5257286443082556`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-2.4079456086518722`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-1.6094379124341003`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-1.203972804325936, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-0.916290731874155, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-0.5108256237659907, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-0.35667494393873245`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-0.2231435513142097, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-0.10536051565782628`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {0.6931471805599453, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {1.0986122886681098`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {1.3862943611198906`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}}}},
  GridLines->{None, None},
  ImagePadding->Automatic,
  ImageSize->Automatic,
  LabelStyle->Directive[FontSize -> 10],
  Method->{},
  PlotRange->{{-6.6296065469312335`, -0.7912614775522329}, \
{-1.0637425658214268`, 1.9388945975213847`}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], {None, None}},
  Ticks->{{{-6.907755278982137, 
      FormBox[
       TagBox[
        InterpretationBox["\"0.001\"", 0.001, AutoDelete -> True], 
        NumberForm[#, {
          DirectedInfinity[1], 3}, NumberPadding -> {"", "0"}]& ], 
       TraditionalForm]}, {-5.298317366548036, 
      FormBox[
       TagBox[
        InterpretationBox["\"0.005\"", 0.005, AutoDelete -> True], 
        NumberForm[#, {
          DirectedInfinity[1], 3}, NumberPadding -> {"", "0"}]& ], 
       TraditionalForm]}, {-4.605170185988092, 
      FormBox[
       TagBox[
        InterpretationBox["\"0.010\"", 0.01, AutoDelete -> True], 
        NumberForm[#, {
          DirectedInfinity[1], 3}, NumberPadding -> {"", "0"}]& ], 
       TraditionalForm]}, {-2.995732273553991, 
      FormBox[
       TagBox[
        InterpretationBox["\"0.050\"", 0.05, AutoDelete -> True], 
        NumberForm[#, {
          DirectedInfinity[1], 3}, NumberPadding -> {"", "0"}]& ], 
       TraditionalForm]}, {-2.302585092994046, 
      FormBox[
       TagBox[
        InterpretationBox["\"0.100\"", 0.1, AutoDelete -> True], 
        NumberForm[#, {
          DirectedInfinity[1], 3}, NumberPadding -> {"", "0"}]& ], 
       TraditionalForm]}, {-0.6931471805599453, 
      FormBox[
       TagBox[
        InterpretationBox["\"0.500\"", 0.5, AutoDelete -> True], 
        NumberForm[#, {
          DirectedInfinity[1], 3}, NumberPadding -> {"", "0"}]& ], 
       TraditionalForm]}, {0., 
      FormBox[
       TagBox[
        InterpretationBox["\"1.000\"", 1., AutoDelete -> True], NumberForm[#, {
          DirectedInfinity[1], 3}, NumberPadding -> {"", "0"}]& ], 
       TraditionalForm]}, {1.6094379124341003`, 
      FormBox[
       TagBox[
        InterpretationBox["\"5.000\"", 5., AutoDelete -> True], NumberForm[#, {
          DirectedInfinity[1], 3}, NumberPadding -> {"", "0"}]& ], 
       TraditionalForm]}, {-6.214608098422191, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-5.809142990314028, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-5.521460917862246, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-5.115995809754082, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-4.961845129926823, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-4.8283137373023015`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-4.710530701645918, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-3.912023005428146, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-3.506557897319982, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-3.2188758248682006`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-2.8134107167600364`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-2.6592600369327783`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-2.5257286443082556`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-2.4079456086518722`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-1.6094379124341003`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-1.203972804325936, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-0.916290731874155, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-0.5108256237659907, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-0.35667494393873245`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-0.2231435513142097, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-0.10536051565782628`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {0.6931471805599453, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {1.0986122886681098`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {1.3862943611198906`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}}, {{0., 
      FormBox[
       TagBox[
        InterpretationBox["\"1.0\"", 1., AutoDelete -> True], NumberForm[#, {
          DirectedInfinity[1], 1}, NumberPadding -> {"", "0"}]& ], 
       TraditionalForm]}, {2.302585092994046, 
      FormBox[
       TagBox[
        InterpretationBox["\"10.0\"", 10., AutoDelete -> True], NumberForm[#, {
          DirectedInfinity[1], 1}, NumberPadding -> {"", "0"}]& ], 
       TraditionalForm]}, {1.6094379124341003`, 
      FormBox[
       TagBox[
        InterpretationBox["\"5.0\"", 5., AutoDelete -> True], NumberForm[#, {
          DirectedInfinity[1], 1}, NumberPadding -> {"", "0"}]& ], 
       TraditionalForm]}, {3.912023005428146, 
      FormBox[
       TagBox[
        InterpretationBox["\"50.0\"", 50., AutoDelete -> True], NumberForm[#, {
          DirectedInfinity[1], 1}, NumberPadding -> {"", "0"}]& ], 
       TraditionalForm]}, {0.6931471805599453, 
      FormBox[
       TagBox[
        InterpretationBox["\"2.0\"", 2., AutoDelete -> True], NumberForm[#, {
          DirectedInfinity[1], 1}, NumberPadding -> {"", "0"}]& ], 
       TraditionalForm]}, {2.995732273553991, 
      FormBox[
       TagBox[
        InterpretationBox["\"20.0\"", 20., AutoDelete -> True], NumberForm[#, {
          DirectedInfinity[1], 1}, NumberPadding -> {"", "0"}]& ], 
       TraditionalForm]}, {1.0986122886681098`, 
      FormBox[
       TagBox[
        InterpretationBox["\"3.0\"", 3., AutoDelete -> True], NumberForm[#, {
          DirectedInfinity[1], 1}, NumberPadding -> {"", "0"}]& ], 
       TraditionalForm]}, {3.4011973816621555`, 
      FormBox[
       TagBox[
        InterpretationBox["\"30.0\"", 30., AutoDelete -> True], NumberForm[#, {
          DirectedInfinity[1], 1}, NumberPadding -> {"", "0"}]& ], 
       TraditionalForm]}, {0.4054651081081644, 
      FormBox[
       TagBox[
        InterpretationBox["\"1.5\"", 1.5, AutoDelete -> True], 
        NumberForm[#, {
          DirectedInfinity[1], 1}, NumberPadding -> {"", "0"}]& ], 
       TraditionalForm]}, {2.70805020110221, 
      FormBox[
       TagBox[
        InterpretationBox["\"15.0\"", 15., AutoDelete -> True], NumberForm[#, {
          DirectedInfinity[1], 1}, NumberPadding -> {"", "0"}]& ], 
       TraditionalForm]}, {1.9459101490553132`, 
      FormBox[
       TagBox[
        InterpretationBox["\"7.0\"", 7., AutoDelete -> True], NumberForm[#, {
          DirectedInfinity[1], 1}, NumberPadding -> {"", "0"}]& ], 
       TraditionalForm]}, {4.248495242049359, 
      FormBox[
       TagBox[
        InterpretationBox["\"70.0\"", 70., AutoDelete -> True], NumberForm[#, {
          DirectedInfinity[1], 1}, NumberPadding -> {"", "0"}]& ], 
       TraditionalForm]}, {0.09531017980432493, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {0.1823215567939548, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {0.26236426446749106`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {0.336472236621213, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {0.47000362924573563`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {0.5306282510621705, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {0.5877866649021191, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {0.6418538861723948, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {1.3862943611198906`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {1.791759469228055, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {2.0794415416798357`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {2.1972245773362196`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {2.3978952727983707`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {2.4849066497880004`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {2.5649493574615367`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {2.6390573296152584`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {2.772588722239781, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {2.833213344056216, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {2.8903717578961645`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {2.9444389791664403`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {3.6888794541139363`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {4.0943445622221, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}}}]], "Output",
 CellChangeTimes->{{3.6099976317422857`*^9, 3.6099976503551292`*^9}, {
   3.6099983284667587`*^9, 3.609998374294106*^9}, {3.60999840535879*^9, 
   3.609998429155053*^9}, {3.6099987361330442`*^9, 3.6099987835390663`*^9}, {
   3.6099988862582293`*^9, 3.609998889640345*^9}, {3.609998921345643*^9, 
   3.609998927517172*^9}, 3.6099989936026077`*^9, {3.60999916045757*^9, 
   3.6099991957694283`*^9}, {3.609999238325061*^9, 3.609999257412656*^9}, 
   3.609999372644685*^9, 3.6099994631101847`*^9, {3.609999505293453*^9, 
   3.609999570453828*^9}, 3.610000595110866*^9, 
   3.610000672948403*^9},ImageCache->GraphicsData["CompressedBitmap", "\<\
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
1m1TVjtC6sR5q+Ve8XAb6K6mSi3+tiDj9T1iR4v4Z+Umw+uNJ5Mojgl2mlKV
trPWxbCGbUE2cIe5eKKWQ/YkYkHSQmLdiXNEfdTjLuT1bJiVnEmgdjXLa4+G
fIvl3psVlF/Wl7odN6LSEKjoi1z/nodIPZcXLkjIn45qdALS1u26473Fcu/n
1PT8ZUQwOOnn3cIT1EhtJVIesSGl2TPBt7QROToa1PUTjtfTwoUyYZ1jh0He
thpQk42C23Z/FfAYCEenJ9MZl3WcaAdrFAhDwTLazBXY6fiWkDHv1MA25yp+
2wTVDMYMyQxrnWxN9annUG5DWaR2BWKoZTMY4lJ8wlctbXkK+lCjJXHho6bR
JNg8+djQDzqTubLyZZb3O1sP365kUIknIZuMYpxZU5RtZJWFRY8sE0Ulkc2g
Qo4Dzd7QIVMCV3o8WdCu0rJ+a8eBfjxIh0Fv7Y4qnHTQXaV7lelERzseS0FN
nD4LSL42zd4r+W0Lquw8e6Icg3aK6Kkk1GdKH7ReUR5pQUWoFIDEC89b2prI
rv4CyCO9svWus7TiOfoRMfmGyk/s2fo5Z8kc6JWRisy3FM9cjwqhIl3YLCBv
owXFUXT0guToUQZKA93EACCKrpSl35h4dMeE2Uo/jccRg/BU8DSRzviv3Qca
HaQcGm4LXHZYV5ncP4zdYAq1+Y/jmKBywfivBQkM3rRDjiYVXapEwdJWdi02
xhrxkso5LWqiTT5FWV8z40RrP020WfZrQ4hgSzOA/Fk3VpxFGoY4IOaL2nF1
HfrV6H4kGcIB3Rb1KAMQUbivHQNeK+lcFOwoKvuy5OZZfmoB4sF/swLm+Hhd
SQbZLRfCS9Sl8NXBo/7O4dFNX1/eliiLyWijd0lhjbnQJ57Cxmt7P3eBcBzr
9PMN5URIZTmE9xxquTdDCL1sudpDPypBycTsE4P6CbcHoGLl9vjEc7ltR3JG
RkfjlKd0YiQL+y2A3JWwAudh+Gacg+S66JcLl+KUmSkqcedsgZN40NJWhm4t
56ZxI+nyWs3syYcXZnc8CSBLv/7CxkDUXNhpc2Gv55g4ru/tyort1iAeUtA6
kTTfau3X5/UATPq8HgWwlW79lW3FsZ8P60AuFtJp5Qilm60APVS0Aunjebee
YbXPc7WUCWgITyhzECbToiBRZuY5S1uDnY9oOAFVtWEjPJ98eLqKfmkTh3N0
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
O7Q54x6caEElnxlUtTVY5QeWYb3LKPcxhZATWGpFSHmamepQ2Pa311xWezNz
5hoXnD84iRxbz1IMw9nUXFIbIHpYQ+GvbtLyxxI90+dUwEVadPE+99xSn/Vm
3d5542M24ADFuNyU/OOABIAsCb+fRoZoTita26LF9w+Ni4P3EMVWC+Af0W1m
KdW0XvN+nWjuT0hJman8LhwNlm3r6SM+OomTpqOIKWOmvmJTEJoSL1KutZdz
0YFBYxxgMS2qf6+GdKRk9A1uOZesbPZL+dVb8WZKuJiyvrfSP53nqxH5yIFA
MOvXM8KZgIG/LOHLDmwmW6DipuZV2Ycljhlj0n75Qv/n+8Y9AfonQ4DbJ+Vl
3j0S/Lx7NFAqXl5UvxPnRCCZSkAqV1H1FZOluD+k20ylYyuLMz5/bFwAl5hq
knAqxcMMFP1Nmj/eaYFSeWZer8LnfTk2U7x3NPgq4b4GivTLayV5ijiMztee
q+E0jZNUZZk71tj+iXFlbwZa1QIk+AeQgvTLUCtIgw6m34zYC1EPY8OlEiX1
Av1QUdGNICdIItqAUrjND1oyHsKOAakklmr5HEVHoH7DK2j8MN1E6b33GSQz
IJK4xxckTWnfxBJLTQI75eDoZ6lC/nqw8XJwArOpi3nrwPB/LJTWe/tjy4E8
qXfchNm7Lcw3K3ZMH9R//EXG+PRoEG02Q6Y2ZcmWAKE/TxwwbTqXeud4mmen
PQ96Xpg8TZvaZLrrB0NykoUI/ic+DFoVBnQeQ5owwCKivPbaa3g/vg6hiMCx
3Kcea2PcNPG6qx8K+nbjZISwub7G9QHHOD4/2cTvGJMDfzXZsKdbhvjrlQ1h
8mTCISQlbobq3jDxgCA8WUulPytoSZw5t0829B/w6/LCqCEFUiubYmSd0gEg
cYJliBH7i19e2QwmGWz7K6OGZbX1BsuN/s1kU4LumAzWYy3DS3LNIkErHX65
52WHXnhJP+T4zDPP8LfVlimlOJrO0H3729/mb5+YDMt9uo2eX3n33XfDs88+
i6DR6zRcc801XGuwc+dOt42eqfyFL3xh1FSqRHtZ0uNruis965uehHHiiSfi
yPSqqrilsk/a1q9fz0UjY85msgo/y2znnHMOPPzww/xNtnXl+ZwXXnih2/bx
j3+cH5A+FhlnPZyz4EiFL7/4xS9GMu+JJ56An/zkJ+Myz5Sh7MrE0OT/hEPY
qmO/tZIhlp8nXu5TeKfJDZ5GfD3zhxbHjYMFHL/7YtLZVhc6BByJgH2/MKgm
nCwCFswOgDgS7lp+DI8/Txru7h88lYSmxk+uqSlGhaaPDh5TaqTNn/ZaQZA5
BGp5/obvJ6VWEDSOMYnvN4xW8FCaIZNITF7VP5VN/zPVzgQBma3q5T9GMdz7
8y62nzwZNpW5qIZMZVMlE0JrG2IINW3dbWvvuysbwsR7hUMcABSj8Gav63sH
lZa/V90f4Vf1QynFYpF/N4Lcr8cee2yc26jO4z3veQ9s27aNnjFJVa3DbuPX
IU+/nuS6s+p/AX5MyD0=\
\>"]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[Chi]\[Kappa]ListPlot", "[", 
  RowBox[{"sample4096", "\[LeftDoubleBracket]", 
   RowBox[{"All", ",", 
    RowBox[{"{", 
     RowBox[{"2", ",", 
      RowBox[{"-", "1"}]}], "}"}]}], "\[RightDoubleBracket]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.609665222536592*^9, 3.609665224992021*^9}, {
  3.6097582700910263`*^9, 3.609758272116159*^9}, {3.6099729908514338`*^9, 
  3.609972990971394*^9}, {3.6100005754660063`*^9, 3.610000575688229*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, 
    {Hue[0.67, 0.6, 0.6], PointBox[CompressedData["
1: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
+6EFnv0jM3x9OITMpXM0ssPmeGW387LVAEHMbhMQdHORxYV3oXwpiZXYM7A9
33XdBIy/JHIvySfjMHfYWpacDkzOZQqqxDRjKf7b6N5cElhBhOqQtvZlp80N
r5Mk6I1zlHvKJRCBkTFiow/VwcpLYfH3QASRzI4lJj0dlFSknau72QCS8J7L
WjZm2M/ZbLIQMIzkIU3X+P8sMJ3y3VPyoj0REk7NNnJBFWLfPJKY2PwJS1uj
mx5PVHA3W+lZjnAXpOo+7SqjMUe/RH7WnFEt7AZLlSycDND5nVFVc8WPWHDa
rVItslX/e4kPfMOlxLhq+NtiSWlMl/589P3LAOS8yPvMxa3w1fFiyxvDcdxP
0Al3P2iHt+/OTo4hCT98qVenKXXxpbDk8fK1GjTxZvF9ZDbCV7M8uhcHo4jd
AxFPSMPqCH6gna4U8xt9zHuGUuZdcK3RjSPbexDuLbWzQurWcOY6aJlyJB5/
P43as1TogSwRK/dV0Ivwn+j4m7akChUJVcXm2WpCl4nijjdZGKzLyq6huxsw
Y/1R/qo0GVX972L0w8bgvll//L8oK3RnXkmmpW0GxfpERIMYCQm0fiL8FGk4
SjKPLCO0sWusNLLMbQpnFtTaj9bbwNnypMebxF40mEULihaT4XZ7KPA7dysa
ainKH+Sb4s6o3vxoWiwoqznydlMaYTKuJjmsMhVM43v3Zw7rwqEwZCE5LxYU
f6lPHh01QmzAtZYfTIVEgevk4NP7spAdP3L2bU8PSsXe6fozklFcn3x0U7wP
r6WaWllumaN+bRsVbVIL/Ba0zvGWk+GR6v3gk1UR9lzJzv1+wAB09p0Tow9K
iYFbI0W3JWTAJH244bh+KdFXWv2SQlYKffLRh4//ycHmZLnIsV/6OOvjz8fx
sgNsVGZTp66RUE99YLAjIBYPh11vxz3SwN3vkudrYisJ42/yDZGBt9E3Il4y
plOGKT7vr7kCRhDO0rZqFByEREvaCEnQApeZP3wg9VdBg5euXctri18cDhlc
nM4n6nfkHHpHrQbWw7y37ajKCdH3roZ1ipJwNpButbo4jXDXfIUHlx0hmb+Y
/Z9xMRoWFClNE0kg+T+3U18dwY4DFC+t4y1xeImtfcEiiVhuAqEWoIqvQ3xF
guExoD6fduB3ns5W3hqVD5WoRuXtWePNFn2IOMvL5DNFwle+a2h/nC42/mYs
bw5/g0jwDZGcY4aoV7uq6mBcQiTpFa30zMvCVPlSVYpJEZHwgQfOzU/Rq2e6
sz2/AT2/r5Inpixg/OdLSuy1HzAvyTgpr2WCk1GGeRvPRvDj9XBKY681ol++
MC3MKyHudEZ4xC48hPPgE/qgbaO48T6Fx/qjNe63+npfLa5HMc1Zz1JvQwjY
6Esy0IRD6tS14yOrOoh8sTeXZ6oCB1nEHAzd9DATzNLZcLWayLp2hVXF7zbC
JZq71E378dNWNHkimYzbjv+dITLbEKwccO3BrCm6WgOq21IImFO/vstQbAj/
mQ0+Z/VaWMkf0QnqN8PMRHH0gGoDbrae4q7QNsQ2vhw+tZOVeP1DleLQU0Os
Xdp5tj6+Avs+i1H9JczwtE0zbuNOC7SHRzfuXTJDySztqbvT8XBKbdcyqtJB
TJGLvQ5fOO4mrybkmepD0IONySS+E7einGR3D5PB+HB0e+GtBCImZD81xRUt
UEdePfi+rgEL10/yn101gqKn39VrGmXEKxYJW1/HB/h4TYQ83joMpQ3FVKt6
C8SdW7bfk7wI5Y8U8mL6z/HOvr/nt3cTpGgY95kOWkDbR7Tiq1cLrANzpou3
maK4XCCv1aCUeHOtiWbJ5zHexEXoCfrX4RSb5eVb0ZbIysmdGn82gKTnxSuQ
NgejIdOZdpVhpPWzc7G3WYCzuz1kIrMGlIJ6z+gEDdHNlytB87MVh3sj3ORa
SKj+GFD9KjcXD2pVZxg3tGCWs7gYiz5Elyb/PNNpBzW9xFVvu37ccjTC+z2W
cD+lrfny7Qj6j78kJKWsUMszOST9tg8ij86x8hZbQoF/fcH4ZxIWDjJpJ/3W
xg6LAdfha814vcaaRGdkAeuCFvlq6xEYup05McjogCJh2taB3gb8S2B1uOu7
1a+wWr68xjJUsCudUWzTxcOGaXkJy2CC3q85crvZU7iJuS6uRTdgQDdC9MYp
U7h/safycoonyO7NG3qqSrjZ8mQ2TbwTf6qMLc98JKGT9ur12/MteKj/Z5tc
kRk8299nGpzayiOyAT2TFZYoOl9KZ7CRA+56ezwx0QOlxHJW77E5QLMmLcba
EQWPK13k2qMIyajAVyqmWpiTrNElNTdC4xmXZUe6CUx/KxGSwYNozthDlZ9v
geGc/xQnb3djj2ntHo8hEij2/mk3U49Fmm4Atf9JTXDt0jT6k/wdl+nJWi59
hvD4lh3LZFwFz3dvx81/GOHTpLU02/AHfHRWcR3P1kZcpahvzXQBHjw+clqe
2QxxbBsE0/lowqPq0a9t82pgPFyebH84iCg/ScXmYawMd5XKi7W720Hnd9z0
gY4ZJOjajQnhZggfeKqwcNcEAbmvL4souBPbLm/rut6qhu7RiKmZtmKEVEbx
hzqQcZrvwYTLm2iAh+rIWpY2Ivur2xr6OqC561PNtTESKsRqrJjzstFRePZc
5j0j+B95+dvWbxY9K6c8XCLtUbbTjBz1qA8pp7qLX0uaw0OdIen3kTJ8DGPy
l+rVx/5XSwKn9WfAILIumVFqh0/H/1zvEyxBBo8zVauxHlbLv5QfjnxNPKz7
tSejVgMfmp2LW2N9cOzesUSHJT3sU9j1m0GhGy+DGlO3d5FgTv/xn0txLt5w
FAVv79TBrTYBS82iNtxKVJuFhCVymL60sE97E/wnojdIg+pIOR77ZjacwOAx
t26ZWl1IEBI5XAERMIzMdXgqqYUNe2XlsshGvLGgecUXYoJToxHNvVzfsTff
S79QUg+e033iVCIDeKxyv2b7ewtY3NtctjZrQLDx3eqTnUZYbo8pz9gWCuay
5tmHobr49PxGj9daB+LUUwUSb5HwjFKXh44YwrGrurkS1TYI263DtsBah8xU
+YB9X4wRdWrxgVdpOqGzWaF0V1cWfosWy0uXKzBE503yv20C2tAQ9obZGGLp
zI1oxzxl5OwOkfcsiCb+FQz6RuaposNuM28/Vye6DhfHxSeRMWt77J4/VzDk
0laZXunoQjO1qXfiL0GoriXzi/vL4WSh/IHuyjbEjQ+2HKC0BM2ZJ2/8bzci
g/nKjpjdZnjpKyDhvOoCqrakAP03ehDe94KI5+iBjg7jE5eD5qjj9zv4NiKX
yKP8YSQcLITmr1coeuVeEdzFLKEHojXh5+Thr6bjgt/VUvbW17WxZHVhzTep
mmAUEXp/LlMcIYG1e13GY5DlWaYyJKCN3IaLwvvME4gL3HvO53x+Cm39zee7
HT+j5OzOmMkaQ+ysNGWXF/yO306C3jyjOtCNjBV17+qAuf5NcqsNGUlhLxg7
fTJR8sfz7ld5bYxcv5u4FudH5F4d5Bu208FzPTrDrKlh8Gq8ubg+YAWv73vu
fH3VBo+AftnJyxYwX/+w7vyphOimq7ryL0sOR9i41+/wtCO4ZzUwd24rf369
+JBu3BP7SLHb5q9poa921sDVoQh+Fa8ZRRuMQcXLyyIx5Edssswn6hVrocyV
imJHeCuiKSkzePNJIDvOVJ5ta0Fa1IpzEL8JOgRYrHcIRhK3zrPe/RivgnB/
pXfe7iNwbmk+KJtgDdGqxIC5X1mEYoh8h6yPIn5/3myqrvtK2F/0Vv36VhVM
HWJ5xcIphG0YZcAJNS18OH+kOL8lisiU/iA5V6qNK8eHqcttkiFsIdSplq+J
isQ7I59LigjufPrM3lOyiA+5oyu+UkmMrYlWDZ68DULlpYnPhzpoMOupiaya
YqKQsSffoYxgO04rtVkmhNCUP2NmXT9w+c436/bCrfzCM77jxeoU5tlrTsZT
2uEgl32XvWkrLnDcMqGOJyHaN8/Un8kbv/aW1+6/pwdpa6uDO5KmkW9OOJ79
bos3PcPXBXZXw43lKcPOLf2nnvDsi2OqR7DfrYOhC8ZQrAuL0yGN4H75j9Kn
/1miV5X+DQ1/H9pKBtLf0lqis0ZjF4tsLbza5p2JVCPwhBe0lh7KIqiE9ISK
9FVxlMuFPSusGj/vsXTmLBriDtPduizzUML1wzB7laUynPTDXR+LVaGxqor1
zlEDbLx5cUUpoglevTsKPPSNMJu6ptZqXk6I5a8PhJXwwkuQVT0oNZPgnrGe
6J9RRG94f3t2UDEC9BhighRNkXuUa0aauhGcEh4xe1zMcMtw9WXlryGU1J9X
8KyxhheX+qKF+gQoOCoJFmNr/P5gnK/lU4pHSpfnv/Ho4RyH2a1fj7vgza64
xGNHQoOaq8H0eCdcSzuUIv4j48UPgSpVxwH0292iv37fGp+M7E/8dzKb8NEz
1o6xU8eAOTnGwn0KzJz24jFP7JD1w4Vv164S2HW+lR9r1QPFj9J7U8u5RM4L
W9k3OrK4lPk83c39Bz6rzN2+usMU1afk+3cwFmMs9YFr+7AO+Oq/iNjalhBT
lw5dZWCWhtsvMZNF8TRweJnlHqfTRz4/o9H1J5UYcfEQcri31Y+CnfOpFGnE
xdYYl+OBasiICj2xLY2EmXI2rr3t6tjefobWfigPVbVm9K4uepBluDBvEFtE
/Jnr6dgRL4kvvTaLQdzlxHrdqM7O81JgyPjrInKxCfajPgxfJ0mY/n7fUTSg
guB5fnvmjrowZPvf0yRYjeNm215m5q154n61V1/jdz1oc9Zf/OYzwa4EKZm6
wUDCYk3z1eDjp1v3olu5qBWJ0xqa+n/I2uhLWZaQ2l2KuB1zRSLKRkhisJqP
Ot4Ipcfyis9OGoEsaZeXfCmN+HyO67F8pyLSez4rSFA1Y7vSWYGfW/PP/59W
7hHuKXRGrF3du9MOAUYXL7/c0pPsCz0nPF+bI55ZiP4WXy9k2V3sUuLMYbwr
eqzNJxA+sY72WXPqYMZo5xPncZhFzDbkh1tj/YTg/TTbIihsiGaXLutjhulX
m34ugeDBcJrOq4Zo8Umob7pTRNQ0u88vbjwGvyR7VZBJIbHDhPtL8m4FlN9d
4lcoyoXdH5vV/h1miLFb1Qw73QM2B1XH17vI0KBbcPs28AMUDV8PtOQawGc4
jqqjaRgveC5T/adgi6oOm/67Z4Jh/zsvSLVEHflPEVxt04IpttuOZoumOG2U
5rUQFYGPjDJ8C5I6cPOIEG5cKsXBWzn9c2Q9pKaYDHU6tmHbhO7Q31lzxOpT
rciplsHkUbJzQbMe0pgHT+S8yMPrquad8aw62Psti7eIe4vnXrUbcH4wg1rr
ycAyilxihlWYUS9VGSw8L0cutvUjbmR1RcjGGienO5rkvqYSivStNyoF1eB0
JEii9Ws+IWnW3RNiIA9xYdfp19M/sJTo7vVr3AAFEbGZx07Ww+7oNRqXV4bY
yNI52nlpAtfDXjHN3rSDiPlfj2zldjgwNLLp0pHAR93/fOp6E674HS7pliah
VeKx4lvWCnSwbzMrOGyA8wGdc8tW3bir/oJOlNoeQjpDcR7+5biCFL7lC/qw
u87B1PuiAq/+ha/fOG4I5188fDQcQ6ALVDr9i94SKgG7Eu1dMyElGH6+j1UP
25+GKMcHNIA63UxYK84UH+6fUZmab4Jsr/nhmRojWN5oejrxeQjUD7KHZ4Is
4NG3GndRvh88VkFtpAkLBHNzOItrBRH7b/3IEs5Xxd8ax6Cr87mEtNk5aSJX
DqzvViqSPIuJ0ffLRo/cxZAVnCSe6UWg9cud5x+O6KFmqNHj06MEdM4erxQ/
q4EYnhprWXIfHEUqKHgdrMD7S5btr0ErMny/UeS5kPBIIHRnSXYaNoeMfipJ
68GsUtKWtK0RJK4d/aJrJCTVXlAPdEkl9CRL2PgvyaFQ2+LoP9ty4nyC8sHR
7ffBxXyriu5HGXJmuA2sfI1gP0xJMzNdjtm9X88+3zTCuOv7qYMcrSC5n6B/
9NQUn44Esh5rLILYP0annnYTHBS0uNjqWYm4YdWlySEz9Gdvm3K3KifSwuo0
kuy3eGJAhlHudSuKN8lPpMpN4Tk6/bj1fS9qUN/w9DMZ1VK3wlP+FeB7bNb+
KhiA6gRbhq7sMPojyWMKAZboK/6oGTuTD5OVL+0j7DowdbJiLv9cSpS4Xzst
vfsxVOaNGj2lhuDl4xdR4GKN9NfJG+TsFrh++vifxg4LVInQONcItOEE9ejk
Q8ktPp1cKgxp+AHJbKVtOtWG8FLj5PgXPYoTBxt35++3wuZZT1Zr1RHUdb6n
1H2ylUfmnnP0NjWjkpDslbloDuERtVN+Q434Xl8nniJqAjuXleWT8oVEN9PO
tuISKbw832spL9uBd55Vg0mvSaBxY3tvp94DI3+nA9xaZOwPJq/wsgzBeKcc
xWFNC+z4J7dfrrGEqGvMLYS1FN6x/zmX2duHF7aOtn7TNqjcGAsTPj6HooYX
kTlMjhD8fJ61LLwRL3TMql8ukcHddetCo884MnJrjk4L2CFogWXngy0+5zK0
puUU18Hupi/nDlzq3dL7mHfyN80xVntadqa9lBg5wxT/vVwWk2Wv2bI+N0Pu
3yLdUz1zpCy28cTwlcP41nYLpR/6SBi4EjdC2QA78W5tN1NTqJz/LfyfUzV6
yJ9PuZP0MeRyTeDP+e/Em0a+1blwVZyYSDXMUksl2AzPOpacUsXt676KNlt8
HnXs5K1PL82RrT9mIKCQR0g2uyR1pEhg8szee20fhyH2TJjWItwCB2a4X5c7
jCKDlh/dx22x34relIKvAyRfAeErVmYwO9UYczGvGVESa87SZDNMvpFg5o0O
hv/FVwfGSzS2+O7OYarflcRu++Yn9xpuI6XwGm1qdQdKtbM2bjwyB65tNyuh
b0deEI9QXzkJ/wqpHYcGcgmRqHHnj1kPt87Jik0orUM+5ZUujSOGYKIw0h3Q
vw15gb5bMYUaIL0wj//8rh+2U6UpefmWeLbvRNbfu80YvETlrTZkDC2Lxpus
Xd/w53WbysalrfvpO3eB58EA1vk/GBp8McdqgWnJpkEiugRSkmXPaiKnkfkA
3Z1RJLPuMTY7YoPBApp7gvc6sZSykaPDT4Jvzdq2wuZsGBZ6HPjwSh85vh8f
q59uRmrPWZnhTBMcm5zW4ZsPB9Of73IP9mnjuFzv4tnIUninH3y/3dkI/LqL
P8Xs6jBu0nxqj6YpmCzGXU+zTcBbhlOp3c4GahwHxf9ElxIZpCc8tEel8LZp
++PukT/YdS6vey7tJVidTCNEfL8THfTXH1JdVIX4mXIqLfYUKJBE+NUn9cE4
4ERpM9kK2hn/uqr7Znh8+YiYd0Ey0dkR6zX6WBkX9lAfNR7KRHU93QvpbYZQ
Tkv3yzEbhMX5RwzhZlZYdM798upJGhFxL1iZp0oeb1YGzA8diiG2vbv+o0lZ
GbuKW9ZNL5QTk093V0ps3ISJM2s39UoWSDIV1JbntcEuuJJikpeDAbphq1Z9
Y7CZ9r7eV9SCuRu0kaPLlsgaSGoweVBM/Mvg6CZs5VGxGCHSpjWOnl/rgnk9
VrAb79LkyswlmpkNi8JvK6AlV/mvmFcNDMSGbh7zNIUI/XpU0ZZa3b/xPsvs
vjFC3R4FPkvLIHxbL3WlHNKA6Y2lxvRfvyDybof0u0NOoLC0m/s1nkVESvZ/
57izpf/UVNdLKUegQaqOWIm2hcc5LrJ2zhhSx3Po2K5YY6w4iKFutg1roftD
Qw9t5f0Jh12fsnohbFVLeG3xpfFf/y/TPd8I1nOtnENH1LF53e9KdXQ6at4a
cR7cY4LM6Q99jmLFxPpLbjeWcFmw9exPqnmQQSgYUEd4zDzE+EaPzd/2H9Bl
Nn1bPWWCQ6cfWNv/riEoxsr4g40uwC7YtEWfY8uPXh12f+GiCI7j5wx17oYQ
z3rzKnz6VFEt/TdHqroWMypeQepHjZG7cPw2C/kjkX09KHWqWRvCornB6eZd
kG8Ye6VmTIanwc1Cy55Cwv6W9GWZwCc45kYXc6q+FBNsFCxJFaYI1bJ39bdI
gevTGfXNAF1kLrKwsxUNwid5f9clKRuMB1bnyXb246iPvBTnpDksZanL6v90
Y8d6wxAFtQXSLl9QNbTeyifMq4ek7EzwkFh/UdiURQySi8Reb/EsW8F2ep8d
vsS5pRRp1mJtpCuU9JVOD6NBxzGEpcoCMYbMqYkJZWgrFb1/6KsuSruC71hk
dqJN/zP3ezULPDC65e4uO4qakFLFi++sIXVOjk268DuKa79/LzmhhUOBryn4
f2ThdfhBjvGt+WvvLS1M0mnA5XalQD9DQzwIM05Vv5oOuumgbOkP2ggj5TZw
vqyHXKJ02CFqElJ/V7vYOkUTYf4RxkwkFXASJZR7DtRAzIDaS+2OEU6EkvoN
o6tQTcny/NdW/X7iuVlZoSNYrxGnznSwhJhKyBHxjSac6TtjQLGlD7yFrw/s
M2vC8cxruUZb/ivwSTfpy48ooqmK//kNTm0kzLWMHdMbhGbTAQPzHQ7I98mJ
3T2dgXPZMinzo/rQH6bcJZkwiFK6v6FDhQ7gZXDBmrcv0Ux54qPQRy3wP+P+
2/BkHB3yR3LFxqzQfjbmw7BvMUr5affe+GYOH4a140MF3dhGfkLcvWOOBl24
R050IXGu+nldzJZ/+X8IEf6USPSf2GUktF8TbqyTrvZHE4iMG/lilvdUcT34
gHLNx0asFTL8x6djjn3mBhI7Yzqgw75Lm+6pOf62PFi+5BiJPZ/OnBzfp4lY
np/XdzeOw8XAi27CyhbJKcrTNx9+BqvAAj2Rr4eJP4q56XadkLh7htXg8hYv
nksqCqpvhjgvZ8bDeRJSFra3850ax8CRF+6CG1Y4dw+7fnIXQf1mhtFYlQ6q
wigZH77Ng9vXmfo8dgPMTd2pVqSYxsKdodgNWTswr3w+8OhDC/aOKZAUc8wQ
Rv+O9p+sOVj/rd+omteCdJvMf2OZTbDR+K/1i5EVZub7OP5apRNZcyPDn6CB
YKUQFpqGQkzk/RVXqdOFNa3F1Ae+MjT+PFhDfmsM+mc+/0Vbj+CYzT8xbUpr
nGv1d+UbbMZ0S6GG1nNj7FUO1fQt8ydyKv7zjR7SAMsT5T8i+uVIyBh3TfYz
hGEN0z/Bn42gowzjuCBhgluyKnqXpOuhfjzYYH+vITSvFvn8OVUEj8vqfYlR
W3z8fd3v82gGyJ9WvF816SBHa249c6UWNyZvbRN3NoavSewTF80tXkwctTTR
u4ILikdCBuWqEK5SoAsdE4TzSi7vvDQH2tw3M1PRz2DH83eFU0aLaP5P/4yl
uCbYD0bYDAj2gvX789fCf83x8vKR900vWvD8WM90RbUlOL9Jl6bL9EKgOPMf
teYWzyCL+5BkNa6kx1l4VBvD7dSSM//rJOLRTYe0yXE17N2pMTohlkp8HxWa
4LukCrbJNOaw1BY0IDw5s8wKed8+0ETTDyKRZx2HGC3AZ3vbja82ltgU5S68
OqYF43xeFQ6BBvjwm3WklppAeTHwcuo2J1CNPd9f1q+Nnz+5vEU+TmLb4knq
h9Y26Ohvs3xt3YCc0KK9O4+aINXwQMr47i9EkWdX8fEeBbgf3Tx8c+8g3l9a
u1LFbI7Jna8Cv5IrEXTZ9IrBX1MElFYpf31dTszY8Dxm9eODYQGzbINlMZZP
+9nNMhth6HOUlqloCXHYQr5w1/V7sK+uMnn/uRHrI9wnUpVMIREh9s0puBFc
3pqUaxMm4JS1ttPRVSCEHQtty1d0cJ4hiEZmngzvpEaqlXhtMBYeZXuaPAwN
j7SwTmV7eG4QH7c7tWF0RPDwk4ck2OfeX03i9SQchXgcOOU10JKvvEBDUUJE
0puE8sw/wmHb5duLx+pgK+rL6NNgCm24noznTCLOkTMuqEppQ/cZe07Qmyqc
7hE5+N8/fTz48Oo4V2AZYW544ayAvASElQR8lFRm8Xa7kuLT2w5w9F69ZHSk
CFVakZGSW3pNGVhbyeyZC+uYDI3DR3QwcfUwv5vNGG5+fa897moFBbUrJoOr
OcTz7uY5ay5VaIfRdrf3VBCVvFKSFvEsoKX+FCJ0JhFh7Eut2zx1QJrRetlr
EAym7Y+cj9RqQZdesXgwtwDUkalLT5YMcXpcwOPro0EcL+hI3LnPBgnBZsdU
vWpREujzfF7aCAwa0u9Xbcvw6DejG8U9PSjlz5305BnE0uDkerKoOX5fNwl5
sDMNuxb2J5yy0IPa7/jL5lVU6GrJFqa5poHqj4e2C7xKwseAjwZLhzTRGN+5
599a95ZOzGr9WCSj+AAPZ4xXGyz+Hrxq5GQG45VadWPvQTz3/fZy3N0afVxu
9Aw0deC49o/FkWQMP+76z5fcB/Fz4kHWdi1LBF7pbOPlTMTkid4S8i8DfCpZ
rKwKy8TfRP27AayGGJAPm3GX6cA1ffGSe5tmeOh759bFR60IjJPI19xhhtnb
GkVXO9ow09lY0PPbFFk2wfu+OQxC9INfyYSLA/b6ivzZXj2Aj5Qjr3zjLUFn
+ly3LuodcXdGLLyOXRdKzU3OlYcqcD2EyL50Ux89dZJ80rcLCfbe5bs3lZ9A
o7L6+82pNkj+lqPt/mEGQzL18LXSVvA5DV5j7DDFTdkHB2VZU4iVw7lpV19r
YTjo7dPtoo0QHPtz/2C7KYKD6CP8/dsREl++472QGZR3rJtptVRhmqJzu8nW
vLDz7Ev6UJKP3JYyi2wJA1QkGF0rGU0jEmW7A8aN1BC1WL/oUt0Hbxq3Z2LL
Fjj3z3R+7mgkYUscW7rxTBN7T9oXeciMwDbs49+LJpbY4Hmjo9ybSciIHDAt
Y1fY0u9jx4ttKnDJzfqco5wBmOkteJeNerChOccR/oGMS7+ERmiY6zAnGHPY
psAYD2oKsgK6yokvY+s9Nz3uwNHsIvlqUxyhOax1leexJgpUJVf8E7uRvefz
Z8ubZNBO3BtIlkglDiSxCbB/lYOYk0fptvuSRI+GyHXmKg3U33+uMtyRj1T7
o3cPpBmAeyS1IH3bAJKHOrimS6zxgvHpoQ/MJbhH+7LsAr0eYu3GTrodLcM5
bxGfY/lmSGTLlAytacTUrC/V81FDLMWXN3b59iHS+1X0rLw5nn9KyO8TLiC8
GE97RqTfgaFnwep+i1KiNil56L2qBBTaty0mMlQgN7hO4V62HmybMjzW02tw
8ojcfsk7prCLj32VNZWFjG5xu4EBLZBXfdYVSntQ7Z514dRla4QdsOt9daIH
EfHtWf425pB/xxyxIyoLpT/JO26W6IAi64SB2q1U5G0+WHSPMsB/hhLrEd0D
0Hc65DpMaYkhL8qjp+3S0SFqnigbobt17hMHGGQg+e83B48zhvgykJ3dfj+f
qL14qc3VUxpHPubt69ELJw6eWWeIV9DBDp4PFN99mzHA0RJf02CBE8dXfbQU
xsDj6Rwd8MoWRO5ZcnFxBq7dSKlPu62HIR0Zz0O8EYiVid6b5GGAbPHrjoI6
hXAW38d4mtIATeq392XZ/8B+hrir15aNoM+5V1DpUgeyDFZsXTYs8UVm361f
QyOo4BU6WEdjhQ42vkA2/hRCyal6JkRMA7Q0Uef/k8kk9JKnOOhPqYNmgJ03
ozoKPtlFbQK/dMFjda1S5MQW/z0oSrYI1ULyoLowU1wyDAfE3lLR6+LZ20ti
bEK5hPLfVyOmjIrgy2eRJv2ahN69tCu2szZwWM64LmhUip2CdqnZawZ458lS
0+feBiHnco77fpb4Q/GWnOBUjIwHtx+qaOvDVcxW1oi2kjizdsV2vfIexBns
rHZrVcHYV7NqrtMINqSIfQ+jt/ztRfPeFw4mOPym4T8dg1q8y9iZoCpuBC3z
GzOvwpKIsIgjHOz9KnjzMlCYvTGL2GSjduu+rILLXAlSj8oW8Uygs8yP/jmC
9EdO/hb2J0IUKyPnaRRhtpfl4S2tHug272TkCrKFosFbLZ6seMLIIyAyfStf
/DuxO1A4ohTmHm/2PjXVx+vdsacl3gyDzmD9p4SoFVIUeLdpXqxHyD29WbY2
Mv5W9Eam6b0n1tQiIsSiVRHTm8/KNNsOu6+SUtTz1mA05ug28UqE0cLi6c6n
+ohinuwu8Swn7sgvhohLS+Nosq/6aGwtkjMoNxwrjDBgoxY/s94Gt46FWWpp
Sxjv6vjh96WcIPEf9VHtu4kpgfcPyU6tcDRhuyL5kYRD9LJGIttciD1nXjrO
jarhXD7V0X6JdEzOH6KPEtHFsF3gcWbafuSFSqdlKZnjyuPue841E5B7lKli
LmIHdpHaYY2OWCguF1xoP6OH8RWHZOmmZjAts33k9iXj94HvQ/xDY1j0u1Dv
6mYF4702JVVBn2GX62W+YaKDjPv6tZk1RfBde9ZeOmiIcSGLEXahEWwmMxCz
tx2h3LwRwXFzBATjTSelOUv8YuCj6+Kwx7ML8bsMnughQbr+Xb5gLtYoeeh/
euhg4WZ+zs/0cgRlylwWitzyS3X5wrATTbja7qBl0kaCyebenjPR+Rjo2jd7
R0UXEoG6S8rl43gsX6aheNYOFXs6nfPGc4kLAyv54TWqsNjP/PXnjWLE8Cca
jOw1wTDHzX7pjlYMcJX7MFCboeV0GerFumDHVEYlVGiJt/uGCu7yTcGB//rX
3xdtEfDXdbSvsBKn9/PelMw1BC1xh7fAOxYO7P1Rjzm3vv/7miN7cAVoJaaE
MWOEwyqP0hpPlhIutG8+1zbJ4IlE1YzgjiVMZ4v/utvoDHr+MKMGt2rC4ZuI
2zfJ+yj0HyK8iVr0B7TP/fpLhjSnb6a/dwG4aNOuxRiZYejFkeIjJ4bxaUf6
E0M6S/D9kVwJqYrD+NB6mmOSOkouqPOy+xURP2kNVk+KyuCZ7KXttC8SQHue
drJTRBsMBle4dZjTYcTtLEB9UBtY4HFOkarBX+VnTqc+6GNSWP1OYHMn6N4u
787JIiHqvPI2954KBNXaLK/OGGJRZGOTprwDSeQyD2zlXcublrmlAlkE+auY
4eMXT5ETaSLU6pePYsVhYWVBbWhVjlEV2c7gIK/tyQYfe0i/FkkiO4yhrmZQ
xGnACn5UXgfYr8QQqXd2ywUua+Ku4Jv5KLsu7DYcL77YaQGZ1hm3EZkSfFKy
pBVOMoKQzIcGGpY0IqpTc3qHiyLm9b/M56t9h8JmvOf0qBbusFjT/wwZxpyY
dfNmmAUOdbNO9VD8hz+T3OHtEc+RcrDmkLjrALb/unmISt4KxQt0dfW9Y/Dl
y9R512CNZ+azn8WzRhApkxE8x2MF7ZW9HMOi4+hxER1uPW4DWTrHuaCeVCJh
f9rVXHM5rI01m5T314NSJ+GT8FMSnnKq6alMd6DhxKbjrwdWEFu+Wr4q0QL6
Nb2vngMmOBX4sKMyPYPYf/l6e0yeOgapmGMFp3shLXotfpMgI//87lGJe224
Phv3Z+cxKxRl5VgOLLdjXMnsSR8fCYUsBo00aVOwyVIUXSq3xXMvm0hBkQpi
j9+/RItvd1EjFjY/yvcSOiwN+X9XNODsJFm5cq+UmL587qDUo0foNeW8ZMy1
jtJf6sumV1yRybvJ/axUn3AJZTtzoVsDz46bl196P42fj9ZMPSocQIp2nbty
ohRRvzkIenNjuPZxTX+0TiLMluts8l9o4hbeuwallRIWV0s2RG/IoyKPa9dl
8zhilD554/2KGmZDPpd//BGPTznJwl8/bYXv63v/ZJ4pJao4SjZLeWVg0MZ8
PXHeDOXcLV8Kg9UR5LEg07OeRjAm/7jKu/MJxmd+nrbjy8aS2UKrS4Q+VvZT
Ot7bPYDOL8V9t4vNccgk4+XfkU5osyp6XJkk40s5T5r3zzTi4ZREpkmdHATr
Yvk2t/KN+9fTijFkOZSVKw6fuU9Gst981eIPbfBk7iArXpsFaa0/dzHPHtNy
L6beRARjLHrWgIdXCwyxo8omWzz1M4v50F2Kx2g0W9jf/qIfY/d5mShNzLH5
InuY70Y62vZIDd0T1UMr5fnuLuoyTIVObu7s0IUztYwVzbM4uC8zXDiyTQvq
9CMJ+XWxxL19ya9HWzVRKd574puiP9EQ2J7Xq6gCw7v84npTtdgroJFuqmgM
+0i/AqKrAsaptJsaN4yxZudjR7rmg0SRSa3EJVUwZTs8NLw4DXYhD7pwN1tc
0Gbe0FMbhpBsMY3WP0tsn3dXoubLwRXLbk8FdR1cOPKQ3zw0nzA98zNH8ag0
ur5cdOF0G8Gpl7nX+2AJE4eo1otFjRiZnC/PeGwGZ/OcMpXHg8j9GVvp72GD
NJaz7MUpVTj3se3p7V59cOZyuNrTNKH3juaj56Km6Hb6u//b4yLCyfbHrOaM
AtRM/JIYIkexYHZj+7SvPersuOj8MltwfPDGrEUrCawjE2XPQjvBT9Hl8Xpr
fwZP2dcM8LyBbGFHpc5rPXiJNjrOMsUR+v7lFyhzNPFJpW6Z+9wI3vQlP/He
ZYn0ebdHdTcrCLXP8ulkX36MRe1c7r/WAHb9l3ZM+00Qp6P81VSpDWnXlJz9
3CywPeUBA3k8CTWfXtWkdOjh06AR1S2NFwg4MiJ5+rMO2o0/bQSfbIefw9eC
jU9kpHWJa8ZYtIHiPXWR+RgZTh6Wlly/ixA7WV3qPq0PnyKBwsuj2YSA9c9T
dpJPkRR50MMjcBCM+/VSXZ7aoJctuMRVvBXRdlH1vx3JiFHpdW7P68HoJw7u
n61kvHt279+TffGEb0XfrdhiNfyMO0oR2FUG42cWlLFSelv6VKKiYR0D16iq
7Gc8hhg5eN1nR0sEMrg5KqYMNNF1t5hmie07Matvfm5+XgmV099/zy00wmhz
4RNPlAnELqvpXPyvCwabFaKP7EiY5zTz/WM/jrXCKc7k/fbgDgjNPL32BRMy
8oWlxcZIXDXtfJr9DYfD9xqEH9FFeiZj2sm1AQg1gpPZwQLjKln80o+64Op5
qCmpzBw3hsOYemiqiNK3Xvs5dMVRfeqAOGvGIE5J3zn1dtkaF7K7QifHR/E6
RLEwb9wSLWKOxffaYohNJbeLqcoqENg1nP1ichyljhnRQR22OPJnRCh32Jt4
48n/Q9pAFR5B+zXW3hZDxLWOzBKjB+/JQ3Fp9XVI4o+diJwzQazzlPnseS/i
/rN1ittndKHq31lvbDgL+fpDIeVNThD63PK1VysKe2S2if45oINehenRqksN
oAsm3ZhlIcH/asC1FcEwFGd8zWta1cbofZuLww6xeH6S4cJ0vw5Gnq+uJRtX
EG2Rc4xXui6DjvVbKdNqDXhnRrsLvQxwMcbF/8zrIdjGFJi88LDAracnS75N
duMdeezv6R8kFAeTqjZ863Hh9J9HtoLGONpWPsr+MpLQDNJIfNGggYBtTqH7
zg3ikf2CHf9NC7DuvJJScj4KOzc5Zw72aIDm9Bc/8fBuBMSHnxoxJkPujcvH
OeMyou9CqePPODmwVU75nAwfR/2zgbNSzdZQEKA14I/+iLnj37nOKurhOj0b
z9v0OihziT50aCbB5noqtZhuIRG85uvtz6IEQYGugWrKRCIiRJprm4MyzkZ9
onk1OYyXV+Pbv191wGt2BiUdmSbcfCf224qfjF88FsXbeFKJBd/CCq9f8qgr
MmQqqRyEdTpX505FCzSaOu69xZBGLERfOmVZv+U/LStFrYa9ENCOZ/Y4Q8Yf
oX/cL6OKiPrdmgvKidIQf5QR/VIhhZCgrm4rS1WG9/ndkTedI/A2vGR2U08f
9AmriS9N6yDDb6dbrWWKj/s/WdGlpBCNygJNYTzq2L+UIXpSKB8BN7CDyU0X
x3+Kn/gb7k60beOlPOeihxO702ITVItwse+mkmDIFv9e7C4ZY84nHD+8zVRw
UoTdecnaRwbtUA5bfGlaY4kzjjnCog0lBNWblbbPXtLwS2KvYNhZCh2TD3Ep
xwzxk/EnZVRmOzSS+dUsy03Bd1bO3TS9Fgo5c2lGW/dLCPue931Xh9iDDuwt
O4xgr/Hr5fLLGmSV/CfzrV0fEax3zoi0lmNJVYXcUm+MqbRj9QN3WkD5i9dT
MsAWXeI/Be449CBLjbZ2ZY6E3g/1C427R2AYEd+WqWmJn3dITQzLHVjeefEG
Zb0lvmZnH1XYeIIhd1G6hS+a2Iy/di5CqwKmPUv6irMmIL9jTHljnobiS7s9
tklq4WU5S0jj9zb0/hzIr142RcCUTE8l0Q2P0ZVjlsrmeCbXm039bwRlkk/v
ChZawWVkMYz4VA/NLykDdEpkMATysxJ7+tDhqty+GWqFkcZHh/fciyBeuUip
3ruriYQBzf1VW9x1u/lqheMzdVTej7zz9fYgJnpGgkbe22CJ4+PgocD3hH3e
4NtreVv8kKcrcjutB/PM2u3sblvzcdaJeLh9GCx+kWbz1dZ4bDp+5fihThyR
IumnHCSD879LfmHnUmA2I29zY1YXTyhbVN+G9GL+hv6pA8xkFEtTyX3e3YFX
WhFfjE0tcfbtLrl2tW7wvra4tovVHDTNx3uYJDuRb9TISRImIa1pyWrheiFx
zkw/7HX2Y/AV1/IJC2z5k8+BqM+9xpB5HeF2lk6ROGCc4mrerY7Rnerqb2lb
sdSnPKJwjQy/MS2Ku3olRDrF8cTmq/dQ7PCiT0htABJStEM3gy1wpzTLeiCk
mLikRcfB1SqNV5T17BvvMxG7yX515ZQ+Ar/kOWnINYO1afeYBI8Z9unXOnLd
qUTUD2GuQgc9fM90XOvaE4p7ERK6x2K0cJtkO3GTcQpMDd6cH0xtIOY+wz3m
64JEvqXWyPfqmPjyvU200pawysje3eiqi138b9fi9L/gvvv3guByDYS1Vwq5
cBNQ8N9V4E1ngOOpblwWD7KIC47REWGzT3D5dPXZhaAkoj7DyqXJWBMvzyQb
TZx9RQS1HRULM9GEaNz9cHpWCdBEKGla8+tDzKn54hvZbjD+MJx+FkXGMx+m
OmvfFhDTZrcm2ExBGrJS6l2vhvCQOStvkzFum2qbkUQaodn9umqBhoS1/3ad
F3LoRGPTmaPKBeagojity5adSpypPdoUwKqOm8TgAgdHKVZ2Brqyselj9wuC
lpQbQIR9fhmbYKmFOZ3n62vilcS7X7JHdCgfb3HPAvf4tl78MLFeuPuHjPLA
CNGSyxXQchF2yVMzwD+aozS9gl+IUIsINQcvDezLEtO+d34a8zVNPixmtmBN
8a7aSduOME26ewv3LSDi6ZYSbN0IH+adt/xMzeBh4kSx3asRiaX5D4qUTHGH
/SLke5qw9+b3b3nftvi4qFfvFU8JsdTJSJfYew9sFJz/RXJ9RFDMpa8eiUZ4
8UhI2rewDlOZmlmOS8bQoyMXX49pgjXvjjWaUBIYwvapHj6VhfShEJb3l/Xg
3jy28EpyELRvahsyNS3wWeqfvad449beK62uJ5jCOV4guIyogkF6jHvLBQMk
/TOoXdnfjMMzihwUdUb4qOUT2yvYjDc0SU33Gbb0gv/HtgKVaUj+j0LzcOfy
bcN4JKEy+6WISqUSKoponCRFChll7z2/9iZRRmQlJTIjyczIfOyZvWd2Zskq
Kl7vP3Dfx/Vc13len/M57v6/r/4UO2Keca/YH9XPRNjY08LUTkkUuj7wrOfL
JG4XJvyYllcHu7oulePNHKgcu6dN/3ubj3qNIn8FlBH71aNscqqlESZb8/vB
n1YEVrDKZZlY4eJ38Sn6y12wYC7q2Z9uhSvzeSuz1pnEu8vK4W6OWmD1KgkZ
TfPB+ZaCd7H8+pjfbd1o3/aeaBkjSZupa+H+0QbVrhONYNXIyXhguX1erK7W
WkMOQqyvVan46ePU7vzk0WctCKiI29/73RrCl6+PHA+rw9bHhTEvRxKeT+Zc
GaYpxN1n8j/5tvd5A4v75lvlMOJ2VtGHL4Qu/EZr0+g532MnB+3SzQ8GCDb2
qFWOTCDubCrtVNvef+5BlAWdrT14a5hIbVdrCa/kB8RZ82JMOpy/9fu5Hupd
Mh4mRncg8AtrWfQeS0y/vLrfzrgVBju4HCb6zLH1pKpGdqIBR6129yR6WGCW
RTiBNWgEvWdPCFNG26JNHBcmQ3rw7OBda4N3NqCapg/N2NeO/ihlK/Wf5oj4
XUsylC8nLs9mKy0q3YOfeNUiS9Ek/IY2zuZ7OcC3yf4rw9tS7JIbFj6jZIQt
vWFu7p5sgqF0gUckVwt3xHje3P5dipM9r3cakRnDiVVkDdPTsD7o9yxT3RkO
Bj0vp1zqkFZS9iv2tzHsT0nJvtOrwGDoocrNH6bIMblWtpDxcdvXiDRGYVNc
DO+xDUtrQ/tBc11GbQsM1jSzMvWMYSucPLQr1wY5VUGcYV1lmBVaoXB5aISU
1Fv32K+NgbI8bjFwu17LPQa1Emkd+Cus8V6yjISV6QLLP9y5RMrrKw+sa9XQ
IX8+K8+rhkg2DUjEogR0lSpndJzmkcWoEVkc74ZuGp89ir0z+HYtm4pDwREu
ksdDrYO2+8PxOCT4pSV65xo3VInabR44ITCZygu3dllW5Vc/EONmXlqp5Y5u
5+IN+gvDmDryMd3+hz0uenOJHNvoh1v2rVYHdxtILbXrVTR9IHi//vdU9bo2
3l7oHCFKC0DNGJ52PsMEbBaHlENIw8jLCmjxzN32N5cdhtevRuLfla1TPtv8
Nsf4039lbwixmrfw412ANoo/iO37EN2JSVbya8t+dtCRjaj3sykB17VTZ0xb
zVAUt6XbZvyRiE4qzt7TroUDnDr/+b/rRTStgsXiSRISbA4OxOW3QCv0Zs6f
MAsULroz8UVVECk96ld3pMijMtGUMtppAm2dDnVlZQ4IsF9P4rV4SWh0h7T9
/70H6xXyJga/ODgf/TKtmq4HFu34KaXsbmzcbdvzkYYEtXsHOQt/1BExHGsD
VW1S8E7vLg6OioTDiv4Xvh96YLdociXWW7FnruO/nuummJIx8yZ7kYc7M9lL
o0nmYOZLTIl51gsdg3Q2u++2qAhhXxacmsJetvmeMAN7WMheL7Mjf4UzQWKL
f0b1sC9uz6G3nt04Jket4GhlDekzfzQaqIeR/Gq38IclK+hsPWUz2/8NOWQ0
Aj7f7OFPx6d38EUhkZDSEMAkoQLp8Rs87XafCE8Xvqn0DXXQWPU/itz4CApj
vz8nbUxwkrE5RluqkhAy3a0r+EwKcfqcPWkC/bhooPrvSaE1+t7H1Ie2tEKS
ZcdwHzMJtO4DZ32Gk9FTn2IlVmCAgr17GJq6yxAXdOWfLJMlvi85LI1lVhBP
dTZoAyrksVvST6xw1yei4eVMzSNaDehfPCreSZmLW7vnnhWfMcB3OcGyeplx
bL3huP5byw4p79kqlmwHkEvNNrt3zQpjTzfJv7sWgyZFnt78nx6Ey8V0/f0q
4D7clZvHYYBMmcdafdXfIHu6aJj5ghOOe8af9Onvg0rTnva8bd4xsT+ytsds
CBudE3UL0zZIyA1Ae2k4zov2UtH91cI91djB2JhqBC5d4ebRsMANs1OG8jZp
kD+XemhO2QDpjdzhAc7tGOj6dZjDxwJ/3c9x2eW14lfHszep182QM9hIffJ+
NeEyJOLEmnkfsiPVU1x3u7DINSx1OsoaKSzZJ26Jd8DV0rExwNAGF0iVQTP5
qUQHEb4as6QOBvqJC4IS/fjLxmXzJ88alLTkaTnHPuEp63pae7IRhm+KyQyd
LwOnDuVoWI0RyOkuaNdq1EGd6werUIwF2B9+5ixPDcFj/3LN6DE9ZGQ/j/pw
fAhHNGOfxzU5QOhj4Q31mBhIUK7pN2QbwD2Ar4JXtRpfDWdSDkQaQqL3hSj1
WgVidav3dzw0Bs+Prr6cD7V4FGr4rczHGPmXq/L2XWyF0KsYabIsEr58y3bL
KhmFu+DrhQopO/AusThWM47i9oGul+dVbHDA4I70F6Z5qF5Srdid5YKdVQnz
DoI9OM8uduDWNRKWWXOkmzpyCPeL8REZKipIPM+y44HSdr79WSW0t8gWPez5
1acEa8Hz6MAxm2ETMIpcKunn64OM9mwhnwcJ9/3+mMzKzcDy7YJcoLIr+FSN
1nLbJ/C2iV7Kxc4Jmoouxj+7KpA76WFB52qCYflPqumN7fCrP3f9UJoV/l4+
WvIwvRQVVL6aWaxmuMM1l6rQlYUbLP9k9eaMkHbw9Dvr0koiobF7LN9fFsod
FFP71BLwTyOBjNRjiPLMzJevDBphHf2vQ+wlCYdCWTjVQmqJuY+fd6hM38S1
3ZHxGidroSvUm+0jZYzvmcFzVEJzqKO+KcR31AVvDPKpiu+/QZGoeen8eR3Q
Lzz41UIxB+m9tCuEhys2qLTXt04lo5xvNaBAyQR3q69u/gruRdkO//qSakuo
cl5yPvZpCAo5V0lkblbYdHW9kb31HuTq8stz5Dr4tnPuuaj5KMZ1T8ZU73aG
YnaghHBnO+I5Hu/r2SLBf0BciV40gcjhv0w991AHHOx80vKiJYT8BYWyGAFJ
CJTHZ9F7DSPj+x5L7Shb+B3ySS44OgDGeLZg0podKsOne6VnZuFcuDCan+yI
FaMipabiAdSJHv7of9EKMRZx7EMfe3GokPMT6YslYn8/PrIh0oE+yrQXT0xs
cFnnYk5Zywza0zg0j3k4o3L/lZsTwpVEpvzUHTna+xgwZAsK8kok0k8qUx6n
1MKX9zIVal3p4PleNiLvoguzmJ2bmc3ZhCxFz8tWRVW8S2sJndWuJPRMjg3E
fZGHHZ/8V6dsAmWWru+tw4zQ2q44lkZbhlZcWlr3MMWrje8THoqT4KDgKHmf
6YzlmMVvnkQ5KISjmw64G8Cv+k/vSE8nyowNlOjiSOiV4ny+vnsWJ0JDd9uz
OYFZhebm6uwUbO8On9F7Zo+maKpLjEQJul/m2/IYmyOO30niZ00tkZA2G+Xy
+STk9/O/fVQ2DqdCgYjnMba44D3g+XSbT5/NqNRr/jFBsqgUXfPxaghQec7T
fTFAks5uOz7Kdixny20chhk8DhWLXj1KEGLVHoy0ujLYfEJcDS77RCz65S/V
pz0Aw8dVRpPCPtDT0tef6yDhbTlPVnt3NTqrOAePvSNB1Eg+snbAC06flAwd
f2uiR8jT9YTrB7Sc+s/TTE8fjOE0/mMZ36A12cqn72mPmanJjeGWHPDnCqj4
XdCHmGuQr9hCJ2LPdi/YvbFFbJvsAWnLLhz3eL8j6///Z84f/vKvPgeR4Qo3
d1frouNv3F5BpTfEuEFvZKG8BuYuJISp+H/Bevv8zw4+E8j9SDzJP5mFky/9
xJ3emmJxWuxLfEcf9Bd1LnHftMN6xN2XCi5z0B/hu3mS2Qlppuu0ODQKCSst
AZljNjChHX4TqdeDhcVYqyE7WxylCfArkBpFH5+aedCQNbhjeOsIn3pomd8K
nE20xIagrHpkfT7UOo+bfYnXQ9WrD2ycPcmoctWqYgkyhujYz/GWA0X4T9Px
wcs0PUyytIjyyxQSgo4Va/oGWngwM2JG3tSGp0bV2nFfSJBsiqCI4B0BEb30
Jp3fBgZxeZyfnbPRL3xaPP6sDph6RbKDXT4RTGshB7lJajh6ZiZ612IUGlk3
iYEofTz5tHHS7ukM3nnOygS+dUBBftHFaJNB7KBXfNXjag2DU2YLbud7IXOQ
nqk90grh2q/zo5rfEwnJEyWbC+rQcb56ranDH6jdaRDSow9jiQh7lidlKJY+
+z4w2giL/dSJXZ+HgSPazRlUjpB6QPffYbYAou/i3oRnVrpI7s8qFf2ZDfZp
/9ZRaV0szeTtUj5bgl/vb/+d286XTk7nhmuECgl5w/ags5JK+GxymD3KcRjC
8nMvGuWtkRAbeonGqgfDfhn7qcNsIcnrn1JgOACn4+cOt9NbIaud/4y84zQs
u0b38f6xxy922g53mUZ8Mmm3soo0g4j1iyfKrWmErp6lvlCAOgzl9HsWDL6B
UXjQ7064By4p5P535VgxkbTQwxjepYLImuD9n9pKiX/5bvaJTXdx4PaZGzLZ
2ci5eNBFNVEPiKR/W9HSAW+W8LTj0RboPBETqn1mHPm3//LlUNtixJr72XpI
LwZVfV9EvrZGcsie2sjdI7hQxDztFmwDsyolpYXAWuLR8PXA8SAJsOYkHZLV
68Rw/VsR6UELUAcWOKWr18F1pb9O3NsUUo5TIQFxjwm+1Iz6zbZtv3WgnB90
rSZ8JGW8qv0lYHxIdjYsvA9/jXm0Qm5ZQSU3vpb1Xi0UPlVZ1FmZQVr5VIaK
ciP28pJ1XZ8xRhstO0Wb8keYsOmZrCfqo3LT99vG2S7UWmUFH203xwX5BLM+
x3TMx42YGKXrg5mbLF/BP4cgNznNWrhXHQptf0YkdodCfeffqf4cLXRZsXNa
llfjkduHBwI3rBDVyH/auMIcbc+SbRQ1NaHdWy2ya388Ef+Aq7bggw52T/8a
eNZSQATVfbooG6qMyjNPFoJoZnFVW4bliPUjZGh8+/zJewwvuAeurfDbQ57v
/7PfAL6FKf2Dx81B/izlCp/HCLKZT/vLztmg7rXamohQMeYlL5EJl+jDtKjr
sVZaKOIjEw7X2mhj8JfUbXbhGXApuiw7OjliS8lK/9SpPCQ/1cs/I6cHwc3w
JxI+I7C0Ys9T4d7mtV89ioLOc1ha2BlXG+uEGQkqlg9RBYTqRt31yOcSmKsj
v8cc3oEnr6OdlfbbQ+HWK28Pf4Jo+SWx369XBQwv5k3KjfuBmrtuxy1IMD80
1NjNlYUCtd26aheNwLNQvkxxtQ6pa14f9N4Z40g1T0PnQgkGdFV/DcrpQ1vR
Q5icrR8Saps1plokCGr+oKgPLoCEy4ixZbU+gu5n/I3mLUGgVc8/wWA9yLzT
PHEgdRnkinERzS8fQejnVNBvnidElqKQ0a0Ufby2l3tm6pxNpAicsbi+Sxs2
si5VZ9wGsPz4cO1j2KNvk6ulgrkCp16t++7RMMa7YFJM54M+3ByJGR9kJUG4
7GhgAZsfXqR9ePVL3QDlZr8qDyd0IC0yxY6MsMQtemtv7vEyrNFd87khYYzd
f1brWl51oOavpEK7rTX4s2KTtQa7IXTbI4dJzBp7R8QuOx5LBmeV34VdjkYI
Tf/meq+lE7bfdPjp2sxxom1HRW9lL9Ks53+9umuFI9I7zvv/l0P8mvocmEp6
gMWJO4ZxOybAMsdFvuFqj/Sd2YvnclwQkPwh6edBXQStNWW5V00gvlWpyO+Q
HbL0zyZFd3oSUnuPFZ6y1EaNntuYqswIPtcmyisoWmMqePy350I9EtTuRLjC
HD1+AbG/RyoIzRMxrSNOgM6J/T8ifnbihamszdy4OYxZ5hTSOZtxqOip2rcv
pjjUOjLFqlMJzVM+h+TYTMF5odeHQe8rNoKYSR+MbKAfJzYU87wVPn+rnxte
toT0YJJNGJGFUG5Vh9/GBthvpbx6u6UWhnG7zlGomOKddayOyOdO8DbR1nrZ
WsGtZpj+QFYJwf6qMF9xu/6mrZLE/s9tSGz7qX3D2AwmvIIJNpPjyBCe+tIV
aQspnsbfhky1BOuHxAOFSdeQrHc/b9GyBxoXUnWouEnQkl0+9uKSPy4eiNgo
/08HV1/7ZLHca8Whj94Be2474MVdTp1PvU3Q/Nd85+SgLfYt0fFdaQkjTvqV
abwz0IVSynJ5N3MuBI3kdOqkDeEtvcBxoq+CcJgOvfhE5Sxa9vb/5r+SgRC+
tFcusdv6+/ral5qzklgrZC15l3sbXodsWI07RoB/2RFBV2yw9DWDWyisipil
+G39yVEOFDvCUoTns4n7NWW/sL3PMuz4GAyV+zEm1pyt8NEKpQpXLurvbUAR
XZeSvJQ13oT4MugO5RGRf/cLsHeo4OoM1772wzOIP9DxoHvTCTQDljFRGZVE
yG/aSQutu+iknsmJ7x6HH4fj3zlLe4SNCp/iJBHEVxJzp6K6Guqm9o84ZI1j
kaPA8vR5J2QLjq2v3szBbi+mzVsOhrjKKaGe7dkC+RfM35tPWYD1hbuAnv44
yG/atzHE26J2/mfs28p0QnRPbpGPnjbcnxjs7vZdg/pqzafHjZ6wnXxdHnDr
K3jEYv7VFVijo99iyzBoFNfmHyrQXrQBn/lwaf2jGhRxrL+msDRFmOG/jv3J
7aDWLGqN77BAjPK/D/IKJKJp9H7EjqN6IKs8+R8ZfxlRcjrQuc1KGeNkTX5U
uwqI+3t77zlnKyLA5tmfyIUKLI3qRKy6k+ClFXneyqCEuLmTTlei+wFEhop/
6ryoANfDlJqj780QPr15zPz1FEIv9HebXbCHBpNGHIPcW/y8d+FzVrkuLuJo
9bmyarT+7ZGPCDVETskz3jNTTRCa/8MrcM8crU8ep0i+/IJXbj8aP8uagG5g
x7cKhkacim2x/L5dz2+BvmDJ+CwigHFe8ECdEpwEJFUfLofBmJ02JXLWCMnX
tG3S3VOJcf3i77Qf1FFQrErBsvGJyPz4N/gowz2cOvx08o5gHbHrN8OeffQ3
cPuUbrjYo2Ri/CxTcs4XFRzhz2dqiahF3Mr+2d8hRvAo2csxtBoB6Xjf3/mt
usgu+vJ6F3ssIZVy7YnuCS3k5ebUn91XjomnQ5TcIiaQuHOt8Ut9Jvaxyl5q
3zCGQwaRqXq7HpkMz7QN54xhF2m+t1LZmzhMe85O0FIHjXT015X7nhN1Mgv3
C+j1sem4h1bhTSYRsCQ6uFtDA1MTf6kVj1cTYr7MvUMa96G5Z34zRfQrTlMU
zrhxOuCG1xlzJsm27Tz5QyboqTnusqzKorIPVsXnuHdz/P8946rVy/ifWNmj
QF182gN1Yfl3fpdVINmT/dq7cAt8tzRLKKHthMO51y39kySM2K0bPfpbB5tv
KrtWoyxB8ix/Y3o1H9aB/y05M+hhU/r0p/Qdk7h5IsXf+ao9ROgf3J1ryQPN
lbfz+s268CPz3s3uaE6I9/MQuha6MBi6w3hLvYSQMso/76isCOWCO4lv6T4R
WinkN8Nqt/P0rXCN+ZZBfCyiyquWscJy0xLFidJuuLy/U7dnxRIjb00vn6br
Rjzna52JG5awP0qWE7rejsHxWsgzW2Cdqf64sXg4PM98SFTk1QHjOb1L8+rT
uFNmSvWU2RE8NCx22neLCFV617HBHkXc2pl9x0GrgfBg7Q32SRSF1Fh/VWdm
JYTj9aacLhnCnF//9LXXg2C16VpW77SC/XTX/hi7Qhi28+tyW+hDNFNDOZY9
BjJHV4IFAgwQpHFYj8O9DVFXo2afVtjh21Rx/32BMGLQRUtVKEAH5VenVbku
DKLBb1CzwNwWbXO7RnuNOnGIJnqYi8sBB/Xtt+pckrHzfuE8224DNMa9q5hN
7MEFqnutGTut8GQq6xA/4zhE7I3j3TldcUrKOLLFsowguBUCTgSJ4i2DCzmN
aSVaP6TufBJviBTjs4Vm27xi0yVWen2XMy5NLdtJR7RihWFfHtN7S1Qf5hcX
9vgKpidcqnXBtgg6UMVRQTkBPVHuw+H5DnhM2v/tnMQg7tzUuSDqbo12pwXv
L6rjmFl/dVI02A777HhKjxZXEPNKHL3fKWXhuOYa8nPJDklfPlHIMBji7V2r
/T6MC7i0upyo1OuCP/dX26MyviJ5Wmz+1XebbV7S+OPCUU7o5s6+ki+TxcXn
Qz6NS9v8+G9qz8s8EnRcKdYs75UTq+dTf6bNK4JjkZeGzLcdzLTmEmZ3zSBh
YSrN2zqD7pUjT7UHXZHU6U0s/u6G+McmV/ZIG9QGHs8npCqJiStGg4fSZWHH
S7Xuz9SE88c/8CocN4W/1/mxMbUJRL1rvLXQZIePkY3HHFLLIct2/8UBJ0Nk
FzI0tV0fA/V6K+1/tg5IpF9+8MxmFLW/bl9r9LeFZob/xbtkzeCX932qym+G
1hmfMA7qQXjsnR5sErQBD5OKsxDVJMTeH1GYb7fHsbqSTvzqQ6v9hPqp7XlK
dp+NMXeoR4sLqU6ugoQ4XcGSrcwOaKgF1lP3kGDz04fqdOUbIlolXjtZVxtG
f99t8dwpJ+6P7LTp9VCEderUs+adn5C7ljx9ssUAkql77A3ki4nu5eMWH5aU
sbbOs9MhxBPd9/ziCWVd6CruGJCdbMAoU2RvPpcxmqxrnZ80p0N1XZ8/UtUA
/uxP8kdvzuLt5uiW90NH8LvQmcseGMENZrFOGRZHiArKcYq5jMGZd/x1xaYd
5J03kg99LoI6pQC1Hrc+SP4Kq2yEJ9Gtyzyit6gNq++vkjdWAwjJhJjld0d0
UfahONG4qAqfnLaH/ZIlYvxe5T37NYCqdIpbabMkfKY2f+jhnImjxEnv8ipj
3PDxEHabzQZYM3ZeLTfArWu3eZiT/BDzLs/364YBtIqWriSufyJEGazEV/21
UBVb2u4YkENkLWX03V5Xwr6uX0YaKpEINGAPeMykDyq/wTebIxn4qeR8s1xW
H8vdLTuMtMaxmRy+LPLDDmwvTMWrA/tx+8Pk8z2OJARnxJu2V1cQF+ZkhwP6
FBBwZY+3L9GFX0xhudLZVshZo3L8VdIFvhATVotZa1g/+xF680QZKrTUbiT/
3c4PVFQClpajOLRlaHLEyhZ6T//k/07JJY49K750bo86jP5Lut0pO4wPZzr5
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
0bO2w4x/bsKezQ0tbmI++om1sK5zjNFeIed3P0Nr0OEqcDk7ZmckOkC5TTTW
c3AMOqzcxxj1XJGcNUyRZZKBlRP0kQcfmIIjLPK/Leke1LOU1+u6kXBZYGqN
SyUbQpo1T0lnbXB2rwvXhXM5yF+N/LCPzx5M1sqUwfUzkMpmKPR74AHVM35r
1Bl5xMqS/J8gFiM8L48qdZ/IwisK28ssZRbwevjoU4h4KvHu0Br1K74bYB8K
t6QzK0TA2fDOmO8W6Ng4wSd/nSAKNlKHy8W18crxqsjpxAwIcTJPfbSywehx
a//XJhUQCONn9TxkjX7X0k7l2////b/TYdcWU7AaL39gNW+AXpAalUeRI/La
3liz5gfhWVX2fjk+c0jzcOtfUZnA4pEf3C8ZvPCh/y1f15tGVHc9+ZPRaQ2O
h1qZXj/rCe6YlAEJe2DVOr7zyMVq2GX8oqlgIq/n9tPOlr+LiXzdg2sGZL47
zJ4omc+wG85qy6lm4RZw3B3Y1E6UEvwnvJQ26jSg9fHXjUNHqqAe5c17LdMK
mWs6bp1PKgjH7tVMNi5dhG9kyKvvKSYCpbFtJU0Hh97HqvQ6VmN/DLfAV/Ln
cUqpTrHKhxDXS7N6CyxuguJkhWjSnxFkvQGVkpcrjjlUnhp8P4Rkmxopczs3
1DUkZXwVqMe+NfZi398O2EM/H+zGUg3WzRoVA0obbP/g3KOf1IbYy08ELnQ5
gs/BsUv9di7x4Mo8rTqbLhpS6NYWY7oxsSFV+0vHGWub7O5ShsmExbOR9iUu
Y0h+Xr283pYH5fr0TxbPzPFTdCkp81wlmJ3S09lHLDEzXP74+PwYbm0TVTkq
6Ior1JP6lLzdSHxV0lR9wQmZzrkFf0kjCFkMGzgt7AVes/Yd/BOdcLvB3zPq
6QBKw+ZevvhPxO9MLjEjWkME/jjtvn5iAilslwN+Wrvi6MNiy3+SE6jLv3Bj
WMEdTrdFlm/zlRBGUZyWRW+uY7Egs7NlVzFa1UJztRYt8VxP0CqPpZpw2Wn/
38KcGB6cUG3W8r5D8NM1mud6mIGDZ7/CoEwv2tab5hwaSfj3wdnc6XovvLg+
dZQuOeEGNX9F2eQDwjTPQ+/rJxOY9fNbXV1Iwf1T74sUmcxwL/HEyDbuDsRw
3om/kmqHnX96JzJXOyDa8PKz6Wl7/KA1+2h5qB933aMdP1s6Q02PQdjZoR3T
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

      "]]}, {}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{-0.2152520941253918, 0.00004344543920011605},
  CoordinatesToolOptions:>{"DisplayFunction" -> ({
      Exp[
       Part[#, 1]], 
      Part[#, 2]}& ), "CopiedValueFunction" -> ({
      Exp[
       Part[#, 1]], 
      Part[#, 2]}& )},
  Frame->{{True, False}, {True, False}},
  FrameLabel->{{
     FormBox["\"Off-axis angle\"", TraditionalForm], None}, {
     FormBox["\"Stretching Factor\"", TraditionalForm], None}},
  FrameTicks->{{Automatic, Automatic}, {{{0., 
       FormBox[
        TagBox[
         InterpretationBox["\"1.0\"", 1., AutoDelete -> True], 
         NumberForm[#, {
           DirectedInfinity[1], 1}, NumberPadding -> {"", "0"}]& ], 
        TraditionalForm]}, {2.302585092994046, 
       FormBox[
        TagBox[
         InterpretationBox["\"10.0\"", 10., AutoDelete -> True], 
         NumberForm[#, {
           DirectedInfinity[1], 1}, NumberPadding -> {"", "0"}]& ], 
        TraditionalForm]}, {1.6094379124341003`, 
       FormBox[
        TagBox[
         InterpretationBox["\"5.0\"", 5., AutoDelete -> True], 
         NumberForm[#, {
           DirectedInfinity[1], 1}, NumberPadding -> {"", "0"}]& ], 
        TraditionalForm]}, {3.912023005428146, 
       FormBox[
        TagBox[
         InterpretationBox["\"50.0\"", 50., AutoDelete -> True], 
         NumberForm[#, {
           DirectedInfinity[1], 1}, NumberPadding -> {"", "0"}]& ], 
        TraditionalForm]}, {0.6931471805599453, 
       FormBox[
        TagBox[
         InterpretationBox["\"2.0\"", 2., AutoDelete -> True], 
         NumberForm[#, {
           DirectedInfinity[1], 1}, NumberPadding -> {"", "0"}]& ], 
        TraditionalForm]}, {2.995732273553991, 
       FormBox[
        TagBox[
         InterpretationBox["\"20.0\"", 20., AutoDelete -> True], 
         NumberForm[#, {
           DirectedInfinity[1], 1}, NumberPadding -> {"", "0"}]& ], 
        TraditionalForm]}, {1.0986122886681098`, 
       FormBox[
        TagBox[
         InterpretationBox["\"3.0\"", 3., AutoDelete -> True], 
         NumberForm[#, {
           DirectedInfinity[1], 1}, NumberPadding -> {"", "0"}]& ], 
        TraditionalForm]}, {3.4011973816621555`, 
       FormBox[
        TagBox[
         InterpretationBox["\"30.0\"", 30., AutoDelete -> True], 
         NumberForm[#, {
           DirectedInfinity[1], 1}, NumberPadding -> {"", "0"}]& ], 
        TraditionalForm]}, {0.4054651081081644, 
       FormBox[
        TagBox[
         InterpretationBox["\"1.5\"", 1.5, AutoDelete -> True], NumberForm[#, {
           DirectedInfinity[1], 1}, NumberPadding -> {"", "0"}]& ], 
        TraditionalForm]}, {2.70805020110221, 
       FormBox[
        TagBox[
         InterpretationBox["\"15.0\"", 15., AutoDelete -> True], 
         NumberForm[#, {
           DirectedInfinity[1], 1}, NumberPadding -> {"", "0"}]& ], 
        TraditionalForm]}, {1.9459101490553132`, 
       FormBox[
        TagBox[
         InterpretationBox["\"7.0\"", 7., AutoDelete -> True], 
         NumberForm[#, {
           DirectedInfinity[1], 1}, NumberPadding -> {"", "0"}]& ], 
        TraditionalForm]}, {4.248495242049359, 
       FormBox[
        TagBox[
         InterpretationBox["\"70.0\"", 70., AutoDelete -> True], 
         NumberForm[#, {
           DirectedInfinity[1], 1}, NumberPadding -> {"", "0"}]& ], 
        TraditionalForm]}, {0.09531017980432493, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {0.1823215567939548, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {0.26236426446749106`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {0.336472236621213, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {0.47000362924573563`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {0.5306282510621705, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {0.5877866649021191, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {0.6418538861723948, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {1.3862943611198906`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {1.791759469228055, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {2.0794415416798357`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {2.1972245773362196`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {2.3978952727983707`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {2.4849066497880004`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {2.5649493574615367`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {2.6390573296152584`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {2.772588722239781, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {2.833213344056216, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {2.8903717578961645`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {2.9444389791664403`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {3.6888794541139363`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {4.0943445622221, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}}, {{0., 
       FormBox["\"\"", TraditionalForm]}, {2.302585092994046, 
       FormBox["\"\"", TraditionalForm]}, {1.6094379124341003`, 
       FormBox["\"\"", TraditionalForm]}, {3.912023005428146, 
       FormBox["\"\"", TraditionalForm]}, {0.6931471805599453, 
       FormBox["\"\"", TraditionalForm]}, {2.995732273553991, 
       FormBox["\"\"", TraditionalForm]}, {1.0986122886681098`, 
       FormBox["\"\"", TraditionalForm]}, {3.4011973816621555`, 
       FormBox["\"\"", TraditionalForm]}, {0.4054651081081644, 
       FormBox["\"\"", TraditionalForm]}, {2.70805020110221, 
       FormBox["\"\"", TraditionalForm]}, {1.9459101490553132`, 
       FormBox["\"\"", TraditionalForm]}, {4.248495242049359, 
       FormBox["\"\"", TraditionalForm]}, {0.09531017980432493, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {0.1823215567939548, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {0.26236426446749106`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {0.336472236621213, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {0.47000362924573563`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {0.5306282510621705, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {0.5877866649021191, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {0.6418538861723948, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {1.3862943611198906`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {1.791759469228055, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {2.0794415416798357`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {2.1972245773362196`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {2.3978952727983707`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {2.4849066497880004`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {2.5649493574615367`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {2.6390573296152584`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {2.772588722239781, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {2.833213344056216, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {2.8903717578961645`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {2.9444389791664403`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {3.6888794541139363`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {4.0943445622221, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}}}},
  GridLines->{None, None},
  ImagePadding->Automatic,
  LabelStyle->Directive[FontSize -> 10],
  Method->{},
  PlotRange->{{-0.2152520941253918, 1.7610895043971402`}, {
   0.00004344543920011605, 0.00986944853149641}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{{{0., 
      FormBox[
       TagBox[
        InterpretationBox["\"1.0\"", 1., AutoDelete -> True], NumberForm[#, {
          DirectedInfinity[1], 1}, NumberPadding -> {"", "0"}]& ], 
       TraditionalForm]}, {2.302585092994046, 
      FormBox[
       TagBox[
        InterpretationBox["\"10.0\"", 10., AutoDelete -> True], NumberForm[#, {
          DirectedInfinity[1], 1}, NumberPadding -> {"", "0"}]& ], 
       TraditionalForm]}, {1.6094379124341003`, 
      FormBox[
       TagBox[
        InterpretationBox["\"5.0\"", 5., AutoDelete -> True], NumberForm[#, {
          DirectedInfinity[1], 1}, NumberPadding -> {"", "0"}]& ], 
       TraditionalForm]}, {3.912023005428146, 
      FormBox[
       TagBox[
        InterpretationBox["\"50.0\"", 50., AutoDelete -> True], NumberForm[#, {
          DirectedInfinity[1], 1}, NumberPadding -> {"", "0"}]& ], 
       TraditionalForm]}, {0.6931471805599453, 
      FormBox[
       TagBox[
        InterpretationBox["\"2.0\"", 2., AutoDelete -> True], NumberForm[#, {
          DirectedInfinity[1], 1}, NumberPadding -> {"", "0"}]& ], 
       TraditionalForm]}, {2.995732273553991, 
      FormBox[
       TagBox[
        InterpretationBox["\"20.0\"", 20., AutoDelete -> True], NumberForm[#, {
          DirectedInfinity[1], 1}, NumberPadding -> {"", "0"}]& ], 
       TraditionalForm]}, {1.0986122886681098`, 
      FormBox[
       TagBox[
        InterpretationBox["\"3.0\"", 3., AutoDelete -> True], NumberForm[#, {
          DirectedInfinity[1], 1}, NumberPadding -> {"", "0"}]& ], 
       TraditionalForm]}, {3.4011973816621555`, 
      FormBox[
       TagBox[
        InterpretationBox["\"30.0\"", 30., AutoDelete -> True], NumberForm[#, {
          DirectedInfinity[1], 1}, NumberPadding -> {"", "0"}]& ], 
       TraditionalForm]}, {0.4054651081081644, 
      FormBox[
       TagBox[
        InterpretationBox["\"1.5\"", 1.5, AutoDelete -> True], 
        NumberForm[#, {
          DirectedInfinity[1], 1}, NumberPadding -> {"", "0"}]& ], 
       TraditionalForm]}, {2.70805020110221, 
      FormBox[
       TagBox[
        InterpretationBox["\"15.0\"", 15., AutoDelete -> True], NumberForm[#, {
          DirectedInfinity[1], 1}, NumberPadding -> {"", "0"}]& ], 
       TraditionalForm]}, {1.9459101490553132`, 
      FormBox[
       TagBox[
        InterpretationBox["\"7.0\"", 7., AutoDelete -> True], NumberForm[#, {
          DirectedInfinity[1], 1}, NumberPadding -> {"", "0"}]& ], 
       TraditionalForm]}, {4.248495242049359, 
      FormBox[
       TagBox[
        InterpretationBox["\"70.0\"", 70., AutoDelete -> True], NumberForm[#, {
          DirectedInfinity[1], 1}, NumberPadding -> {"", "0"}]& ], 
       TraditionalForm]}, {0.09531017980432493, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {0.1823215567939548, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {0.26236426446749106`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {0.336472236621213, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {0.47000362924573563`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {0.5306282510621705, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {0.5877866649021191, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {0.6418538861723948, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {1.3862943611198906`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {1.791759469228055, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {2.0794415416798357`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {2.1972245773362196`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {2.3978952727983707`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {2.4849066497880004`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {2.5649493574615367`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {2.6390573296152584`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {2.772588722239781, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {2.833213344056216, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {2.8903717578961645`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {2.9444389791664403`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {3.6888794541139363`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {4.0943445622221, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}}, Automatic}]], "Output",
 CellChangeTimes->{
  3.609665225613473*^9, 3.609758274405983*^9, {3.609758393785983*^9, 
   3.609758413003058*^9}, 3.609972991564396*^9, 3.609996611571492*^9, 
   3.609996695143365*^9, 
   3.610000598703891*^9},ImageCache->GraphicsData["CompressedBitmap", "\<\
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
ktCPzbi8lNgWywb2a+m0YC11s8lb5rr/BeKVEVs=\
\>"]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ratio\[Chi]ListPlot", "[", 
  RowBox[{
   RowBox[{"sample4096", "\[LeftDoubleBracket]", 
    RowBox[{"All", ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "3", ",", "4"}], "}"}]}], "\[RightDoubleBracket]"}], 
   ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6096652329220667`*^9, 3.609665233159891*^9}, {
  3.6097582808007593`*^9, 3.609758282540194*^9}, {3.609972994470024*^9, 
  3.609973004547398*^9}, {3.609999404114973*^9, 3.609999407810217*^9}, {
  3.610000603531001*^9, 3.6100006040405293`*^9}, {3.610000815767473*^9, 
  3.610000855331314*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, 
    {Hue[0.67, 0.6, 0.6], PointBox[CompressedData["
1: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
+oxbGXuAXHcN9wVuMqbuY/yutUqFCq2v1dcXVpCHQYOk0n4z8Bn75UnA02jP
YxueIQY9SCJWhmmNEPCrMTmvkOs+8FTN4qTpDiKe4CjZHbvpA2apBY8DYhkw
9aLQ1tO2/jB2su7UjaINpLPBH/Plox/8FEi/XrdB1+tP+9nRwQBYsH9z4Anf
DHqe9dapKFIXQhRK9xNSGHD9Js3asNkflHdc4mpQZcZt0NFp+4gGJk6N123f
baJnDyo4W8ALqIYp3W/pvPQ9lzZskR4My1HLV04WE7Hf4pOPv6TcwOlk59O9
MjOo4eJRMWM2I9DM/r6QnM2GU6+k5dTGhcJijOL3eg0GnHDvzpwTYxCc9wif
vWzEgIUoQ6P6BlRwOtG+lW2cjA0qrYhurd7A2HmkX9edHQvxvGer4QyBu6XC
Nx/fZMNv+66R3K2DYTS1l/nzFQp+gwy+mvwXCNppzakZLBT8rOOtbqmWHxwb
cPqPQ2wR9Qsz99Y3GIJZUpvjzxOM+GpKy4+iJCp8kZ1jm6D7jc+NGC45Fxoo
Jg/46LKwYl9mMwKfcxCQ7uZQk5xm0dv3VXUQaggtyfcTKXfZcHx4dHja3zC4
Pfh03PnzVow743NfCUfDnSe0T5H5ZBzvFtB6bpYGI3sd5cV/ceLyqrYdfw9H
wJZRp0aeqWW0zzuURUbXDSpLOaVPNzDhseb8q+ZqgSC/+EONl3UK/dolXPCs
2RSUpcf6OTMo2GxjhtvWIxCsJ9U1zrGTsK8GQ5DVO08ILmXnOzFGwhG6/a6J
/v5g3f/0hcRnMv5CeyR6keoJSv4C71u0F9CF94ork9n2UHNXj3dygd5PvHdH
N4jag3I1gSmZzqt5Ajs17p0LhLPXOV0eMa4gg+64ok+lJyHV9laWpQob1jlz
jCUoOwjaxbt3P9q/BZezKEG/YDisRbYpS7YwYur1w8cOhtD96N2VyQYrCs47
uXrWmBYAD/z7XcykNtCN/85zjTQ4gckLLyeS6hRii+y21u7UBMvRdOXw04y4
0bViXfV0IMgJMkgxxTHg6gx55W/NVAg5se2p34tlpJ43cvZOhT68LtrYnz1H
xjWkg5+dtntDRRy5sOrMKjI//E0jv84JMszKPQpDWXD4n8bS6ppgSDj4w307
EwP+sZ982WHQF+p6TqdFiq+hpaReu/X9nrB/37aBJ0QWvKZ009vrSSBwv6Ht
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
UbI/vLu/X/FC4Qp60RulsWBBgQTXv341NL6g3CsXLjvgDnI7qx8PBywgvdc7
eb9YGQIbOnhpZ/IGorMV1cZuFDhpPkdcwCxYpEJK+O9FGq8LXKvlbmLEZRd3
q84r+EFShWqPziALdixVZpisD4BZdcdH9/pY8K2PdalsZYEgcoDINnqeEX9j
TsiSQD5wbpeK3PUlDvz84NXrjzeD4PWnjZPm66voREDXrhBXO0huUflL9Sbi
bafmZ2193OHPu78h1vbz6JrK/Z064UZAyU1/dvIVG07crUpHJIcAi3l/k865
OfT9yRe8vc0K5Lc1mb2/SI/P/CmReBzpCfjCWbvkbAbscvKTWoKFH+hdskzU
511BsuJfa3+8sgYl1suEnXc5cbRKvHjrxRDIS/2Q1PiDHh8vM1K4/8gXtOCC
m5PXKhrGW4/DVFygnEfpikgXGRcqHj2oRtvvezqCORJLK6jskYVztI4n9K8g
CSHKLKIPebTrfxWbdzzV/xfH3eu6rr2izIyMvklooXIqkuzsvfe8114ZLQ2K
sopQiqIlFEnvN4nIqGwpaZnZe/7u7+/P43Hvfd/POa/X8/m49yPh6AQovLNi
jr4fOh9bg/9zcQWvMcN1ETUStv3oIuE8QoWvwR98P3mMoQtrZxQC9u8Fvcr+
mYoTq8jAJISptd4VRJ4G+Sm/XEIPMmKHOkkW0BudpO5OovPmwJPn8hkewLwi
lj30h4TjeTTfbGz3h/IXtVwcjUvoEePEz9dVBuBrQs7ZI82I49z+bfti4QcV
m4dGztJ9LK2Osie4wA0IrVHSJ59Po/U83fDIXBto5QkSeFbLjeM5/F13t0dC
h+FYavBPeh4Sxw75t5tCqY+tnHDYBnqcMGi4mOgOMrTqzP+UptCBxroz7821
IehIWtPIR1bsZTQXzRpDn5ebW5jFezdRvZDm4X+7vMBkwuNX3u41RL2wMbxI
zwvdJNFhHf9VVFMt96Bh2BXerjCIpdzhwkqmGQ6rDBFgYVn5TP0gI847eFWg
dMQTfmrtinTYQ8CXCS91tZx9QFX1kdcbPhYsdcNkue5VCIydi4aT8yR8/neW
js02GkzJMERZbp1CMmEZLlHfj4H618m3JjLLqMiWSy20xBWqRXsV3M5uIOuM
uL8nXrlBSBb1Zaf4HLpTtez5gPcU1CYfXes9uoa26Ug53Ip1hIWGncwfwpjx
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
HuoaJJrC/wDgZmwX
      "]]}, {}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{-6.6296065469312335`, 0.00004344543920011605},
  CoordinatesToolOptions:>{"DisplayFunction" -> ({
      Exp[
       Part[#, 1]], 
      Part[#, 2]}& ), "CopiedValueFunction" -> ({
      Exp[
       Part[#, 1]], 
      Part[#, 2]}& )},
  Frame->{{True, False}, {True, False}},
  FrameLabel->{{
     FormBox["\"Off-axis angle\"", TraditionalForm], None}, {
     FormBox["\"Fraction of high energy photons\"", TraditionalForm], None}},
  FrameTicks->{{Automatic, Automatic}, {{{-6.907755278982137, 
       FormBox[
        TagBox[
         InterpretationBox["\"0.001\"", 0.001, AutoDelete -> True], 
         NumberForm[#, {
           DirectedInfinity[1], 3}, NumberPadding -> {"", "0"}]& ], 
        TraditionalForm]}, {-5.298317366548036, 
       FormBox[
        TagBox[
         InterpretationBox["\"0.005\"", 0.005, AutoDelete -> True], 
         NumberForm[#, {
           DirectedInfinity[1], 3}, NumberPadding -> {"", "0"}]& ], 
        TraditionalForm]}, {-4.605170185988092, 
       FormBox[
        TagBox[
         InterpretationBox["\"0.010\"", 0.01, AutoDelete -> True], 
         NumberForm[#, {
           DirectedInfinity[1], 3}, NumberPadding -> {"", "0"}]& ], 
        TraditionalForm]}, {-2.995732273553991, 
       FormBox[
        TagBox[
         InterpretationBox["\"0.050\"", 0.05, AutoDelete -> True], 
         NumberForm[#, {
           DirectedInfinity[1], 3}, NumberPadding -> {"", "0"}]& ], 
        TraditionalForm]}, {-2.302585092994046, 
       FormBox[
        TagBox[
         InterpretationBox["\"0.100\"", 0.1, AutoDelete -> True], 
         NumberForm[#, {
           DirectedInfinity[1], 3}, NumberPadding -> {"", "0"}]& ], 
        TraditionalForm]}, {-0.6931471805599453, 
       FormBox[
        TagBox[
         InterpretationBox["\"0.500\"", 0.5, AutoDelete -> True], 
         NumberForm[#, {
           DirectedInfinity[1], 3}, NumberPadding -> {"", "0"}]& ], 
        TraditionalForm]}, {0., 
       FormBox[
        TagBox[
         InterpretationBox["\"1.000\"", 1., AutoDelete -> True], 
         NumberForm[#, {
           DirectedInfinity[1], 3}, NumberPadding -> {"", "0"}]& ], 
        TraditionalForm]}, {1.6094379124341003`, 
       FormBox[
        TagBox[
         InterpretationBox["\"5.000\"", 5., AutoDelete -> True], 
         NumberForm[#, {
           DirectedInfinity[1], 3}, NumberPadding -> {"", "0"}]& ], 
        TraditionalForm]}, {-6.214608098422191, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-5.809142990314028, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-5.521460917862246, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-5.115995809754082, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-4.961845129926823, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-4.8283137373023015`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-4.710530701645918, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-3.912023005428146, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-3.506557897319982, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-3.2188758248682006`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-2.8134107167600364`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-2.6592600369327783`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-2.5257286443082556`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-2.4079456086518722`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-1.6094379124341003`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-1.203972804325936, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-0.916290731874155, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-0.5108256237659907, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-0.35667494393873245`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-0.2231435513142097, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-0.10536051565782628`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {0.6931471805599453, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {1.0986122886681098`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {1.3862943611198906`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}}, {{-6.907755278982137, 
       FormBox["\"\"", TraditionalForm]}, {-5.298317366548036, 
       FormBox["\"\"", TraditionalForm]}, {-4.605170185988092, 
       FormBox["\"\"", TraditionalForm]}, {-2.995732273553991, 
       FormBox["\"\"", TraditionalForm]}, {-2.302585092994046, 
       FormBox["\"\"", TraditionalForm]}, {-0.6931471805599453, 
       FormBox["\"\"", TraditionalForm]}, {0., 
       FormBox["\"\"", TraditionalForm]}, {1.6094379124341003`, 
       FormBox["\"\"", TraditionalForm]}, {-6.214608098422191, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-5.809142990314028, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-5.521460917862246, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-5.115995809754082, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-4.961845129926823, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-4.8283137373023015`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-4.710530701645918, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-3.912023005428146, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-3.506557897319982, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-3.2188758248682006`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-2.8134107167600364`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-2.6592600369327783`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-2.5257286443082556`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-2.4079456086518722`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-1.6094379124341003`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-1.203972804325936, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-0.916290731874155, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-0.5108256237659907, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-0.35667494393873245`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-0.2231435513142097, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-0.10536051565782628`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {0.6931471805599453, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {1.0986122886681098`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {1.3862943611198906`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}}}},
  GridLines->{None, None},
  ImagePadding->Automatic,
  LabelStyle->Directive[FontSize -> 10],
  Method->{},
  PlotRange->{{-6.6296065469312335`, -0.7912614775522329}, {
   0.00004344543920011605, 0.00986944853149641}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{{{-6.907755278982137, 
      FormBox[
       TagBox[
        InterpretationBox["\"0.001\"", 0.001, AutoDelete -> True], 
        NumberForm[#, {
          DirectedInfinity[1], 3}, NumberPadding -> {"", "0"}]& ], 
       TraditionalForm]}, {-5.298317366548036, 
      FormBox[
       TagBox[
        InterpretationBox["\"0.005\"", 0.005, AutoDelete -> True], 
        NumberForm[#, {
          DirectedInfinity[1], 3}, NumberPadding -> {"", "0"}]& ], 
       TraditionalForm]}, {-4.605170185988092, 
      FormBox[
       TagBox[
        InterpretationBox["\"0.010\"", 0.01, AutoDelete -> True], 
        NumberForm[#, {
          DirectedInfinity[1], 3}, NumberPadding -> {"", "0"}]& ], 
       TraditionalForm]}, {-2.995732273553991, 
      FormBox[
       TagBox[
        InterpretationBox["\"0.050\"", 0.05, AutoDelete -> True], 
        NumberForm[#, {
          DirectedInfinity[1], 3}, NumberPadding -> {"", "0"}]& ], 
       TraditionalForm]}, {-2.302585092994046, 
      FormBox[
       TagBox[
        InterpretationBox["\"0.100\"", 0.1, AutoDelete -> True], 
        NumberForm[#, {
          DirectedInfinity[1], 3}, NumberPadding -> {"", "0"}]& ], 
       TraditionalForm]}, {-0.6931471805599453, 
      FormBox[
       TagBox[
        InterpretationBox["\"0.500\"", 0.5, AutoDelete -> True], 
        NumberForm[#, {
          DirectedInfinity[1], 3}, NumberPadding -> {"", "0"}]& ], 
       TraditionalForm]}, {0., 
      FormBox[
       TagBox[
        InterpretationBox["\"1.000\"", 1., AutoDelete -> True], NumberForm[#, {
          DirectedInfinity[1], 3}, NumberPadding -> {"", "0"}]& ], 
       TraditionalForm]}, {1.6094379124341003`, 
      FormBox[
       TagBox[
        InterpretationBox["\"5.000\"", 5., AutoDelete -> True], NumberForm[#, {
          DirectedInfinity[1], 3}, NumberPadding -> {"", "0"}]& ], 
       TraditionalForm]}, {-6.214608098422191, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-5.809142990314028, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-5.521460917862246, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-5.115995809754082, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-4.961845129926823, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-4.8283137373023015`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-4.710530701645918, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-3.912023005428146, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-3.506557897319982, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-3.2188758248682006`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-2.8134107167600364`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-2.6592600369327783`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-2.5257286443082556`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-2.4079456086518722`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-1.6094379124341003`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-1.203972804325936, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-0.916290731874155, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-0.5108256237659907, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-0.35667494393873245`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-0.2231435513142097, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-0.10536051565782628`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {0.6931471805599453, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {1.0986122886681098`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {1.3862943611198906`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}}, Automatic}]], "Output",
 CellChangeTimes->{
  3.610000866649651*^9},ImageCache->GraphicsData["CompressedBitmap", "\<\
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
/wGsLPDE\
\>"]]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Burst CDF plots", "Subsubsection",
 CellChangeTimes->{{3.6096524880046663`*^9, 3.609652490730268*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"PrintTemporary", "[", 
   RowBox[{"Dynamic", "[", "\[Tau]", "]"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"burstCDFPlot", "[", 
  RowBox[{
   RowBox[{"defaultUniverse", "[", "]"}], ",", 
   RowBox[{"defaultBurst", "[", "]"}], ",", 
   RowBox[{"defaultObserver", "[", 
    RowBox[{
     RowBox[{"z", "\[Rule]", "1.822"}], ",", 
     RowBox[{"\[Chi]", "\[Rule]", "0"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{".1", ",", "1.", ",", "\[Infinity]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.", ",", "1."}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.609652654732028*^9, 3.6096527059005404`*^9}, {
  3.609654185690916*^9, 3.609654189840137*^9}, {3.6096545753239727`*^9, 
  3.609654621538562*^9}, {3.609654788617795*^9, 3.6096547887273273`*^9}, {
  3.6099886916149187`*^9, 3.6099886984925547`*^9}}],

Cell[BoxData[
 TagBox[
  GraphicsBox[{{{}, {}, 
     {RGBColor[1, 0, 0], LineBox[CompressedData["
1:eJwV03c41Y0bBvCTEJU9knFCNllZoe/zWFEi8xAqkRGRaCAhKqJC4bXKJlsi
epE3kpGElqgcZIZjJhI/vz+e674+133/+4g4nbdwoSORSCub9//MEH11jbG4
gbjvPfrGptBaS/JY7eI9locQUciZxPl89mC6ZWnaMZYSGLRlVs+tESY+hoQM
/GyrAo0zfw8dV9cm+j/mzyqw1MPeO+oR3jVmxCzPOElTqhHWDzbpcFg5EgsY
xPy1rRnIPhdfCqifI355snMGe7aByFfX8jXXy8RKYg6/MMtbuO9wVcGyJpRY
d0zjOG3TBVeC64S8OyOIkMujPMpSPeCoCiN/LGMJ0h1F/q0r70HOIcf7Tm0C
EZYZSP7Q9hHIId3ra2ppBH31K9HclM/wWaV5sZyWSdzsYJW87PkFCvwOvxxz
zSMYh2xlDbX7oen0Z9aSu0VE5HKWAh/LN7jo+zjcoKac2M4yvX/i23dwmzOe
ZGCtJA7FCQiesKFCirBhl0NnNcGYho+aYRAm56OOxGzUEi15LsLyUkPwaB+9
+pzlf0Tkk6isRPZh2C/Rm/92tJEwqisT2/g9DLlfD4SF1DYTzC0f8twGf4Br
e6aZ9MdWor17RaqrbQQG3CMfTqt1EFFfyUUaFaNwXcl1YWb4HWE8prcvM2UM
BjuPz+TTuomd8+5lzOHjEPlg8cJu3g9Ex9pdJV/PCXDLbjj8zfUTcXfb06d9
lpOgrbX8743hXsKUs1dVT/sn1P/zeXvm3X7inaSoJjfLNHS1viwhaqhErLJh
XdDSNGh8cF5QoAwRZgfPESPfZsCltkd5neUHcVbaXsTeZhauJ8ZIW3WOEe2l
Xk4xb2ZBomW3hFfvBCGjEprdBHOwcXQi7+bGT2KSyBWXk5qHfvfxgZ+Ws8SR
V9Wujmnz8PjWfVPzhDmi6HB7fjz7AryJTn3VMjpPnLOiSf/9vQDVkYw7A2qX
iI4vWzyVvBaB+ogxNAiWCblT3MUug4vA9iUTRT/+JqbPHpDvbFuCw79GpkbU
1ghTmvF5OuIXPFmWu9qxdZ0ovXiyXK3iF/QcN04dHd4gvEPCldNTliGSEPfM
pm2BTvpEv/esv8Gg9Edb4V86UIh6XLkt/DfUT+2L5+alh9n4t2o+niugv/iH
pdeVEcz4qVdyBlYguOMda2L6NniSPl/Ta7kKHXFvhEKGmcC3cJeWjvYf4KL7
wpR6dwcsNJwGTpa/8Fnina5WDTukUROadkb/hfbrsSO+CRxwaEu74TbmdWA6
xr0gFcgJSbrKZmv0G8DyKUU41o4bdJxdP/wK24B8u+fS1yk8sKRjUuxPIqH2
WPd5HzteeOR0XdEvmIRrJVI32wL5YN431denftMVYQf9/tkNhuFVlV5rJMy0
ZmVIreOH2ewJDffALXibef7BD2Eh0Bsx1zlxmQ6bRTQ0zsuIQNKSZ7hdFR3W
SsyUX/0qAlMMt5ptFulwX+zFrYYPRCFR4t/DFr5b0ceedY8dmxiMu4laGHrT
o+QpjVglPUnQ9teO1y+hxxUuFfVFQSmIi6R80pmix/VG9ailP1KgWRBlp+3B
gE59vkKLbTJwd3LeScmVEWMCA20z8uVhaHVnrnwuI1bc8W/YVaIAajskx2R/
MCJll32PhIMiUGXtPSWctuHtXzfP8vsogbJXk5/ASSYso11g663dD7eufavi
e8iEgsFdnl4UFei/u7zM85UJLdI9ZkUWVeBGqWwQux0zeocMuDIdUINPtAc3
GCjbMWStuKZwQgNkSKWv6RK247prG+PuRwcghL2VifRhO4ooHHQdtdYEKaW1
O6vmOzChvsbkxTstuOp7JoFmshP9dg96604TILykkvfFgBV3B4fWHf2pC8+c
HcwKQ1nx2qHaUnc7PTDuCV8NrGXF1dQIO5U3enC5rMdUUIkNuQKyqWNP9GFU
peaqAis7Vr6++5Q//hAcpFmL+a6wIxuz/ZeI0iMQmXc2oI+XAykjQynimsbQ
c+Jap64KBxYFqAnltxiDe0eOP9d5DtSzZnN1Gj8K8QULHZU/OFA9ex8Pj84x
mHSOu7T8jhNzA8TzRaQtQFUgt/3UNCcaHD5d0B1sAaE9NXtat3Oh0/aMmLsf
LYBXh9qWZMCFIXkstxVuWYIOWYGsWcuFVbJrVYcXrSCpt+N1UB439ibWy+gx
2MJwDFVgpIkb/dN1Iy+eswV5w0Ufk0FuZC9ze/vmgy00VQkIkAV58IZUQMz8
4+Mwc9/jfEMcD/J67AwwPWUPBiZMfHTXePG2VTR3McMpmJpl+e9TMi+Wv0kv
Tbh2Cu7Hc7kXPePFOxGRLyp+nQJqP7nGapYXgy5Syg9ddoRAD1XbfOddKMTM
2n7F7zSURjglHT3ChxIbKn4D0c5gJeuOIm58OPvnXP+bbmf40+k1vhTOh/Pm
WniS7wwY8QZopNfzoekuRnb//DMwlBPTO6e4G0+66WglvHWBXY11fP/s4sdm
wX9tRDTd4YVL43+eKvxoYDR8qS3KHc4wt7qjOT9+3nqsZ+9Xd6gwe18zEcWP
HzWOU+ZDz8LRgQlb7XV+NFkVX9/x3gNC13iTB38I4FLfjjPfkr1gQu3CbrkK
IXwXqZhV2H8BnHTAwrdbCD/8zOey4PaFPmOW6JpZIWSZjPjiY+ILHY4Fa/oK
ZIx6KGrD+9IXyqMGB04Uk1FZQrqdtdQPLn83z4vJ24P4s5hzb/ol2KKXnBzw
VhgPFAsbGgwGAGFEeib4TRjjY1Oa2qQDIdDEradhShjJWjcOfPQNhHkb1R2M
O0VQtdWQMZzxKvw41x10/4gICjD9em+oEgQticyORS0ieMNYpGm4IHjznwMk
vr0UxfNiojfdSWFgZ/hD8FKXKBaQEv65KxMGEjmmXCwDolj5zZBYtAqD/07s
JR1cE8X6sRGuiMIwmO/q+JKmthdzjpv4tNqGg231nrsORXsR8vh9Rl/eANEb
zQv98WJI8lJ7tNASATNUhUm/bDHMHJt5XbIaAbUHU6g7KsSwrrNgoGxfJFgt
e7/VeieGBQrpxXfiIyHCgy8/lVkc39j16Je63IYpM087+2Bx1DYsmq3niYZq
IY6XfW4SyLq1zMiv9B5MlQyEFF2RwEF2xsZk2j0QJUqJoAgJlJ37rCKoFAP3
ThrXCeVLoL/CCLNaVQy4pt+sdhyVQAV3Tb0hx1jgFlktGT0jifcY56p1L8eB
j9hwyvxpKRwfGBCQb34AeZVPjjddkMID5MjHDT8fwFf9UL7461KYONB9MJwz
HgxdhBJVM6WwyPv11kzHeCDn2cT5U6Wwxio1QnMjHjokOyLWT0pjyKJi45ZD
iSAlW3Vxu4MM1pHn0ppWk+DOkzWHOE8ZTJQ5y0EnmQw0dX0Dvqsy+JXrSu5F
y2R4pv+eRyJFBiv0v+b9Kk4Gg5Nzz3R6ZTAnMsz9glMKOMXtW/G3ksXfQ3OV
Dp9TIW0599rYUTmc4/k1QJ14BKTgaRdvBzm8lzud8V0wHZzpVU2XPOWQTee5
NbdZOshwvCJvjZZD59NWPFLV6fBcZqiB3CaH+22k9q7qZcCnE2Q6isE+VLOJ
IgvxZwLHq8Rbrw7K49GWJ5ekv2YBfdagER6VR6vzdteOLWfB7xC5HXV28iim
K3ErhjMbqFqNMU+vyONSC7XjxOFsKH86nZT1RB5JC/NRKjXZYJatXxQqroDj
lXyFH1NywFBnxe0RoyLu7+7yP3gxD24K59+xm1FEfS3Bq/aBhaBSsN6t8ksR
V3IUV/TSC2FIibKLbV0RqSVFT01fFQLoMWQ1sShh5HctoTesRbDi4lwtt08J
Z4Jig0/nFoFX0Z6hdU8llKa423J+KQZrtST17AklPO5dbb9gVwbiR28P/fyh
jG2MMQI8rhWQFjoUj1PKWF9hNhBxtQI4q7QMExaUMXbmg+GOuAogkWeKCLr9
2BBME9avq4A+msWluD37sb1lKT+Y6ynEPBBkUrfbj0YZ0SWCzU9hpa9sX9i7
/fitYahGWrUK3p795M/3rwoOFlz/Nnu4BpRMdIntt9SwjIpp/LINUPNQhZ0n
QAPxxgJ77t8mMKLGidYe0cTypehLMW2t8Cfmkk6gnjYKtWfoH2rvBA8G/5h1
ZQJlX60LkV73wIVn86wxJMRYQ/mFVfNP0JBxzkH2D6LbnjPH/GL7gINe8AjP
iA7uipptpTZ+h6WHrC+ih3TxT27hXv/MQahOiW0706+HvTnPeLQKhuEau9Gl
6CZ9dN8eVM9sNQIf63TziQYDPM446aQ9NApKQ74BUHgIOVcqS3j3jIOnh/Jw
VqwhspnLjPNKT4C6tOr7+1FG+Jz8nwn3nknYdtrLucvvMHr4FnY3D03C2Xfj
ASk+R1AE5OM6//kJBRkLki3uxmiaFVfCrjAF05P7L+uYHcXVcbEk1cdT0OhZ
fcTI2ARbP1xcV9o9DWkuPg1pqqb4VDmp66/fNFg11ryxFDiG4kumXIdfTkOn
jGiZ8XYzpGPjyF5gnoHF8jCj+GAz5HYsVGzQnwHnHnrx7DUz7K9w3sIfNANW
5Zndtr7m6NtsHMdUMAOVwNjeMGKOldG5JVnvZuCExx2GaScLPJlf30oszkCk
+T6Ol58tkKFE3VWMkwZr72mn7CmWyMJP1b0lT4OBbYGreT2W+NBKhY56iAb6
v8kuyYes8PKVwrjvdjSYDx/htHhlhXNdGTd+e9FAtON17JMD1litYJBRfo0G
L5vP2zUWW+P39E/LJ6JpUGCn6ZYsTcHU+d9K15NowFW8R3/XIwpOOVx1d8im
QetY9bk9GRSM/xjDEbXp4L1mCZJZFIS+tazqTY+nhI6q51GQU5onhDOHBnW3
ByNtSynYdatEqGXTZ9yy3ya/oOCL+70bsnk0qBSVtBEcoGAY/fEnPx7T4OzJ
hhCxQQoqVbgHsxXQgJxi81humIJZvG6qmpuO5Ihc0R6jYFSH4+mYTTuQJlJP
0CiY3JlaoVFIA/rvhdRHGxR8e6xaP6KIBs936zHnb7FBgR67Z+Wb9rbuVyrb
aoM7hoo5+zbd27EjvGGbDVrnRkfLFdOguPacOJXNBqu2XQ3p2vTpZXrTcQ4b
lL/SZ7iyad79Dy/Pctng2QqDPyIlNAgtfNtC4rNB3zyvvX6bVh11mWXi39zb
6ySlbnpSZJ2PQ3Czf2/6u2nT6ScSdXaTbZAhKFNvatNWyfIeIsI2+PJf/UDu
Uhr8D/rYNvA=
       "]]}, 
     {RGBColor[0, 0, 1], LineBox[CompressedData["
1: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
KGAF+T/SdCj+HyZieao=
       "]]}}, InsetBox[
     TemplateBox[{
      StyleBox["\"0.1 \[Dash] 1 GeV\"", StripOnInput -> False, FontSize -> 
        10],StyleBox[
       "\"1 \[Dash] 300 GeV\"", StripOnInput -> False, FontSize -> 10]},
      "LineLegend",
      DisplayFunction->(StyleBox[
        StyleBox[
         PaneBox[
          TagBox[
           GridBox[{{
              TagBox[
               GridBox[{{
                  GraphicsBox[{{
                    Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                   ImageSize -> {20, 10}, PlotRangePadding -> None, 
                   ImagePadding -> 1, 
                   BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                  GraphicsBox[{{
                    Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                   ImageSize -> {20, 10}, PlotRangePadding -> None, 
                   ImagePadding -> 1, 
                   BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                GridBoxAlignment -> {
                 "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                AutoDelete -> False, 
                GridBoxDividers -> {
                 "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
                GridBoxSpacings -> {"Columns" -> {{0.5}}, "Rows" -> {{0.8}}}],
                "Grid"]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
           "Grid"], Alignment -> Left, AppearanceElements -> None, 
          ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> "ResizeToFit"],
          LineIndent -> 0, StripOnInput -> False], {FontFamily -> "Times"}, 
        Background -> Automatic, StripOnInput -> False]& ),
      Editable->True,
      InterpretationFunction:>(RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{"RGBColor", "[", 
                   RowBox[{"1", ",", "0", ",", "0"}], "]"}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{"RGBColor", "[", 
                   RowBox[{"0", ",", "0", ",", "1"}], "]"}], "]"}]}], "}"}], 
           ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& )], 
     Scaled[{0.75, 0.25}], ImageScaled[{0.5, 0.5}],
     BaseStyle->{FontSize -> Larger},
     FormatType->StandardForm]},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->True,
   AxesOrigin->{0, 0},
   Frame->{{True, False}, {True, False}},
   FrameLabel->{{
      FormBox["\"CDF\"", TraditionalForm], None}, {
      FormBox["\"Time, sec\"", TraditionalForm], None}},
   ImageSize->211.389759,
   LabelStyle->Directive[FontSize -> 10],
   Method->{},
   PlotRange->{{0, 92.50204136372103}, {0., 0.9999977473407184}},
   PlotRangeClipping->True,
   PlotRangePadding->{
     Scaled[0.02], 
     Scaled[0.02]}],
  InterpretTemplate[Legended[
    Graphics[{{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        RGBColor[1, 0, 0], 
        Line[CompressedData["
1:eJwV03c41Y0bBvCTEJU9knFCNllZoe/zWFEi8xAqkRGRaCAhKqJC4bXKJlsi
epE3kpGElqgcZIZjJhI/vz+e674+133/+4g4nbdwoSORSCub9//MEH11jbG4
gbjvPfrGptBaS/JY7eI9locQUciZxPl89mC6ZWnaMZYSGLRlVs+tESY+hoQM
/GyrAo0zfw8dV9cm+j/mzyqw1MPeO+oR3jVmxCzPOElTqhHWDzbpcFg5EgsY
xPy1rRnIPhdfCqifI355snMGe7aByFfX8jXXy8RKYg6/MMtbuO9wVcGyJpRY
d0zjOG3TBVeC64S8OyOIkMujPMpSPeCoCiN/LGMJ0h1F/q0r70HOIcf7Tm0C
EZYZSP7Q9hHIId3ra2ppBH31K9HclM/wWaV5sZyWSdzsYJW87PkFCvwOvxxz
zSMYh2xlDbX7oen0Z9aSu0VE5HKWAh/LN7jo+zjcoKac2M4yvX/i23dwmzOe
ZGCtJA7FCQiesKFCirBhl0NnNcGYho+aYRAm56OOxGzUEi15LsLyUkPwaB+9
+pzlf0Tkk6isRPZh2C/Rm/92tJEwqisT2/g9DLlfD4SF1DYTzC0f8twGf4Br
e6aZ9MdWor17RaqrbQQG3CMfTqt1EFFfyUUaFaNwXcl1YWb4HWE8prcvM2UM
BjuPz+TTuomd8+5lzOHjEPlg8cJu3g9Ex9pdJV/PCXDLbjj8zfUTcXfb06d9
lpOgrbX8743hXsKUs1dVT/sn1P/zeXvm3X7inaSoJjfLNHS1viwhaqhErLJh
XdDSNGh8cF5QoAwRZgfPESPfZsCltkd5neUHcVbaXsTeZhauJ8ZIW3WOEe2l
Xk4xb2ZBomW3hFfvBCGjEprdBHOwcXQi7+bGT2KSyBWXk5qHfvfxgZ+Ws8SR
V9Wujmnz8PjWfVPzhDmi6HB7fjz7AryJTn3VMjpPnLOiSf/9vQDVkYw7A2qX
iI4vWzyVvBaB+ogxNAiWCblT3MUug4vA9iUTRT/+JqbPHpDvbFuCw79GpkbU
1ghTmvF5OuIXPFmWu9qxdZ0ovXiyXK3iF/QcN04dHd4gvEPCldNTliGSEPfM
pm2BTvpEv/esv8Gg9Edb4V86UIh6XLkt/DfUT+2L5+alh9n4t2o+niugv/iH
pdeVEcz4qVdyBlYguOMda2L6NniSPl/Ta7kKHXFvhEKGmcC3cJeWjvYf4KL7
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
Uhr8D/rYNvA=
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        RGBColor[0, 0, 1], 
        Line[CompressedData["
1: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
KGAF+T/SdCj+HyZieao=
         "]]}}}, {
     AspectRatio -> GoldenRatio^(-1), Axes -> True, AxesOrigin -> {0, 0}, 
      Frame -> {{True, False}, {True, False}}, 
      FrameLabel -> {{"CDF", None}, {"Time, sec", None}}, ImageSize -> 
      211.389759, LabelStyle -> Directive[FontSize -> 10], Method -> {}, 
      PlotRange -> {{0, 92.50204136372103}, {0., 0.9999977473407184}}, 
      PlotRangeClipping -> True, PlotRangePadding -> {
        Scaled[0.02], 
        Scaled[0.02]}}], {
     Placed[
      Unevaluated[
       LineLegend[{
         Directive[
          RGBColor[1, 0, 0]], 
         Directive[
          RGBColor[0, 0, 1]]}, {
         Style["0.1 \[Dash] 1 GeV", FontSize -> 10], 
         Style["1 \[Dash] 300 GeV", FontSize -> 10]}, LegendLayout -> 
        "Column"]], {0.75, 0.25}, Identity]}]& ],
  AutoDelete->True,
  Editable->True,
  SelectWithContents->False,
  Selectable->True]], "Output",
 CellChangeTimes->{3.60965301295968*^9, 3.609654398337327*^9, 
  3.6096546149220877`*^9, 3.60965468149671*^9, 3.60965617842878*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"PrintTemporary", "[", 
   RowBox[{"Dynamic", "[", "\[Tau]", "]"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"burstCDFPlot", "[", 
  RowBox[{
   RowBox[{"defaultUniverse", "[", "]"}], ",", 
   RowBox[{"defaultBurst", "[", "]"}], ",", 
   RowBox[{"defaultObserver", "[", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{".1", ",", "1.", ",", "\[Infinity]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.", ",", "1."}], "}"}], ",", 
   RowBox[{"PlotPoints", "\[Rule]", "3"}], ",", 
   RowBox[{"MaxRecursion", "\[Rule]", "0"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", 
    RowBox[{".45", "itepLineWidth"}]}], ",", 
   RowBox[{"FontSize", "\[Rule]", "12"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.609652654732028*^9, 3.6096526948009357`*^9}, {
   3.609653091042328*^9, 3.6096530932169323`*^9}, {3.6096531987905483`*^9, 
   3.6096531990224524`*^9}, {3.6096537142760277`*^9, 3.60965371597886*^9}, {
   3.609654198298106*^9, 3.6096541984096212`*^9}, {3.609654601745103*^9, 
   3.60965464165694*^9}, {3.6096547912316713`*^9, 3.609654791359303*^9}, {
   3.609911722980451*^9, 3.609911726811225*^9}, {3.609911867704343*^9, 
   3.609911872480226*^9}, {3.6099119696066236`*^9, 3.609911969799815*^9}, 
   3.6099887074938717`*^9}],

Cell[BoxData[
 TagBox[
  GraphicsBox[{{{}, {}, 
     {RGBColor[1, 0, 0], 
      LineBox[{{0.00012212598153746508`, 8.46045366702456*^-17}, {
       117.46130625965966`, 0.9917689356768766}, {244.25184094894863`, 
       0.9996747850436408}}]}, 
     {RGBColor[0, 0, 1], 
      LineBox[{{0.00012212598153746508`, 2.0924280075959194`*^-17}, {
       117.46130625965966`, 0.3318983510414753}, {244.25184094894863`, 
       0.9899999129205218}}]}}, InsetBox[
     TemplateBox[{
      StyleBox["\"0.1 \[Dash] 1 GeV\"", StripOnInput -> False, FontSize -> 
        12],StyleBox[
       "\"1 \[Dash] 300 GeV\"", StripOnInput -> False, FontSize -> 12]},
      "LineLegend",
      DisplayFunction->(StyleBox[
        StyleBox[
         PaneBox[
          TagBox[
           GridBox[{{
              TagBox[
               GridBox[{{
                  GraphicsBox[{{
                    Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                   ImageSize -> {20, 10}, PlotRangePadding -> None, 
                   ImagePadding -> 1, 
                   BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                  GraphicsBox[{{
                    Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                   ImageSize -> {20, 10}, PlotRangePadding -> None, 
                   ImagePadding -> 1, 
                   BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                GridBoxAlignment -> {
                 "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                AutoDelete -> False, 
                GridBoxDividers -> {
                 "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
                GridBoxSpacings -> {"Columns" -> {{0.5}}, "Rows" -> {{0.8}}}],
                "Grid"]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
           "Grid"], Alignment -> Left, AppearanceElements -> None, 
          ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> "ResizeToFit"],
          LineIndent -> 0, StripOnInput -> False], {FontFamily -> "Times"}, 
        Background -> Automatic, StripOnInput -> False]& ),
      Editable->True,
      InterpretationFunction:>(RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{"RGBColor", "[", 
                   RowBox[{"1", ",", "0", ",", "0"}], "]"}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{"RGBColor", "[", 
                   RowBox[{"0", ",", "0", ",", "1"}], "]"}], "]"}]}], "}"}], 
           ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& )], 
     Scaled[{0.75, 0.2}], ImageScaled[{0.5, 0.5}],
     BaseStyle->{FontSize -> Larger},
     FormatType->StandardForm]},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->True,
   AxesOrigin->{0, 0},
   Frame->{{True, False}, {True, False}},
   FrameLabel->{{
      FormBox["\"CDF\"", TraditionalForm], None}, {
      FormBox["\"Time, sec\"", TraditionalForm], None}},
   ImageSize->211.261707,
   LabelStyle->Directive[FontSize -> 12],
   Method->{},
   PlotRange->{{0, 244.25196307493016`}, {0., 0.9996747850436408}},
   PlotRangeClipping->True,
   PlotRangePadding->{
     Scaled[0.02], 
     Scaled[0.02]}],
  InterpretTemplate[Legended[
    Graphics[{{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        RGBColor[1, 0, 0], 
        Line[{{0.00012212598153746508`, 8.46045366702456*^-17}, {
         117.46130625965966`, 0.9917689356768766}, {244.25184094894863`, 
         0.9996747850436408}}]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        RGBColor[0, 0, 1], 
        Line[{{0.00012212598153746508`, 2.0924280075959194`*^-17}, {
         117.46130625965966`, 0.3318983510414753}, {244.25184094894863`, 
         0.9899999129205218}}]}}}, {
     AspectRatio -> GoldenRatio^(-1), Axes -> True, AxesOrigin -> {0, 0}, 
      Frame -> {{True, False}, {True, False}}, 
      FrameLabel -> {{"CDF", None}, {"Time, sec", None}}, ImageSize -> 
      211.261707, LabelStyle -> Directive[FontSize -> 12], Method -> {}, 
      PlotRange -> {{0, 244.25196307493016`}, {0., 0.9996747850436408}}, 
      PlotRangeClipping -> True, PlotRangePadding -> {
        Scaled[0.02], 
        Scaled[0.02]}}], {
     Placed[
      Unevaluated[
       LineLegend[{
         Directive[
          RGBColor[1, 0, 0]], 
         Directive[
          RGBColor[0, 0, 1]]}, {
         Style["0.1 \[Dash] 1 GeV", FontSize -> 12], 
         Style["1 \[Dash] 300 GeV", FontSize -> 12]}, LegendLayout -> 
        "Column"]], {0.75, 0.2}, Identity]}]& ],
  AutoDelete->True,
  Editable->True,
  SelectWithContents->False,
  Selectable->True]], "Output",
 CellChangeTimes->{3.6096537130488367`*^9, 3.609653806801537*^9, 
  3.609653909518632*^9, 3.60965402591575*^9, 3.60965419190308*^9, 
  3.6096547652234497`*^9, 3.609657781744712*^9, 3.609911866677257*^9, 
  3.609911953501995*^9, 3.609912051800687*^9, 3.609912203724334*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
Very High Energy Bursts Fraction\
\>", "Subsubsection",
 CellChangeTimes->{{3.609992307207403*^9, 3.6099923125679817`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"PrintTemporary", "[", 
   RowBox[{"Dynamic", "[", "z", "]"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"burstFraction", "[", 
  RowBox[{
   RowBox[{"defaultUniverse", "[", "]"}], ",", 
   RowBox[{"defaultPopulation", "[", "]"}], ",", 
   RowBox[{"defaultBurst", "[", "]"}], ",", 
   RowBox[{"defaultDetectorArea", "[", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.1", ",", "1.", ",", "\[Infinity]"}], "}"}]}], "]"}]}], "Input",\

 CellChangeTimes->{{3.6099923225781*^9, 3.609992324118848*^9}}],

Cell[BoxData["0.11561859364063046`"], "Output",
 CellChangeTimes->{3.609997525773616*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Extra", "Section",
 CellChangeTimes->{{3.6099224067232847`*^9, 3.609922407952365*^9}}],

Cell[CellGroupData[{

Cell["Plots for papers and posters", "Subsection",
 CellChangeTimes->{{3.6096619647232122`*^9, 3.609661967943828*^9}, {
  3.609662049336279*^9, 3.6096620542230167`*^9}}],

Cell["Common procedures", "Subsubsection",
 CellChangeTimes->{{3.60992241375945*^9, 3.609922416760202*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Plots for papers and posters", "Subsection",
 CellChangeTimes->{{3.6096619647232122`*^9, 3.609661967943828*^9}, {
  3.609662049336279*^9, 3.6096620542230167`*^9}}],

Cell[CellGroupData[{

Cell["Main paper", "Subsubsection",
 CellChangeTimes->{{3.6096621550554733`*^9, 3.609662156037018*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"lineWidth", "=", "469.75502"}], ";"}]], "Input",
 CellChangeTimes->{{3.609663079181303*^9, 3.609663093027342*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\[Kappa]Large", ",", "\[Kappa]Small"}], "}"}], "=", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"First", "@", "#"}], ",", 
       RowBox[{"Last", "@", "#"}]}], "}"}], "&"}], "@", 
    RowBox[{"Sort", "[", 
     RowBox[{"sample256", ",", 
      RowBox[{
       RowBox[{
        RowBox[{"#1", "\[LeftDoubleBracket]", 
         RowBox[{"-", "1"}], "\[RightDoubleBracket]"}], ">", 
        RowBox[{"#2", "\[LeftDoubleBracket]", 
         RowBox[{"-", "1"}], "\[RightDoubleBracket]"}]}], "&"}]}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"PrintTemporary", "[", 
   RowBox[{"Dynamic", "[", "\[Tau]", "]"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{"\"\<Paper/sampleLightCurveLogNegative.pdf\>\"", ",", 
    RowBox[{"burstCDFPlot", "[", 
     RowBox[{
      RowBox[{"defaultUniverse", "[", "]"}], ",", 
      RowBox[{"defaultBurst", "[", "]"}], ",", 
      RowBox[{"defaultObserver", "[", 
       RowBox[{
        RowBox[{"z", "\[Rule]", 
         RowBox[{
         "\[Kappa]Small", "\[LeftDoubleBracket]", "1", 
          "\[RightDoubleBracket]"}]}], ",", 
        RowBox[{"\[Chi]", "\[Rule]", 
         RowBox[{
         "\[Kappa]Small", "\[LeftDoubleBracket]", "2", 
          "\[RightDoubleBracket]"}]}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{".1", ",", "1.", ",", "\[Infinity]"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.", ",", "1."}], "}"}], ",", 
      RowBox[{"ImageSize", "\[Rule]", 
       RowBox[{".45", "lineWidth"}]}], ",", 
      RowBox[{"FontSize", "\[Rule]", "10"}]}], "]"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{"\"\<Paper/sampleLightCurveLogPositive.pdf\>\"", ",", 
    RowBox[{"burstCDFPlot", "[", 
     RowBox[{
      RowBox[{"defaultUniverse", "[", "]"}], ",", 
      RowBox[{"defaultBurst", "[", "]"}], ",", 
      RowBox[{"defaultObserver", "[", 
       RowBox[{
        RowBox[{"z", "\[Rule]", 
         RowBox[{
         "\[Kappa]Large", "\[LeftDoubleBracket]", "1", 
          "\[RightDoubleBracket]"}]}], ",", 
        RowBox[{"\[Chi]", "\[Rule]", 
         RowBox[{
         "\[Kappa]Large", "\[LeftDoubleBracket]", "2", 
          "\[RightDoubleBracket]"}]}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{".1", ",", "1.", ",", "\[Infinity]"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.", ",", "1."}], "}"}], ",", 
      RowBox[{"ImageSize", "\[Rule]", 
       RowBox[{".45", "lineWidth"}]}], ",", 
      RowBox[{"FontSize", "\[Rule]", "10"}]}], "]"}]}], "]"}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.6096630954984903`*^9, 3.609663112819458*^9}, {
  3.609663156881756*^9, 3.609663206468858*^9}, {3.6096632485633717`*^9, 
  3.6096632714393167`*^9}, {3.6096683307308207`*^9, 3.609668330858817*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Kappa]Observed", "=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\"\<090902B\>\"", ",", 
       RowBox[{"{", 
        RowBox[{"0.363408", ",", "0.893437"}], "}"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"\"\<090510\>\"", ",", 
       RowBox[{"{", 
        RowBox[{"0.428137", ",", "1.60485"}], "}"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"\"\<080916C\>\"", ",", 
       RowBox[{"{", 
        RowBox[{"0.66529", ",", "3.31569"}], "}"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"\"\<090926A\>\"", ",", 
       RowBox[{"{", 
        RowBox[{"1.98759", ",", "6.61486"}], "}"}]}], "}"}]}], 
    "\[IndentingNewLine]", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{"\"\<Paper/kappaDistributionHistogram.pdf\>\"", ",", 
    RowBox[{"\[Kappa]HistogramPlot", "[", 
     RowBox[{
      RowBox[{"sample256", "\[LeftDoubleBracket]", 
       RowBox[{"All", ",", 
        RowBox[{"-", "1"}]}], "\[RightDoubleBracket]"}], ",", 
      "\[Kappa]Observed", ",", 
      RowBox[{"FontSize", "\[Rule]", "10"}], ",", 
      RowBox[{"ImageSize", "\[Rule]", 
       RowBox[{".45", "lineWidth"}]}]}], "]"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{"\"\<Paper/kappaDistributionCDF.pdf\>\"", ",", 
    RowBox[{"\[Kappa]CDFPlot", "[", 
     RowBox[{
      RowBox[{"sample256", "\[LeftDoubleBracket]", 
       RowBox[{"All", ",", 
        RowBox[{"-", "1"}]}], "\[RightDoubleBracket]"}], ",", 
      "\[Kappa]Observed", ",", 
      RowBox[{"PlotPoints", "\[Rule]", "4096"}], ",", 
      RowBox[{"FontSize", "\[Rule]", "10"}], ",", 
      RowBox[{"ImageSize", "\[Rule]", 
       RowBox[{".45", "lineWidth"}]}]}], "]"}]}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.594342734190405*^9, 3.594342752715184*^9}, {
  3.59434286903363*^9, 3.594342900024119*^9}, {3.594343771437028*^9, 
  3.594343773132771*^9}, {3.594852329377499*^9, 3.594852332247513*^9}, {
  3.5966927652249002`*^9, 3.596692799285636*^9}, {3.596693274643531*^9, 
  3.596693288462693*^9}, {3.5966933274676723`*^9, 3.5966933546761417`*^9}, {
  3.603446939569559*^9, 3.603447017756761*^9}, {3.603447061587146*^9, 
  3.603447066057764*^9}, {3.6096359148737793`*^9, 3.6096359282070913`*^9}, {
  3.609664424011471*^9, 3.60966451296507*^9}, {3.60966459359473*^9, 
  3.609664596730783*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"highFraction\[Kappa]Observed", "=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"0.0643747", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"1", "-", 
           RowBox[{"1", "/", 
            SqrtBox["17"]}]}], ",", 
          RowBox[{"1", "+", 
           RowBox[{"1", "/", 
            SqrtBox["17"]}]}]}], "}"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"0.665059", ",", "3.31859"}], "}"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"0.141928", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"1", "-", 
           RowBox[{"1", "/", 
            SqrtBox["26"]}]}], ",", 
          RowBox[{"1", "+", 
           RowBox[{"1", "/", 
            SqrtBox["26"]}]}]}], "}"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"0.42816", ",", "1.60589"}], "}"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"0.165373", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"1", "-", 
           RowBox[{"1", "/", 
            SqrtBox["51.1454"]}]}], ",", 
          RowBox[{"1", "+", 
           RowBox[{"1", "/", 
            SqrtBox["51.1454"]}]}]}], "}"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"0.363328", ",", "0.893781"}], "}"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"0.0606777", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"1", "-", 
           RowBox[{"1", "/", 
            SqrtBox["27"]}]}], ",", 
          RowBox[{"1", "+", 
           RowBox[{"1", "/", 
            SqrtBox["27"]}]}]}], "}"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"1.98748", ",", "6.62006"}], "}"}]}], "}"}]}], 
    "\[IndentingNewLine]", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{"\"\<Paper/correlations.pdf\>\"", ",", 
    RowBox[{"GraphicsGrid", "[", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"ratio\[Kappa]ListPlot", "[", 
          RowBox[{
           RowBox[{"sample256", "\[LeftDoubleBracket]", 
            RowBox[{"All", ",", 
             RowBox[{"{", 
              RowBox[{"3", ",", "4", ",", 
               RowBox[{"-", "1"}]}], "}"}]}], "\[RightDoubleBracket]"}], ",", 
           "highFraction\[Kappa]Observed", ",", 
           RowBox[{"ImagePadding", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"50", ",", "5"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"30", ",", "5"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"PlotRange", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"All", ",", 
              RowBox[{"{", 
               RowBox[{"0.42", ",", "6.7"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"FontSize", "\[Rule]", "10"}], ",", 
           RowBox[{"ImageSize", "\[Rule]", 
            RowBox[{".45", "lineWidth"}]}]}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"\[Chi]\[Kappa]ListPlot", "[", 
          RowBox[{
           RowBox[{"sample256", "\[LeftDoubleBracket]", 
            RowBox[{"All", ",", 
             RowBox[{"{", 
              RowBox[{"2", ",", 
               RowBox[{"-", "1"}]}], "}"}]}], "\[RightDoubleBracket]"}], ",", 
           
           RowBox[{"{", "}"}], ",", 
           RowBox[{"ImagePadding", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"40", ",", "5"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"30", ",", "5"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"PlotRange", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"All", ",", 
              RowBox[{"{", 
               RowBox[{"0.42", ",", "6.7"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"FontSize", "\[Rule]", "10"}], ",", 
           RowBox[{"ImageSize", "\[Rule]", 
            RowBox[{".45", "lineWidth"}]}]}], "]"}]}], "}"}], ",", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"ratio\[Chi]ListPlot", "[", 
          RowBox[{
           RowBox[{"sample256", "\[LeftDoubleBracket]", 
            RowBox[{"All", ",", 
             RowBox[{"{", 
              RowBox[{"2", ",", "3", ",", "4"}], "}"}]}], 
            "\[RightDoubleBracket]"}], ",", 
           RowBox[{"{", "}"}], ",", 
           RowBox[{"ImagePadding", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"50", ",", "5"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"30", ",", "5"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"FontSize", "\[Rule]", "10"}], ",", 
           RowBox[{"ImageSize", "\[Rule]", 
            RowBox[{".45", "lineWidth"}]}]}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Graphics", "[", "]"}]}], "}"}]}], "\[IndentingNewLine]", 
      "}"}], "]"}]}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.6096451014355288`*^9, 3.6096451374568987`*^9}, {
  3.609645222026988*^9, 3.609645227887209*^9}, {3.609645393051215*^9, 
  3.609645428989118*^9}, {3.609645463432189*^9, 3.609645477467903*^9}, {
  3.609645609781362*^9, 3.609645642394065*^9}, {3.609645674156782*^9, 
  3.609645706993593*^9}, {3.6096458067672873`*^9, 3.6096458371022587`*^9}, {
  3.609664946570684*^9, 3.609664966614698*^9}, {3.6096650112443666`*^9, 
  3.6096650505364847`*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["ITEP Proceedings", "Subsubsection",
 CellChangeTimes->{{3.609662157494125*^9, 3.6096621597834682`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"itepLineWidth", "=", "469.47046"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"itepFontSize", "=", "10"}], ";"}]}], "Input",
 CellChangeTimes->{{3.6096624423015423`*^9, 3.609662451498352*^9}, {
  3.609922646052809*^9, 3.6099226483246*^9}, {3.610002669031781*^9, 
  3.610002669132723*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
  "dir090902B", "=", 
   "\"\<GRObservations/DerivedData/GRObservations/Build/Products/Release/\
090902B/\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
  "dir090926A", "=", 
   "\"\<GRObservations/DerivedData/GRObservations/Build/Products/Release/\
090926A/\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{"bursts", "=", 
   RowBox[{"{", 
    RowBox[{"dir090902B", ",", "dir090926A"}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"ranges", "=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "0.05"}], " ", "1000"}], ",", "1000"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "0.05"}], " ", "300"}], ",", "300"}], "}"}]}], 
    "\[IndentingNewLine]", "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"gevData", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Import", "[", 
      RowBox[{
       RowBox[{"burst", "<>", "\"\<gev\>\""}], ",", "\"\<Table\>\""}], "]"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"burst", ",", "bursts"}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"mevData", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Import", "[", 
      RowBox[{
       RowBox[{"burst", "<>", "\"\<mev\>\""}], ",", "\"\<Table\>\""}], "]"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"burst", ",", "bursts"}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"probData", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Import", "[", 
       RowBox[{
        RowBox[{"burst", "<>", "\"\<probs\>\""}], ",", "\"\<Table\>\""}], 
       "]"}], "/.", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\[Kappa]_", ",", "p_", ",", "a_", ",", "b_", ",", "c_"}], 
        "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\[Kappa]", ",", "p"}], "}"}]}]}], ",", 
     RowBox[{"{", 
      RowBox[{"burst", ",", "bursts"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Do", "[", 
   RowBox[{
    RowBox[{"Export", "[", 
     RowBox[{
      RowBox[{"\"\<ITEPProceedings/p\>\"", "<>", 
       RowBox[{"ToString", "[", "i", "]"}], "<>", "\"\<.pdf\>\""}], ",", 
      RowBox[{"GraphicsGrid", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"ListLinePlot", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"mevData", "[", 
                RowBox[{"[", "i", "]"}], "]"}], ",", 
               RowBox[{"gevData", "[", 
                RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"PlotRange", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"ranges", "[", 
                 RowBox[{"[", "i", "]"}], "]"}], ",", "All"}], "}"}]}], ",", 
             RowBox[{"PlotStyle", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{"Red", ",", "Blue"}], "}"}]}], ",", 
             RowBox[{"Frame", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"True", ",", "False"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"True", ",", "False"}], "}"}]}], "}"}]}], ",", 
             RowBox[{"FrameLabel", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{"\"\<Time, sec\>\"", ",", "\"\<Photon Fraction\>\""}], 
               "}"}]}], ",", 
             RowBox[{"PlotLegends", "\[Rule]", 
              RowBox[{"Placed", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Style", "[", 
                   RowBox[{"\"\<0.1 \[Dash] 1 GeV\>\"", ",", 
                    RowBox[{"FontSize", "\[Rule]", "itepFontSize"}]}], "]"}], 
                  ",", 
                  RowBox[{"Style", "[", 
                   RowBox[{"\"\<1 \[Dash] 300 GeV\>\"", ",", 
                    RowBox[{"FontSize", "\[Rule]", "itepFontSize"}]}], 
                   "]"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"0.74", ",", "0.20"}], "}"}]}], "]"}]}], ",", 
             RowBox[{"ImageSize", "\[Rule]", 
              RowBox[{".45", "itepLineWidth"}]}], ",", 
             RowBox[{"FrameStyle", "\[Rule]", 
              RowBox[{"Directive", "[", 
               RowBox[{"FontSize", "\[Rule]", "itepFontSize"}], "]"}]}]}], 
            "]"}], ",", "\[IndentingNewLine]", 
           RowBox[{"ListLogPlot", "[", 
            RowBox[{
             RowBox[{"probData", "[", 
              RowBox[{"[", "i", "]"}], "]"}], ",", 
             RowBox[{"Joined", "\[Rule]", "True"}], ",", 
             RowBox[{"PlotRange", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"0", ",", "10"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"1.*^-12", ",", "1."}], "}"}]}], "}"}]}], ",", 
             RowBox[{"PlotStyle", "\[Rule]", 
              RowBox[{"RGBColor", "[", 
               RowBox[{"0.5", ",", "0", ",", "0.5"}], "]"}]}], ",", 
             RowBox[{"Frame", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"True", ",", "False"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"True", ",", "False"}], "}"}]}], "}"}]}], ",", 
             RowBox[{"FrameLabel", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{
               "\"\<Stretching Factor\>\"", ",", "\"\<KS Probability\>\""}], 
               "}"}]}], ",", 
             RowBox[{"ImageSize", "\[Rule]", 
              RowBox[{".45", "itepLineWidth"}]}], ",", 
             RowBox[{"FrameStyle", "\[Rule]", 
              RowBox[{"Directive", "[", 
               RowBox[{"FontSize", "\[Rule]", "itepFontSize"}], "]"}]}]}], 
            "]"}]}], "\[IndentingNewLine]", "}"}], "}"}], ",", 
        RowBox[{"ImageSize", "\[Rule]", "itepLineWidth"}]}], "]"}]}], "]"}], 
    ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "1", ",", 
      RowBox[{"Length", "[", "mevData", "]"}]}], "}"}]}], "]"}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.596901417566943*^9, 3.5969014298703938`*^9}, {
   3.602215510963944*^9, 3.60221551175172*^9}, {3.609922488975033*^9, 
   3.609922738324974*^9}, {3.6099231653094187`*^9, 3.6099231675748253`*^9}, {
   3.609923340172803*^9, 3.60992337147126*^9}, {3.609923781629249*^9, 
   3.6099237894496937`*^9}, 3.609923913962141*^9, {3.6099239698719254`*^9, 
   3.6099239717357473`*^9}, {3.609924072949731*^9, 3.609924073086207*^9}, {
   3.609972079966633*^9, 3.609972141490472*^9}, {3.6099743242124968`*^9, 
   3.609974343050313*^9}, {3.6099797226523333`*^9, 3.609979722798706*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{"\"\<ITEPProceedings/p3.pdf\>\"", ",", 
    RowBox[{"modelScheme", "[", 
     RowBox[{
      RowBox[{"centralEngineSize", "\[Rule]", ".03"}], ",", 
      RowBox[{"jetRadius", "\[Rule]", ".5"}], ",", 
      RowBox[{"lowAngle", "\[Rule]", ".43"}], ",", 
      RowBox[{"highAngle", "\[Rule]", ".043"}], ",", 
      RowBox[{"observerSize", "\[Rule]", ".03"}], ",", 
      RowBox[{"observerDistance", "\[Rule]", "1."}], ",", 
      RowBox[{"observerAngle", "\[Rule]", ".4"}], ",", 
      RowBox[{"centralEngineLabelQ", "\[Rule]", "True"}], ",", 
      RowBox[{"jetLabelQ", "\[Rule]", "True"}], ",", 
      RowBox[{"observerLabelQ", "\[Rule]", "True"}], ",", 
      RowBox[{"FontSize", "\[Rule]", "itepFontSize"}], ",", 
      RowBox[{"ImageSize", "\[Rule]", 
       RowBox[{".7", "itepLineWidth"}]}]}], "]"}]}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.6096619842397423`*^9, 3.6096620299951057`*^9}, 
   3.6096623854518433`*^9, {3.609662454570602*^9, 3.609662457473957*^9}, {
   3.609908042282702*^9, 3.609908042440434*^9}, {3.6099226533691177`*^9, 
   3.609922654222568*^9}, {3.609979802760303*^9, 3.609979802926271*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"PrintTemporary", "[", 
   RowBox[{"Dynamic", "[", "\[Tau]", "]"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{"\"\<ITEPProceedings/p4.pdf\>\"", ",", 
    RowBox[{"GraphicsGrid", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"burstCDFPlot", "[", 
          RowBox[{
           RowBox[{"defaultUniverse", "[", "]"}], ",", 
           RowBox[{"defaultBurst", "[", "]"}], ",", 
           RowBox[{"defaultObserver", "[", 
            RowBox[{
             RowBox[{"z", "\[Rule]", "1.822"}], ",", 
             RowBox[{"\[Chi]", "\[Rule]", "0."}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{".1", ",", "1.", ",", "\[Infinity]"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"1.", ",", "1."}], "}"}], ",", 
           RowBox[{"ImageSize", "\[Rule]", 
            RowBox[{".45", "itepLineWidth"}]}], ",", 
           RowBox[{"FontSize", "\[Rule]", "itepFontSize"}]}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"burstCDFPlot", "[", 
          RowBox[{
           RowBox[{"defaultUniverse", "[", "]"}], ",", 
           RowBox[{"defaultBurst", "[", "]"}], ",", 
           RowBox[{"defaultObserver", "[", "]"}], ",", 
           RowBox[{"{", 
            RowBox[{".1", ",", "1.", ",", "\[Infinity]"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"1.", ",", "1."}], "}"}], ",", 
           RowBox[{"ImageSize", "\[Rule]", 
            RowBox[{".45", "itepLineWidth"}]}], ",", 
           RowBox[{"FontSize", "\[Rule]", "itepFontSize"}]}], "]"}]}], 
        "\[IndentingNewLine]", "}"}], "}"}], ",", 
      RowBox[{"ImageSize", "\[Rule]", "itepLineWidth"}]}], "]"}]}], "]"}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.609668325783885*^9, 3.609668362271452*^9}, {
   3.6099080931970167`*^9, 3.609908095810851*^9}, {3.609908139344901*^9, 
   3.6099081405427322`*^9}, {3.609922657555933*^9, 3.609922661754251*^9}, 
   3.60993429657563*^9, 3.609938266266621*^9, {3.60993842408923*^9, 
   3.6099384508994503`*^9}, {3.609938891646867*^9, 3.609938895025696*^9}, {
   3.609940016385295*^9, 3.609940070244252*^9}, {3.609940344376224*^9, 
   3.6099403499424458`*^9}, {3.609940538950287*^9, 3.6099405392756577`*^9}, {
   3.609943108856577*^9, 3.6099431156773252`*^9}, {3.6099747256392*^9, 
   3.6099747257453957`*^9}, {3.6099798162093678`*^9, 3.609979816283203*^9}, {
   3.609988727767652*^9, 3.6099887484838142`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Kappa]Observed", "=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\"\<090902B\>\"", ",", 
       RowBox[{"{", 
        RowBox[{"0.363408", ",", "0.893437"}], "}"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"\"\<090510\>\"", ",", 
       RowBox[{"{", 
        RowBox[{"0.428137", ",", "1.60485"}], "}"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"\"\<080916C\>\"", ",", 
       RowBox[{"{", 
        RowBox[{"0.66529", ",", "3.31569"}], "}"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"\"\<090926A\>\"", ",", 
       RowBox[{"{", 
        RowBox[{"1.98759", ",", "6.61486"}], "}"}]}], "}"}]}], 
    "\[IndentingNewLine]", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{"\"\<ITEPProceedings/p5.pdf\>\"", ",", 
    RowBox[{"GraphicsGrid", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"\[Kappa]HistogramPlot", "[", 
          RowBox[{
           RowBox[{"sample4096", "\[LeftDoubleBracket]", 
            RowBox[{"All", ",", 
             RowBox[{"-", "1"}]}], "\[RightDoubleBracket]"}], ",", 
           "\[Kappa]Observed", ",", 
           RowBox[{"FontSize", "\[Rule]", "itepFontSize"}], ",", 
           RowBox[{"ImageSize", "\[Rule]", 
            RowBox[{".45", "itepLineWidth"}]}]}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"\[Kappa]CDFPlot", "[", 
          RowBox[{
           RowBox[{"sample4096", "\[LeftDoubleBracket]", 
            RowBox[{"All", ",", 
             RowBox[{"-", "1"}]}], "\[RightDoubleBracket]"}], ",", 
           "\[Kappa]Observed", ",", 
           RowBox[{"PlotPoints", "\[Rule]", "4096"}], ",", 
           RowBox[{"FontSize", "\[Rule]", "itepFontSize"}], ",", 
           RowBox[{"ImageSize", "\[Rule]", 
            RowBox[{".45", "itepLineWidth"}]}]}], "]"}]}], 
        "\[IndentingNewLine]", "}"}], "}"}], ",", 
      RowBox[{"ImageSize", "\[Rule]", "itepLineWidth"}]}], "]"}]}], "]"}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.594342734190405*^9, 3.594342752715184*^9}, {
  3.59434286903363*^9, 3.594342900024119*^9}, {3.594343771437028*^9, 
  3.594343773132771*^9}, {3.594852329377499*^9, 3.594852332247513*^9}, {
  3.5966927652249002`*^9, 3.596692799285636*^9}, {3.596693274643531*^9, 
  3.596693288462693*^9}, {3.5966933274676723`*^9, 3.5966933546761417`*^9}, {
  3.603446939569559*^9, 3.603447017756761*^9}, {3.603447061587146*^9, 
  3.603447066057764*^9}, {3.6096359148737793`*^9, 3.6096359282070913`*^9}, {
  3.609664424011471*^9, 3.60966451296507*^9}, {3.60966459359473*^9, 
  3.609664596730783*^9}, {3.609925177516726*^9, 3.6099252151767683`*^9}, {
  3.609972398494524*^9, 3.609972441953117*^9}, {3.60997304262988*^9, 
  3.609973047418325*^9}, {3.609974412667426*^9, 3.609974412777885*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"highFraction\[Kappa]Observed", "=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"0.0604813", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"1", "-", 
           RowBox[{"1", "/", 
            SqrtBox["17"]}]}], ",", 
          RowBox[{"1", "+", 
           RowBox[{"1", "/", 
            SqrtBox["17"]}]}]}], "}"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"0.665059", ",", "3.31859"}], "}"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"0.124288", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"1", "-", 
           RowBox[{"1", "/", 
            SqrtBox["26"]}]}], ",", 
          RowBox[{"1", "+", 
           RowBox[{"1", "/", 
            SqrtBox["26"]}]}]}], "}"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"0.42816", ",", "1.60589"}], "}"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"0.141906", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"1", "-", 
           RowBox[{"1", "/", 
            SqrtBox["51.1454"]}]}], ",", 
          RowBox[{"1", "+", 
           RowBox[{"1", "/", 
            SqrtBox["51.1454"]}]}]}], "}"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"0.363328", ",", "0.893781"}], "}"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"0.0572066", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"1", "-", 
           RowBox[{"1", "/", 
            SqrtBox["27"]}]}], ",", 
          RowBox[{"1", "+", 
           RowBox[{"1", "/", 
            SqrtBox["27"]}]}]}], "}"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"1.98748", ",", "6.62006"}], "}"}]}], "}"}]}], 
    "\[IndentingNewLine]", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{"\"\<ITEPProceedings/p6.pdf\>\"", ",", 
    RowBox[{"GraphicsGrid", "[", 
     RowBox[{"{", 
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"ratio\[Kappa]ListPlot", "[", 
         RowBox[{
          RowBox[{"sample4096", "\[LeftDoubleBracket]", 
           RowBox[{"All", ",", 
            RowBox[{"{", 
             RowBox[{"3", ",", "4", ",", 
              RowBox[{"-", "1"}]}], "}"}]}], "\[RightDoubleBracket]"}], ",", 
          "highFraction\[Kappa]Observed", ",", 
          RowBox[{"PlotRange", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"All", ",", 
             RowBox[{"{", 
              RowBox[{"0.42", ",", "6.7"}], "}"}]}], "}"}]}], ",", 
          RowBox[{"FontSize", "\[Rule]", "itepFontSize"}], ",", 
          RowBox[{"ImageSize", "\[Rule]", 
           RowBox[{".45", "itepLineWidth"}]}], ",", 
          RowBox[{"FrameTicks", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"{", 
               RowBox[{"0.01", ",", "0.1"}], "}"}], "~", "Join", "~", 
              RowBox[{"Flatten", "[", 
               RowBox[{
                RowBox[{"Table", "[", 
                 RowBox[{
                  RowBox[{"Table", "[", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"it", ",", "\"\<\>\""}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"it", ",", 
                    SuperscriptBox["10", "sc"], ",", 
                    SuperscriptBox["10", 
                    RowBox[{"sc", "+", "1"}]], ",", 
                    SuperscriptBox["10", "sc"]}], "}"}]}], "]"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"sc", ",", 
                    RowBox[{"-", "3"}], ",", 
                    RowBox[{"-", "1"}]}], "}"}]}], "]"}], ",", "1"}], "]"}]}],
              ",", "Automatic"}], "}"}]}]}], "]"}], ",", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"ratio\[Chi]ListPlot", "[", 
         RowBox[{
          RowBox[{"sample4096", "\[LeftDoubleBracket]", 
           RowBox[{"All", ",", 
            RowBox[{"{", 
             RowBox[{"2", ",", "3", ",", "4"}], "}"}]}], 
           "\[RightDoubleBracket]"}], ",", 
          RowBox[{"FontSize", "\[Rule]", "itepFontSize"}], ",", 
          RowBox[{"ImageSize", "\[Rule]", 
           RowBox[{".45", "itepLineWidth"}]}], ",", 
          RowBox[{"FrameTicks", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"{", 
               RowBox[{"0.01", ",", "0.1"}], "}"}], "~", "Join", "~", 
              RowBox[{"Flatten", "[", 
               RowBox[{
                RowBox[{"Table", "[", 
                 RowBox[{
                  RowBox[{"Table", "[", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"it", ",", "\"\<\>\""}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"it", ",", 
                    SuperscriptBox["10", "sc"], ",", 
                    SuperscriptBox["10", 
                    RowBox[{"sc", "+", "1"}]], ",", 
                    SuperscriptBox["10", "sc"]}], "}"}]}], "]"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"sc", ",", 
                    RowBox[{"-", "3"}], ",", 
                    RowBox[{"-", "1"}]}], "}"}]}], "]"}], ",", "1"}], "]"}]}],
              ",", "Automatic"}], "}"}]}]}], "]"}]}], "\[IndentingNewLine]", 
       "}"}], "}"}], "]"}]}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.6096451014355288`*^9, 3.6096451374568987`*^9}, {
   3.609645222026988*^9, 3.609645227887209*^9}, {3.609645393051215*^9, 
   3.609645428989118*^9}, {3.609645463432189*^9, 3.609645477467903*^9}, {
   3.609645609781362*^9, 3.609645642394065*^9}, {3.609645674156782*^9, 
   3.609645706993593*^9}, {3.6096458067672873`*^9, 3.6096458371022587`*^9}, {
   3.609664946570684*^9, 3.609664966614698*^9}, {3.6096650112443666`*^9, 
   3.6096650505364847`*^9}, {3.60997252369475*^9, 3.609972560134062*^9}, {
   3.609973053671878*^9, 3.609973064713709*^9}, {3.609973186282545*^9, 
   3.6099732343871737`*^9}, {3.609974415094208*^9, 3.609974415214184*^9}, {
   3.610000628864314*^9, 3.610000629056776*^9}, 3.610000682897563*^9, {
   3.6100007265932827`*^9, 3.610000773448345*^9}, 3.610002480686101*^9, {
   3.61000284913381*^9, 3.610002876947711*^9}, {3.610009515297762*^9, 
   3.610009523735882*^9}, {3.610009588314065*^9, 3.6100095922860126`*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
Evaluator->"Local",
WindowSize->{795, 678},
WindowMargins->{{46, Automatic}, {Automatic, 0}},
Visible->True,
ShowSelection->True,
FrontEndVersion->"9.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (January 25, \
2013)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[422, 15, 184, 2, 148, "Title"],
Cell[CellGroupData[{
Cell[631, 21, 126, 2, 80, "Section",
 InitializationGroup->True],
Cell[760, 25, 207, 5, 28, "Input",
 InitializationGroup->True]
}, Closed]],
Cell[CellGroupData[{
Cell[1004, 35, 153, 2, 50, "Section"],
Cell[CellGroupData[{
Cell[1182, 41, 124, 2, 44, "Subsection",
 InitializationGroup->True],
Cell[1309, 45, 201, 5, 30, "Text",
 InitializationGroup->True],
Cell[1513, 52, 2087, 55, 216, "Input",
 InitializationGroup->True]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[3649, 113, 92, 1, 50, "Section"],
Cell[CellGroupData[{
Cell[3766, 118, 126, 2, 44, "Subsection",
 InitializationGroup->True],
Cell[3895, 122, 211, 5, 28, "Input"],
Cell[4109, 129, 756, 21, 46, "Input",
 InitializationGroup->True],
Cell[4868, 152, 220, 6, 28, "Input"],
Cell[5091, 160, 840, 21, 63, "Input",
 InitializationGroup->True],
Cell[5934, 183, 305, 8, 28, "Input"],
Cell[6242, 193, 2571, 49, 97, "Input",
 InitializationGroup->True],
Cell[8816, 244, 316, 8, 28, "Input",
 InitializationGroup->True],
Cell[9135, 254, 221, 6, 28, "Input"],
Cell[9359, 262, 1074, 26, 80, "Input",
 InitializationGroup->True]
}, Closed]],
Cell[CellGroupData[{
Cell[10470, 293, 126, 2, 36, "Subsection",
 InitializationGroup->True],
Cell[10599, 297, 345, 10, 70, "Input",
 InitializationGroup->True]
}, Closed]],
Cell[CellGroupData[{
Cell[10981, 312, 129, 2, 36, "Subsection",
 InitializationGroup->True],
Cell[11113, 316, 282, 7, 28, "Input",
 InitializationGroup->True],
Cell[11398, 325, 1889, 49, 175, "Input",
 InitializationGroup->True],
Cell[13290, 376, 1106, 20, 32, "Input",
 InitializationGroup->True],
Cell[14399, 398, 526, 15, 54, "Input",
 InitializationGroup->True],
Cell[14928, 415, 961, 30, 83, "Input",
 InitializationGroup->True]
}, Closed]],
Cell[CellGroupData[{
Cell[15926, 450, 129, 2, 36, "Subsection",
 InitializationGroup->True],
Cell[16058, 454, 2149, 56, 187, "Input",
 InitializationGroup->True],
Cell[18210, 512, 2275, 62, 257, "Input",
 InitializationGroup->True],
Cell[20488, 576, 3362, 79, 251, "Input",
 InitializationGroup->True],
Cell[23853, 657, 4608, 96, 267, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[28498, 758, 143, 2, 36, "Subsection",
 InitializationGroup->True],
Cell[28644, 762, 1382, 35, 180, "Input",
 InitializationGroup->True],
Cell[30029, 799, 2061, 54, 234, "Input",
 InitializationGroup->True],
Cell[32093, 855, 3123, 74, 250, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[35253, 934, 124, 2, 36, "Subsection",
 InitializationGroup->True],
Cell[35380, 938, 3400, 78, 228, "Input",
 InitializationGroup->True]
}, Closed]],
Cell[CellGroupData[{
Cell[38817, 1021, 133, 2, 36, "Subsection",
 InitializationGroup->True],
Cell[38953, 1025, 14015, 273, 838, "Input",
 InitializationGroup->True],
Cell[52971, 1300, 3038, 68, 227, "Input",
 InitializationGroup->True],
Cell[56012, 1370, 295, 8, 39, "Input",
 InitializationGroup->True],
Cell[56310, 1380, 396, 10, 39, "Input",
 InitializationGroup->True]
}, Closed]],
Cell[CellGroupData[{
Cell[56743, 1395, 130, 2, 36, "Subsection",
 InitializationGroup->True],
Cell[56876, 1399, 1286, 41, 104, "Input",
 InitializationGroup->True]
}, Closed]],
Cell[CellGroupData[{
Cell[58199, 1445, 176, 3, 36, "Subsection",
 InitializationGroup->True],
Cell[58378, 1450, 5118, 96, 216, "Input",
 InitializationGroup->True],
Cell[63499, 1548, 3007, 71, 316, "Input",
 InitializationGroup->True],
Cell[66509, 1621, 1017, 21, 46, "Input",
 InitializationGroup->True],
Cell[67529, 1644, 1166, 26, 63, "Input",
 InitializationGroup->True],
Cell[68698, 1672, 1405, 37, 131, "Input",
 InitializationGroup->True],
Cell[70106, 1711, 490, 14, 41, "Input",
 InitializationGroup->True],
Cell[70599, 1727, 1516, 39, 131, "Input",
 InitializationGroup->True],
Cell[72118, 1768, 4147, 102, 318, "Input",
 InitializationGroup->True],
Cell[76268, 1872, 3950, 93, 267, "Input",
 InitializationGroup->True],
Cell[80221, 1967, 19560, 372, 1440, "Input",
 InitializationGroup->True]
}, Closed]],
Cell[CellGroupData[{
Cell[99818, 2344, 150, 2, 36, "Subsection",
 InitializationGroup->True],
Cell[99971, 2348, 3202, 81, 264, "Input",
 InitializationGroup->True]
}, Closed]],
Cell[CellGroupData[{
Cell[103210, 2434, 129, 2, 36, "Subsection",
 InitializationGroup->True],
Cell[CellGroupData[{
Cell[103364, 2440, 130, 2, 35, "Subsubsection",
 InitializationGroup->True],
Cell[CellGroupData[{
Cell[103519, 2446, 415, 10, 28, "Input",
 InitializationGroup->True],
Cell[103937, 2458, 1448, 21, 70, "Output",
 InitializationGroup->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[105422, 2484, 531, 11, 48, "Input",
 InitializationGroup->True],
Cell[105956, 2497, 1526, 22, 70, "Output",
 InitializationGroup->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[107519, 2524, 384, 7, 28, "Input",
 InitializationGroup->True],
Cell[107906, 2533, 1455, 21, 70, "Output",
 InitializationGroup->True]
}, Open  ]],
Cell[109376, 2557, 239, 5, 28, "Input",
 InitializationGroup->True],
Cell[109618, 2564, 227, 5, 28, "Input",
 InitializationGroup->True]
}, Closed]],
Cell[CellGroupData[{
Cell[109882, 2574, 181, 3, 29, "Subsubsection",
 InitializationGroup->True],
Cell[CellGroupData[{
Cell[110088, 2581, 318, 8, 28, "Input",
 InitializationGroup->True],
Cell[110409, 2591, 594, 12, 70, "Output",
 InitializationGroup->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[111040, 2608, 280, 7, 48, "Input",
 InitializationGroup->True],
Cell[111323, 2617, 576, 11, 70, "Output",
 InitializationGroup->True]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[111948, 2634, 185, 3, 29, "Subsubsection",
 InitializationGroup->True],
Cell[112136, 2639, 1152, 29, 175, "Input",
 InitializationGroup->True],
Cell[113291, 2670, 1223, 31, 177, "Input",
 InitializationGroup->True],
Cell[114517, 2703, 827, 20, 80, "Input",
 InitializationGroup->True],
Cell[115347, 2725, 11479, 242, 850, "Input",
 InitializationGroup->True],
Cell[126829, 2969, 9134, 185, 622, "Input",
 InitializationGroup->True]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[136012, 3160, 131, 2, 36, "Subsection",
 InitializationGroup->True],
Cell[CellGroupData[{
Cell[136168, 3166, 103, 1, 35, "Subsubsection"],
Cell[136274, 3169, 22079, 469, 1481, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[158390, 3643, 127, 2, 29, "Subsubsection"],
Cell[158520, 3647, 2310, 55, 80, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[160867, 3707, 160, 2, 29, "Subsubsection"],
Cell[161030, 3711, 7293, 163, 381, "Input",
 InitializationGroup->True],
Cell[168326, 3876, 2794, 69, 264, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[171157, 3950, 120, 1, 35, "Subsubsection"],
Cell[171280, 3953, 5071, 121, 411, "Input"],
Cell[176354, 4076, 4674, 112, 380, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[181065, 4193, 110, 1, 29, "Subsubsection"],
Cell[181178, 4196, 262, 5, 39, "Input"],
Cell[181443, 4203, 3231, 66, 176, "Input"],
Cell[184677, 4271, 5381, 116, 372, "Input"],
Cell[190061, 4389, 3762, 76, 211, "Input"]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[193872, 4471, 99, 1, 44, "Subsection"],
Cell[CellGroupData[{
Cell[193996, 4476, 102, 1, 35, "Subsubsection"],
Cell[CellGroupData[{
Cell[194123, 4481, 7711, 147, 250, "Input"],
Cell[CellGroupData[{
Cell[201859, 4632, 202, 4, 21, "PrintTemporary"],
Cell[202064, 4638, 194, 3, 21, "PrintTemporary"],
Cell[202261, 4643, 246, 5, 22, "PrintTemporary"],
Cell[202510, 4650, 596, 13, 46, "Print"]
}, Open  ]]
}, Open  ]],
Cell[203133, 4667, 90, 1, 30, "Text"],
Cell[203226, 4670, 232, 4, 32, "Text"],
Cell[203461, 4676, 567, 13, 63, "Input"],
Cell[204031, 4691, 235, 5, 32, "Text"],
Cell[204269, 4698, 350, 9, 63, "Input"],
Cell[204622, 4709, 413, 11, 32, "Text"],
Cell[205038, 4722, 443, 10, 46, "Input"],
Cell[205484, 4734, 269, 7, 32, "Text"],
Cell[205756, 4743, 619, 14, 97, "Input"],
Cell[206378, 4759, 200, 6, 32, "Text"],
Cell[206581, 4767, 695, 19, 78, "Input"],
Cell[207279, 4788, 199, 6, 32, "Text"],
Cell[207481, 4796, 658, 16, 80, "Input"],
Cell[208142, 4814, 176, 2, 30, "Text"],
Cell[208321, 4818, 744, 20, 78, "Input"],
Cell[209068, 4840, 335, 9, 32, "Text"],
Cell[209406, 4851, 693, 19, 78, "Input"],
Cell[210102, 4872, 294, 9, 35, "Text"],
Cell[210399, 4883, 695, 19, 78, "Input"],
Cell[211097, 4904, 284, 8, 32, "Text"],
Cell[211384, 4914, 697, 19, 78, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[212118, 4938, 102, 1, 29, "Subsubsection"],
Cell[212223, 4941, 5646, 124, 420, "Input"],
Cell[217872, 5067, 2728, 64, 216, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[220637, 5136, 105, 1, 29, "Subsubsection"],
Cell[CellGroupData[{
Cell[220767, 5141, 600, 15, 63, "Input"],
Cell[221370, 5158, 158, 2, 28, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[221577, 5166, 109, 1, 29, "Subsubsection"],
Cell[221689, 5169, 1024, 21, 148, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[222750, 5195, 161, 2, 35, "Subsubsection"],
Cell[222914, 5199, 1342, 31, 114, "Input"],
Cell[CellGroupData[{
Cell[224281, 5234, 785, 14, 28, "Input"],
Cell[225069, 5250, 6551, 113, 245, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[231657, 5368, 696, 13, 28, "Input"],
Cell[232356, 5383, 235057, 3876, 254, 223992, 3693, "CachedBoxData", \
"BoxData", "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[467462, 9265, 108, 1, 29, "Subsubsection"],
Cell[467573, 9268, 2261, 66, 193, "Input"],
Cell[CellGroupData[{
Cell[469859, 9338, 2230, 47, 91, "Input"],
Cell[472092, 9387, 128080, 2226, 253, 116126, 2030, "CachedBoxData", \
"BoxData", "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[600209, 11618, 469, 10, 39, "Input"],
Cell[600681, 11630, 110390, 1882, 256, 99100, 1695, "CachedBoxData", \
"BoxData", "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[711108, 13517, 620, 13, 39, "Input"],
Cell[711731, 13532, 111038, 1884, 250, 98789, 1681, "CachedBoxData", \
"BoxData", "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[822818, 15422, 108, 1, 29, "Subsubsection"],
Cell[CellGroupData[{
Cell[822951, 15427, 854, 20, 63, "Input"],
Cell[823808, 15449, 38787, 682, 158, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[862632, 16136, 1258, 26, 80, "Input"],
Cell[863893, 16164, 6076, 140, 161, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[870018, 16310, 133, 3, 29, "Subsubsection"],
Cell[CellGroupData[{
Cell[870176, 16317, 535, 13, 63, "Input"],
Cell[870714, 16332, 89, 1, 28, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[870876, 16341, 92, 1, 80, "Section"],
Cell[CellGroupData[{
Cell[870993, 16346, 169, 2, 44, "Subsection"],
Cell[871165, 16350, 107, 1, 35, "Subsubsection"]
}, Open  ]],
Cell[CellGroupData[{
Cell[871309, 16356, 169, 2, 44, "Subsection"],
Cell[CellGroupData[{
Cell[871503, 16362, 103, 1, 35, "Subsubsection"],
Cell[871609, 16365, 149, 3, 28, "Input"],
Cell[871761, 16370, 2881, 76, 182, "Input"],
Cell[874645, 16448, 2508, 59, 216, "Input"],
Cell[877156, 16509, 5546, 147, 371, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[882739, 16661, 109, 1, 29, "Subsubsection"],
Cell[882851, 16664, 333, 7, 46, "Input"],
Cell[883187, 16673, 6788, 173, 454, "Input"],
Cell[889978, 16848, 1183, 22, 97, "Input"],
Cell[891164, 16872, 2516, 53, 131, "Input"],
Cell[893683, 16927, 2963, 66, 216, "Input"],
Cell[896649, 16995, 6408, 158, 456, "Input"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

