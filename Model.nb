(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[         0,          0]
NotebookDataLength[   1472254,      28636]
NotebookOptionsPosition[   1455360,      28122]
NotebookOutlinePosition[   1455749,      28140]
CellTagsIndexPosition[   1455706,      28137]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Spectral Lags in Very High Energy Emission of GRBs", "Title",
 CellChangeTimes->{{3.589934697031559*^9, 3.5899347180121403`*^9}, {
  3.592131457104278*^9, 3.592131457862741*^9}}],

Cell[CellGroupData[{

Cell["Configuration", "Section",
 InitializationGroup->True,
 CellChangeTimes->{{3.609662325460408*^9, 3.609662331887999*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"SetDirectory", "[", "\"\<~/Projects/GammaRays/\>\"", "]"}], 
  ";"}]], "Input",
 InitializationGroup->True,
 CellChangeTimes->{{3.609662333760296*^9, 3.60966235475375*^9}}],

Cell[BoxData[
 RowBox[{"Import", "[", "\"\<GeneralUtilities`\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.618351934664719*^9, 3.6183519481006203`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Numerical functions", "Section",
 CellChangeTimes->{{3.606445343533203*^9, 3.606445367918765*^9}, {
  3.606457995606667*^9, 3.606457996103257*^9}}],

Cell[CellGroupData[{

Cell["findRoot", "Subsection",
 InitializationGroup->True,
 CellChangeTimes->{{3.606458023159586*^9, 3.606458025877161*^9}}],

Cell["\<\
Only works for monotonously increasing functions, which have a root for var > \
0\
\>", "Text",
 InitializationGroup->True,
 CellChangeTimes->{{3.6064453716360407`*^9, 3.606445404298212*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"findRoot", "[", 
   RowBox[{"func_", ",", 
    RowBox[{"{", 
     RowBox[{"var_", ",", 
      RowBox[{"start_", "?", "NumericQ"}]}], "}"}]}], "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"left", ",", "right"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"func", "/.", 
          RowBox[{"var", "\[Rule]", "start"}]}], ")"}], "<", "0"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"left", "=", "start"}], ";", "\[IndentingNewLine]", 
        RowBox[{"right", "=", 
         RowBox[{"2.", "start"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"While", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"func", "/.", 
             RowBox[{"var", "\[Rule]", "right"}]}], ")"}], "<", "0"}], ",", 
          RowBox[{
           RowBox[{"right", "*=", "2"}], ";", 
           RowBox[{"left", "*=", "2"}]}]}], "]"}], ";"}], 
       "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"right", "=", "start"}], ";", "\[IndentingNewLine]", 
        RowBox[{"left", "=", 
         RowBox[{".5", "start"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"While", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"func", "/.", 
             RowBox[{"var", "\[Rule]", "left"}]}], ")"}], ">", "0"}], ",", 
          RowBox[{
           RowBox[{"left", "*=", ".5"}], ";", 
           RowBox[{"right", "*=", ".5"}]}]}], "]"}], ";"}]}], 
      "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"FindRoot", "[", 
      RowBox[{"func", ",", 
       RowBox[{"{", 
        RowBox[{"var", ",", "left", ",", "right"}], "}"}]}], "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 InitializationGroup->True,
 CellChangeTimes->{{3.6064448763059072`*^9, 3.606445133934628*^9}, {
  3.606445178184031*^9, 3.606445190695405*^9}, {3.606445229942441*^9, 
  3.606445307175786*^9}}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Model", "Section",
 CellChangeTimes->{{3.5899347262060547`*^9, 3.589934726570508*^9}}],

Cell[CellGroupData[{

Cell["Parameters", "Subsection",
 InitializationGroup->True,
 CellChangeTimes->{{3.592131230779949*^9, 3.592131235512723*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"universe", "=", 
   RowBox[{"{", 
    RowBox[{"Hobs_", ",", "\[CapitalOmega]m_"}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.6075142187755423`*^9, 3.607514225727565*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "defaultUniverse", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Hobs", "\[Rule]", "2.*^-18"}], ",", 
     RowBox[{"\[CapitalOmega]m", "\[Rule]", "0.317"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"defaultUniverse", "[", 
    RowBox[{"OptionsPattern", "[", "]"}], "]"}], ":=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"OptionValue", "[", "Hobs", "]"}], ",", 
     RowBox[{"OptionValue", "[", "\[CapitalOmega]m", "]"}]}], "}"}]}], 
  ";"}]}], "Input",
 InitializationGroup->True,
 CellChangeTimes->{{3.592183431358851*^9, 3.592183460249783*^9}, {
  3.607501060289913*^9, 3.607501063087578*^9}, {3.607501312303144*^9, 
  3.607501314223002*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"population", "=", 
   RowBox[{"{", 
    RowBox[{"density0_", ",", "index_", ",", "zc_"}], "}"}]}], ";"}]], "Input",\

 CellChangeTimes->{{3.607514236934307*^9, 3.6075142465544567`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "defaultPopulation", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"density0", "\[Rule]", "0.655427*^-50"}], ",", 
     RowBox[{"index", "\[Rule]", "3"}], ",", 
     RowBox[{"zc", "\[Rule]", "3."}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"defaultPopulation", "[", 
    RowBox[{"OptionsPattern", "[", "]"}], "]"}], ":=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"OptionValue", "[", "density0", "]"}], ",", 
     RowBox[{"OptionValue", "[", "index", "]"}], ",", 
     RowBox[{"OptionValue", "[", "zc", "]"}]}], "}"}]}], ";"}]}], "Input",
 InitializationGroup->True,
 CellChangeTimes->{{3.592196285224616*^9, 3.592196414912092*^9}, {
  3.607501148274686*^9, 3.607501151743243*^9}, {3.6075013157513323`*^9, 
  3.607501317798958*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"burst", "=", 
   RowBox[{"{", 
    RowBox[{
    "\[Gamma]_", ",", "\[Eta]0_", ",", "r0_", ",", "n_", ",", "\[Omega]0_", 
     ",", "\[Theta]0_", ",", "k_", ",", "\[Alpha]_"}], "}"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.607514248391285*^9, 3.607514265172646*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "defaultBurst", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Gamma]", "\[Rule]", "300"}], ",", 
     RowBox[{"\[Eta]0", "\[Rule]", "4.629640817921788`*^34"}], ",", 
     RowBox[{"r0", "\[Rule]", "3.142715108207946`*^6"}], ",", 
     RowBox[{"n", "\[Rule]", "22.9977`"}], ",", 
     RowBox[{"\[Omega]0", "\[Rule]", "1."}], ",", 
     RowBox[{"\[Theta]0", "\[Rule]", "0.0000793393`"}], ",", 
     RowBox[{"k", "\[Rule]", 
      RowBox[{"-", "0.65356`"}]}], ",", 
     RowBox[{"\[Alpha]", "\[Rule]", 
      RowBox[{"-", "0.724394`"}]}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"defaultBurst", "[", 
    RowBox[{"OptionsPattern", "[", "]"}], "]"}], ":=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"OptionValue", "[", "\[Gamma]", "]"}], ",", 
     RowBox[{"OptionValue", "[", "\[Eta]0", "]"}], ",", 
     RowBox[{"OptionValue", "[", "r0", "]"}], ",", 
     RowBox[{"OptionValue", "[", "n", "]"}], ",", 
     RowBox[{"OptionValue", "[", "\[Omega]0", "]"}], ",", 
     RowBox[{"OptionValue", "[", "\[Theta]0", "]"}], ",", 
     RowBox[{"OptionValue", "[", "k", "]"}], ",", 
     RowBox[{"OptionValue", "[", "\[Alpha]", "]"}]}], "}"}]}], 
  ";"}]}], "Input",
 InitializationGroup->True,
 CellChangeTimes->{{3.592183471082691*^9, 3.592183527567327*^9}, {
   3.592185444675672*^9, 3.592185456046914*^9}, 3.592185591584156*^9, {
   3.5921856928131227`*^9, 3.592185694458848*^9}, {3.592577850303637*^9, 
   3.592577874748348*^9}, {3.604711185723784*^9, 3.604711190969351*^9}, {
   3.604711384994788*^9, 3.604711418079825*^9}, {3.6047116192661457`*^9, 
   3.6047116639859743`*^9}, {3.604711695775197*^9, 3.6047117510336103`*^9}, {
   3.6047138632422543`*^9, 3.60471395452982*^9}, {3.606457745661145*^9, 
   3.606457767529891*^9}, {3.606457839921405*^9, 3.606457845301832*^9}, {
   3.6064587315163107`*^9, 3.606458735947057*^9}, {3.6064588604332933`*^9, 
   3.6064588605668383`*^9}, {3.6064591390869102`*^9, 3.606459141413015*^9}, {
   3.606459329963553*^9, 3.6064593302284203`*^9}, {3.606459765539213*^9, 
   3.606459845826887*^9}, {3.606459974138461*^9, 3.606460013762233*^9}, {
   3.606460102508107*^9, 3.6064601034888*^9}, {3.606460307688303*^9, 
   3.60646032127286*^9}, {3.606460454248855*^9, 3.606460454392315*^9}, {
   3.6074712469223833`*^9, 3.607471266425153*^9}, {3.607501162169427*^9, 
   3.607501165359828*^9}, {3.607501319976783*^9, 3.607501321608468*^9}, {
   3.609629201001553*^9, 3.6096292232489634`*^9}, {3.609987004071226*^9, 
   3.609987004773662*^9}, {3.617854889233045*^9, 3.617854908118827*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"defaultDetectorArea", "[", "]"}], ":=", "5.563*^-18"}], 
  ";"}]], "Input",
 InitializationGroup->True,
 CellChangeTimes->{{3.592183544436002*^9, 3.592183552917884*^9}, {
  3.607501169158555*^9, 3.6075011694143047`*^9}, {3.607501323422181*^9, 
  3.607501324462035*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"observer", "=", 
   RowBox[{"{", 
    RowBox[{"detectorArea_", ",", "z_", ",", "\[Chi]_"}], "}"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.607514271954241*^9, 3.607514280908846*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "defaultObserver", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"detectorArea", "\[Rule]", 
      RowBox[{"defaultDetectorArea", "[", "]"}]}], ",", 
     RowBox[{"z", "\[Rule]", "2.1062"}], ",", 
     RowBox[{"\[Chi]", "\[Rule]", "0.00590163"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"defaultObserver", "[", 
    RowBox[{"OptionsPattern", "[", "]"}], "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"OptionValue", "[", "detectorArea", "]"}], ",", 
     RowBox[{"OptionValue", "[", "z", "]"}], ",", 
     RowBox[{"OptionValue", "[", "\[Chi]", "]"}]}], "}"}]}], ";"}]}], "Input",\

 InitializationGroup->True,
 CellChangeTimes->{{3.5921835325126457`*^9, 3.592183542805168*^9}, {
   3.5921836390243387`*^9, 3.592183678941724*^9}, {3.606457785113456*^9, 
   3.6064577891692677`*^9}, 3.606458743105884*^9, 3.6074712757679043`*^9, {
   3.6075011812318573`*^9, 3.6075011909677143`*^9}, {3.6075013266393433`*^9, 
   3.607501330382638*^9}, 3.609629257215876*^9, 3.617854951994294*^9, 
   3.617854992267*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Relativity", "Subsection",
 InitializationGroup->True,
 CellChangeTimes->{{3.589934837712495*^9, 3.589934839766659*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"v", "[", "\[Gamma]_", "]"}], ":=", 
   SqrtBox[
    RowBox[{"1", "-", 
     FractionBox["1", 
      SuperscriptBox["\[Gamma]", "2"]]}]]}], ";"}]], "Input",
 InitializationGroup->True,
 CellChangeTimes->{{3.589934850463387*^9, 3.589934856887154*^9}, {
  3.589935711872209*^9, 3.589935711942636*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Cosmology", "Subsection",
 InitializationGroup->True,
 CellChangeTimes->{{3.5899347427477713`*^9, 3.5899347438265457`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"\[CapitalOmega]\[CapitalLambda]", "[", "\[CapitalOmega]m_", "]"}],
    ":=", 
   RowBox[{"1", "-", "\[CapitalOmega]m"}]}], ";"}]], "Input",
 InitializationGroup->True,
 CellChangeTimes->{{3.5899349782326403`*^9, 3.589935000464473*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"distance", "[", 
    RowBox[{"universe", ",", "z_"}], "]"}], ":=", 
   RowBox[{
    FractionBox["1", "Hobs"], 
    SqrtBox[
     FractionBox["1", 
      RowBox[{
      "\[CapitalOmega]\[CapitalLambda]", "[", "\[CapitalOmega]m", "]"}]]], 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "+", "z"}], ")"}], 
       RowBox[{"Hypergeometric2F1", "[", 
        RowBox[{
         FractionBox["1", "3"], ",", 
         FractionBox["1", "2"], ",", 
         FractionBox["4", "3"], ",", 
         RowBox[{
          RowBox[{"-", 
           FractionBox["\[CapitalOmega]m", 
            RowBox[{
            "\[CapitalOmega]\[CapitalLambda]", "[", "\[CapitalOmega]m", 
             "]"}]]}], 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "+", "z"}], ")"}], "3"]}]}], "]"}]}], "-", 
      RowBox[{"Hypergeometric2F1", "[", 
       RowBox[{
        FractionBox["1", "3"], ",", 
        FractionBox["1", "2"], ",", 
        FractionBox["4", "3"], ",", 
        RowBox[{"-", 
         FractionBox["\[CapitalOmega]m", 
          RowBox[{
          "\[CapitalOmega]\[CapitalLambda]", "[", "\[CapitalOmega]m", 
           "]"}]]}]}], "]"}]}], ")"}]}]}], ";"}]], "Input",
 InitializationGroup->True,
 CellChangeTimes->{{3.589934874380446*^9, 3.589934886285137*^9}, {
   3.5899349693113194`*^9, 3.589934972465304*^9}, {3.589935054177115*^9, 
   3.589935073915997*^9}, 3.589935110006753*^9, {3.589935151236059*^9, 
   3.5899351579007053`*^9}, {3.5921315009060917`*^9, 
   3.5921315207960997`*^9}, {3.592131935717617*^9, 3.592131979444818*^9}, {
   3.592132180555418*^9, 3.5921322199675827`*^9}, {3.5921322609963913`*^9, 
   3.592132261150456*^9}, {3.59218328690254*^9, 3.592183308931731*^9}, {
   3.607501210921533*^9, 3.607501212458063*^9}, {3.60750133808078*^9, 
   3.60750133840483*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"photonSphereArea", "[", 
    RowBox[{"universe_", ",", "z_"}], "]"}], ":=", 
   RowBox[{"4", "\[Pi]", " ", 
    SuperscriptBox[
     RowBox[{"distance", "[", 
      RowBox[{"universe", ",", "z"}], "]"}], "2"]}]}], ";"}]], "Input",
 InitializationGroup->True,
 CellChangeTimes->{{3.589935078530493*^9, 3.589935107355896*^9}, {
   3.589935149961955*^9, 3.589935159393393*^9}, {3.5901499169203653`*^9, 
   3.590149919694723*^9}, {3.592132276651806*^9, 3.59213231399308*^9}, 
   3.5921324338850183`*^9, {3.592132479674905*^9, 3.592132528442235*^9}, {
   3.59213259355765*^9, 3.592132602476036*^9}, 3.592132636578137*^9, {
   3.592132678985426*^9, 3.592132700320488*^9}, {3.5921328703605547`*^9, 
   3.592132878583001*^9}, {3.592134577303495*^9, 3.592134611119673*^9}, {
   3.59213464199679*^9, 3.5921346874769783`*^9}, {3.592134784446424*^9, 
   3.59213481159022*^9}, {3.592135038603594*^9, 3.592135057500444*^9}, {
   3.5921350909931173`*^9, 3.592135194454236*^9}, {3.59218331212173*^9, 
   3.592183333104171*^9}, {3.5921856212934513`*^9, 3.592185621370853*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"burstsSphereArea", "[", 
    RowBox[{"universe_", ",", "z_"}], "]"}], ":=", 
   FractionBox[
    RowBox[{"4", "\[Pi]", " ", 
     SuperscriptBox[
      RowBox[{"distance", "[", 
       RowBox[{"universe", ",", "z"}], "]"}], "2"]}], 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", "z"}], ")"}], "2"]]}], ";"}]], "Input",
 InitializationGroup->True,
 CellChangeTimes->{{3.589935120126265*^9, 3.58993516044965*^9}, {
  3.5901499204550657`*^9, 3.590149922334618*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"shellVolumePerRedshift", "[", 
    RowBox[{"universe", ",", "z_"}], "]"}], ":=", 
   RowBox[{
    FractionBox[
     RowBox[{"4", "\[Pi]", " ", 
      SuperscriptBox[
       RowBox[{"distance", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"Hobs", ",", "\[CapitalOmega]m"}], "}"}], ",", "z"}], "]"}],
        "2"]}], 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", "+", "z"}], ")"}], "3"]], 
    FractionBox["1", 
     RowBox[{"Hobs", 
      SqrtBox[
       RowBox[{
        RowBox[{"\[CapitalOmega]m", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"1", "+", "z"}], ")"}], "3"]}], "+", 
        RowBox[{
        "\[CapitalOmega]\[CapitalLambda]", "[", "\[CapitalOmega]m", 
         "]"}]}]]}]]}]}], ";"}]], "Input",
 InitializationGroup->True,
 CellChangeTimes->{{3.589935175967778*^9, 3.589935290257773*^9}, {
  3.5918412554035797`*^9, 3.591841257099522*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Light curve", "Subsection",
 InitializationGroup->True,
 CellChangeTimes->{{3.589935318987741*^9, 3.5899353237047043`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"i", "[", 
    RowBox[{
    "burst", ",", "z_", ",", "\[Chi]_", ",", "\[Omega]_", ",", "\[Theta]_", 
     ",", "\[Phi]_"}], "]"}], ":=", "\[IndentingNewLine]", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"\[Omega]", "\[Equal]", "\[Infinity]"}], ",", 
     "\[IndentingNewLine]", "0", ",", "\[IndentingNewLine]", 
     RowBox[{
      FractionBox["1", 
       RowBox[{"2", "k"}]], "\[Omega]", 
      SuperscriptBox[
       RowBox[{"(", 
        FractionBox["\[Omega]", "\[Omega]0"], ")"}], "\[Alpha]"], 
      RowBox[{"ExpIntegralE", "[", 
       RowBox[{
        RowBox[{
         FractionBox[
          RowBox[{"\[Alpha]", "+", "1"}], 
          RowBox[{"2", "k"}]], "+", "1"}], ",", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           FractionBox["\[Theta]", "\[Theta]0"], ")"}], "2"], 
         SuperscriptBox[
          RowBox[{"(", 
           FractionBox["\[Omega]", "\[Omega]0"], ")"}], 
          RowBox[{
           RowBox[{"-", "2"}], "k"}]], 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"v", "[", "\[Gamma]", "]"}], "\[Gamma]", 
            RowBox[{"(", 
             RowBox[{"1", "+", "z"}], ")"}], 
            RowBox[{"(", 
             RowBox[{
              FractionBox["1", 
               RowBox[{"v", "[", "\[Gamma]", "]"}]], "-", "1", "+", 
              FractionBox[
               SuperscriptBox["\[Theta]", "2"], "2"], "+", 
              FractionBox[
               SuperscriptBox["\[Chi]", "2"], "2"], "-", 
              RowBox[{"\[Theta]", " ", "\[Chi]", " ", 
               RowBox[{"Cos", "[", "\[Phi]", "]"}]}]}], ")"}]}], ")"}], 
          RowBox[{
           RowBox[{"-", "2"}], "k"}]]}]}], "]"}]}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}]], "Input",
 InitializationGroup->True,
 CellChangeTimes->{{3.589935483422423*^9, 3.5899356080330048`*^9}, {
  3.5899356967025957`*^9, 3.589935781512787*^9}, {3.589935933237218*^9, 
  3.589935964665523*^9}, {3.5899360834375477`*^9, 3.58993610489809*^9}, {
  3.5922732610821*^9, 3.592273261937419*^9}, {3.5922737181109123`*^9, 
  3.59227371911088*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"j", "[", 
    RowBox[{
    "burst", ",", "z_", ",", "\[Chi]_", ",", "\[Tau]_", ",", "\[Theta]_", ",",
      "\[Phi]_"}], "]"}], ":=", "\[IndentingNewLine]", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"\[Tau]", "\[Equal]", "\[Infinity]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"r0", 
         RowBox[{"(", 
          RowBox[{
           FractionBox["1", 
            RowBox[{"v", "[", "\[Gamma]", "]"}]], "-", "1", "+", 
           FractionBox[
            SuperscriptBox["\[Theta]", "2"], "2"], "+", 
           FractionBox[
            SuperscriptBox["\[Chi]", "2"], "2"], "-", 
           RowBox[{"\[Theta]", " ", "\[Chi]", " ", 
            RowBox[{"Cos", "[", "\[Phi]", "]"}]}]}], ")"}], 
         RowBox[{"(", 
          RowBox[{"1", "+", "z"}], ")"}]}], ")"}], "3"], 
      FractionBox["\[Pi]", 
       RowBox[{"n", " ", 
        RowBox[{"Sin", "[", 
         FractionBox[
          RowBox[{"3", "\[Pi]"}], "n"], "]"}]}]]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      FractionBox[
       SuperscriptBox["\[Tau]", "3"], "3"], 
      RowBox[{"Hypergeometric2F1", "[", 
       RowBox[{"1", ",", 
        FractionBox["3", "n"], ",", 
        FractionBox[
         RowBox[{"n", "+", "3"}], "n"], ",", 
        RowBox[{"-", 
         SuperscriptBox[
          RowBox[{"(", 
           FractionBox["\[Tau]", 
            RowBox[{"r0", 
             RowBox[{"(", 
              RowBox[{
               FractionBox["1", 
                RowBox[{"v", "[", "\[Gamma]", "]"}]], "-", "1", "+", 
               FractionBox[
                SuperscriptBox["\[Theta]", "2"], "2"], "+", 
               FractionBox[
                SuperscriptBox["\[Chi]", "2"], "2"], "-", 
               RowBox[{"\[Theta]", " ", "\[Chi]", " ", 
                RowBox[{"Cos", "[", "\[Phi]", "]"}]}]}], ")"}], 
             RowBox[{"(", 
              RowBox[{"1", "+", "z"}], ")"}]}]], ")"}], "n"]}]}], "]"}]}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 InitializationGroup->True,
 CellChangeTimes->{{3.5899357885882673`*^9, 3.5899358888161497`*^9}, {
  3.589935971703033*^9, 3.589936024047285*^9}, {3.589936089476865*^9, 
  3.589936099247167*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"p", "[", 
    RowBox[{"universe_", ",", "burst", ",", "observer", ",", 
     RowBox[{"{", 
      RowBox[{"\[Theta]_", ",", "\[Phi]_"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Tau]1_", ",", "\[Tau]2_"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Omega]1_", ",", "\[Omega]2_"}], "}"}]}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", "burstValues", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"burstValues", "=", 
       RowBox[{"{", 
        RowBox[{
        "\[Gamma]", ",", "\[Eta]0", ",", "r0", ",", "n", ",", "\[Omega]0", 
         ",", "\[Theta]0", ",", "k", ",", "\[Alpha]"}], "}"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Re", "[", 
       RowBox[{
        FractionBox["detectorArea", 
         RowBox[{"photonSphereArea", "[", 
          RowBox[{"universe", ",", "z"}], "]"}]], 
        FractionBox["\[Eta]0", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"v", "[", "\[Gamma]", "]"}], "\[Gamma]", 
            RowBox[{"(", 
             RowBox[{"1", "+", "z"}], ")"}]}], ")"}], 
          RowBox[{"2", "-", "\[Alpha]"}]]], 
        FractionBox["1", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            FractionBox["1", 
             RowBox[{"v", "[", "\[Gamma]", "]"}]], "-", "1", "+", 
            FractionBox[
             SuperscriptBox["\[Theta]", "2"], "2"], "+", 
            FractionBox[
             SuperscriptBox["\[Chi]", "2"], "2"], "-", 
            RowBox[{"\[Theta]", " ", "\[Chi]", " ", 
             RowBox[{"Cos", "[", "\[Phi]", "]"}]}]}], ")"}], 
          RowBox[{"5", "-", "\[Alpha]"}]]], 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"i", "[", 
           RowBox[{
           "burstValues", ",", "z", ",", "\[Chi]", ",", "\[Omega]2", ",", 
            "\[Theta]", ",", "\[Phi]"}], "]"}], "-", 
          RowBox[{"i", "[", 
           RowBox[{
           "burstValues", ",", "z", ",", "\[Chi]", ",", "\[Omega]1", ",", 
            "\[Theta]", ",", "\[Phi]"}], "]"}]}], ")"}], 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"j", "[", 
           RowBox[{
           "burstValues", ",", "z", ",", "\[Chi]", ",", "\[Tau]2", ",", 
            "\[Theta]", ",", "\[Phi]"}], "]"}], "-", 
          RowBox[{"j", "[", 
           RowBox[{
           "burstValues", ",", "z", ",", "\[Chi]", ",", "\[Tau]1", ",", 
            "\[Theta]", ",", "\[Phi]"}], "]"}]}], ")"}]}], "]"}]}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 InitializationGroup->True,
 CellChangeTimes->{{3.605264146248972*^9, 3.605264229210731*^9}, {
   3.6052643504121227`*^9, 3.605264350585134*^9}, 3.60617835086559*^9, 
   3.606301399784334*^9, {3.6063014926244287`*^9, 3.606301504314597*^9}, {
   3.606301540800703*^9, 3.606301597528256*^9}, {3.606301712479704*^9, 
   3.606301768928443*^9}, {3.606301818831545*^9, 3.606301825567028*^9}, {
   3.6064540549508457`*^9, 3.606454059126418*^9}, {3.6068189163794518`*^9, 
   3.606818917499014*^9}, {3.606820438217452*^9, 3.606820441676106*^9}, {
   3.6068206443702803`*^9, 3.606820644512549*^9}, {3.6068207819847507`*^9, 
   3.606820798168706*^9}, {3.606821776624867*^9, 3.606821776758939*^9}, {
   3.606828001434215*^9, 3.606828005164133*^9}, {3.606828049032346*^9, 
   3.606828077526512*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"p", "[", 
   RowBox[{"universe_", ",", "burst", ",", 
    RowBox[{"{", 
     RowBox[{"detectorArea_", ",", "z_", ",", 
      RowBox[{"\[Chi]_", "?", "NumericQ"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"\[Tau]1_", ",", "\[Tau]2_"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"\[Omega]1_", ",", "\[Omega]2_"}], "}"}]}], "]"}], ":=", 
  RowBox[{
   RowBox[{"p", "[", 
    RowBox[{"universe", ",", 
     RowBox[{"{", 
      RowBox[{
      "\[Gamma]", ",", "\[Eta]0", ",", "r0", ",", "n", ",", "\[Omega]0", ",", 
       "\[Theta]0", ",", "k", ",", "\[Alpha]"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"detectorArea", ",", "z", ",", "\[Chi]"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Tau]1", ",", "\[Tau]2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Omega]1", ",", "\[Omega]2"}], "}"}]}], "]"}], "=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"burstValues", ",", "\[Theta]Points", ",", "result"}], "}"}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"burstValues", "=", 
       RowBox[{"{", 
        RowBox[{
        "\[Gamma]", ",", "\[Eta]0", ",", "r0", ",", "n", ",", "\[Omega]0", 
         ",", "\[Theta]0", ",", "k", ",", "\[Alpha]"}], "}"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"\[Theta]Points", "=", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\[Theta]", ",", "0"}], "}"}], "~", "Join", "~", 
        RowBox[{"Sort", "[", 
         RowBox[{"Select", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"\[Theta]0", "/", "10."}], ",", "\[Theta]0", ",", 
             RowBox[{"10.", "\[Theta]0"}], ",", 
             RowBox[{"100.", "\[Theta]0"}], ",", 
             RowBox[{"1.", "/", "\[Gamma]"}], ",", 
             RowBox[{"10.", "/", "\[Gamma]"}], ",", 
             RowBox[{"100.", "/", "\[Gamma]"}], ",", 
             RowBox[{"\[Chi]", "-", 
              RowBox[{"1.", "/", "\[Gamma]"}]}], ",", 
             RowBox[{"\[Chi]", "-", 
              RowBox[{"10.", "/", "\[Gamma]"}]}], ",", 
             RowBox[{"\[Chi]", "-", 
              RowBox[{"100.", "/", "\[Gamma]"}]}], ",", 
             RowBox[{"\[Chi]", "+", 
              RowBox[{"1.", "/", "\[Gamma]"}]}], ",", 
             RowBox[{"\[Chi]", "+", 
              RowBox[{"10.", "/", "\[Gamma]"}]}], ",", 
             RowBox[{"\[Chi]", "+", 
              RowBox[{"100.", "/", "\[Gamma]"}]}]}], "}"}], ",", 
           RowBox[{
            RowBox[{"#", ">", "0"}], "&"}]}], "]"}], "]"}], "~", "Join", "~", 
        
        RowBox[{"{", "\[Infinity]", "}"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"result", "=", 
       RowBox[{"NIntegrate", "[", 
        RowBox[{
         RowBox[{"2", "\[Theta]", " ", 
          RowBox[{"p", "[", 
           RowBox[{"universe", ",", "burstValues", ",", 
            RowBox[{"{", 
             RowBox[{"detectorArea", ",", "z", ",", "\[Chi]"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"\[Theta]", ",", "\[Phi]"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"\[Tau]1", ",", "\[Tau]2"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"\[Omega]1", ",", "\[Omega]2"}], "}"}]}], "]"}]}], ",", 
         RowBox[{"Evaluate", "@", "\[Theta]Points"}], ",", 
         RowBox[{"{", 
          RowBox[{"\[Phi]", ",", "0", ",", "\[Pi]"}], "}"}], ",", 
         RowBox[{"MinRecursion", "\[Rule]", "3"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"result", "\[LessEqual]", "0"}], "&&", 
         RowBox[{"\[Tau]1", "<", "\[Tau]2"}]}], ",", 
        RowBox[{"Abort", "[", "]"}], ",", "result"}], "]"}]}]}], 
    "\[IndentingNewLine]", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.609552985410853*^9, 3.60955302888662*^9}, {
   3.609553152212681*^9, 3.609553162313032*^9}, {3.609553225795508*^9, 
   3.609553238291142*^9}, {3.609553296033367*^9, 3.609553307639937*^9}, {
   3.609553424760442*^9, 3.609553442751478*^9}, {3.609553552345468*^9, 
   3.609553568901787*^9}, {3.609553669844857*^9, 3.609553672505118*^9}, {
   3.6095537154275293`*^9, 3.6095537773603477`*^9}, {3.6095543075210867`*^9, 
   3.609554412842857*^9}, {3.6095544536441183`*^9, 3.6095545537427673`*^9}, {
   3.609554605615917*^9, 3.609554645323929*^9}, {3.609554986781806*^9, 
   3.609555008996572*^9}, {3.609555680250008*^9, 3.6095556826793137`*^9}, {
   3.6095560020758266`*^9, 3.609556031840561*^9}, {3.609556479734377*^9, 
   3.609556505466941*^9}, {3.6095579359006853`*^9, 3.6095579460525703`*^9}, {
   3.609558059473399*^9, 3.609558088072796*^9}, {3.609558192419702*^9, 
   3.609558192735241*^9}, {3.6095583689241323`*^9, 3.6095583740684643`*^9}, {
   3.609558428526751*^9, 3.6095584996244097`*^9}, {3.609558624143918*^9, 
   3.6095586564258213`*^9}, {3.609563152876815*^9, 3.609563176403639*^9}, {
   3.609563333940825*^9, 3.609563334044628*^9}, {3.609563455711883*^9, 
   3.6095634811589317`*^9}, {3.609563686500836*^9, 3.609563750594817*^9}, {
   3.6095639812970867`*^9, 3.609563983279386*^9}, {3.609571618557543*^9, 
   3.609571621059228*^9}, {3.609571657786426*^9, 3.609571658945373*^9}, {
   3.609572401610347*^9, 3.6095724150046577`*^9}, 3.609572487742721*^9, {
   3.610590131303626*^9, 3.610590191700941*^9}, {3.610590299506352*^9, 
   3.610590300445772*^9}, {3.618351924801746*^9, 3.61835192592197*^9}, 
   3.618352049527074*^9, {3.6183520828960457`*^9, 3.618352113085535*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Light curve time derivative", "Subsection",
 InitializationGroup->True,
 CellChangeTimes->{{3.607754326028933*^9, 3.607754329898782*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"j\[Tau]", "[", 
    RowBox[{
    "burst", ",", "z_", ",", "\[Chi]_", ",", "\[Tau]_", ",", "\[Theta]_", ",",
      "\[Phi]_"}], "]"}], ":=", "\[IndentingNewLine]", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"\[Tau]", "\[Equal]", "\[Infinity]"}], ",", 
     "\[IndentingNewLine]", "0", ",", "\[IndentingNewLine]", 
     RowBox[{"Re", "[", 
      FractionBox[
       SuperscriptBox["\[Tau]", "2"], 
       RowBox[{"1", "+", 
        SuperscriptBox[
         RowBox[{"(", 
          FractionBox[
           RowBox[{"2", "\[Tau]"}], 
           RowBox[{"r0", " ", 
            RowBox[{"(", 
             RowBox[{"1", "+", "z"}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "2"}], "+", 
              FractionBox["2", 
               RowBox[{"v", "[", "\[Gamma]", "]"}]], "+", 
              SuperscriptBox["\[Theta]", "2"], "+", 
              SuperscriptBox["\[Chi]", "2"], "-", 
              RowBox[{"2", " ", "\[Theta]", " ", "\[Chi]", " ", 
               RowBox[{"Cos", "[", "\[Phi]", "]"}]}]}], ")"}]}]], ")"}], 
         "n"]}]], "]"}]}], "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 InitializationGroup->True,
 CellChangeTimes->{{3.590028599043091*^9, 3.5900287132878847`*^9}, {
  3.591866391902088*^9, 3.591866402347027*^9}, {3.606455087086586*^9, 
  3.606455089382328*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"p\[Tau]", "[", 
   RowBox[{"universe_", ",", "burst", ",", "observer", ",", 
    RowBox[{"{", 
     RowBox[{"\[Theta]_", ",", "\[Phi]_"}], "}"}], ",", "\[Tau]_", ",", 
    RowBox[{"{", 
     RowBox[{"\[Omega]1_", ",", "\[Omega]2_"}], "}"}]}], "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", "burstValues", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"Re", "[", 
     RowBox[{
      FractionBox["detectorArea", 
       RowBox[{"photonSphereArea", "[", 
        RowBox[{"universe", ",", "z"}], "]"}]], 
      FractionBox["\[Eta]0", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"v", "[", "\[Gamma]", "]"}], "\[Gamma]", 
          RowBox[{"(", 
           RowBox[{"1", "+", "z"}], ")"}]}], ")"}], 
        RowBox[{"2", "-", "\[Alpha]"}]]], 
      FractionBox["1", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          FractionBox["1", 
           RowBox[{"v", "[", "\[Gamma]", "]"}]], "-", "1", "+", 
          FractionBox[
           SuperscriptBox["\[Theta]", "2"], "2"], "+", 
          FractionBox[
           SuperscriptBox["\[Chi]", "2"], "2"], "-", 
          RowBox[{"\[Theta]", " ", "\[Chi]", " ", 
           RowBox[{"Cos", "[", "\[Phi]", "]"}]}]}], ")"}], 
        RowBox[{"5", "-", "\[Alpha]"}]]], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"i", "[", 
         RowBox[{
         "burstValues", ",", "z", ",", "\[Chi]", ",", "\[Omega]2", ",", 
          "\[Theta]", ",", "\[Phi]"}], "]"}], "-", 
        RowBox[{"i", "[", 
         RowBox[{
         "burstValues", ",", "z", ",", "\[Chi]", ",", "\[Omega]1", ",", 
          "\[Theta]", ",", "\[Phi]"}], "]"}]}], ")"}], 
      RowBox[{"j\[Tau]", "[", 
       RowBox[{
       "burstValues", ",", "z", ",", "\[Chi]", ",", "\[Tau]", ",", "\[Theta]",
         ",", "\[Phi]"}], "]"}]}], "]"}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 InitializationGroup->True,
 CellChangeTimes->{{3.606872718144367*^9, 3.606872765882361*^9}, {
  3.606872814970764*^9, 3.606872822377987*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"p\[Tau]", "[", 
   RowBox[{"universe_", ",", "burst", ",", 
    RowBox[{"{", 
     RowBox[{"detectorArea_", ",", "z_", ",", 
      RowBox[{"\[Chi]_", "?", "NumericQ"}]}], "}"}], ",", "\[Tau]_", ",", 
    RowBox[{"{", 
     RowBox[{"\[Omega]1_", ",", "\[Omega]2_"}], "}"}]}], "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"burstValues", ",", "\[Theta]Points", ",", "result"}], "}"}], 
    ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"burstValues", "=", 
      RowBox[{"{", 
       RowBox[{
       "\[Gamma]", ",", "\[Eta]0", ",", "r0", ",", "n", ",", "\[Omega]0", ",",
         "\[Theta]0", ",", "k", ",", "\[Alpha]"}], "}"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"\[Theta]Points", "=", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\[Theta]", ",", "0"}], "}"}], "~", "Join", "~", 
       RowBox[{"Sort", "[", 
        RowBox[{"Select", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[Theta]0", "/", "10."}], ",", "\[Theta]0", ",", 
            RowBox[{"10.", "\[Theta]0"}], ",", 
            RowBox[{"100.", "\[Theta]0"}], ",", 
            RowBox[{"1.", "/", "\[Gamma]"}], ",", 
            RowBox[{"10.", "/", "\[Gamma]"}], ",", 
            RowBox[{"100.", "/", "\[Gamma]"}], ",", 
            RowBox[{"\[Chi]", "-", 
             RowBox[{"1.", "/", "\[Gamma]"}]}], ",", 
            RowBox[{"\[Chi]", "-", 
             RowBox[{"10.", "/", "\[Gamma]"}]}], ",", 
            RowBox[{"\[Chi]", "-", 
             RowBox[{"100.", "/", "\[Gamma]"}]}], ",", 
            RowBox[{"\[Chi]", "+", 
             RowBox[{"1.", "/", "\[Gamma]"}]}], ",", 
            RowBox[{"\[Chi]", "+", 
             RowBox[{"10.", "/", "\[Gamma]"}]}], ",", 
            RowBox[{"\[Chi]", "+", 
             RowBox[{"100.", "/", "\[Gamma]"}]}]}], "}"}], ",", 
          RowBox[{
           RowBox[{"#", ">", "0"}], "&"}]}], "]"}], "]"}], "~", "Join", "~", 
       RowBox[{"{", "\[Infinity]", "}"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"result", "=", 
      RowBox[{"NIntegrate", "[", 
       RowBox[{
        RowBox[{"2", "\[Theta]", " ", 
         RowBox[{"p\[Tau]", "[", 
          RowBox[{"universe", ",", "burstValues", ",", 
           RowBox[{"{", 
            RowBox[{"detectorArea", ",", "z", ",", "\[Chi]"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\[Theta]", ",", "\[Phi]"}], "}"}], ",", "\[Tau]", ",", 
           RowBox[{"{", 
            RowBox[{"\[Omega]1", ",", "\[Omega]2"}], "}"}]}], "]"}]}], ",", 
        RowBox[{"Evaluate", "@", "\[Theta]Points"}], ",", 
        RowBox[{"{", 
         RowBox[{"\[Phi]", ",", "0", ",", "\[Pi]"}], "}"}], ",", 
        RowBox[{"MinRecursion", "\[Rule]", "3"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"result", ">", "0"}], ",", "result", ",", 
       RowBox[{"Abort", "[", "]"}]}], "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.609571631475333*^9, 3.6095716637080317`*^9}, {
  3.609572435618432*^9, 3.609572444394807*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Duration", "Subsection",
 InitializationGroup->True,
 CellChangeTimes->{{3.590061518520788*^9, 3.590061520245708*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "duration", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{"part", "\[Rule]", "0.99"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"duration", "[", 
    RowBox[{"universe_", ",", "burst", ",", "observer", ",", 
     RowBox[{"{", 
      RowBox[{"\[Omega]1_", ",", "\[Omega]2_"}], "}"}], ",", 
     RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "burstValues", ",", "observerValues", ",", "p\[Infinity]", ",", 
       "precision", ",", "pi"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"burstValues", "=", 
       RowBox[{"{", 
        RowBox[{
        "\[Gamma]", ",", "\[Eta]0", ",", "r0", ",", "n", ",", "\[Omega]0", 
         ",", "\[Theta]0", ",", "k", ",", "\[Alpha]"}], "}"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"observerValues", "=", 
       RowBox[{"{", 
        RowBox[{"detectorArea", ",", "z", ",", "\[Chi]"}], "}"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"p\[Infinity]", "=", 
       RowBox[{"p", "[", 
        RowBox[{"universe", ",", "burstValues", ",", "observerValues", ",", 
         RowBox[{"{", 
          RowBox[{"0.", ",", "\[Infinity]"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"\[Omega]1", ",", "\[Omega]2"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"pi", "[", 
        RowBox[{"\[Tau]_", "?", "NumericQ"}], "]"}], ":=", 
       RowBox[{"p", "[", 
        RowBox[{"universe", ",", "burstValues", ",", "observerValues", ",", 
         RowBox[{"{", 
          RowBox[{"0.", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"\[Omega]1", ",", "\[Omega]2"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"\[Tau]", "/.", 
       RowBox[{"findRoot", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"pi", "[", "\[Tau]", "]"}], "-", 
          RowBox[{
           RowBox[{"OptionValue", "[", "part", "]"}], "p\[Infinity]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"\[Tau]", ",", 
           RowBox[{
            FractionBox["r0", 
             SuperscriptBox["\[Gamma]", "2"]], 
            RowBox[{"(", 
             RowBox[{"1.", "+", "z"}], ")"}]}]}], "}"}]}], "]"}]}]}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]}], "Input",
 InitializationGroup->True,
 CellChangeTimes->{{3.5903178050646343`*^9, 3.590317829891816*^9}, {
   3.590325149911132*^9, 3.5903252239269533`*^9}, {3.590325262389987*^9, 
   3.5903252825737123`*^9}, {3.59032532930599*^9, 3.590325335424121*^9}, {
   3.590325462525869*^9, 3.590325478694022*^9}, {3.590325518676382*^9, 
   3.590325519188765*^9}, {3.590361415786047*^9, 3.590361488999978*^9}, 
   3.590365687436039*^9, {3.590373135594748*^9, 3.590373148844438*^9}, 
   3.5903762546660767`*^9, {3.590376451567272*^9, 3.59037645210378*^9}, {
   3.59037673199723*^9, 3.590376732180722*^9}, 3.590377306536478*^9, {
   3.590377574242556*^9, 3.59037759171872*^9}, {3.5903779197300177`*^9, 
   3.5903779352168922`*^9}, {3.590657083045203*^9, 3.590657088028907*^9}, {
   3.590657227680119*^9, 3.590657311788023*^9}, {3.591859728415344*^9, 
   3.591859736190181*^9}, {3.592131053761468*^9, 3.592131054093618*^9}, {
   3.606445448338492*^9, 3.606445475071904*^9}, {3.606872396132824*^9, 
   3.606872401165753*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Stretching factor", "Subsection",
 InitializationGroup->True,
 CellChangeTimes->{{3.590042619518958*^9, 3.590042624004355*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "\[Kappa]", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"pointCount", "\[Rule]", "20"}], ",", 
     RowBox[{"accurateQ", "\[Rule]", "True"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Kappa]", "[", 
    RowBox[{"universe_", ",", "burst_", ",", "observer_", ",", 
     RowBox[{"{", 
      RowBox[{"\[Omega]1_", ",", "\[Omega]2_", ",", "\[Omega]3_"}], "}"}], 
     ",", 
     RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "p12\[Infinity]", ",", "p23\[Infinity]", ",", "diff", ",", "diff\[Tau]",
        ",", "\[Tau]middle", ",", "\[Tau]end", ",", "diffDifference", ",", 
       "n", ",", "accQ"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"p12\[Infinity]", "=", 
       RowBox[{"p", "[", 
        RowBox[{"universe", ",", "burst", ",", "observer", ",", 
         RowBox[{"{", 
          RowBox[{"0.", ",", "\[Infinity]"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"\[Omega]1", ",", "\[Omega]2"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"p23\[Infinity]", "=", 
       RowBox[{"p", "[", 
        RowBox[{"universe", ",", "burst", ",", "observer", ",", 
         RowBox[{"{", 
          RowBox[{"0.", ",", "\[Infinity]"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"\[Omega]2", ",", "\[Omega]3"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"diff", "[", 
        RowBox[{
         RowBox[{"\[Tau]_", "?", "NumericQ"}], ",", 
         RowBox[{"\[Kappa]_", "?", "NumericQ"}]}], "]"}], ":=", 
       RowBox[{
        FractionBox[
         RowBox[{"p", "[", 
          RowBox[{"universe", ",", "burst", ",", "observer", ",", 
           RowBox[{"{", 
            RowBox[{"0.", ",", "\[Tau]"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\[Omega]1", ",", "\[Omega]2"}], "}"}]}], "]"}], 
         "p12\[Infinity]"], "-", 
        FractionBox[
         RowBox[{"p", "[", 
          RowBox[{"universe", ",", "burst", ",", "observer", ",", 
           RowBox[{"{", 
            RowBox[{"0.", ",", 
             RowBox[{"\[Kappa]", " ", "\[Tau]"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\[Omega]2", ",", "\[Omega]3"}], "}"}]}], "]"}], 
         "p23\[Infinity]"]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"diff\[Tau]", "[", 
        RowBox[{
         RowBox[{"\[Tau]_", "?", "NumericQ"}], ",", 
         RowBox[{"\[Kappa]_", "?", "NumericQ"}]}], "]"}], ":=", 
       RowBox[{
        FractionBox[
         RowBox[{"p\[Tau]", "[", 
          RowBox[{
          "universe", ",", "burst", ",", "observer", ",", "\[Tau]", ",", 
           RowBox[{"{", 
            RowBox[{"\[Omega]1", ",", "\[Omega]2"}], "}"}]}], "]"}], 
         "p12\[Infinity]"], "-", 
        RowBox[{"\[Kappa]", 
         FractionBox[
          RowBox[{"p\[Tau]", "[", 
           RowBox[{"universe", ",", "burst", ",", "observer", ",", 
            RowBox[{"\[Kappa]", " ", "\[Tau]"}], ",", 
            RowBox[{"{", 
             RowBox[{"\[Omega]2", ",", "\[Omega]3"}], "}"}]}], "]"}], 
          "p23\[Infinity]"]}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"accQ", "=", 
       RowBox[{"OptionValue", "[", "accurateQ", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"n", "=", 
       RowBox[{"OptionValue", "[", "pointCount", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"TrueQ", "[", "accQ", "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"\[Tau]end", "=", 
          RowBox[{"duration", "[", 
           RowBox[{"universe", ",", "burst", ",", "observer", ",", 
            RowBox[{"{", 
             RowBox[{"\[Omega]1", ",", "\[Omega]3"}], "}"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"diffDifference", "[", 
           RowBox[{"\[Kappa]_", "?", "NumericQ"}], "]"}], ":=", 
          RowBox[{"Block", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
             "it", ",", "diff\[Tau]Values", ",", "maxDifference", ",", 
              "minDifference", ",", "currentDifference"}], "}"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"diff\[Tau]Values", "=", 
              RowBox[{"Table", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"\[Tau]", ",", 
                  RowBox[{"diff\[Tau]", "[", 
                   RowBox[{"\[Tau]", ",", "\[Kappa]"}], "]"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"\[Tau]", ",", 
                  FractionBox["\[Tau]end", "n"], ",", "\[Tau]end", ",", 
                  FractionBox["\[Tau]end", "n"]}], "}"}]}], "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"maxDifference", "=", "0."}], ";", "\[IndentingNewLine]", 
             RowBox[{"minDifference", "=", "0."}], ";", "\[IndentingNewLine]", 
             RowBox[{"For", "[", 
              RowBox[{
               RowBox[{"it", "=", "1"}], ",", 
               RowBox[{"it", "<", 
                RowBox[{"Length", "[", "diff\[Tau]Values", "]"}]}], ",", 
               RowBox[{"it", "++"}], ",", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Sign", "[", 
                    RowBox[{"diff\[Tau]Values", "\[LeftDoubleBracket]", 
                    RowBox[{"it", ",", "2"}], "\[RightDoubleBracket]"}], 
                    "]"}], "\[NotEqual]", 
                   RowBox[{"Sign", "[", 
                    RowBox[{"diff\[Tau]Values", "\[LeftDoubleBracket]", 
                    RowBox[{
                    RowBox[{"it", "+", "1"}], ",", "2"}], 
                    "\[RightDoubleBracket]"}], "]"}]}], ",", 
                  "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{"currentDifference", "=", 
                    RowBox[{"diff", "[", 
                    RowBox[{
                    RowBox[{"\[Tau]", "/.", 
                    RowBox[{"FindRoot", "[", 
                    RowBox[{
                    RowBox[{"diff\[Tau]", "[", 
                    RowBox[{"\[Tau]", ",", "\[Kappa]"}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\[Tau]", ",", 
                    RowBox[{"diff\[Tau]Values", "\[LeftDoubleBracket]", 
                    RowBox[{"it", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
                    
                    RowBox[{"diff\[Tau]Values", "\[LeftDoubleBracket]", 
                    RowBox[{
                    RowBox[{"it", "+", "1"}], ",", "1"}], 
                    "\[RightDoubleBracket]"}]}], "}"}]}], "]"}]}], ",", 
                    "\[Kappa]"}], "]"}]}], ";", "\[IndentingNewLine]", 
                   RowBox[{"maxDifference", "=", 
                    RowBox[{"Max", "[", 
                    RowBox[{"maxDifference", ",", "currentDifference"}], 
                    "]"}]}], ";", "\[IndentingNewLine]", 
                   RowBox[{"minDifference", "=", 
                    RowBox[{"Min", "[", 
                    RowBox[{"minDifference", ",", "currentDifference"}], 
                    "]"}]}], ";"}]}], "\[IndentingNewLine]", "]"}], ";"}]}], 
              "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
             RowBox[{"maxDifference", "+", "minDifference"}]}]}], 
           "\[IndentingNewLine]", "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"\[Kappa]i", "/.", 
          RowBox[{"findRoot", "[", 
           RowBox[{
            RowBox[{"-", 
             RowBox[{"diffDifference", "[", "\[Kappa]i", "]"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"\[Kappa]i", ",", "1."}], "}"}]}], "]"}]}]}], 
        "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"\[Tau]middle", "=", 
          RowBox[{"duration", "[", 
           RowBox[{"universe", ",", "burst", ",", "observer", ",", 
            RowBox[{"{", 
             RowBox[{"\[Omega]1", ",", "\[Omega]3"}], "}"}], ",", 
            RowBox[{"part", "\[Rule]", "0.5"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"\[Kappa]i", "/.", 
          RowBox[{"findRoot", "[", 
           RowBox[{
            RowBox[{"-", 
             RowBox[{"diff", "[", 
              RowBox[{"\[Tau]middle", ",", "\[Kappa]i"}], "]"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"\[Kappa]i", ",", "1."}], "}"}]}], "]"}]}]}]}], 
       "\[IndentingNewLine]", "]"}]}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}]}], "Input",
 InitializationGroup->True,
 CellChangeTimes->{{3.5903265796208687`*^9, 3.590326833677573*^9}, {
   3.5903269327331257`*^9, 3.5903269503094893`*^9}, {3.590326987903431*^9, 
   3.5903271369707203`*^9}, {3.590327176239778*^9, 3.590327185314533*^9}, {
   3.5903272680607367`*^9, 3.590327271219748*^9}, {3.590327312586216*^9, 
   3.590327315351831*^9}, {3.590327388496572*^9, 3.590327480915551*^9}, {
   3.59032751419615*^9, 3.5903275248632917`*^9}, {3.590327561137848*^9, 
   3.590327564923519*^9}, {3.590327640238681*^9, 3.590327677067874*^9}, {
   3.590327813182415*^9, 3.590327828205284*^9}, {3.590328354366934*^9, 
   3.590328555755969*^9}, {3.5903286431336727`*^9, 3.590328659784225*^9}, 
   3.59032872295754*^9, {3.590329189043144*^9, 3.590329189722125*^9}, {
   3.5903650237753553`*^9, 3.5903651970818777`*^9}, {3.590365259406893*^9, 
   3.590365267195998*^9}, {3.5903654226609497`*^9, 3.590365456892521*^9}, {
   3.590365501664783*^9, 3.590365503984386*^9}, {3.590365568175743*^9, 
   3.590365573478949*^9}, {3.590365618227973*^9, 3.590365621461379*^9}, {
   3.5903657229232492`*^9, 3.59036572479393*^9}, {3.59036577981052*^9, 
   3.590365782180976*^9}, {3.5903659951005793`*^9, 3.590366003108227*^9}, {
   3.590366051467641*^9, 3.590366283475524*^9}, {3.590366406272266*^9, 
   3.5903664222486973`*^9}, {3.590366532280233*^9, 3.590366560568139*^9}, 
   3.590366612775997*^9, {3.5903666531368933`*^9, 3.5903666533696127`*^9}, {
   3.5903704326686993`*^9, 3.590370533346634*^9}, {3.5903705920432377`*^9, 
   3.590370715562079*^9}, {3.590370746441658*^9, 3.590371170661167*^9}, 
   3.590371248583733*^9, {3.590371412755732*^9, 3.590371549940089*^9}, {
   3.590371605026496*^9, 3.590371622782262*^9}, {3.590371724324032*^9, 
   3.590371738661891*^9}, {3.590372125774158*^9, 3.5903721789825907`*^9}, {
   3.590372659458366*^9, 3.590372660732067*^9}, {3.590372841198977*^9, 
   3.590372848830831*^9}, {3.590372949274189*^9, 3.590372954958375*^9}, {
   3.5903730718440933`*^9, 3.590373074450584*^9}, {3.590373162138679*^9, 
   3.590373164754616*^9}, {3.5903732574823713`*^9, 3.590373257613722*^9}, {
   3.590373332784211*^9, 3.5903733329269667`*^9}, {3.59037341674111*^9, 
   3.5903734194048243`*^9}, {3.590375379521632*^9, 3.590375382490905*^9}, {
   3.590375428952099*^9, 3.5903755736247063`*^9}, {3.590375724661763*^9, 
   3.590375782583375*^9}, {3.5903759191691513`*^9, 3.590375927059924*^9}, {
   3.5903760199509783`*^9, 3.590376024215468*^9}, {3.5903762774287863`*^9, 
   3.590376313791407*^9}, {3.590376464702487*^9, 3.590376489807502*^9}, {
   3.5903767460743427`*^9, 3.590376773731325*^9}, {3.590377131337274*^9, 
   3.59037721201258*^9}, {3.590377415812442*^9, 3.5903774737943296`*^9}, {
   3.590377527059918*^9, 3.590377533724476*^9}, {3.5903776145091867`*^9, 
   3.590377672534587*^9}, {3.5903778454072237`*^9, 3.590377882622674*^9}, {
   3.590381758973577*^9, 3.590381812886834*^9}, {3.5903873864196987`*^9, 
   3.590387458002425*^9}, {3.590387510659731*^9, 3.590387543611752*^9}, {
   3.59038758612471*^9, 3.590387621217507*^9}, {3.590388552680749*^9, 
   3.5903885528275633`*^9}, {3.59065748233827*^9, 3.590657557181745*^9}, {
   3.590657618614839*^9, 3.590657683718027*^9}, {3.590716042223925*^9, 
   3.59071604340497*^9}, {3.5907163929288683`*^9, 3.590716396686603*^9}, {
   3.590716711520685*^9, 3.590716712288282*^9}, {3.591859766023552*^9, 
   3.591859821493609*^9}, {3.59213105995527*^9, 3.592131060311899*^9}, {
   3.5939055257237873`*^9, 3.593905551360847*^9}, {3.606437972654207*^9, 
   3.606437973245549*^9}, {3.6064380872801723`*^9, 3.6064380874078217`*^9}, {
   3.6064385906674147`*^9, 3.606438592847204*^9}, {3.606439596575625*^9, 
   3.606439614796866*^9}, {3.606439755019751*^9, 3.606439755171906*^9}, {
   3.606445554997858*^9, 3.606445555170183*^9}, {3.606445600714435*^9, 
   3.606445600898086*^9}, {3.6064456329461813`*^9, 3.606445633113682*^9}, {
   3.606445677209525*^9, 3.6064457057853327`*^9}, {3.6064503455284863`*^9, 
   3.606450347101955*^9}, {3.60645046983005*^9, 3.6064504703757257`*^9}, {
   3.606450576569796*^9, 3.60645061578759*^9}, 3.606450671391876*^9, {
   3.606450776792655*^9, 3.606450796675383*^9}, {3.607503550920438*^9, 
   3.607503569452129*^9}, {3.607504657940392*^9, 3.607504666351533*^9}, {
   3.607504813869372*^9, 3.607504814972559*^9}, {3.6075048481988373`*^9, 
   3.607504888113874*^9}, {3.6075049256864347`*^9, 3.607505050051395*^9}, {
   3.607505186140037*^9, 3.607505235569965*^9}, {3.607505487509815*^9, 
   3.6075054976927423`*^9}, {3.6075055474912863`*^9, 3.607505553546584*^9}, {
   3.607506506506734*^9, 3.60750651425399*^9}, {3.607506867346436*^9, 
   3.6075070816969843`*^9}, {3.607507140475012*^9, 3.607507165457365*^9}, {
   3.607507263179788*^9, 3.6075072841504593`*^9}, {3.607507438883451*^9, 
   3.607507621265781*^9}, {3.607507657314548*^9, 3.607507840454307*^9}, {
   3.60750803603577*^9, 3.607508058155015*^9}, {3.607508115556563*^9, 
   3.6075081261505737`*^9}, {3.607508265361066*^9, 3.6075082696406603`*^9}, {
   3.607508456756721*^9, 3.607508461893629*^9}, {3.6075085464181232`*^9, 
   3.6075085542808247`*^9}, {3.6075087633462677`*^9, 
   3.6075087687691917`*^9}, {3.6075088886118*^9, 3.607508893038492*^9}, {
   3.607509101086595*^9, 3.607509101782463*^9}, 3.607509309556765*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"SetSharedFunction", "[", "\[Kappa]StoredValues", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "\[Kappa]Cache", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"pointCount", "\[Rule]", "20"}], ",", 
     RowBox[{"accurateQ", "\[Rule]", "True"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Kappa]Cache", "[", 
    RowBox[{"universe_", ",", "burst_", ",", "observer_", ",", 
     RowBox[{"{", 
      RowBox[{"\[Omega]1_", ",", "\[Omega]2_", ",", "\[Omega]3_"}], "}"}], 
     ",", 
     RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"Not", "[", 
         RowBox[{"NumberQ", "[", 
          RowBox[{"\[Kappa]StoredValues", "[", 
           RowBox[{"universe", ",", "burst", ",", "observer", ",", 
            RowBox[{"{", 
             RowBox[{"\[Omega]1", ",", "\[Omega]2", ",", "\[Omega]3"}], "}"}],
             ",", 
            RowBox[{"OptionValue", "[", "pointCount", "]"}], ",", 
            RowBox[{"OptionValue", "[", "accurateQ", "]"}]}], "]"}], "]"}], 
         "]"}], ",", 
        RowBox[{
         RowBox[{"\[Kappa]StoredValues", "[", 
          RowBox[{"universe", ",", "burst", ",", "observer", ",", 
           RowBox[{"{", 
            RowBox[{"\[Omega]1", ",", "\[Omega]2", ",", "\[Omega]3"}], "}"}], 
           ",", 
           RowBox[{"OptionValue", "[", "pointCount", "]"}], ",", 
           RowBox[{"OptionValue", "[", "accurateQ", "]"}]}], "]"}], "=", 
         RowBox[{"\[Kappa]", "[", 
          RowBox[{"universe", ",", "burst", ",", "observer", ",", 
           RowBox[{"{", 
            RowBox[{"\[Omega]1", ",", "\[Omega]2", ",", "\[Omega]3"}], "}"}], 
           ",", 
           RowBox[{"pointCount", "\[Rule]", 
            RowBox[{"OptionValue", "[", "pointCount", "]"}]}], ",", 
           RowBox[{"accurateQ", "\[Rule]", 
            RowBox[{"OptionValue", "[", "accurateQ", "]"}]}]}], "]"}]}]}], 
       "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"\[Kappa]StoredValues", "[", 
       RowBox[{"universe", ",", "burst", ",", "observer", ",", 
        RowBox[{"{", 
         RowBox[{"\[Omega]1", ",", "\[Omega]2", ",", "\[Omega]3"}], "}"}], 
        ",", 
        RowBox[{"OptionValue", "[", "pointCount", "]"}], ",", 
        RowBox[{"OptionValue", "[", "accurateQ", "]"}]}], "]"}]}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]}], "Input",
 InitializationGroup->True,
 CellChangeTimes->{{3.592528888258531*^9, 3.592528925623564*^9}, {
   3.592528988974207*^9, 3.5925290002608213`*^9}, {3.592529049108858*^9, 
   3.592529120243537*^9}, {3.5925291986387*^9, 3.592529265749548*^9}, {
   3.592529563339875*^9, 3.592529584373616*^9}, {3.593873234597978*^9, 
   3.593873237272119*^9}, {3.593905698912496*^9, 3.593905700841269*^9}, 
   3.6075135646626997`*^9, {3.607513598571061*^9, 3.607513615666121*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"\[Kappa]Save", "[", "]"}], ":=", 
   RowBox[{"DumpSave", "[", 
    RowBox[{"\"\<kappa.mx\>\"", ",", "\[Kappa]StoredValues"}], "]"}]}], 
  ";"}]], "Input",
 InitializationGroup->True,
 CellChangeTimes->{{3.592529329018914*^9, 3.592529388830374*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"\[Kappa]Load", "[", "]"}], ":=", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"FileExistsQ", "[", "\"\<kappa.mx\>\"", "]"}], ",", 
     RowBox[{"<<", "\"\<kappa.mx\>\""}]}], "]"}]}], ";"}]], "Input",
 InitializationGroup->True,
 CellChangeTimes->{{3.5925294093082523`*^9, 3.592529422202147*^9}, {
  3.592529859852643*^9, 3.592529879288867*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Total Energy", "Subsection",
 InitializationGroup->True,
 CellChangeTimes->{{3.591179569287243*^9, 3.5911795710461187`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"energy", "[", 
    RowBox[{"burst", ",", "\[Omega]1_"}], "]"}], ":=", 
   RowBox[{
    FractionBox[
     RowBox[{"16", 
      SuperscriptBox["\[Pi]", "3"]}], 
     RowBox[{"3", "n", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "2"}], "k"}], "-", "\[Alpha]", "-", "2"}], ")"}], 
      RowBox[{"Sin", "[", 
       FractionBox[
        RowBox[{"3", "\[Pi]"}], "n"], "]"}]}]], 
    SuperscriptBox["\[Gamma]", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "2"}], "k"}], "-", "\[Alpha]"}]], 
    RowBox[{"(", 
     RowBox[{"1", "-", 
      FractionBox["1", 
       RowBox[{"4", 
        SuperscriptBox["\[Gamma]", "2"]}]]}], ")"}], "\[Eta]0", " ", 
    SuperscriptBox["r0", "3"], 
    SuperscriptBox["\[Theta]0", "2"], 
    FractionBox[
     SuperscriptBox["\[Omega]0", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "2"}], "k"}], "-", "\[Alpha]"}]], 
     SuperscriptBox["\[Omega]1", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "2"}], "k"}], "-", "\[Alpha]", "-", "2"}]]]}]}], 
  ";"}]], "Input",
 InitializationGroup->True,
 CellChangeTimes->{{3.591267384750402*^9, 3.591267391974464*^9}, {
  3.591267431626403*^9, 3.5912674907454443`*^9}, {3.6093865119041452`*^9, 
  3.6093865406947403`*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Distribution of stretching factors", "Subsection",
 InitializationGroup->True,
 CellChangeTimes->{{3.592129665485837*^9, 3.592129667602376*^9}, 
   3.594161701643839*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "zmax", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{"minParticles", "\[Rule]", "10"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"zmax", "[", 
    RowBox[{
    "universe_", ",", "burst_", ",", "detectorArea_", ",", "\[Chi]_", ",", 
     RowBox[{"{", 
      RowBox[{"\[Omega]1_", ",", "\[Omega]2_"}], "}"}], ",", 
     RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"int", ",", "z1", ",", "z2"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"int", "[", 
        RowBox[{"z_", "?", "NumericQ"}], "]"}], ":=", 
       RowBox[{
        RowBox[{"p", "[", 
         RowBox[{"universe", ",", "burst", ",", 
          RowBox[{"{", 
           RowBox[{"detectorArea", ",", "z", ",", "\[Chi]"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "\[Infinity]"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"\[Omega]1", ",", "\[Omega]2"}], "}"}]}], "]"}], "-", 
        RowBox[{"OptionValue", "[", "minParticles", "]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"z1", "=", "1"}], ";", "\[IndentingNewLine]", 
      RowBox[{"While", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"int", "[", "z1", "]"}], "<", "0"}], ",", 
        RowBox[{"z1", "/=", "2."}]}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"z2", "=", "1"}], ";", "\[IndentingNewLine]", 
      RowBox[{"While", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"int", "[", "z2", "]"}], ">", "0"}], ",", 
        RowBox[{"z2", "*=", "2."}]}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"z", "/.", 
       RowBox[{"FindRoot", "[", 
        RowBox[{
         RowBox[{"int", "[", "z", "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"z", ",", "z1", ",", "z2"}], "}"}]}], "]"}]}]}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]}], "Input",
 InitializationGroup->True,
 CellChangeTimes->{{3.5921304966002817`*^9, 3.592130552109898*^9}, {
   3.592130602992848*^9, 3.592130674463716*^9}, {3.5921308289039383`*^9, 
   3.592130919923584*^9}, {3.592130993209762*^9, 3.592131036607246*^9}, {
   3.592131068302374*^9, 3.592131114338842*^9}, {3.592187459284543*^9, 
   3.592187463651868*^9}, {3.5921894029246273`*^9, 3.592189416673624*^9}, {
   3.592189472174855*^9, 3.592189474840663*^9}, {3.592189512887924*^9, 
   3.5921895587398148`*^9}, {3.5921896539432096`*^9, 3.592189655743219*^9}, {
   3.5921897207067432`*^9, 3.592189792248406*^9}, {3.592523268807684*^9, 
   3.592523277638463*^9}, 3.606815128791231*^9, {3.6068152085590754`*^9, 
   3.606815210021928*^9}, {3.606815622679956*^9, 3.6068156276949053`*^9}, {
   3.6068159049666843`*^9, 3.6068159073170843`*^9}, {3.60681623824056*^9, 
   3.6068162487898893`*^9}, {3.606816376043518*^9, 3.606816388477725*^9}, {
   3.606816544945525*^9, 3.6068165545847673`*^9}, {3.606816719311705*^9, 
   3.6068167196296587`*^9}, {3.60681723366352*^9, 3.606817240660446*^9}, {
   3.606818893631176*^9, 3.606818899873103*^9}, {3.60682613150592*^9, 
   3.60682614286456*^9}, {3.606826266444846*^9, 3.60682627088619*^9}, {
   3.6068263646979713`*^9, 3.6068263666198997`*^9}, {3.60682650735952*^9, 
   3.606826511599983*^9}, {3.606826656058393*^9, 3.606826760422106*^9}, {
   3.60682713208892*^9, 3.606827132470594*^9}, {3.606827205671575*^9, 
   3.606827217790888*^9}, {3.606827321916052*^9, 3.6068273291430264`*^9}, {
   3.6068273995988503`*^9, 3.606827409335085*^9}, {3.6068274561915903`*^9, 
   3.606827507734075*^9}, {3.606827549946529*^9, 3.606827602197398*^9}, {
   3.606827833976885*^9, 3.6068278516944113`*^9}, {3.6068282810076427`*^9, 
   3.606828325022163*^9}, {3.60682841606775*^9, 3.6068284257457943`*^9}, {
   3.606828461931662*^9, 3.606828503739636*^9}, {3.606828536192287*^9, 
   3.606828540809628*^9}, 3.606828590204176*^9, {3.6068286342582693`*^9, 
   3.606828746462647*^9}, {3.6068288348045177`*^9, 3.606828848091008*^9}, {
   3.606828908429923*^9, 3.606828946154499*^9}, {3.606828981149033*^9, 
   3.606829034075048*^9}, {3.606829094702834*^9, 3.6068293391323338`*^9}, {
   3.606829376436284*^9, 3.606829538750834*^9}, {3.6068295839424667`*^9, 
   3.606829631900313*^9}, {3.606829681665605*^9, 3.606829686025303*^9}, {
   3.606829716822998*^9, 3.6068298313245*^9}, {3.606829862654848*^9, 
   3.6068299178258667`*^9}, {3.6068299572074423`*^9, 3.606829976555254*^9}, {
   3.606830024955415*^9, 3.606830029496543*^9}, {3.606830131253484*^9, 
   3.6068301423308783`*^9}, {3.606864873824407*^9, 3.6068648741748037`*^9}, {
   3.606865645126073*^9, 3.60686566135109*^9}, {3.606865703967572*^9, 
   3.60686570666934*^9}, 3.6068657381610203`*^9, {3.606865839391551*^9, 
   3.606865882471078*^9}, {3.60686592805552*^9, 3.606865970413701*^9}, {
   3.6068662181763897`*^9, 3.606866229749421*^9}, {3.6068665067745743`*^9, 
   3.6068665547421913`*^9}, {3.606866684054366*^9, 3.6068666905750637`*^9}, {
   3.606867352030822*^9, 3.606867375349222*^9}, {3.606868124516469*^9, 
   3.606868169147903*^9}, {3.606871880583579*^9, 3.6068718808937473`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "\[Chi]max", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{"minParticles", "\[Rule]", "10"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Chi]max", "[", 
    RowBox[{"universe_", ",", "burst", ",", "detectorArea_", ",", "z_", ",", 
     RowBox[{"{", 
      RowBox[{"\[Omega]1_", ",", "\[Omega]2_"}], "}"}], ",", 
     RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"burstValues", ",", "int", ",", "\[Chi]0"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"burstValues", "=", 
       RowBox[{"{", 
        RowBox[{
        "\[Gamma]", ",", "\[Eta]0", ",", "r0", ",", "n", ",", "\[Omega]0", 
         ",", "\[Theta]0", ",", "k", ",", "\[Alpha]"}], "}"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"int", "[", 
        RowBox[{"\[Chi]_", "?", "NumberQ"}], "]"}], ":=", 
       RowBox[{
        RowBox[{"p", "[", 
         RowBox[{"universe", ",", "burstValues", ",", 
          RowBox[{"{", 
           RowBox[{"detectorArea", ",", "z", ",", "\[Chi]"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0.", ",", "\[Infinity]"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"\[Omega]1", ",", "\[Omega]2"}], "}"}]}], "]"}], "-", 
        RowBox[{"OptionValue", "[", "minParticles", "]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"int", "[", "0", "]"}], "<", "0"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"Return", "[", "0", "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"\[Chi]0", "=", 
          FractionBox["1", "\[Gamma]"]}], ";", "\[IndentingNewLine]", 
         RowBox[{"While", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"int", "[", "\[Chi]0", "]"}], ">", "0"}], ",", 
           RowBox[{
            RowBox[{"\[Chi]0", "*=", "2."}], ";"}]}], "]"}], ";"}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"\[Chi]", "/.", 
       RowBox[{"FindRoot", "[", 
        RowBox[{
         RowBox[{"int", "[", "\[Chi]", "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"\[Chi]", ",", "0", ",", "\[Chi]0"}], "}"}]}], "]"}]}]}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]}], "Input",
 InitializationGroup->True,
 CellChangeTimes->{{3.5921857052057743`*^9, 3.592185803579471*^9}, {
   3.59218608379284*^9, 3.592186084456647*^9}, {3.592186118768695*^9, 
   3.5921861369850273`*^9}, {3.592186279322113*^9, 3.592186283263797*^9}, {
   3.592186408819564*^9, 3.592186409833569*^9}, {3.592186514998681*^9, 
   3.5921865161561813`*^9}, {3.592186549874604*^9, 3.592186550490327*^9}, {
   3.592186845398295*^9, 3.592186871706634*^9}, {3.592186905081287*^9, 
   3.592186988885932*^9}, {3.592187058690855*^9, 3.5921870590983143`*^9}, 
   3.592189794467548*^9, {3.592523272494398*^9, 3.592523283652163*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"burstDensity", "[", 
    RowBox[{"population", ",", "z_"}], "]"}], ":=", 
   RowBox[{"density0", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", "z"}], ")"}], "index"], 
    RowBox[{"Exp", "[", 
     RowBox[{"-", 
      FractionBox["z", "zc"]}], "]"}]}]}], ";"}]], "Input",
 InitializationGroup->True,
 CellChangeTimes->{{3.5856137215181513`*^9, 3.585613732106592*^9}, {
  3.5856139108435183`*^9, 3.585613914751878*^9}, {3.585613970434301*^9, 
  3.585613975955866*^9}, {3.585614006163372*^9, 3.585614030084044*^9}, {
  3.586064013498889*^9, 3.586064020618878*^9}, {3.5860640700328197`*^9, 
  3.586064086192721*^9}, {3.5860641284860764`*^9, 3.586064134581768*^9}, {
  3.586067617826783*^9, 3.5860676238822393`*^9}, {3.586084016960991*^9, 
  3.586084058159371*^9}, {3.5860841349582148`*^9, 3.586084154055051*^9}, {
  3.592195778970891*^9, 3.59219584478927*^9}, {3.592200474175756*^9, 
  3.592200496437546*^9}, {3.592532263911756*^9, 3.592532264849284*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"phaseVolume", "[", 
    RowBox[{"universe_", ",", "population_", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"z1_", "?", "NumberQ"}], ",", 
       RowBox[{"z2_", "?", "NumberQ"}]}], "}"}]}], "]"}], ":=", 
   RowBox[{"NIntegrate", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"shellVolumePerRedshift", "[", 
       RowBox[{"universe", ",", "z"}], "]"}], 
      RowBox[{"burstDensity", "[", 
       RowBox[{"population", ",", "z"}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"z", ",", "z1", ",", "z2"}], "}"}]}], "]"}]}], ";"}]], "Input",
 InitializationGroup->True,
 CellChangeTimes->{{3.5925456326017933`*^9, 3.592545732196768*^9}, {
   3.592545783538019*^9, 3.592545786773512*^9}, {3.592546012556716*^9, 
   3.592546018044792*^9}, {3.593840399592741*^9, 3.593840416703673*^9}, {
   3.5938404598645267`*^9, 3.593840516220233*^9}, {3.593840547309245*^9, 
   3.593840557819276*^9}, {3.593840595878455*^9, 3.593840629211656*^9}, 
   3.593848457587241*^9, {3.593848504424852*^9, 3.593848527916236*^9}, {
   3.593848570125452*^9, 3.593848578108759*^9}, {3.6068654537948847`*^9, 
   3.606865477794442*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"randomRedshift", "[", 
    RowBox[{"universe_", ",", "population_", ",", 
     RowBox[{"{", 
      RowBox[{"z1_", ",", "z2_"}], "}"}]}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"total", ",", "chosenVolume"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"total", "=", 
       RowBox[{"phaseVolume", "[", 
        RowBox[{"universe", ",", "population", ",", 
         RowBox[{"{", 
          RowBox[{"z1", ",", "z2"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"chosenVolume", "=", 
       RowBox[{"RandomReal", "[", "total", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"z", "/.", 
       RowBox[{"FindRoot", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"phaseVolume", "[", 
           RowBox[{"universe", ",", "population", ",", 
            RowBox[{"{", 
             RowBox[{"z1", ",", "z"}], "}"}]}], "]"}], "-", "chosenVolume"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{"z", ",", "z1", ",", "z2"}], "}"}]}], "]"}]}]}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 InitializationGroup->True,
 CellChangeTimes->{{3.59383960775867*^9, 3.593839708028894*^9}, {
  3.593839760856065*^9, 3.59383978528448*^9}, {3.593839919312972*^9, 
  3.593839927982379*^9}, {3.5938399605789957`*^9, 3.59383998061572*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"randomAngle", "[", 
    RowBox[{"{", 
     RowBox[{"\[Chi]1_", ",", "\[Chi]2_"}], "}"}], "]"}], ":=", 
   SqrtBox[
    RowBox[{"RandomReal", "[", 
     RowBox[{"{", 
      RowBox[{
       SuperscriptBox["\[Chi]1", "2"], ",", 
       SuperscriptBox["\[Chi]2", "2"]}], "}"}], "]"}]]}], ";"}]], "Input",
 InitializationGroup->True,
 CellChangeTimes->{{3.593839870415963*^9, 3.593839884885872*^9}, {
  3.593839988050838*^9, 3.593840005353404*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"inRegionQ", "[", 
    RowBox[{"region_", ",", "point_"}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", "i", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"i", "=", "1"}], ",", 
        RowBox[{"i", "\[LessEqual]", 
         RowBox[{"Length", "[", "region", "]"}]}], ",", 
        RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"region", "[", 
               RowBox[{"[", "i", "]"}], "]"}], "[", 
              RowBox[{"[", "1", "]"}], "]"}], "\[LessEqual]", 
             RowBox[{"point", "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], "&&", 
            RowBox[{
             RowBox[{
              RowBox[{"region", "[", 
               RowBox[{"[", "i", "]"}], "]"}], "[", 
              RowBox[{"[", "2", "]"}], "]"}], "\[LessEqual]", 
             RowBox[{"point", "[", 
              RowBox[{"[", "2", "]"}], "]"}]}]}], ",", 
           RowBox[{"Return", "[", "True", "]"}]}], "]"}], ";"}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"Return", "[", "False", "]"}], ";"}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}]], "Input",
 InitializationGroup->True,
 CellChangeTimes->{{3.5940765388467484`*^9, 3.5940765483433647`*^9}, {
  3.594076622776572*^9, 3.594076714616952*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"addToRegion", "[", 
    RowBox[{"region_", ",", "point_"}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"i", ",", "j"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"i", "=", "1"}], ",", 
        RowBox[{"i", "\[LessEqual]", 
         RowBox[{"Length", "[", "region", "]"}]}], ",", 
        RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"region", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "[", 
             RowBox[{"[", "1", "]"}], "]"}], ">", 
            RowBox[{"point", "[", 
             RowBox[{"[", "1", "]"}], "]"}]}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"i", "\[Equal]", "1"}], "||", 
               RowBox[{
                RowBox[{
                 RowBox[{"region", "[", 
                  RowBox[{"[", 
                   RowBox[{"i", "-", "1"}], "]"}], "]"}], "[", 
                 RowBox[{"[", "2", "]"}], "]"}], ">", 
                RowBox[{"point", "[", 
                 RowBox[{"[", "2", "]"}], "]"}]}]}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"For", "[", 
                RowBox[{
                 RowBox[{"j", "=", "i"}], ",", 
                 RowBox[{
                  RowBox[{"j", "\[LessEqual]", 
                   RowBox[{"Length", "[", "region", "]"}]}], "&&", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"region", "[", 
                    RowBox[{"[", "j", "]"}], "]"}], "[", 
                    RowBox[{"[", "2", "]"}], "]"}], ">", 
                   RowBox[{"point", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}]}], ",", 
                 RowBox[{"j", "++"}]}], "]"}], ";", "\[IndentingNewLine]", 
               RowBox[{"Return", "[", 
                RowBox[{"Insert", "[", 
                 RowBox[{
                  RowBox[{"Drop", "[", 
                   RowBox[{"region", ",", 
                    RowBox[{"{", 
                    RowBox[{"i", ",", 
                    RowBox[{"j", "-", "1"}]}], "}"}]}], "]"}], ",", "point", 
                  ",", "i"}], "]"}], "]"}], ";"}], "\[IndentingNewLine]", ",",
               "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"Return", "[", "region", "]"}], ";"}]}], 
             "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", 
          "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"Length", "[", "region", "]"}], "\[Equal]", "0"}], "||", 
         RowBox[{
          RowBox[{
           RowBox[{"region", "[", 
            RowBox[{"[", 
             RowBox[{"Length", "[", "region", "]"}], "]"}], "]"}], "[", 
           RowBox[{"[", "2", "]"}], "]"}], ">", 
          RowBox[{"point", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}]}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Return", "[", 
          RowBox[{"Insert", "[", 
           RowBox[{"region", ",", "point", ",", 
            RowBox[{
             RowBox[{"Length", "[", "region", "]"}], "+", "1"}]}], "]"}], 
          "]"}], ";"}], "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Return", "[", "region", "]"}], ";"}]}], 
       "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}]], "Input",
 InitializationGroup->True,
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQBWIQXSGmb6hx/JVjsOIXMN2TymEGokXWTwLTSbZ1NSD6
T9cVML2ryq1OE0jPDctvANFd2RWzQHTE7BVgWq6Sbw2IXrZqxn4Qvan/4mEQ
/SDlBZjmfLD9IojW+tx3DUQ/Myi8C6LvXbO4B6JNPG0+g+hbVuvA9I/N6exa
QFp1YxIniO5P/MULonebcvKB6e1W/iDa0iwITNfdsI8G0XL3doDpvbyxKSB6
2qIEMP3u55YMED3rZkMBiL5zWbUURL+5faQRRE+4LtwOou26vTpA9LXiqb0g
mv3gPzDdwmPArA2kN4iIsYLohV8W8YPoZc9WgWkAgsCucw==
  "]],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "plotRegion", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{"axesOrigin", "\[Rule]", "Automatic"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"plotRegion", "[", 
    RowBox[{"region_", ",", "range_", ",", 
     RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", "plotPoints", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Length", "[", "region", "]"}], "\[Equal]", "0"}], ",", 
        RowBox[{"Return", "[", 
         RowBox[{"ListPlot", "[", 
          RowBox[{
           RowBox[{"{", "Missing", "}"}], ",", 
           RowBox[{"PlotRange", "\[Rule]", "range"}]}], "]"}], "]"}]}], "]"}],
       ";", "\[IndentingNewLine]", 
      RowBox[{"plotPoints", "=", 
       RowBox[{"Flatten", "[", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"region", "[", 
              RowBox[{"[", "i", "]"}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{"region", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", 
               RowBox[{
                RowBox[{"region", "[", 
                 RowBox[{"[", "i", "]"}], "]"}], "[", 
                RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", 
             RowBox[{
              RowBox[{"Length", "[", "region", "]"}], "-", "1"}]}], "}"}]}], 
          "]"}], ",", "1"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"plotPoints", ",", 
        RowBox[{"region", "[", 
         RowBox[{"[", 
          RowBox[{"Length", "[", "region", "]"}], "]"}], "]"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"plotPoints", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"range", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "[", 
           RowBox[{"[", "2", "]"}], "]"}], ",", 
          RowBox[{
           RowBox[{"region", "[", 
            RowBox[{"[", 
             RowBox[{"Length", "[", "region", "]"}], "]"}], "]"}], "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"ListPlot", "[", 
       RowBox[{"plotPoints", ",", 
        RowBox[{"PlotStyle", "\[Rule]", "LightRed"}], ",", 
        RowBox[{"Joined", "\[Rule]", "True"}], ",", 
        RowBox[{"PlotRange", "\[Rule]", "range"}], ",", 
        RowBox[{"Filling", "\[Rule]", "Top"}], ",", 
        RowBox[{"FillingStyle", "\[Rule]", "LightRed"}], ",", 
        RowBox[{"AxesOrigin", "\[Rule]", 
         RowBox[{"OptionValue", "[", "axesOrigin", "]"}]}]}], "]"}]}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]}], "Input",
 InitializationGroup->True,
 CellChangeTimes->{{3.594076740666135*^9, 3.594076753708782*^9}, {
  3.594076887144764*^9, 3.5940769296014957`*^9}, {3.594076973234046*^9, 
  3.59407713802288*^9}, {3.594077211024296*^9, 3.594077213670301*^9}, {
  3.594079066328897*^9, 3.5940791448582373`*^9}, {3.594081529151717*^9, 
  3.594081574465996*^9}, {3.594081645589141*^9, 3.594081719987425*^9}, {
  3.594081802583469*^9, 3.5940818109649057`*^9}, {3.594081844567368*^9, 
  3.594081846344102*^9}, {3.594081979894787*^9, 3.594082001094616*^9}, {
  3.594082516730349*^9, 3.594082520156005*^9}, {3.59408255227765*^9, 
  3.594082665151011*^9}, {3.5940829266367292`*^9, 3.594082939493443*^9}, {
  3.5940844131326103`*^9, 3.594084500888402*^9}, {3.594084539984497*^9, 
  3.594084551296248*^9}, {3.5940846618329763`*^9, 3.594084702122776*^9}, {
  3.594112518061047*^9, 3.594112579084134*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"burstSample", "::", "usage"}], "=", 
   "\"\<burstSample computes a sample of properties of uniformly distributed \
GRBs. Possible values for computedValues are {z, \[Chi], pTotal, pLow, pHigh, \
duration, \[Kappa]}\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "burstSample", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"randomSeed", "\[Rule]", "\"\<Gamma Rays\>\""}], ",", 
     RowBox[{"zmin", "\[Rule]", "0.1"}], ",", 
     RowBox[{"computedValues", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<z\>\"", ",", "\"\<\[Chi]\>\"", ",", "\"\<pLow\>\"", ",", 
        "\"\<pHigh\>\"", ",", "\"\<duration\>\"", ",", "\"\<\[Kappa]\>\""}], 
       "}"}]}], ",", 
     RowBox[{"minParticles", "\[Rule]", "10"}], ",", 
     RowBox[{"monitorQ", "\[Rule]", "False"}], ",", 
     RowBox[{"logQ", "\[Rule]", "False"}], ",", 
     RowBox[{"accurateQ", "\[Rule]", "True"}], ",", 
     RowBox[{"pointCount", "\[Rule]", "20"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"burstSample", "[", 
    RowBox[{
    "universe_", ",", "population_", ",", "burst_", ",", "detectorArea_", ",", 
     RowBox[{"{", 
      RowBox[{"\[Omega]1_", ",", "\[Omega]2_", ",", "\[Omega]3_"}], "}"}], 
     ",", "n_", ",", 
     RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
      "z2", ",", "\[Chi]2", ",", "it", ",", "zc", ",", "\[Chi]c", ",", 
       "pointsChosen", ",", "startedCount", ",", "completedCount", ",", 
       "result", ",", "pointResult", ",", "region", ",", "print"}], 
      "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"OptionValue", "[", "logQ", "]"}], ",", 
        RowBox[{"Print", "[", "\"\<initializing\>\"", "]"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"SeedRandom", "[", 
       RowBox[{"OptionValue", "[", "randomSeed", "]"}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"pointsChosen", "=", 
       RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"startedCount", "=", "0"}], ";", "\[IndentingNewLine]", 
      RowBox[{"completedCount", "=", "0"}], ";", "\[IndentingNewLine]", 
      RowBox[{"SetSharedVariable", "[", "completedCount", "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"SetSharedVariable", "[", "startedCount", "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"region", "=", 
       RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"it", "=", "0"}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"OptionValue", "[", "monitorQ", "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"print", "=", 
         RowBox[{"PrintTemporary", "[", 
          RowBox[{"Dynamic", "[", "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"it", "\[Equal]", "0"}], ",", "\"\<initializing\>\"", 
             ",", "\[IndentingNewLine]", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"startedCount", ">", "0"}], ",", 
               RowBox[{
                RowBox[{"ToString", "[", "completedCount", "]"}], "<>", 
                "\"\</\>\"", "<>", 
                RowBox[{"ToString", "[", "n", "]"}], "<>", 
                "\"\< bursts computed\>\""}], ",", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"ToString", "[", 
                 RowBox[{"Length", "[", "pointsChosen", "]"}], "]"}], "<>", 
                "\"\</\>\"", "<>", 
                RowBox[{"ToString", "[", "n", "]"}], "<>", 
                "\"\< bursts chosen\>\""}]}], "\[IndentingNewLine]", "]"}]}], 
            "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", "]"}], 
          "]"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"z2", "=", 
       RowBox[{"zmax", "[", 
        RowBox[{
        "universe", ",", "burst", ",", "detectorArea", ",", "0", ",", 
         RowBox[{"{", 
          RowBox[{"\[Omega]2", ",", "\[Omega]3"}], "}"}], ",", 
         RowBox[{"minParticles", "\[Rule]", 
          RowBox[{"OptionValue", "[", "minParticles", "]"}]}]}], "]"}]}], ";",
       "\[IndentingNewLine]", 
      RowBox[{"\[Chi]2", "=", 
       RowBox[{"\[Chi]max", "[", 
        RowBox[{"universe", ",", "burst", ",", "detectorArea", ",", 
         RowBox[{"OptionValue", "[", "zmin", "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"\[Omega]2", ",", "\[Omega]3"}], "}"}], ",", 
         RowBox[{"minParticles", "\[Rule]", 
          RowBox[{"OptionValue", "[", "minParticles", "]"}]}]}], "]"}]}], ";",
       "\[IndentingNewLine]", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"it", "=", "1"}], ",", 
        RowBox[{"it", "\[LessEqual]", "n"}], ",", 
        RowBox[{"it", "++"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"zc", "=", 
          RowBox[{"randomRedshift", "[", 
           RowBox[{"universe", ",", "population", ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"OptionValue", "[", "zmin", "]"}], ",", "z2"}], "}"}]}],
            "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"\[Chi]c", "=", 
          RowBox[{"randomAngle", "[", 
           RowBox[{"{", 
            RowBox[{"0", ",", "\[Chi]2"}], "}"}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"inRegionQ", "[", 
            RowBox[{"region", ",", 
             RowBox[{"{", 
              RowBox[{"zc", ",", "\[Chi]c"}], "}"}]}], "]"}], ",", 
           RowBox[{"it", "--"}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"p", "[", 
                RowBox[{"universe", ",", "burst", ",", 
                 RowBox[{"{", 
                  RowBox[{"detectorArea", ",", "zc", ",", "\[Chi]c"}], "}"}], 
                 ",", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "\[Infinity]"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"\[Omega]2", ",", "\[Omega]3"}], "}"}]}], "]"}], 
               "\[GreaterEqual]", "10."}], ",", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"AppendTo", "[", 
                RowBox[{"pointsChosen", ",", 
                 RowBox[{"{", 
                  RowBox[{"zc", ",", "\[Chi]c"}], "}"}]}], "]"}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"OptionValue", "[", "logQ", "]"}], ",", 
                 RowBox[{"Print", "[", 
                  RowBox[{
                   RowBox[{"ToString", "[", 
                    RowBox[{"Length", "[", "pointsChosen", "]"}], "]"}], 
                   "<>", "\"\</\>\"", "<>", 
                   RowBox[{"ToString", "[", "n", "]"}], "<>", 
                   "\"\< values chosen\>\""}], "]"}]}], "]"}], ";"}], 
              "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"region", "=", 
                RowBox[{"addToRegion", "[", 
                 RowBox[{"region", ",", 
                  RowBox[{"{", 
                   RowBox[{"zc", ",", "\[Chi]c"}], "}"}]}], "]"}]}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"it", "--"}], ";"}]}], "\[IndentingNewLine]", "]"}], 
            ";"}]}], "\[IndentingNewLine]", "]"}], ";"}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"\[Kappa]Load", "[", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"result", "=", 
       RowBox[{"ParallelTable", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"startedCount", "++"}], ";", "\[IndentingNewLine]", 
          RowBox[{"pointResult", "=", 
           RowBox[{"ReleaseHold", "[", 
            RowBox[{
             RowBox[{"OptionValue", "[", "computedValues", "]"}], "/.", 
             RowBox[{"{", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"\"\<z\>\"", "\[Rule]", 
                RowBox[{"Hold", "[", 
                 RowBox[{"point", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], "]"}]}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{"\"\<\[Chi]\>\"", "\[Rule]", 
                RowBox[{"Hold", "[", 
                 RowBox[{"point", "[", 
                  RowBox[{"[", "2", "]"}], "]"}], "]"}]}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{"\"\<pTotal\>\"", "\[Rule]", 
                RowBox[{"Hold", "[", 
                 RowBox[{"p", "[", 
                  RowBox[{"universe", ",", "burst", ",", 
                   RowBox[{"Flatten", "[", 
                    RowBox[{"{", 
                    RowBox[{"detectorArea", ",", "point"}], "}"}], "]"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"0", ",", "\[Infinity]"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"\[Omega]1", ",", "\[Omega]3"}], "}"}]}], "]"}], 
                 "]"}]}], ",", "\[IndentingNewLine]", 
               RowBox[{"\"\<pLow\>\"", "\[Rule]", 
                RowBox[{"Hold", "[", 
                 RowBox[{"p", "[", 
                  RowBox[{"universe", ",", "burst", ",", 
                   RowBox[{"Flatten", "[", 
                    RowBox[{"{", 
                    RowBox[{"detectorArea", ",", "point"}], "}"}], "]"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"0", ",", "\[Infinity]"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"\[Omega]1", ",", "\[Omega]2"}], "}"}]}], "]"}], 
                 "]"}]}], ",", "\[IndentingNewLine]", 
               RowBox[{"\"\<pHigh\>\"", "\[Rule]", 
                RowBox[{"Hold", "[", 
                 RowBox[{"p", "[", 
                  RowBox[{"universe", ",", "burst", ",", 
                   RowBox[{"Flatten", "[", 
                    RowBox[{"{", 
                    RowBox[{"detectorArea", ",", "point"}], "}"}], "]"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"0", ",", "\[Infinity]"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"\[Omega]2", ",", "\[Omega]3"}], "}"}]}], "]"}], 
                 "]"}]}], ",", "\[IndentingNewLine]", 
               RowBox[{"\"\<duration\>\"", "\[Rule]", 
                RowBox[{"Hold", "[", 
                 RowBox[{"duration", "[", 
                  RowBox[{"universe", ",", "burst", ",", 
                   RowBox[{"Flatten", "[", 
                    RowBox[{"{", 
                    RowBox[{"detectorArea", ",", "point"}], "}"}], "]"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"\[Omega]1", ",", "\[Omega]3"}], "}"}]}], "]"}], 
                 "]"}]}], ",", "\[IndentingNewLine]", 
               RowBox[{"\"\<\[Kappa]\>\"", "\[Rule]", 
                RowBox[{"Hold", "[", 
                 RowBox[{"\[Kappa]Cache", "[", 
                  RowBox[{"universe", ",", "burst", ",", 
                   RowBox[{"Flatten", "[", 
                    RowBox[{"{", 
                    RowBox[{"detectorArea", ",", "point"}], "}"}], "]"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"\[Omega]1", ",", "\[Omega]2", ",", "\[Omega]3"}],
                     "}"}], ",", 
                   RowBox[{"accurateQ", "\[Rule]", 
                    RowBox[{"OptionValue", "[", "accurateQ", "]"}]}], ",", 
                   RowBox[{"pointCount", "\[Rule]", 
                    RowBox[{"OptionValue", "[", "pointCount", "]"}]}]}], 
                  "]"}], "]"}]}]}], "\[IndentingNewLine]", "}"}]}], "]"}]}], 
          ";", "\[IndentingNewLine]", 
          RowBox[{"completedCount", "++"}], ";", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"OptionValue", "[", "logQ", "]"}], ",", 
            RowBox[{"Print", "[", 
             RowBox[{
              RowBox[{"ToString", "[", "completedCount", "]"}], "<>", 
              "\"\</\>\"", "<>", 
              RowBox[{"ToString", "[", "n", "]"}], "<>", 
              "\"\< bursts computed\>\""}], "]"}]}], "]"}], ";", 
          "\[IndentingNewLine]", "pointResult"}], ",", 
         RowBox[{"{", 
          RowBox[{"point", ",", "pointsChosen"}], "}"}], ",", 
         RowBox[{"Method", "\[Rule]", "\"\<FinestGrained\>\""}]}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"\[Kappa]Save", "[", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"OptionValue", "[", "monitorQ", "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"NotebookDelete", "[", "print", "]"}], ";"}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"UnsetShared", "[", "completedCount", "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"UnsetShared", "[", "startedCount", "]"}], ";", 
      "\[IndentingNewLine]", "result"}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}]}], "Input",
 InitializationGroup->True,
 CellChangeTimes->{{3.593829498556116*^9, 3.59382957225982*^9}, {
   3.5938296333935223`*^9, 3.593829650765555*^9}, {3.593829729257169*^9, 
   3.593829863830003*^9}, {3.593829948353723*^9, 3.593829985930216*^9}, {
   3.593830314555534*^9, 3.593830316568328*^9}, {3.5938303955295*^9, 
   3.593830399255043*^9}, {3.593830452558757*^9, 3.593830479748863*^9}, {
   3.5938305606191387`*^9, 3.5938305701919413`*^9}, {3.593830632818996*^9, 
   3.59383063481174*^9}, {3.593830687683269*^9, 3.593830688337278*^9}, {
   3.593840096425436*^9, 3.593840294326721*^9}, {3.593848682486663*^9, 
   3.593849078274324*^9}, {3.59384921744659*^9, 3.5938492199572487`*^9}, {
   3.593849480530299*^9, 3.5938494812775173`*^9}, {3.593849994974738*^9, 
   3.5938499988794203`*^9}, {3.593850079391433*^9, 3.5938501227850237`*^9}, {
   3.593850166907522*^9, 3.593850205496826*^9}, {3.593850267425778*^9, 
   3.59385026855984*^9}, {3.59385038777316*^9, 3.593850400141574*^9}, {
   3.593850674796912*^9, 3.5938507684263363`*^9}, {3.5938508324764757`*^9, 
   3.5938508378329277`*^9}, {3.593851094453013*^9, 3.593851163360837*^9}, {
   3.5938512097529707`*^9, 3.593851230453968*^9}, {3.593851260561194*^9, 
   3.5938513794818287`*^9}, {3.59385141893301*^9, 3.593851437851431*^9}, {
   3.593851490277545*^9, 3.593851504700981*^9}, {3.593851627426011*^9, 
   3.5938516293756237`*^9}, {3.593851667865361*^9, 3.5938517376806107`*^9}, {
   3.593851781761018*^9, 3.593851888733378*^9}, {3.593852616644332*^9, 
   3.593852617341557*^9}, {3.593852672820776*^9, 3.593852673697074*^9}, {
   3.593852708643248*^9, 3.593852820131774*^9}, {3.5938528589407587`*^9, 
   3.5938528736718283`*^9}, {3.593852903771212*^9, 3.593852906251026*^9}, {
   3.593852942052574*^9, 3.593852946865549*^9}, {3.593853026757545*^9, 
   3.59385313091962*^9}, {3.593853278451165*^9, 3.593853280586754*^9}, {
   3.593853667365419*^9, 3.593853669087388*^9}, {3.5938538857049637`*^9, 
   3.5938538873035994`*^9}, {3.593853938550721*^9, 3.593854041746407*^9}, {
   3.5938540875196657`*^9, 3.593854165869815*^9}, {3.593854195921035*^9, 
   3.5938541990335493`*^9}, {3.593854361548442*^9, 3.593854364134231*^9}, {
   3.593854408187831*^9, 3.5938544125677643`*^9}, {3.5938549516104097`*^9, 
   3.593855176998748*^9}, {3.593855275949841*^9, 3.5938556801370163`*^9}, {
   3.5938557759104443`*^9, 3.5938557792154713`*^9}, {3.593855856547268*^9, 
   3.593855863202734*^9}, {3.593855962358906*^9, 3.593855978342469*^9}, {
   3.593856142902267*^9, 3.593856168329731*^9}, {3.593856344608197*^9, 
   3.593856598244113*^9}, {3.5938567970207977`*^9, 3.593856798435618*^9}, {
   3.593857031649642*^9, 3.593857036411066*^9}, {3.593857507823163*^9, 
   3.5938576089383163`*^9}, {3.59385774283605*^9, 3.59385777425835*^9}, {
   3.593857846063458*^9, 3.593857881334984*^9}, {3.593858053047345*^9, 
   3.593858053673588*^9}, {3.593858278536469*^9, 3.593858288350581*^9}, {
   3.593858452577668*^9, 3.5938585083963346`*^9}, {3.593858854559525*^9, 
   3.5938588554624653`*^9}, {3.593859279347118*^9, 3.5938593385557127`*^9}, {
   3.5938593914195547`*^9, 3.5938594430331*^9}, {3.59385950945266*^9, 
   3.593859567259824*^9}, {3.593859602970642*^9, 3.5938596883596077`*^9}, {
   3.5938597287427473`*^9, 3.593859728986142*^9}, {3.593859766702186*^9, 
   3.593859866714752*^9}, {3.593859964886874*^9, 3.593859996293497*^9}, {
   3.593860101255541*^9, 3.59386010637991*^9}, {3.593860350639338*^9, 
   3.593860515294915*^9}, {3.593860582282308*^9, 3.593860635507045*^9}, 
   3.593860673784154*^9, 3.593860704901205*^9, {3.593860747327465*^9, 
   3.593860808162122*^9}, {3.593860846071422*^9, 3.593860848420909*^9}, {
   3.593861089471142*^9, 3.59386122742484*^9}, {3.593861367306939*^9, 
   3.593861515*^9}, {3.593861555385614*^9, 3.5938615767901173`*^9}, {
   3.593861679387744*^9, 3.5938618316938353`*^9}, {3.593861882455223*^9, 
   3.593862076897107*^9}, {3.593862112771475*^9, 3.5938621474337683`*^9}, {
   3.593862485061495*^9, 3.593862488326621*^9}, {3.59386277888704*^9, 
   3.593862783850854*^9}, {3.593869705876305*^9, 3.593869707234949*^9}, {
   3.59390536864774*^9, 3.593905371038904*^9}, {3.593905570502734*^9, 
   3.593905571028948*^9}, {3.5939057263620462`*^9, 3.5939057346045837`*^9}, {
   3.593905792263921*^9, 3.593905792800541*^9}, {3.5939070313855658`*^9, 
   3.5939070448661118`*^9}, {3.5939072078331327`*^9, 
   3.5939072088202677`*^9}, {3.59390790867693*^9, 3.593907909299418*^9}, {
   3.594080485554811*^9, 3.594080488112934*^9}, {3.5940845672121363`*^9, 
   3.5940846246693783`*^9}, {3.5940847490611277`*^9, 3.594084749770842*^9}, {
   3.604712336106201*^9, 3.6047125169729443`*^9}, {3.604712625537526*^9, 
   3.6047128833618183`*^9}, {3.604714482643263*^9, 3.604714511858768*^9}, {
   3.604717622865744*^9, 3.604717799588838*^9}, {3.6047187500966*^9, 
   3.604718752532406*^9}, {3.604982394883004*^9, 3.6049823992950172`*^9}, {
   3.606461290240944*^9, 3.606461330463808*^9}, {3.606461390191225*^9, 
   3.60646140964923*^9}, 3.6064614478805027`*^9, {3.606461536445318*^9, 
   3.6064615376592503`*^9}, {3.606461578506742*^9, 3.606461584188156*^9}, {
   3.606462410983151*^9, 3.606462426530785*^9}, {3.606704535575382*^9, 
   3.606704536174556*^9}, {3.606779427199641*^9, 3.606779451456203*^9}, {
   3.60677957695441*^9, 3.606779593345935*^9}, {3.606779657990761*^9, 
   3.6067796882598352`*^9}, {3.6067797801841908`*^9, 3.606779806824257*^9}, {
   3.60677987494427*^9, 3.606779883006649*^9}, {3.606779922062834*^9, 
   3.606779980642207*^9}, {3.606780031413405*^9, 3.606780148376567*^9}, {
   3.606780190645553*^9, 3.606780192429162*^9}, {3.606780523410804*^9, 
   3.6067805257242727`*^9}, {3.606780806970799*^9, 3.606780893262601*^9}, {
   3.606780953727921*^9, 3.606781121169072*^9}, {3.606781158065321*^9, 
   3.6067811969454403`*^9}, {3.60678124819809*^9, 3.606781248510901*^9}, {
   3.6067813983969584`*^9, 3.6067814449666367`*^9}, {3.6068141413222837`*^9, 
   3.606814170040009*^9}, {3.6068143925445843`*^9, 3.6068144291904287`*^9}, {
   3.606815069477256*^9, 3.606815080365407*^9}, {3.607151883115275*^9, 
   3.607152008873273*^9}, {3.607258731945478*^9, 3.607258919825045*^9}, {
   3.6075138295368958`*^9, 3.6075139627481403`*^9}, {3.607756320646049*^9, 
   3.607756335564898*^9}, {3.607756381982438*^9, 3.607756397690493*^9}, {
   3.6077564956353703`*^9, 3.6077564957554903`*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Very high energy bursts fraction", "Subsection",
 InitializationGroup->True,
 CellChangeTimes->{{3.594161718309668*^9, 3.5941617195413513`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "burstFraction", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{"minParticles", "\[Rule]", "10"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"burstFraction", "[", 
    RowBox[{
    "universe_", ",", "population_", ",", "burst_", ",", "detectorArea_", ",", 
     RowBox[{"{", 
      RowBox[{"\[Omega]1_", ",", "\[Omega]2_", ",", "\[Omega]3_"}], "}"}], 
     ",", 
     RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"z1", ",", "z2", ",", "int"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"z1", "=", 
       RowBox[{"zmax", "[", 
        RowBox[{
        "universe", ",", "burst", ",", "detectorArea", ",", "0", ",", 
         RowBox[{"{", 
          RowBox[{"\[Omega]1", ",", "\[Omega]3"}], "}"}], ",", 
         RowBox[{"minParticles", "\[Rule]", 
          RowBox[{"OptionValue", "[", "minParticles", "]"}]}]}], "]"}]}], ";",
       "\[IndentingNewLine]", 
      RowBox[{"z2", "=", 
       RowBox[{"zmax", "[", 
        RowBox[{
        "universe", ",", "burst", ",", "detectorArea", ",", "0", ",", 
         RowBox[{"{", 
          RowBox[{"\[Omega]2", ",", "\[Omega]3"}], "}"}], ",", 
         RowBox[{"minParticles", "\[Rule]", 
          RowBox[{"OptionValue", "[", "minParticles", "]"}]}]}], "]"}]}], ";",
       "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"int", "[", 
        RowBox[{
         RowBox[{"z_", "?", "NumberQ"}], ",", 
         RowBox[{"{", 
          RowBox[{"\[Omega]l_", ",", "\[Omega]r_"}], "}"}]}], "]"}], ":=", 
       RowBox[{
        RowBox[{"burstDensity", "[", 
         RowBox[{"population", ",", "z"}], "]"}], 
        RowBox[{"shellVolumePerRedshift", "[", 
         RowBox[{"universe", ",", "z"}], "]"}], 
        SuperscriptBox[
         RowBox[{"\[Chi]max", "[", 
          RowBox[{
          "universe", ",", "burst", ",", "detectorArea", ",", "z", ",", 
           RowBox[{"{", 
            RowBox[{"\[Omega]l", ",", "\[Omega]r"}], "}"}]}], "]"}], "2"]}]}],
       ";", "\[IndentingNewLine]", 
      FractionBox[
       RowBox[{"NIntegrate", "[", 
        RowBox[{
         RowBox[{"int", "[", 
          RowBox[{"z", ",", 
           RowBox[{"{", 
            RowBox[{"\[Omega]2", ",", "\[Omega]3"}], "}"}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"z", ",", "0", ",", "z2"}], "}"}]}], "]"}], 
       RowBox[{"NIntegrate", "[", 
        RowBox[{
         RowBox[{"int", "[", 
          RowBox[{"z", ",", 
           RowBox[{"{", 
            RowBox[{"\[Omega]1", ",", "\[Omega]3"}], "}"}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"z", ",", "0", ",", "z1"}], "}"}]}], "]"}]]}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]}], "Input",
 InitializationGroup->True,
 CellChangeTimes->{{3.594161733080324*^9, 3.5941619943200397`*^9}, {
  3.5941620342003813`*^9, 3.594162081043578*^9}, {3.5941621278489513`*^9, 
  3.594162131443465*^9}, {3.594162167336042*^9, 3.594162251879923*^9}, {
  3.594162336570313*^9, 3.594162437170651*^9}, {3.59416267147491*^9, 
  3.594162671569606*^9}, {3.5941630580726967`*^9, 3.594163081727412*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Parameter fit", "Subsection",
 InitializationGroup->True,
 CellChangeTimes->{{3.606178973702729*^9, 3.606178975788898*^9}}],

Cell[CellGroupData[{

Cell["GRB 090926A", "Subsubsection",
 InitializationGroup->True,
 CellChangeTimes->{{3.607257768944193*^9, 3.607257771183319*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[Kappa]LogTarget090926A", "=", 
  RowBox[{"Mean", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Log", "[", "1.99", "]"}], ",", 
     RowBox[{"Log", "[", "6.62", "]"}]}], "}"}], "]"}]}]], "Input",
 InitializationGroup->True,
 CellChangeTimes->{{3.606180352362957*^9, 3.606180368217112*^9}, {
  3.60626074209877*^9, 3.606260744162861*^9}, {3.606301953903648*^9, 
  3.606301955327684*^9}}],

Cell[BoxData["1.289115004342659`"], "Output",
 InitializationGroup->True,
 CellChangeTimes->{
  3.606180416297801*^9, 3.6061880497160997`*^9, 3.606260637076878*^9, {
   3.60626074456896*^9, 3.606260757722821*^9}, 3.6062613817863293`*^9, 
   3.60629787289771*^9, {3.6063019557172832`*^9, 3.606301986518484*^9}, 
   3.606451006982376*^9, 3.6064597341386433`*^9, 3.6067824425190477`*^9, 
   3.606784048728424*^9, 3.606810690892744*^9, 3.606813149691449*^9, 
   3.606813706626029*^9, 3.606864907038952*^9, 3.606871942110055*^9, 
   3.606872636458856*^9, 3.6069155057826843`*^9, 3.606979140895178*^9, 
   3.6069814795657797`*^9, 3.6069869574513273`*^9, 3.607067816610353*^9, 
   3.607150083260132*^9, 3.607151359007592*^9, 3.6072579393147583`*^9, 
   3.6073401751979437`*^9, 3.607383873849971*^9, 3.607387241891794*^9, 
   3.607471017128848*^9, 3.607514153414453*^9, 3.607514296034974*^9, 
   3.60756112561919*^9, 3.607608808759405*^9, 3.6076088527227917`*^9, 
   3.607644540850947*^9, 3.607671857108952*^9, 3.607732066755419*^9, 
   3.60774351209783*^9, 3.6077597022488327`*^9, 3.607760044421145*^9, 
   3.607849897456949*^9, 3.609385697278998*^9, 3.609398989071094*^9, 
   3.609415223429325*^9, 3.609552944183731*^9, 3.609581695770032*^9, 
   3.609584501258358*^9, 3.609629005055215*^9, 3.609640322342766*^9, 
   3.609644879896455*^9, 3.6097581100682993`*^9, 3.609903047389071*^9, 
   3.609989220486473*^9, 3.610000587721759*^9, 3.610002649891004*^9, 
   3.610584794173833*^9, 3.6107199955535*^9, 3.610722858839808*^9, 
   3.610763565321711*^9, 3.6108469811443043`*^9, 3.610847597832241*^9, 
   3.610888202877263*^9, 3.611106914707658*^9, 3.612502624604056*^9, 
   3.613212093771162*^9, 3.615290130249345*^9, 3.617601513556355*^9, 
   3.617602392495511*^9, 3.61771564225793*^9, 3.617853578970209*^9, 
   3.61826788096629*^9, 3.618351544305633*^9, 3.6183519744244967`*^9, 
   3.618353004422718*^9, 3.618438829503664*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[Kappa]LogError090926A", "=", 
  FractionBox[
   RowBox[{
    RowBox[{"Log", "[", "6.62", "]"}], "-", 
    RowBox[{"Log", "[", "1.99", "]"}]}], "2"]}]], "Input",
 InitializationGroup->True,
 CellChangeTimes->{{3.606180376141008*^9, 3.6061804075415154`*^9}, {
  3.606181238485654*^9, 3.60618123855354*^9}, {3.606260632608694*^9, 
  3.6062606330276737`*^9}, {3.6062607394834146`*^9, 3.606260749232637*^9}, {
  3.6063019575197144`*^9, 3.6063019594379997`*^9}, {3.606784049359919*^9, 
  3.606784050799662*^9}}],

Cell[BoxData["0.600980365606258`"], "Output",
 InitializationGroup->True,
 CellChangeTimes->{
  3.6061804188101387`*^9, 3.606180503558421*^9, 3.6061812389957647`*^9, 
   3.6061880497685347`*^9, {3.6062606341109657`*^9, 3.606260654859331*^9}, {
   3.6062607399019623`*^9, 3.606260758109076*^9}, 3.6062613820826683`*^9, 
   3.60629787302879*^9, {3.6063019598690567`*^9, 3.606301986932371*^9}, 
   3.606451007051566*^9, 3.606459734187868*^9, 3.606782442963893*^9, 
   3.606784051540592*^9, 3.606810691501073*^9, 3.606813149823848*^9, 
   3.606813706675551*^9, 3.606864907120152*^9, 3.606871942176117*^9, 
   3.6068726365595293`*^9, 3.606915505867221*^9, 3.6069791409701*^9, 
   3.6069814796299334`*^9, 3.606986957501967*^9, 3.607067816696703*^9, 
   3.607150083352479*^9, 3.607151359070916*^9, 3.6072579393957233`*^9, 
   3.6073401752847013`*^9, 3.607383873899127*^9, 3.6073872419726353`*^9, 
   3.6074710172164288`*^9, 3.607514153674634*^9, 3.6075142961054897`*^9, 
   3.607561125664962*^9, 3.607608808815371*^9, 3.607608852775065*^9, 
   3.607644540897785*^9, 3.607671857166246*^9, 3.60773206680579*^9, 
   3.6077435121476507`*^9, 3.6077597023665667`*^9, 3.6077600444670973`*^9, 
   3.607849897560746*^9, 3.609385697329673*^9, 3.609398989122035*^9, 
   3.609415223484714*^9, 3.609552944225087*^9, 3.609581695820207*^9, 
   3.609584501306345*^9, 3.60962900509853*^9, 3.609640322444121*^9, 
   3.609644879994669*^9, 3.609758110106*^9, 3.609903047453915*^9, 
   3.609989220532011*^9, 3.6100005877768993`*^9, 3.610002649994079*^9, 
   3.610584794207831*^9, 3.610719995608137*^9, 3.610722858924159*^9, 
   3.6107635653994226`*^9, 3.610846981213848*^9, 3.6108475979013863`*^9, 
   3.6108882029542828`*^9, 3.611106914809622*^9, 3.612502624653235*^9, 
   3.613212093829341*^9, 3.6152901304007673`*^9, 3.617601513753664*^9, 
   3.617602392558329*^9, 3.6177156423237963`*^9, 3.617853579032456*^9, 
   3.6182678810485373`*^9, 3.618351544370682*^9, 3.6183519744564953`*^9, 
   3.618353004486932*^9, 3.618438829536014*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"photonRatioLogTarget090926A", "=", 
  RowBox[{"Log", "[", "0.0570003", "]"}]}]], "Input",
 InitializationGroup->True,
 CellChangeTimes->{{3.6061809217029467`*^9, 3.606180954718638*^9}, {
   3.606181017422922*^9, 3.606181020333383*^9}, {3.6061812976806707`*^9, 
   3.606181314813086*^9}, {3.60618160742089*^9, 3.6061816158127823`*^9}, 
   3.606784059993985*^9, 3.617601433597855*^9, 3.617715575831212*^9}],

Cell[BoxData[
 RowBox[{"-", "2.8646987480035424`"}]], "Output",
 InitializationGroup->True,
 CellChangeTimes->{{3.606180947985483*^9, 3.606180975973802*^9}, 
   3.6061810209968367`*^9, 3.6061812417548027`*^9, 3.6061813543874817`*^9, {
   3.606181587018992*^9, 3.606181616386333*^9}, 3.6061880498643093`*^9, 
   3.606297873161878*^9, 3.606451007160858*^9, 3.606459734270423*^9, 
   3.6067840656517363`*^9, 3.606810695157156*^9, 3.606813150257962*^9, 
   3.6068137070412292`*^9, 3.6068649073084707`*^9, 3.6068719423739643`*^9, 
   3.606872636855194*^9, 3.6069155060534067`*^9, 3.6069791411575003`*^9, 
   3.6069814798289013`*^9, 3.606986957896832*^9, 3.607067816911079*^9, 
   3.607150083522316*^9, 3.607151359305081*^9, 3.60725793944724*^9, 
   3.607340175348632*^9, 3.607383873949205*^9, 3.6073872420245647`*^9, 
   3.607471017265929*^9, 3.607514153729521*^9, 3.6075142961689873`*^9, 
   3.6075611257142267`*^9, 3.607608808896236*^9, 3.607608852839635*^9, 
   3.607644540947682*^9, 3.607671857228724*^9, 3.607732066871545*^9, 
   3.607743512213749*^9, 3.607759702446114*^9, 3.6077600445167103`*^9, 
   3.607849897708963*^9, 3.609385697446891*^9, 3.609398989165126*^9, 
   3.60941522355273*^9, 3.6095529442750797`*^9, 3.609581695870371*^9, 
   3.6095845013571177`*^9, 3.609629005147818*^9, 3.6096403225070267`*^9, 
   3.60964488004885*^9, 3.6097581101572123`*^9, 3.609903047508329*^9, 
   3.609989220582333*^9, 3.6100005878375273`*^9, 3.610002650060519*^9, 
   3.610584794234253*^9, 3.610719995701285*^9, 3.610722858974206*^9, 
   3.610763565448584*^9, 3.610846981269308*^9, 3.610847597968759*^9, 
   3.6108882030000763`*^9, 3.6111069148657503`*^9, 3.612502624703986*^9, 
   3.613212093876215*^9, 3.615290130512012*^9, 3.6176015138103447`*^9, 
   3.6176023926427603`*^9, 3.617715576946925*^9, 3.6177156423873787`*^9, 
   3.617853579081588*^9, 3.618267881098549*^9, 3.61835154442198*^9, 
   3.618351974507378*^9, 3.618353004602619*^9, 3.618438829599365*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"totalPhotonCount090926A", "=", "179.996"}], ";"}]], "Input",
 InitializationGroup->True,
 CellChangeTimes->{{3.6069697973832073`*^9, 3.606969801750536*^9}, {
   3.606969868091188*^9, 3.60696986851854*^9}, 3.6176014540853662`*^9, 
   3.617715595214025*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"duration090926A", "=", "219.5"}], ";"}]], "Input",
 InitializationGroup->True,
 CellChangeTimes->{{3.607257807363455*^9, 3.607257811609767*^9}, {
  3.60725785703913*^9, 3.607257857403326*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["GRB 090902B", "Subsubsection",
 InitializationGroup->True,
 CellChangeTimes->{{3.606782719863573*^9, 3.6067827324717197`*^9}, {
  3.607257802010275*^9, 3.607257802841473*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[Kappa]LogTarget090902B", "=", 
  RowBox[{"Mean", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Log", "[", "0.35", "]"}], ",", 
     RowBox[{"Log", "[", "0.89", "]"}]}], "}"}], "]"}]}]], "Input",
 InitializationGroup->True,
 CellChangeTimes->{{3.606782742441513*^9, 3.606782759852291*^9}, {
  3.617715614100998*^9, 3.617715616418325*^9}}],

Cell[BoxData[
 RowBox[{"-", "0.5831779703773147`"}]], "Output",
 InitializationGroup->True,
 CellChangeTimes->{
  3.606782760450143*^9, 3.606784052702538*^9, 3.606810692364193*^9, 
   3.606813150137762*^9, 3.606813706940485*^9, 3.6068649071744623`*^9, 
   3.606871942241465*^9, 3.606872636706183*^9, 3.6069155059186687`*^9, 
   3.606979141022647*^9, 3.606981479695462*^9, 3.606986957615883*^9, 
   3.607067816770409*^9, 3.607150083403623*^9, 3.60715135914456*^9, 
   3.6072579396162148`*^9, 3.607340175707185*^9, 3.6073838741136007`*^9, 
   3.6073872424615307`*^9, 3.6074710173824387`*^9, 3.607514153839959*^9, 
   3.6075142963011723`*^9, 3.6075611258496*^9, 3.607608809075963*^9, 
   3.607608852989204*^9, 3.6076445411013737`*^9, 3.607671857409779*^9, 
   3.607732067050828*^9, 3.607743512345718*^9, 3.6077597025904083`*^9, 
   3.6077600446906548`*^9, 3.607849897871962*^9, 3.609385697662386*^9, 
   3.6093989892889967`*^9, 3.609415223733163*^9, 3.609552944390628*^9, 
   3.6095816961014833`*^9, 3.609584501467889*^9, 3.60962900531487*^9, 
   3.609640322670535*^9, 3.6096448801932077`*^9, 3.60975811030657*^9, 
   3.6099030475894337`*^9, 3.609989220698369*^9, 3.610000587998432*^9, 
   3.61000265024992*^9, 3.6105847942760887`*^9, 3.61071999609564*^9, 
   3.6107228590912333`*^9, 3.6107635655630608`*^9, 3.6108469813663*^9, 
   3.610847598103818*^9, 3.610888203203802*^9, 3.611106914982212*^9, 
   3.612502624833407*^9, 3.613212093964305*^9, 3.615290130622211*^9, 
   3.617601513916724*^9, 3.6176023929923697`*^9, {3.6177156220945463`*^9, 
   3.617715642505413*^9}, 3.617853579197564*^9, 3.618267881184021*^9, 
   3.618351544512328*^9, 3.618351974599197*^9, 3.618353004850114*^9, 
   3.618438829932413*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[Kappa]LogError090902B", "=", 
  FractionBox[
   RowBox[{
    RowBox[{"Log", "[", "0.89", "]"}], "-", 
    RowBox[{"Log", "[", "0.35", "]"}]}], "2"]}]], "Input",
 InitializationGroup->True,
 CellChangeTimes->{{3.606782762736133*^9, 3.606782776969884*^9}, {
  3.6177156270113077`*^9, 3.6177156270951357`*^9}}],

Cell[BoxData["0.4666441541213632`"], "Output",
 InitializationGroup->True,
 CellChangeTimes->{
  3.606782777317568*^9, 3.6067840534146357`*^9, 3.6068106926463823`*^9, 
   3.606813150188115*^9, 3.606813706990017*^9, 3.606864907241691*^9, 
   3.606871942307354*^9, 3.60687263680593*^9, 3.6069155059870033`*^9, 
   3.6069791410909443`*^9, 3.606981479766555*^9, 3.606986957780545*^9, 
   3.607067816830618*^9, 3.607150083454678*^9, 3.607151359239306*^9, 
   3.6072579396699467`*^9, 3.607340175785521*^9, 3.607383874166408*^9, 
   3.607387242510261*^9, 3.6074710174337597`*^9, 3.6075141538960323`*^9, 
   3.6075142963698053`*^9, 3.6075611258974247`*^9, 3.6076088091450872`*^9, 
   3.607608853043557*^9, 3.607644541145804*^9, 3.607671857476369*^9, 
   3.6077320671005917`*^9, 3.6077435124130173`*^9, 3.607759702658401*^9, 
   3.6077600447436438`*^9, 3.6078498979071817`*^9, 3.609385697708331*^9, 
   3.609398989328483*^9, 3.60941522378918*^9, 3.609552944442518*^9, 
   3.609581696154101*^9, 3.609584501521385*^9, 3.609629005362397*^9, 
   3.6096403227013273`*^9, 3.609644880245429*^9, 3.6097581103630743`*^9, 
   3.609903047645534*^9, 3.6099892207480993`*^9, 3.610000588050111*^9, 
   3.610002650465197*^9, 3.610584794299087*^9, 3.61071999614955*^9, 
   3.610722859141488*^9, 3.6107635655975227`*^9, 3.610846981417246*^9, 
   3.610847598167513*^9, 3.610888203442204*^9, 3.611106915131778*^9, 
   3.612502624885817*^9, 3.613212094008737*^9, 3.615290130682562*^9, 
   3.6176015139969893`*^9, 3.617602393074868*^9, {3.617715627687532*^9, 
   3.61771564257053*^9}, 3.617853579248801*^9, 3.618267881231882*^9, 
   3.6183515445743856`*^9, 3.61835197464045*^9, 3.618353004905797*^9, 
   3.618438829998785*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Combined test", "Subsubsection",
 InitializationGroup->True,
 CellChangeTimes->{{3.6061816638925343`*^9, 3.606181667861302*^9}, {
  3.6062978758065147`*^9, 3.606297878572287*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"durationNormalize", "[", 
   RowBox[{
   "universe_", ",", "burst", ",", "observer_", ",", "targetDuration_", ",", 
    RowBox[{"{", 
     RowBox[{"\[Omega]1_", ",", "\[Omega]2_"}], "}"}]}], "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", "burstValues", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"burstValues", "=", 
      RowBox[{"{", 
       RowBox[{
       "\[Gamma]", ",", "\[Eta]0", ",", "r0", ",", "n", ",", "\[Omega]0", ",",
         "\[Theta]0", ",", "k", ",", "\[Alpha]"}], "}"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"burstValues", "[", 
       RowBox[{"[", "3", "]"}], "]"}], "=", 
      RowBox[{"targetDuration", 
       FractionBox["r0", 
        RowBox[{"duration", "[", 
         RowBox[{"universe", ",", "burstValues", ",", "observer", ",", 
          RowBox[{"{", 
           RowBox[{"\[Omega]1", ",", "\[Omega]2"}], "}"}]}], "]"}]]}]}], ";", 
     "\[IndentingNewLine]", "burstValues"}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 InitializationGroup->True,
 CellChangeTimes->{{3.607256503410254*^9, 3.6072565947495947`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"energyNormalize", "[", 
   RowBox[{
   "universe_", ",", "burst", ",", "observer_", ",", "photonCount_", ",", 
    RowBox[{"{", 
     RowBox[{"\[Omega]1_", ",", "\[Omega]2_"}], "}"}]}], "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", "burstValues", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"burstValues", "=", 
      RowBox[{"{", 
       RowBox[{
       "\[Gamma]", ",", "\[Eta]0", ",", "r0", ",", "n", ",", "\[Omega]0", ",",
         "\[Theta]0", ",", "k", ",", "\[Alpha]"}], "}"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"burstValues", "[", 
       RowBox[{"[", "2", "]"}], "]"}], "=", 
      RowBox[{"photonCount", 
       FractionBox["\[Eta]0", 
        RowBox[{"p", "[", 
         RowBox[{"universe", ",", "burstValues", ",", "observer", ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "\[Infinity]"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"\[Omega]1", ",", "\[Omega]2"}], "}"}]}], "]"}]]}]}], ";", 
     "\[IndentingNewLine]", "burstValues"}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 InitializationGroup->True,
 CellChangeTimes->{{3.607164411342263*^9, 3.607164535753788*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"normalizedBurst", "[", 
   RowBox[{
   "universe_", ",", "burst_", ",", "observer_", ",", "targetDuration_", ",", 
    "photonCount_", ",", 
    RowBox[{"{", 
     RowBox[{"\[Omega]1_", ",", "\[Omega]2_"}], "}"}]}], "]"}], ":=", 
  RowBox[{"energyNormalize", "[", 
   RowBox[{"universe", ",", 
    RowBox[{"durationNormalize", "[", 
     RowBox[{
     "universe", ",", "burst", ",", "observer", ",", "targetDuration", ",", 
      RowBox[{"{", 
       RowBox[{"\[Omega]1", ",", "\[Omega]2"}], "}"}]}], "]"}], ",", 
    "observer", ",", "photonCount", ",", 
    RowBox[{"{", 
     RowBox[{"\[Omega]1", ",", "\[Omega]2"}], "}"}]}], "]"}]}]], "Input",
 InitializationGroup->True,
 CellChangeTimes->{{3.6072565979777822`*^9, 3.607256667060999*^9}, {
  3.607257984212576*^9, 3.607258008317346*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "fitTestSingleBurst", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"sampleSize", "\[Rule]", "10"}], ",", 
     RowBox[{"penalizationFactor", "\[Rule]", "400"}], ",", 
     RowBox[{"maxEnergy", "\[Rule]", "6*^53"}], ",", 
     RowBox[{"accurateQ", "\[Rule]", "True"}], ",", 
     RowBox[{"logQ", "\[Rule]", "False"}], ",", 
     RowBox[{"testWeights", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"1", ",", "1", ",", "1", ",", "1"}], "}"}]}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fitTestSingleBurst", "[", 
   RowBox[{
   "universe_", ",", "population_", ",", "burst", ",", "observer", ",", 
    RowBox[{"{", 
     RowBox[{"\[Omega]1_", ",", "\[Omega]2_", ",", "\[Omega]3_"}], "}"}], ",",
     "totalPhotonCount_", ",", 
    RowBox[{"{", 
     RowBox[{"\[Kappa]LogTarget_", ",", "\[Kappa]LogError_"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"\[Kappa]MinLogTarget_", ",", "\[Kappa]MinLogError_"}], "}"}], 
    ",", 
    RowBox[{"{", 
     RowBox[{"photonRatioLogTarget_", ",", "photonRatioLogError_"}], "}"}], 
    ",", 
    RowBox[{"{", 
     RowBox[{
     "photonRatioMedianLogTarget_", ",", "photonRatioMedianLogError_"}], 
     "}"}], ",", 
    RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "result", ",", "sample", ",", "pLow", ",", "pHigh", ",", "\[Kappa]0", 
      ",", "\[Kappa]Test", ",", "\[Kappa]MinTest", ",", "photonRatioTest", 
      ",", "photonRatioMedianTest", ",", "burstValues"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"OptionValue", "[", "logQ", "]"}], ",", 
       RowBox[{"Print", "[", 
        RowBox[{"Row", "[", 
         RowBox[{"{", 
          RowBox[{"\"\<trying \>\"", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
              "\[Gamma]", ",", "\[Eta]0", ",", "r0", ",", "n", ",", 
               "\[Omega]0", ",", "\[Theta]0", ",", "k", ",", "\[Alpha]"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"z", ",", "\[Chi]"}], "}"}]}], "}"}]}], "}"}], "]"}], 
        "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"result", "=", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"k", "+", 
          FractionBox["\[Alpha]", "2"], "+", "1"}], "\[GreaterEqual]", "0"}], 
        ",", 
        RowBox[{"OptionValue", "[", "penalizationFactor", "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"burstValues", "=", 
          RowBox[{"energyNormalize", "[", 
           RowBox[{"universe", ",", 
            RowBox[{"{", 
             RowBox[{
             "\[Gamma]", ",", "\[Eta]0", ",", "r0", ",", "n", ",", 
              "\[Omega]0", ",", "\[Theta]0", ",", "k", ",", "\[Alpha]"}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"detectorArea", ",", "z", ",", "\[Chi]"}], "}"}], ",", 
            "totalPhotonCount", ",", 
            RowBox[{"{", 
             RowBox[{"\[Omega]1", ",", "\[Omega]3"}], "}"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"energy", "[", 
             RowBox[{"burstValues", ",", "\[Omega]1"}], "]"}], ">", 
            RowBox[{"OptionValue", "[", "maxEnergy", "]"}]}], ",", 
           RowBox[{"OptionValue", "[", "penalizationFactor", "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"sample", "=", 
             RowBox[{"burstSample", "[", 
              RowBox[{
              "universe", ",", "population", ",", "burstValues", ",", 
               "detectorArea", ",", 
               RowBox[{"{", 
                RowBox[{"\[Omega]1", ",", "\[Omega]2", ",", "\[Omega]3"}], 
                "}"}], ",", 
               RowBox[{"OptionValue", "[", "sampleSize", "]"}], ",", 
               RowBox[{"computedValues", "\[Rule]", 
                RowBox[{"{", 
                 RowBox[{"\"\<pTotal\>\"", ",", "\"\<\[Kappa]\>\""}], "}"}]}],
                ",", 
               RowBox[{"accurateQ", "\[Rule]", 
                RowBox[{"OptionValue", "[", "accurateQ", "]"}]}]}], "]"}]}], 
            ";", "\[IndentingNewLine]", 
            RowBox[{"pLow", "=", 
             RowBox[{"p", "[", 
              RowBox[{"universe", ",", "burstValues", ",", 
               RowBox[{"{", 
                RowBox[{"detectorArea", ",", "z", ",", "\[Chi]"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"0", ",", "\[Infinity]"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"\[Omega]1", ",", "\[Omega]2"}], "}"}]}], "]"}]}], 
            ";", "\[IndentingNewLine]", 
            RowBox[{"pHigh", "=", 
             RowBox[{"p", "[", 
              RowBox[{"universe", ",", "burstValues", ",", 
               RowBox[{"{", 
                RowBox[{"detectorArea", ",", "z", ",", "\[Chi]"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"0", ",", "\[Infinity]"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"\[Omega]2", ",", "\[Omega]3"}], "}"}]}], "]"}]}], 
            ";", "\[IndentingNewLine]", 
            RowBox[{"\[Kappa]0", "=", 
             RowBox[{"\[Kappa]Cache", "[", 
              RowBox[{"universe", ",", "burstValues", ",", 
               RowBox[{"{", 
                RowBox[{"detectorArea", ",", "z", ",", "\[Chi]"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"\[Omega]1", ",", "\[Omega]2", ",", "\[Omega]3"}], 
                "}"}], ",", 
               RowBox[{"accurateQ", "\[Rule]", 
                RowBox[{"OptionValue", "[", "accurateQ", "]"}]}]}], "]"}]}], 
            ";", "\[IndentingNewLine]", 
            RowBox[{"\[Kappa]Test", "=", 
             FractionBox[
              RowBox[{
               RowBox[{"Log", "[", "\[Kappa]0", "]"}], "-", 
               "\[Kappa]LogTarget"}], "\[Kappa]LogError"]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"\[Kappa]MinTest", "=", 
             RowBox[{"Max", "[", 
              RowBox[{"0", ",", 
               FractionBox[
                RowBox[{
                 RowBox[{"Log", "@", 
                  RowBox[{"Min", "@", 
                   RowBox[{"sample", "[", 
                    RowBox[{"[", 
                    RowBox[{"All", ",", "2"}], "]"}], "]"}]}]}], "-", 
                 "\[Kappa]MinLogTarget"}], "\[Kappa]MinLogError"]}], "]"}]}], 
            ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
            RowBox[{"photonRatioTest", "=", 
             FractionBox[
              RowBox[{
               RowBox[{"Log", "[", 
                FractionBox["pHigh", "pLow"], "]"}], "-", 
               "photonRatioLogTarget"}], "photonRatioLogError"]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"photonRatioMedianTest", "=", 
             FractionBox[
              RowBox[{
               RowBox[{"Log", "[", 
                FractionBox[
                 RowBox[{"pLow", "+", "pHigh"}], 
                 RowBox[{"Median", "@", 
                  RowBox[{"sample", "[", 
                   RowBox[{"[", 
                    RowBox[{"All", ",", "1"}], "]"}], "]"}]}]], "]"}], "-", 
               "photonRatioMedianLogTarget"}], "photonRatioMedianLogError"]}],
             ";", "\[IndentingNewLine]", 
            RowBox[{"Total", "[", 
             RowBox[{
              RowBox[{"OptionValue", "[", "testWeights", "]"}], 
              RowBox[{"{", 
               RowBox[{
                SuperscriptBox["\[Kappa]Test", "2"], ",", 
                SuperscriptBox["\[Kappa]MinTest", "2"], ",", 
                SuperscriptBox["photonRatioTest", "2"], ",", 
                SuperscriptBox["photonRatioMedianTest", "2"]}], "}"}]}], 
             "]"}]}]}], "\[IndentingNewLine]", "]"}]}]}], 
       "\[IndentingNewLine]", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"OptionValue", "[", "logQ", "]"}], ",", 
       RowBox[{"Print", "[", 
        RowBox[{"{", 
         RowBox[{"result", ",", 
          RowBox[{"{", 
           RowBox[{
           "\[Kappa]Test", ",", "\[Kappa]MinTest", ",", "photonRatioTest", 
            ",", "photonRatioMedianTest"}], "}"}], ",", "burstValues", ",", 
          RowBox[{"{", 
           RowBox[{"z", ",", "\[Chi]"}], "}"}]}], "}"}], "]"}]}], "]"}], ";", 
     "\[IndentingNewLine]", "result"}]}], "\[IndentingNewLine]", 
   "]"}]}]}], "Input",
 InitializationGroup->True,
 CellChangeTimes->{{3.6067841304853563`*^9, 3.6067843330023823`*^9}, {
   3.606784418849988*^9, 3.606784530144672*^9}, {3.606784746649373*^9, 
   3.606784816278531*^9}, {3.606784887254499*^9, 3.606785129475871*^9}, {
   3.6067851646876383`*^9, 3.606785209472348*^9}, {3.606785271986596*^9, 
   3.6067853353692007`*^9}, {3.60678553041534*^9, 3.606785563772859*^9}, {
   3.606786039073058*^9, 3.6067860622807837`*^9}, {3.606786430847364*^9, 
   3.6067866005965*^9}, {3.606786665888916*^9, 3.606786703344331*^9}, {
   3.606786739497644*^9, 3.606786780597384*^9}, {3.606786970867032*^9, 
   3.60678706403421*^9}, {3.606787924466777*^9, 3.606787964648798*^9}, {
   3.606788115161808*^9, 3.606788115366991*^9}, {3.6067887080212383`*^9, 
   3.606788708535561*^9}, {3.606793743979444*^9, 3.6067937529441957`*^9}, {
   3.60679384130014*^9, 3.606793843387294*^9}, {3.606793914830934*^9, 
   3.606793926343021*^9}, {3.606793966134832*^9, 3.606794000070466*^9}, {
   3.6067940713763742`*^9, 3.6067941743989763`*^9}, {3.606794212876604*^9, 
   3.6067942296292953`*^9}, {3.606795616118765*^9, 3.6067956231004677`*^9}, {
   3.606797921340238*^9, 3.606797954472186*^9}, {3.606798998334292*^9, 
   3.60679905375896*^9}, {3.606799139577279*^9, 3.6067991893948793`*^9}, {
   3.60679938961654*^9, 3.6067993932920523`*^9}, {3.606799458623124*^9, 
   3.6067994589890833`*^9}, {3.606812577241592*^9, 3.60681261453538*^9}, {
   3.606813123372066*^9, 3.606813123725144*^9}, {3.606813933173003*^9, 
   3.606813941392313*^9}, {3.606814028176161*^9, 3.606814030507115*^9}, {
   3.606969388151495*^9, 3.606969456015808*^9}, {3.606969488775598*^9, 
   3.60696949406213*^9}, {3.606969529536642*^9, 3.6069696305421057`*^9}, {
   3.606969662344791*^9, 3.606969670096977*^9}, {3.60696971076998*^9, 
   3.6069697162065077`*^9}, {3.6069703325263157`*^9, 
   3.6069703406136503`*^9}, {3.6069706726628036`*^9, 3.60697067293561*^9}, 
   3.606990421362998*^9, 3.607039652785748*^9, {3.6070737466198177`*^9, 
   3.6070737627039824`*^9}, {3.607079602778102*^9, 3.6070796042148323`*^9}, {
   3.6071640212111683`*^9, 3.60716402133992*^9}, {3.607164098736981*^9, 
   3.607164135897633*^9}, {3.6071642309005547`*^9, 3.607164261252738*^9}, {
   3.607164654394418*^9, 3.6071646594417*^9}, {3.607164789131357*^9, 
   3.607164794992824*^9}, {3.6071648896505404`*^9, 3.6071649532718973`*^9}, 
   3.607577701537319*^9, {3.6075778521013403`*^9, 3.6075778632585897`*^9}, {
   3.607577919254958*^9, 3.607577929581045*^9}, {3.607577959977606*^9, 
   3.60757796830942*^9}, {3.607581794225686*^9, 3.6075818497271023`*^9}, 
   3.607582435542191*^9, {3.609572240405469*^9, 3.6095723022081413`*^9}, {
   3.609572342927558*^9, 3.6095723609168673`*^9}, {3.6095818435164757`*^9, 
   3.6095818445913553`*^9}, {3.6095819252004004`*^9, 3.609582027393879*^9}, 
   3.609582653607339*^9, 3.609584496374695*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "findSingleBurstFit", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"accurateQ", "\[Rule]", "True"}], ",", 
     RowBox[{"logQ", "\[Rule]", "False"}], ",", 
     RowBox[{"sampleSize", "\[Rule]", "10"}], ",", 
     RowBox[{"penalizationFactor", "\[Rule]", "400"}], ",", 
     RowBox[{"maxEnergy", "\[Rule]", "6*^53"}], ",", 
     RowBox[{"\[Eta]0", "\[Rule]", "8.4*^37"}], ",", 
     RowBox[{"r0", "\[Rule]", "1.2*^6"}], ",", 
     RowBox[{"\[Chi]MaxFactor", "\[Rule]", "30."}], ",", 
     RowBox[{"detectorArea", "\[Rule]", "5.563*^-18"}], ",", 
     RowBox[{"nMin", "\[Rule]", "3.5"}], ",", 
     RowBox[{"testWeights", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"1", ",", "1", ",", "1", ",", "1"}], "}"}]}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"findSingleBurstFit", "[", 
   RowBox[{"universe_", ",", "population_", ",", 
    RowBox[{"{", 
     RowBox[{"\[Gamma]_", ",", "\[Omega]0_"}], "}"}], ",", "z_", ",", 
    RowBox[{"{", 
     RowBox[{"\[Omega]1_", ",", "\[Omega]2_", ",", "\[Omega]3_"}], "}"}], ",",
     "totalPhotonCount_", ",", 
    RowBox[{"{", 
     RowBox[{"\[Kappa]LogTarget_", ",", "\[Kappa]LogError_"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"\[Kappa]MinLogTarget_", ",", "\[Kappa]MinLogError_"}], "}"}], 
    ",", 
    RowBox[{"{", 
     RowBox[{"photonRatioLogTarget_", ",", "photonRatioLogError_"}], "}"}], 
    ",", 
    RowBox[{"{", 
     RowBox[{
     "photonRatioMedianLogTarget_", ",", "photonRatioMedianLogError_"}], 
     "}"}], ",", "initialPoints_", ",", 
    RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "testFunction", ",", "\[Eta]0", ",", "r0", ",", "detectorArea", ",", 
      "sSize", ",", "penFactor", ",", "mEnergy", ",", "accQ", ",", "lQ", ",", 
      "weights"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"\[Eta]0", "=", 
      RowBox[{"OptionValue", "[", "\[Eta]0", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"r0", "=", 
      RowBox[{"OptionValue", "[", "r0", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"detectorArea", "=", 
      RowBox[{"OptionValue", "[", "detectorArea", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"sSize", "=", 
      RowBox[{"OptionValue", "[", "sampleSize", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"penFactor", "=", 
      RowBox[{"OptionValue", "[", "penalizationFactor", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"mEnergy", "=", 
      RowBox[{"OptionValue", "[", "maxEnergy", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"accQ", "=", 
      RowBox[{"OptionValue", "[", "accurateQ", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"lQ", "=", 
      RowBox[{"OptionValue", "[", "logQ", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"weights", "=", 
      RowBox[{"OptionValue", "[", "testWeights", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"testFunction", "[", 
       RowBox[{
        RowBox[{"nj_", "?", "NumericQ"}], ",", 
        RowBox[{"\[Theta]0j_", "?", "NumericQ"}], ",", 
        RowBox[{"kj_", "?", "NumericQ"}], ",", 
        RowBox[{"\[Alpha]j_", "?", "NumericQ"}], ",", 
        RowBox[{"\[Chi]j_", "?", "NumericQ"}]}], "]"}], ":=", 
      RowBox[{"fitTestSingleBurst", "[", 
       RowBox[{"universe", ",", "population", ",", 
        RowBox[{"{", 
         RowBox[{
         "\[Gamma]", ",", "\[Eta]0", ",", "r0", ",", "nj", ",", "\[Omega]0", 
          ",", 
          RowBox[{"Exp", "[", "\[Theta]0j", "]"}], ",", "kj", ",", 
          "\[Alpha]j"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"detectorArea", ",", "z", ",", 
          RowBox[{"Exp", "[", "\[Chi]j", "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"\[Omega]1", ",", "\[Omega]2", ",", "\[Omega]3"}], "}"}], 
        ",", "totalPhotonCount", ",", 
        RowBox[{"{", 
         RowBox[{"\[Kappa]LogTarget", ",", "\[Kappa]LogError"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"\[Kappa]MinLogTarget", ",", "\[Kappa]MinLogError"}], "}"}], 
        ",", 
        RowBox[{"{", 
         RowBox[{"photonRatioLogTarget", ",", "photonRatioLogError"}], "}"}], 
        ",", 
        RowBox[{"{", 
         RowBox[{
         "photonRatioMedianLogTarget", ",", "photonRatioMedianLogError"}], 
         "}"}], ",", 
        RowBox[{"sampleSize", "\[Rule]", "sSize"}], ",", 
        RowBox[{"penalizationFactor", "\[Rule]", "penFactor"}], ",", 
        RowBox[{"maxEnergy", "\[Rule]", "mEnergy"}], ",", 
        RowBox[{"accurateQ", "\[Rule]", "accQ"}], ",", 
        RowBox[{"logQ", "\[Rule]", "lQ"}], ",", 
        RowBox[{"testWeights", "\[Rule]", "weights"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"NMinimize", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"testFunction", "[", 
          RowBox[{
          "nj", ",", "\[Theta]0j", ",", "kj", ",", "\[Alpha]j", ",", 
           "\[Chi]j"}], "]"}], ",", 
         RowBox[{"nj", ">", 
          RowBox[{"OptionValue", "[", "nMin", "]"}]}], ",", 
         RowBox[{"kj", "<", "0"}], ",", 
         RowBox[{"\[Chi]j", "\[LessEqual]", 
          RowBox[{"Log", "[", 
           FractionBox[
            RowBox[{"OptionValue", "[", "\[Chi]MaxFactor", "]"}], "\[Gamma]"],
            "]"}]}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
        "nj", ",", "\[Theta]0j", ",", "kj", ",", "\[Alpha]j", ",", 
         "\[Chi]j"}], "}"}], ",", 
       RowBox[{"Method", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"\"\<NelderMead\>\"", ",", 
          RowBox[{"\"\<InitialPoints\>\"", "\[Rule]", "initialPoints"}]}], 
         "}"}]}]}], "]"}]}]}], "\[IndentingNewLine]", "]"}]}]}], "Input",
 InitializationGroup->True,
 CellChangeTimes->{{3.606196337114387*^9, 3.60619634259832*^9}, {
   3.606196427421619*^9, 3.6061964280058613`*^9}, {3.606196546477379*^9, 
   3.60619687062036*^9}, {3.606196931043127*^9, 3.606197192386756*^9}, {
   3.606197384027049*^9, 3.606197397750696*^9}, {3.6061975884357567`*^9, 
   3.606197639043159*^9}, {3.606197710746685*^9, 3.6061977668410597`*^9}, {
   3.606197888074235*^9, 3.606197889580408*^9}, 3.606261248965354*^9, {
   3.6062616033082533`*^9, 3.606261606676928*^9}, {3.606262705564365*^9, 
   3.60626272769366*^9}, {3.606263546786374*^9, 3.6062636186257553`*^9}, {
   3.6062637168964*^9, 3.606263742388198*^9}, {3.606302028041608*^9, 
   3.60630208242258*^9}, {3.6064544042746363`*^9, 3.606454410387237*^9}, {
   3.606454475731523*^9, 3.606454537573245*^9}, {3.606454590604412*^9, 
   3.606454636101365*^9}, 3.606454707124113*^9, {3.606454751100938*^9, 
   3.606454766395697*^9}, {3.606455181975443*^9, 3.606455261693512*^9}, {
   3.606455314609996*^9, 3.6064553277303743`*^9}, {3.606785700348125*^9, 
   3.606785807926054*^9}, {3.606786870716901*^9, 3.606786889739295*^9}, 
   3.606786920303157*^9, {3.606787084442574*^9, 3.6067871901344347`*^9}, {
   3.606787294681089*^9, 3.606787522352125*^9}, {3.6067877590356083`*^9, 
   3.606787769994176*^9}, {3.606787821978108*^9, 3.606787875961068*^9}, {
   3.6067953080166492`*^9, 3.606795310150799*^9}, {3.60679547672785*^9, 
   3.606795490694419*^9}, {3.606795961480076*^9, 3.606796258584289*^9}, {
   3.606796541175186*^9, 3.606796556361103*^9}, {3.606797009692794*^9, 
   3.606797091181622*^9}, {3.6067979347342052`*^9, 3.606797934915477*^9}, {
   3.606797977946269*^9, 3.606798013389991*^9}, {3.606798066037321*^9, 
   3.60679806866824*^9}, {3.606798138805749*^9, 3.606798142170463*^9}, {
   3.6067982019653463`*^9, 3.606798241233823*^9}, {3.606798325980959*^9, 
   3.6067983274197893`*^9}, {3.6067983761432247`*^9, 3.606798377448983*^9}, {
   3.606798416485764*^9, 3.606798447120487*^9}, {3.606798734013507*^9, 
   3.606798751273053*^9}, {3.606798908606326*^9, 3.606798917731062*^9}, {
   3.606798967586944*^9, 3.6067989939175777`*^9}, {3.606799066674605*^9, 
   3.606799069207491*^9}, 3.606810933521221*^9, {3.606811112767414*^9, 
   3.6068113583985443`*^9}, {3.6068654184712753`*^9, 3.60686543975744*^9}, {
   3.606865570454639*^9, 3.6068655747020397`*^9}, {3.60686568370875*^9, 
   3.6068656840319757`*^9}, {3.606867762019717*^9, 3.606867773299673*^9}, {
   3.606867817339847*^9, 3.606867867132864*^9}, {3.606868098517172*^9, 
   3.606868098864695*^9}, {3.6069696821164293`*^9, 3.606969698781539*^9}, {
   3.607070227020426*^9, 3.607070314973587*^9}, 3.6070716574449043`*^9, {
   3.60707255939252*^9, 3.6070725611900463`*^9}, {3.607073572500991*^9, 
   3.607073661720378*^9}, {3.607079617458284*^9, 3.60707964401513*^9}, {
   3.607079700749875*^9, 3.6070797173667297`*^9}, {3.6070797515820913`*^9, 
   3.607079768277616*^9}, {3.607079828089015*^9, 3.607079845952528*^9}, {
   3.607149955000238*^9, 3.6071499949096622`*^9}, {3.607150062718923*^9, 
   3.607150065238398*^9}, {3.607164310062943*^9, 3.607164351977974*^9}, {
   3.607390953205967*^9, 3.607391006405122*^9}, {3.6075771149195232`*^9, 
   3.607577115479409*^9}, {3.6075777036576777`*^9, 3.607577704455166*^9}, {
   3.6075818666484947`*^9, 3.6075818982977324`*^9}}]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Visualization", "Subsection",
 InitializationGroup->True,
 CellChangeTimes->{{3.6070676433964376`*^9, 3.607067647242429*^9}}],

Cell[CellGroupData[{

Cell["Model scheme", "Subsubsection",
 CellChangeTimes->{{3.609661861117159*^9, 3.609661862667097*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "modelScheme", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"centralEngineSize", "\[Rule]", "0.03"}], ",", 
     RowBox[{"jetRadius", "\[Rule]", "0.3"}], ",", 
     RowBox[{"lowAngle", "\[Rule]", "0.1"}], ",", 
     RowBox[{"highAngle", "\[Rule]", "0.01"}], ",", 
     RowBox[{"observerSize", "\[Rule]", "0.03"}], ",", 
     RowBox[{"observerDistance", "\[Rule]", "1"}], ",", 
     RowBox[{"observerAngle", "\[Rule]", "0.09"}], ",", 
     RowBox[{"centralEngineQ", "\[Rule]", "True"}], ",", 
     RowBox[{"centralEngineLabelQ", "\[Rule]", "False"}], ",", 
     RowBox[{"jetQ", "\[Rule]", "True"}], ",", 
     RowBox[{"jetLabelQ", "\[Rule]", "False"}], ",", 
     RowBox[{"epQ", "\[Rule]", "True"}], ",", 
     RowBox[{"\[Gamma]Q", "\[Rule]", "True"}], ",", 
     RowBox[{"observerQ", "\[Rule]", "True"}], ",", 
     RowBox[{"observerLabelQ", "\[Rule]", "False"}], ",", 
     RowBox[{"FontSize", "\[Rule]", "10"}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
     RowBox[{"shockWaveThickness", "\[Rule]", "Large"}], ",", 
     RowBox[{"radiatorThickness", "\[Rule]", "Small"}], ",", 
     RowBox[{"photonThickness", "\[Rule]", "Small"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"modelScheme", "[", 
    RowBox[{"OptionsPattern", "[", "]"}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "i", ",", "ti", ",", "redX", ",", "redY", ",", "blueX", ",", "blueY", 
       ",", "observerX", ",", "observerY"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Graphics", "[", 
      RowBox[{
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"OptionValue", "[", "centralEngineQ", "]"}], ",", 
             "Black", ",", "Transparent"}], "]"}], ",", 
           RowBox[{"Disk", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", "0"}], "}"}], ",", 
             RowBox[{"OptionValue", "[", "centralEngineSize", "]"}]}], 
            "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"OptionValue", "[", "centralEngineLabelQ", "]"}], ",", 
             "Black", ",", "Transparent"}], "]"}], ",", 
           RowBox[{"Text", "[", 
            RowBox[{
             RowBox[{"Style", "[", 
              RowBox[{"\"\<Central\\nEngine\>\"", ",", 
               RowBox[{"FontSize", "\[Rule]", 
                RowBox[{"OptionValue", "[", "FontSize", "]"}]}]}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", 
               RowBox[{"-", 
                RowBox[{"OptionValue", "[", "centralEngineSize", "]"}]}]}], 
              "}"}], ",", "Top"}], "]"}]}], "}"}], ",", "\[IndentingNewLine]",
          "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"observerX", "=", 
           RowBox[{
            RowBox[{"OptionValue", "[", "observerDistance", "]"}], 
            RowBox[{"Cos", "[", 
             RowBox[{"OptionValue", "[", "observerAngle", "]"}], "]"}]}]}], 
          ";", "\[IndentingNewLine]", 
          RowBox[{"observerY", "=", 
           RowBox[{
            RowBox[{"OptionValue", "[", "observerDistance", "]"}], 
            RowBox[{"Sin", "[", 
             RowBox[{"OptionValue", "[", "observerAngle", "]"}], "]"}]}]}], 
          ";", "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"OptionValue", "[", "observerQ", "]"}], ",", 
              RowBox[{"Darker", "[", "Green", "]"}], ",", "Transparent"}], 
             "]"}], ",", 
            RowBox[{"Disk", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"observerX", ",", "observerY"}], "}"}], ",", 
              RowBox[{"OptionValue", "[", "observerSize", "]"}]}], "]"}]}], 
           "}"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"OptionValue", "[", "observerLabelQ", "]"}], ",", 
             RowBox[{"Darker", "[", "Green", "]"}], ",", "Transparent"}], 
            "]"}], ",", "\[IndentingNewLine]", 
           RowBox[{"Text", "[", 
            RowBox[{
             RowBox[{"Style", "[", 
              RowBox[{"\"\<Observer\>\"", ",", 
               RowBox[{"FontSize", "\[Rule]", 
                RowBox[{"OptionValue", "[", "FontSize", "]"}]}]}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"observerX", ",", 
               RowBox[{"observerY", "+", 
                RowBox[{"OptionValue", "[", "centralEngineSize", "]"}]}]}], 
              "}"}], ",", "Bottom"}], "]"}]}], "}"}], ",", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"OptionValue", "[", "jetQ", "]"}], ",", 
             RowBox[{"Opacity", "[", "0.1", "]"}], ",", 
             RowBox[{"Opacity", "[", "0", "]"}]}], "]"}], ",", "Red", ",", 
           RowBox[{"Disk", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", "0"}], "}"}], ",", 
             RowBox[{"OptionValue", "[", "jetRadius", "]"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", 
                RowBox[{"OptionValue", "[", "lowAngle", "]"}]}], ",", 
               RowBox[{"OptionValue", "[", "lowAngle", "]"}]}], "}"}]}], 
            "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Thickness", "@", 
            RowBox[{"OptionValue", "[", "shockWaveThickness", "]"}]}], ",", 
           "Red", ",", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"OptionValue", "[", "jetQ", "]"}], ",", 
             RowBox[{"Opacity", "[", "1", "]"}], ",", 
             RowBox[{"Opacity", "[", "0", "]"}]}], "]"}], ",", 
           RowBox[{"Circle", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", "0"}], "}"}], ",", 
             RowBox[{"OptionValue", "[", "jetRadius", "]"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", 
                RowBox[{"OptionValue", "[", "lowAngle", "]"}]}], ",", 
               RowBox[{"OptionValue", "[", "lowAngle", "]"}]}], "}"}]}], 
            "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"OptionValue", "[", "jetQ", "]"}], ",", 
             RowBox[{"Opacity", "[", "0.1", "]"}], ",", 
             RowBox[{"Opacity", "[", "0", "]"}]}], "]"}], ",", "Blue", ",", 
           RowBox[{"Disk", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", "0"}], "}"}], ",", 
             RowBox[{"OptionValue", "[", "jetRadius", "]"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", 
                RowBox[{"OptionValue", "[", "highAngle", "]"}]}], ",", 
               RowBox[{"OptionValue", "[", "highAngle", "]"}]}], "}"}]}], 
            "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Thickness", "@", 
            RowBox[{"OptionValue", "[", "shockWaveThickness", "]"}]}], ",", 
           "Blue", ",", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"OptionValue", "[", "jetQ", "]"}], ",", 
             RowBox[{"Opacity", "[", "1", "]"}], ",", 
             RowBox[{"Opacity", "[", "0", "]"}]}], "]"}], ",", 
           RowBox[{"Circle", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", "0"}], "}"}], ",", 
             RowBox[{"OptionValue", "[", "jetRadius", "]"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", 
                RowBox[{"OptionValue", "[", "highAngle", "]"}]}], ",", 
               RowBox[{"OptionValue", "[", "highAngle", "]"}]}], "}"}]}], 
            "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"Red", ",", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"OptionValue", "[", "jetLabelQ", "]"}], ",", 
             RowBox[{"Opacity", "[", "1", "]"}], ",", 
             RowBox[{"Opacity", "[", "0", "]"}]}], "]"}], ",", 
           RowBox[{"Text", "[", 
            RowBox[{
             RowBox[{"Style", "[", 
              RowBox[{"\"\<Shock\\nFront\>\"", ",", 
               RowBox[{"FontSize", "\[Rule]", 
                RowBox[{"OptionValue", "[", "FontSize", "]"}]}]}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"1.03", 
                RowBox[{"OptionValue", "[", "jetRadius", "]"}], 
                RowBox[{"Cos", "[", 
                 FractionBox[
                  RowBox[{"OptionValue", "[", "lowAngle", "]"}], "2"], 
                 "]"}]}], ",", 
               RowBox[{
                RowBox[{"-", 
                 RowBox[{"OptionValue", "[", "jetRadius", "]"}]}], 
                RowBox[{"Sin", "[", 
                 FractionBox[
                  RowBox[{"OptionValue", "[", "lowAngle", "]"}], "2"], 
                 "]"}]}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"Left", ",", "Top"}], "}"}]}], "]"}]}], "}"}], ",", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"redX", "=", 
           RowBox[{
            RowBox[{"OptionValue", "[", "jetRadius", "]"}], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"Min", "[", 
              RowBox[{
               RowBox[{"OptionValue", "[", "lowAngle", "]"}], ",", 
               RowBox[{"OptionValue", "[", "observerAngle", "]"}]}], "]"}], 
             "]"}]}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"redY", "=", 
           RowBox[{
            RowBox[{"OptionValue", "[", "jetRadius", "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"Min", "[", 
              RowBox[{
               RowBox[{"OptionValue", "[", "lowAngle", "]"}], ",", 
               RowBox[{"OptionValue", "[", "observerAngle", "]"}]}], "]"}], 
             "]"}]}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"blueX", "=", 
           RowBox[{
            RowBox[{"OptionValue", "[", "jetRadius", "]"}], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"Min", "[", 
              RowBox[{
               RowBox[{"OptionValue", "[", "highAngle", "]"}], ",", 
               RowBox[{"OptionValue", "[", "observerAngle", "]"}]}], "]"}], 
             "]"}]}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"blueY", "=", 
           RowBox[{
            RowBox[{"OptionValue", "[", "jetRadius", "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"Min", "[", 
              RowBox[{
               RowBox[{"OptionValue", "[", "highAngle", "]"}], ",", 
               RowBox[{"OptionValue", "[", "observerAngle", "]"}]}], "]"}], 
             "]"}]}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Thickness", "@", 
             RowBox[{"OptionValue", "[", "radiatorThickness", "]"}]}], ",", 
            "Red", ",", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"OptionValue", "[", "epQ", "]"}], ",", 
              RowBox[{"Opacity", "[", "1", "]"}], ",", 
              RowBox[{"Opacity", "[", "0", "]"}]}], "]"}], ",", 
            RowBox[{"Line", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"0", ",", "0"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"redX", ",", "redY"}], "}"}]}], "}"}], "]"}]}], 
           "}"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"Red", ",", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"OptionValue", "[", "epQ", "]"}], ",", 
             RowBox[{"Opacity", "[", "1", "]"}], ",", 
             RowBox[{"Opacity", "[", "0", "]"}]}], "]"}], ",", 
           RowBox[{"Text", "[", 
            RowBox[{
             RowBox[{"Style", "[", 
              RowBox[{
              "\"\<\!\(\*SuperscriptBox[\(e\), \(\[PlusMinus]\)]\), \
\!\(\*SuperscriptBox[\(p\), \(\[PlusMinus]\)]\)\>\"", ",", 
               RowBox[{"FontSize", "\[Rule]", 
                RowBox[{"OptionValue", "[", "FontSize", "]"}]}]}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{
               FractionBox["redX", "2"], ",", 
               FractionBox["redY", "2"]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"Right", ",", "Bottom"}], "}"}]}], "]"}]}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Thickness", "@", 
            RowBox[{"OptionValue", "[", "radiatorThickness", "]"}]}], ",", 
           "Blue", ",", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"OptionValue", "[", "epQ", "]"}], ",", 
             RowBox[{"Opacity", "[", "1", "]"}], ",", 
             RowBox[{"Opacity", "[", "0", "]"}]}], "]"}], ",", 
           RowBox[{"Line", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"0", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"blueX", ",", "blueY"}], "}"}]}], "}"}], "]"}]}], 
          "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"Blue", ",", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"OptionValue", "[", "epQ", "]"}], ",", 
             RowBox[{"Opacity", "[", "1", "]"}], ",", 
             RowBox[{"Opacity", "[", "0", "]"}]}], "]"}], ",", 
           RowBox[{"Text", "[", 
            RowBox[{
             RowBox[{"Style", "[", 
              RowBox[{
              "\"\<\!\(\*SuperscriptBox[\(e\), \(\[PlusMinus]\)]\), \
\!\(\*SuperscriptBox[\(p\), \(\[PlusMinus]\)]\)\>\"", ",", 
               RowBox[{"FontSize", "\[Rule]", 
                RowBox[{"OptionValue", "[", "FontSize", "]"}]}]}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{
               FractionBox["blueX", "2"], ",", 
               FractionBox["blueY", "2"]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"Left", ",", "Top"}], "}"}]}], "]"}]}], "}"}], ",", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Thickness", "@", 
            RowBox[{"OptionValue", "[", "photonThickness", "]"}]}], ",", 
           "Dashed", ",", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"OptionValue", "[", "\[Gamma]Q", "]"}], ",", 
             RowBox[{"Opacity", "[", "1", "]"}], ",", 
             RowBox[{"Opacity", "[", "0", "]"}]}], "]"}], ",", "Red", ",", 
           RowBox[{"Line", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"redX", ",", "redY"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"observerX", ",", "observerY"}], "}"}]}], "}"}], 
            "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"Red", ",", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"OptionValue", "[", "\[Gamma]Q", "]"}], ",", 
             RowBox[{"Opacity", "[", "1", "]"}], ",", 
             RowBox[{"Opacity", "[", "0", "]"}]}], "]"}], ",", 
           RowBox[{"Text", "[", 
            RowBox[{
             RowBox[{"Style", "[", 
              RowBox[{"\"\<\[Gamma]\>\"", ",", 
               RowBox[{"FontSize", "\[Rule]", 
                RowBox[{"OptionValue", "[", "FontSize", "]"}]}]}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{
               FractionBox[
                RowBox[{"redX", "+", "observerX"}], "2"], ",", 
               FractionBox[
                RowBox[{"redY", "+", "observerY"}], "2"]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"Right", ",", "Bottom"}], "}"}]}], "]"}]}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Thickness", "@", 
            RowBox[{"OptionValue", "[", "photonThickness", "]"}]}], ",", 
           "Dashed", ",", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"OptionValue", "[", "\[Gamma]Q", "]"}], ",", 
             RowBox[{"Opacity", "[", "1", "]"}], ",", 
             RowBox[{"Opacity", "[", "0", "]"}]}], "]"}], ",", "Blue", ",", 
           RowBox[{"Line", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"blueX", ",", "blueY"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"observerX", ",", "observerY"}], "}"}]}], "}"}], 
            "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"Blue", ",", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"OptionValue", "[", "\[Gamma]Q", "]"}], ",", 
             RowBox[{"Opacity", "[", "1", "]"}], ",", 
             RowBox[{"Opacity", "[", "0", "]"}]}], "]"}], ",", 
           RowBox[{"Text", "[", 
            RowBox[{
             RowBox[{"Style", "[", 
              RowBox[{"\"\<\[Gamma]\>\"", ",", 
               RowBox[{"FontSize", "\[Rule]", 
                RowBox[{"OptionValue", "[", "FontSize", "]"}]}]}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{
               FractionBox[
                RowBox[{"blueX", "+", "observerX"}], "2"], ",", 
               FractionBox[
                RowBox[{"blueY", "+", "observerY"}], "2"]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"Left", ",", "Top"}], "}"}]}], "]"}]}], "}"}]}], 
        "\[IndentingNewLine]", "}"}], ",", 
       RowBox[{"ImageSize", "\[Rule]", 
        RowBox[{"OptionValue", "[", "ImageSize", "]"}]}], ",", " ", 
       RowBox[{"PlotRange", "\[Rule]", 
        RowBox[{"OptionValue", "[", "PlotRange", "]"}]}]}], "]"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.59584258302489*^9, 3.595842753897132*^9}, {
   3.595842866470069*^9, 3.595843023059347*^9}, {3.5958430677816467`*^9, 
   3.5958431941824017`*^9}, {3.5958432468544703`*^9, 
   3.5958433680383453`*^9}, {3.595843411558457*^9, 3.595843466852075*^9}, {
   3.595843589814559*^9, 3.595843653036922*^9}, {3.595843689915534*^9, 
   3.5958438100033903`*^9}, {3.595843842998906*^9, 3.5958438754186993`*^9}, {
   3.595843969664946*^9, 3.595843974288438*^9}, {3.5958442447811728`*^9, 
   3.595844349814054*^9}, {3.5958443821882467`*^9, 3.595844386748435*^9}, {
   3.595844431570077*^9, 3.595844581710051*^9}, {3.595844618032076*^9, 
   3.59584462104147*^9}, {3.5958446821784277`*^9, 3.595844716593995*^9}, {
   3.5958447754309*^9, 3.5958448139534473`*^9}, {3.595845024716194*^9, 
   3.59584502485439*^9}, {3.5958450743307457`*^9, 3.5958450760711184`*^9}, {
   3.595845183381014*^9, 3.59584519873508*^9}, {3.59584536487819*^9, 
   3.595845444892994*^9}, {3.595845705009416*^9, 3.5958457194954367`*^9}, {
   3.5958458838966007`*^9, 3.5958460190174026`*^9}, 3.595846061056314*^9, {
   3.5958460984306393`*^9, 3.5958461008570633`*^9}, {3.595846200546546*^9, 
   3.595846320547361*^9}, {3.595846450287627*^9, 3.595846462244567*^9}, {
   3.5958475282773314`*^9, 3.595847528385499*^9}, {3.595848673673086*^9, 
   3.595848796691436*^9}, {3.5958488696301737`*^9, 3.595848929712049*^9}, {
   3.5958489929252*^9, 3.5958490331062098`*^9}, {3.595849351285133*^9, 
   3.5958494242021923`*^9}, {3.595849479102297*^9, 3.595849487878209*^9}, {
   3.5958495186465054`*^9, 3.595849570512732*^9}, {3.5958496083863277`*^9, 
   3.595849713154964*^9}, {3.5958497690272627`*^9, 3.5958497731039343`*^9}, {
   3.5958498062182198`*^9, 3.595849948287118*^9}, {3.595850001929093*^9, 
   3.595850049835208*^9}, {3.5958500861973257`*^9, 3.5958501796312313`*^9}, {
   3.5958503872146177`*^9, 3.595850410469344*^9}, {3.595850909831037*^9, 
   3.595850958011393*^9}, {3.595851096062984*^9, 3.5958511093251038`*^9}, {
   3.596106391455682*^9, 3.596106432801447*^9}, {3.5961066456897917`*^9, 
   3.596106795833003*^9}, {3.596106829082934*^9, 3.596106829647687*^9}, {
   3.596688117293392*^9, 3.596688157190686*^9}, {3.596688190391107*^9, 
   3.596688233012302*^9}, {3.596688265779335*^9, 3.5966883863185263`*^9}, {
   3.596688515421413*^9, 3.596688541441328*^9}, {3.596688588310276*^9, 
   3.596688595438533*^9}, {3.5966886419729557`*^9, 3.5966887878932457`*^9}, {
   3.596688968852488*^9, 3.5966890781907883`*^9}, {3.596689172201785*^9, 
   3.596689218587696*^9}, {3.59668927951291*^9, 3.5966893196614733`*^9}, {
   3.5966893841110973`*^9, 3.596689479557109*^9}, {3.596689568825287*^9, 
   3.596689616188999*^9}, {3.596690070496655*^9, 3.596690163421999*^9}, {
   3.59669027622727*^9, 3.596690304155649*^9}, {3.596690434232877*^9, 
   3.5966905012092543`*^9}, {3.5967800124369993`*^9, 
   3.5967800815207453`*^9}, {3.5967812315048656`*^9, 3.596781250104906*^9}, {
   3.59678132901854*^9, 3.596781339422022*^9}, {3.596781472637253*^9, 
   3.596781530231028*^9}, {3.5967815615265913`*^9, 3.596781647606608*^9}, {
   3.5967817093056307`*^9, 3.596781729475387*^9}, {3.596781799871976*^9, 
   3.596781937873871*^9}, {3.5967819829703217`*^9, 3.5967820599275084`*^9}, {
   3.596782245816938*^9, 3.596782249579554*^9}, {3.596782289364414*^9, 
   3.596782290228119*^9}, {3.596782384571208*^9, 3.596782426406927*^9}, {
   3.59689771717618*^9, 3.5968977319336023`*^9}, 3.59689786687252*^9, {
   3.596897941633535*^9, 3.596897942228009*^9}, {3.596898036237802*^9, 
   3.596898091585781*^9}, {3.5990189917401447`*^9, 3.599019013321988*^9}, {
   3.599019082329637*^9, 3.599019088026582*^9}, 3.599128626739867*^9, {
   3.5991288263916597`*^9, 3.5991288267333593`*^9}, {3.601435599499205*^9, 
   3.601435603954722*^9}, {3.6014359735382*^9, 3.601435975282405*^9}, {
   3.6014361354465923`*^9, 3.6014361375768423`*^9}, {3.601436217300077*^9, 
   3.601436311080729*^9}, {3.601436524669517*^9, 3.601436549154744*^9}, {
   3.601438135486614*^9, 3.601438211479575*^9}, {3.601438255628953*^9, 
   3.6014383666959953`*^9}, {3.6014384109282293`*^9, 3.601438435990241*^9}, {
   3.601529779770904*^9, 3.6015297930707073`*^9}, {3.6015298356640873`*^9, 
   3.6015298494016027`*^9}, {3.601529887048574*^9, 3.60152988717455*^9}, {
   3.6015467050791073`*^9, 3.601546734246442*^9}, {3.603446330880986*^9, 
   3.6034463605953197`*^9}, {3.603446400763254*^9, 3.60344642557104*^9}, {
   3.6034465070361233`*^9, 3.603446592925652*^9}, 3.603446797266532*^9, {
   3.609660890224654*^9, 3.609660898681086*^9}, {3.6096612391605797`*^9, 
   3.609661245155401*^9}, {3.609661868408957*^9, 3.609661932602298*^9}, {
   3.6096651545440903`*^9, 3.6096651559508142`*^9}, {3.610720046549816*^9, 
   3.610720052234819*^9}, {3.610720104344345*^9, 3.610720104647216*^9}, {
   3.610720310244697*^9, 3.610720326779838*^9}, {3.61072039410436*^9, 
   3.610720394384261*^9}, {3.6107205158281317`*^9, 3.610720528916087*^9}, {
   3.6107206071095324`*^9, 3.610720607464864*^9}, {3.610723656865871*^9, 
   3.6107236622545443`*^9}, {3.6107237211775293`*^9, 
   3.6107237213033047`*^9}, {3.610724118508465*^9, 3.610724121278502*^9}, {
   3.610724166668919*^9, 3.61072417352684*^9}, {3.61072433786377*^9, 
   3.6107243672465878`*^9}, {3.6107244167813168`*^9, 3.61072445954688*^9}, {
   3.610875832348934*^9, 3.610875840140326*^9}, {3.610875892796186*^9, 
   3.61087604602976*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Error bars", "Subsubsection",
 CellChangeTimes->{{3.609641542201913*^9, 3.609641544440967*^9}, 
   3.609641639687296*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"errorBar", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"x1_", ",", "x2_"}], "}"}], ",", "y_", ",", "height_", ",", 
     "arrowQ_", ",", "label_"}], "]"}], ":=", 
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{"arrowQ", ",", "Arrow", ",", "Line"}], "]"}], "@", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"x1", ",", "y"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"x2", ",", "y"}], "}"}]}], "}"}]}], ",", 
      RowBox[{"Line", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"x1", ",", 
           RowBox[{"y", "-", "height"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"x1", ",", 
           RowBox[{"y", "+", "height"}]}], "}"}]}], "}"}], "]"}], ",", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"!", "arrowQ"}], ",", 
        RowBox[{"Line", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"x2", ",", 
             RowBox[{"y", "-", "height"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"x2", ",", 
             RowBox[{"y", "+", "height"}]}], "}"}]}], "}"}], "]"}]}], "]"}], 
      ",", 
      RowBox[{"Text", "[", 
       RowBox[{"label", ",", 
        RowBox[{"Scaled", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{".01", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"x1", ",", "y"}], "}"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"Left", ",", "Bottom"}], "}"}]}], "]"}]}], "}"}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->CompressedData["
1:eJwdy08oQwEAx/F5O0yYhW2ZllqxtBRxUNoOb2vKxJb/csJ22EE0HJS2207U
TouLjFlmolFqzcQWm4iV7eB/00o9lj+zTGHe7x2+fU5fyfBYp4FgsVgVdNAp
MxDuMEW6iorZ8Fy7kA+FqpAA+l8PG+GLc1QBKWtTHywVrDKabt82oNnmiDK/
W3QHxcqSBPT9ilweWuX0sgfWRsq8cPfAwGgZ3GKvRChyNhdmbOsXa6Vn9H+t
0sH694EeqCsI9EJ93mQ8lqTIGTPvHq5fcp7ho0ydgrm60Ae8kBvTkHs0p4zT
NicL1fBvJ6uB9lajFk5k5CNw6VvH6A2qT9szFMnfdkShVaKPweObE8Z9m+gK
+sbJBIz5559gy9dDGq7JuogO2s3PBg5MdQe4UMi28+DU4h4flldlGYmhn0po
UgQlUF9tkcKMhlcD/wEOPeyZ
  "]]
}, Closed]],

Cell[CellGroupData[{

Cell["Burst CDF plots", "Subsubsection",
 CellChangeTimes->{{3.6096356740518293`*^9, 3.6096356769858437`*^9}, {
  3.6096524565163717`*^9, 3.60965245697884*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "burstCDFPlot", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"MaxRecursion", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"colors", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"ColorData", "[", 
         RowBox[{"97", ",", "4"}], "]"}], ",", 
        RowBox[{"ColorData", "[", 
         RowBox[{"97", ",", "1"}], "]"}]}], "}"}]}], ",", 
     RowBox[{"FontSize", "\[Rule]", "10"}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"PlotPoints", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"frameColor", "\[Rule]", "Black"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"burstCDFPlot", "[", 
   RowBox[{"universe_", ",", "burst_", ",", "observer_", ",", 
    RowBox[{"\[Omega]_", "?", "ListQ"}], ",", 
    RowBox[{"\[Kappa]_", "?", "ListQ"}], ",", 
    RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"dur", ",", "p\[Infinity]", ",", "func"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"dur", "=", 
      RowBox[{"Max", "[", 
       RowBox[{
        RowBox[{"duration", "[", 
         RowBox[{"universe", ",", "burst", ",", "observer", ",", 
          RowBox[{"\[Omega]", "\[LeftDoubleBracket]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "2"}], ",", 
             RowBox[{"-", "1"}]}], "}"}], "\[RightDoubleBracket]"}]}], "]"}], 
        ",", 
        RowBox[{"duration", "[", 
         RowBox[{"universe", ",", "burst", ",", "observer", ",", 
          RowBox[{"\[Omega]", "\[LeftDoubleBracket]", 
           RowBox[{"{", 
            RowBox[{"1", ",", "2"}], "}"}], "\[RightDoubleBracket]"}]}], 
         "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"p\[Infinity]", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"p", "[", 
         RowBox[{"universe", ",", "burst", ",", "observer", ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "\[Infinity]"}], "}"}], ",", 
          RowBox[{"\[Omega]", "\[LeftDoubleBracket]", 
           RowBox[{"{", 
            RowBox[{"it", ",", 
             RowBox[{"it", "+", "1"}]}], "}"}], "\[RightDoubleBracket]"}]}], 
         "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"it", ",", "1", ",", 
          RowBox[{
           RowBox[{"Length", "[", "\[Omega]", "]"}], "-", "1"}]}], "}"}]}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"func", "[", 
       RowBox[{
        RowBox[{"it_", "?", "IntegerQ"}], ",", 
        RowBox[{"\[Tau]_", "?", "NumericQ"}]}], "]"}], ":=", 
      FractionBox[
       RowBox[{"p", "[", 
        RowBox[{"universe", ",", "burst", ",", "observer", ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", 
           RowBox[{
            RowBox[{
            "\[Kappa]", "\[LeftDoubleBracket]", "it", 
             "\[RightDoubleBracket]"}], "\[Tau]"}]}], "}"}], ",", 
         RowBox[{"\[Omega]", "\[LeftDoubleBracket]", 
          RowBox[{"{", 
           RowBox[{"it", ",", 
            RowBox[{"it", "+", "1"}]}], "}"}], "\[RightDoubleBracket]"}]}], 
        "]"}], 
       RowBox[{
       "p\[Infinity]", "\[LeftDoubleBracket]", "it", 
        "\[RightDoubleBracket]"}]]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Plot", "[", 
      RowBox[{
       RowBox[{"Evaluate", "@", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"func", "[", 
           RowBox[{"it", ",", "\[Tau]"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"it", ",", "1", ",", 
            RowBox[{
             RowBox[{"Length", "[", "\[Omega]", "]"}], "-", "1"}]}], "}"}]}], 
         "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Tau]", ",", "0", ",", "dur"}], "}"}], ",", 
       RowBox[{"MaxRecursion", "\[Rule]", 
        RowBox[{"OptionValue", "[", "MaxRecursion", "]"}]}], ",", 
       RowBox[{"PlotPoints", "\[Rule]", 
        RowBox[{"OptionValue", "[", "PlotPoints", "]"}]}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"OptionValue", "[", "colors", "]"}]}], ",", 
       RowBox[{"PlotLegends", "\[Rule]", 
        RowBox[{"Placed", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Style", "[", 
             RowBox[{"\"\<0.1 \[Dash] 1 GeV\>\"", ",", 
              RowBox[{
               RowBox[{"OptionValue", "[", "colors", "]"}], 
               "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], ",", 
              RowBox[{"FontSize", "\[Rule]", 
               RowBox[{"OptionValue", "[", "FontSize", "]"}]}]}], "]"}], ",", 
            
            RowBox[{"Style", "[", 
             RowBox[{"\"\<1 \[Dash] 300 GeV\>\"", ",", 
              RowBox[{
               RowBox[{"OptionValue", "[", "colors", "]"}], 
               "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], ",", 
              RowBox[{"FontSize", "\[Rule]", 
               RowBox[{"OptionValue", "[", "FontSize", "]"}]}]}], "]"}]}], 
           "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0.79", ",", "0.20"}], "}"}]}], "]"}]}], ",", 
       RowBox[{"Frame", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"True", ",", "False"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"True", ",", "False"}], "}"}]}], "}"}]}], ",", 
       RowBox[{"LabelStyle", "\[Rule]", 
        RowBox[{"Directive", "[", 
         RowBox[{"FontSize", "\[Rule]", 
          RowBox[{"OptionValue", "[", "FontSize", "]"}]}], "]"}]}], ",", 
       RowBox[{"FrameLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"\"\<Time, sec\>\"", ",", "\"\<Photon Fraction\>\""}], 
         "}"}]}], ",", 
       RowBox[{"ImageSize", "\[Rule]", 
        RowBox[{"OptionValue", "[", "ImageSize", "]"}]}], ",", 
       RowBox[{"FrameStyle", "\[Rule]", 
        RowBox[{"OptionValue", "[", "frameColor", "]"}]}]}], "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]}], "Input",
 InitializationGroup->True,
 CellChangeTimes->{{3.607067648244553*^9, 3.6070677212325706`*^9}, {
   3.6070677751952333`*^9, 3.6070677969150457`*^9}, {3.607067833605997*^9, 
   3.607067847524274*^9}, {3.607068464278277*^9, 3.607068492395993*^9}, {
   3.607068540754813*^9, 3.60706860140585*^9}, {3.607068687594818*^9, 
   3.607068693987253*^9}, {3.60706874351721*^9, 3.6070688059328117`*^9}, {
   3.607068904558772*^9, 3.607068994318741*^9}, {3.6070690650575657`*^9, 
   3.607069065217391*^9}, {3.607069329216419*^9, 3.60706933494864*^9}, {
   3.607069762392427*^9, 3.607069820453231*^9}, {3.607499716878949*^9, 
   3.607499786309517*^9}, {3.607500301159832*^9, 3.6075003024643173`*^9}, {
   3.607500379343122*^9, 3.607500380177711*^9}, {3.6075004142806683`*^9, 
   3.607500414676704*^9}, {3.607500529791726*^9, 3.607500558412943*^9}, {
   3.607500599928042*^9, 3.607500600252599*^9}, {3.6075017254373302`*^9, 
   3.607501766993146*^9}, {3.6075019233173523`*^9, 3.607501925966104*^9}, {
   3.607502047717801*^9, 3.607502054814125*^9}, 3.607502170563231*^9, {
   3.6075026095641813`*^9, 3.6075026672346973`*^9}, {3.609643648929371*^9, 
   3.609643686025447*^9}, {3.6096440164082613`*^9, 3.609644018523982*^9}, {
   3.609652461981296*^9, 3.609652466402277*^9}, {3.609652630746831*^9, 
   3.6096526351383142`*^9}, {3.6096527562439137`*^9, 
   3.6096527916668158`*^9}, {3.609652922969138*^9, 3.6096529707579803`*^9}, {
   3.609653019608389*^9, 3.609653080803061*^9}, {3.6096536486630983`*^9, 
   3.609653683182067*^9}, {3.609653818603517*^9, 3.60965382212322*^9}, {
   3.6096539396162786`*^9, 3.609653939695815*^9}, {3.609654100859994*^9, 
   3.6096541010209703`*^9}, {3.6096651649341288`*^9, 
   3.6096651664042997`*^9}, {3.609911713905178*^9, 3.609911714006032*^9}, {
   3.6099120787644997`*^9, 3.609912079379607*^9}, {3.60992394723167*^9, 
   3.6099239612759447`*^9}, {3.609924097026326*^9, 3.609924097145648*^9}, {
   3.61076353534615*^9, 3.610763558795245*^9}, {3.610763807106895*^9, 
   3.6107638101862383`*^9}, {3.610764095289647*^9, 3.6107641047407513`*^9}, {
   3.6108471767852917`*^9, 3.610847195888309*^9}, 3.610847323719352*^9, {
   3.61084743541541*^9, 3.6108474358798513`*^9}, 3.6108699994333878`*^9, {
   3.610870031549775*^9, 3.610870141888207*^9}, {3.6108748888339443`*^9, 
   3.6108749132776127`*^9}, {3.610874950608392*^9, 3.610874951168803*^9}, {
   3.6108749906298447`*^9, 3.6108749937994347`*^9}, {3.610875042366027*^9, 
   3.610875054337077*^9}, {3.610875085044776*^9, 3.610875119396659*^9}, {
   3.6108751735460663`*^9, 3.610875173917103*^9}, {3.610875341421342*^9, 
   3.610875344766099*^9}, {3.610875378915504*^9, 3.6108754504751577`*^9}, {
   3.610876532331625*^9, 3.610876545765398*^9}, {3.61827855477871*^9, 
   3.618278557611898*^9}, {3.618351713507639*^9, 3.618351758431308*^9}, {
   3.618355558603239*^9, 3.618355577515705*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "cdfDifferencePlot", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{"MaxRecursion", "\[Rule]", "Automatic"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"cdfDifferencePlot", "[", 
   RowBox[{"universe_", ",", "burst_", ",", "observer_", ",", 
    RowBox[{"{", 
     RowBox[{"\[Omega]1_", ",", "\[Omega]2_", ",", "\[Omega]3_"}], "}"}], ",",
     "\[Kappa]_", ",", 
    RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"dur", ",", "p12\[Infinity]", ",", "p23\[Infinity]"}], "}"}], 
    ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"dur", "=", 
      RowBox[{"duration", "[", 
       RowBox[{"universe", ",", "burst", ",", "observer", ",", 
        RowBox[{"{", 
         RowBox[{"\[Omega]1", ",", "\[Omega]3"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"p12\[Infinity]", "=", 
      RowBox[{"p", "[", 
       RowBox[{"universe", ",", "burst", ",", "observer", ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "\[Infinity]"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"\[Omega]1", ",", "\[Omega]2"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"p23\[Infinity]", "=", 
      RowBox[{"p", "[", 
       RowBox[{"universe", ",", "burst", ",", "observer", ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "\[Infinity]"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"\[Omega]2", ",", "\[Omega]3"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Plot", "[", 
      RowBox[{
       RowBox[{
        FractionBox[
         RowBox[{"p", "[", 
          RowBox[{"universe", ",", "burst", ",", "observer", ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\[Omega]1", ",", "\[Omega]2"}], "}"}]}], "]"}], 
         "p12\[Infinity]"], "-", 
        FractionBox[
         RowBox[{"p", "[", 
          RowBox[{"universe", ",", "burst", ",", "observer", ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", 
             RowBox[{"\[Kappa]", " ", "\[Tau]"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\[Omega]2", ",", "\[Omega]3"}], "}"}]}], "]"}], 
         "p23\[Infinity]"]}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Tau]", ",", "0", ",", "dur"}], "}"}], ",", 
       RowBox[{"MaxRecursion", "\[Rule]", 
        RowBox[{"OptionValue", "[", "MaxRecursion", "]"}]}]}], "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]}], "Input",
 CellChangeTimes->{{3.607504155513013*^9, 3.607504356151989*^9}, {
  3.6075043986788063`*^9, 3.607504400915872*^9}, {3.609652472011272*^9, 
  3.609652474379068*^9}, {3.609652641137334*^9, 3.609652648061083*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["\[Kappa] Distribution plots", "Subsubsection",
 CellChangeTimes->{{3.609635686762416*^9, 3.6096356938577003`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "\[Kappa]HistogramPlot", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"FontSize", "\[Rule]", "10"}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"FrameStyle", "\[Rule]", "Black"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Kappa]HistogramPlot", "[", 
   RowBox[{"sample_", ",", "observations_", ",", 
    RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "histogram", ",", "errorBars", ",", "probabilityMax", ",", 
      "\[Kappa]Max"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"histogram", "=", 
      RowBox[{"Histogram", "[", 
       RowBox[{"sample", ",", "Automatic", ",", "\"\<Probability\>\"", ",", 
        RowBox[{"Frame", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"True", ",", "False"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"True", ",", "False"}], "}"}]}], "}"}]}], ",", 
        RowBox[{"FrameLabel", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"\"\<Stretching Factor\>\"", ",", "\"\<Probability\>\""}], 
          "}"}]}], ",", 
        RowBox[{"LabelStyle", "\[Rule]", 
         RowBox[{"Directive", "[", 
          RowBox[{"FontSize", "\[Rule]", 
           RowBox[{"OptionValue", "[", "FontSize", "]"}]}], "]"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"PlotRangePadding", "\[Rule]", "0"}], ",", 
        RowBox[{"PlotRange", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "Automatic"}], "}"}], ",", "Automatic"}], 
          "}"}]}], ",", 
        RowBox[{"Axes", "\[Rule]", "False"}], ",", 
        RowBox[{"FrameStyle", "\[Rule]", 
         RowBox[{"OptionValue", "[", "FrameStyle", "]"}]}], ",", 
        RowBox[{"ChartStyle", "\[Rule]", 
         RowBox[{"ColorData", "[", 
          RowBox[{"97", ",", "1"}], "]"}]}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"probabilityMax", "=", 
      RowBox[{
       RowBox[{"Max", "@", 
        RowBox[{
         RowBox[{"HistogramList", "[", "sample", "]"}], 
         "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], "/", 
       RowBox[{"Length", "[", "sample", "]"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[Kappa]Max", "=", 
      RowBox[{"Max", "@", 
       RowBox[{
        RowBox[{"HistogramList", "[", "sample", "]"}], "\[LeftDoubleBracket]",
         "1", "\[RightDoubleBracket]"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"errorBars", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"errorBar", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"observations", "\[LeftDoubleBracket]", 
             RowBox[{"it", ",", "2", ",", "1"}], "\[RightDoubleBracket]"}], 
            ",", 
            RowBox[{"Min", "[", 
             RowBox[{"\[Kappa]Max", ",", 
              RowBox[{"observations", "\[LeftDoubleBracket]", 
               RowBox[{"it", ",", "2", ",", "2"}], 
               "\[RightDoubleBracket]"}]}], "]"}]}], "}"}], ",", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1.", "-", 
             RowBox[{
              FractionBox["it", 
               RowBox[{"Length", "[", "observations", "]"}]], ".5"}]}], ")"}],
            "probabilityMax"}], ",", 
          RowBox[{
           FractionBox[".1", 
            RowBox[{"Length", "[", "observations", "]"}]], "probabilityMax"}],
           ",", 
          RowBox[{
           RowBox[{"observations", "\[LeftDoubleBracket]", 
            RowBox[{"it", ",", "2", ",", "2"}], "\[RightDoubleBracket]"}], 
           ">", "\[Kappa]Max"}], ",", 
          RowBox[{"ToString", "@", 
           RowBox[{"observations", "\[LeftDoubleBracket]", 
            RowBox[{"it", ",", "1"}], "\[RightDoubleBracket]"}]}]}], "]"}], 
        ",", 
        RowBox[{"{", 
         RowBox[{"it", ",", "1", ",", 
          RowBox[{"Length", "[", "observations", "]"}]}], "}"}]}], "]"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"Show", "[", 
      RowBox[{"histogram", ",", "errorBars", ",", 
       RowBox[{"ImageSize", "\[Rule]", 
        RowBox[{"OptionValue", "[", "ImageSize", "]"}]}]}], "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]}], "Input",
 CellChangeTimes->{{3.6096325436369867`*^9, 3.6096325729997272`*^9}, {
   3.609632659448071*^9, 3.6096327820752163`*^9}, {3.609632877426959*^9, 
   3.6096329845028267`*^9}, {3.609633025905328*^9, 3.609633028000568*^9}, {
   3.609633061090185*^9, 3.6096330612132072`*^9}, {3.609633698856621*^9, 
   3.609633712352748*^9}, {3.609633792712535*^9, 3.609633818887878*^9}, {
   3.609633911524974*^9, 3.609633947393527*^9}, {3.609633984341836*^9, 
   3.60963398720504*^9}, {3.609634048786607*^9, 3.609634152442082*^9}, {
   3.60963422568828*^9, 3.609634422837829*^9}, {3.609634568002009*^9, 
   3.6096346186308413`*^9}, {3.609634683287218*^9, 3.6096346995795*^9}, {
   3.609634782310048*^9, 3.6096348595212297`*^9}, {3.609634923995668*^9, 
   3.609634942425071*^9}, {3.6096349812660933`*^9, 3.609635006003834*^9}, {
   3.609635078854312*^9, 3.609635171220099*^9}, {3.60963526528478*^9, 
   3.609635269850947*^9}, {3.6096353727128067`*^9, 3.6096354118882103`*^9}, {
   3.6096354744781237`*^9, 3.60963555827558*^9}, {3.6096360973318996`*^9, 
   3.609636149886813*^9}, {3.609636208050192*^9, 3.6096362142677593`*^9}, {
   3.609636309768942*^9, 3.609636358251395*^9}, {3.609636454166279*^9, 
   3.609636487368813*^9}, {3.609638958180369*^9, 3.609638969854763*^9}, {
   3.6096465517053213`*^9, 3.6096465529041557`*^9}, {3.6096651756280603`*^9, 
   3.609665176491214*^9}, {3.610847726346786*^9, 3.610847731617579*^9}, {
   3.610847777895547*^9, 3.610847786839984*^9}, 3.618271011024225*^9, {
   3.6182718398763533`*^9, 3.618271839930924*^9}, {3.6182719416305513`*^9, 
   3.618271941691873*^9}, 3.618271972171145*^9, 3.618272002253192*^9, {
   3.618273920797964*^9, 3.6182739209091473`*^9}, {3.618276121755102*^9, 
   3.618276131177589*^9}, {3.618276189659122*^9, 3.6182762179923*^9}, {
   3.618276567484314*^9, 3.618276571787896*^9}, {3.6182768885147123`*^9, 
   3.6182768885619287`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "\[Kappa]CDFPlot", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"FontSize", "\[Rule]", "10"}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"PlotPoints", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"FrameStyle", "\[Rule]", "Black"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Kappa]CDFPlot", "[", 
    RowBox[{"sample_", ",", "observations_", ",", 
     RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"it", ",", "\[Kappa]2"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"\[Kappa]2", "=", 
       RowBox[{"Max", "[", 
        RowBox[{"observations", "\[LeftDoubleBracket]", 
         RowBox[{"All", ",", "2", ",", "2"}], "\[RightDoubleBracket]"}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Show", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Plot", "[", 
         RowBox[{
          RowBox[{"CDF", "[", 
           RowBox[{
            RowBox[{"EmpiricalDistribution", "[", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"Mean", "[", 
                RowBox[{
                "value", "\[LeftDoubleBracket]", "2", 
                 "\[RightDoubleBracket]"}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"value", ",", "observations"}], "}"}]}], "]"}], "]"}],
             ",", "\[Kappa]i"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"\[Kappa]i", ",", "0.", ",", 
            RowBox[{"1.01", "\[Kappa]2"}]}], "}"}], ",", 
          RowBox[{"PlotStyle", "\[Rule]", "Gray"}]}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"errorBar", "[", 
           RowBox[{
            RowBox[{"observations", "\[LeftDoubleBracket]", 
             RowBox[{"it", ",", "2"}], "\[RightDoubleBracket]"}], ",", 
            FractionBox[
             RowBox[{
              RowBox[{"2", "it"}], "-", "1"}], 
             RowBox[{"2", 
              RowBox[{"Length", "[", "observations", "]"}]}]], ",", "0.01", 
            ",", "False", ",", 
            RowBox[{"observations", "\[LeftDoubleBracket]", 
             RowBox[{"it", ",", "1"}], "\[RightDoubleBracket]"}]}], "]"}], 
          ",", 
          RowBox[{"{", 
           RowBox[{"it", ",", "1", ",", 
            RowBox[{"Length", "[", "observations", "]"}]}], "}"}]}], "]"}], 
        ",", "\[IndentingNewLine]", 
        RowBox[{"Plot", "[", 
         RowBox[{
          RowBox[{"CDF", "[", 
           RowBox[{
            RowBox[{"EmpiricalDistribution", "[", "sample", "]"}], ",", 
            "\[Kappa]i"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"\[Kappa]i", ",", "0.", ",", 
            RowBox[{"1.01", "\[Kappa]2"}]}], "}"}], ",", 
          RowBox[{"PlotRange", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", 
               RowBox[{"1.01", "\[Kappa]2"}]}], "}"}], ",", "All"}], "}"}]}], 
          ",", 
          RowBox[{"PlotStyle", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"ColorData", "[", 
              RowBox[{"97", ",", "1"}], "]"}], ",", "Thick"}], "}"}]}], ",", 
          RowBox[{"PlotPoints", "\[Rule]", 
           RowBox[{"OptionValue", "[", "PlotPoints", "]"}]}]}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"Frame", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"True", ",", "False"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"True", ",", "False"}], "}"}]}], "}"}]}], ",", 
        RowBox[{"FrameStyle", "\[Rule]", 
         RowBox[{"OptionValue", "[", "FrameStyle", "]"}]}], ",", 
        RowBox[{"FrameLabel", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"\"\<Stretching Factor\>\"", ",", "\"\<CDF\>\""}], "}"}]}], 
        ",", 
        RowBox[{"PlotRangePadding", "\[Rule]", "0"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"LabelStyle", "\[Rule]", 
         RowBox[{"Directive", "[", 
          RowBox[{"FontSize", "\[Rule]", 
           RowBox[{"OptionValue", "[", "FontSize", "]"}]}], "]"}]}], ",", 
        RowBox[{"Axes", "\[Rule]", "False"}], ",", 
        RowBox[{"ImageSize", "\[Rule]", 
         RowBox[{"OptionValue", "[", "ImageSize", "]"}]}]}], 
       "\[IndentingNewLine]", "]"}]}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.60963882598407*^9, 3.609638900852791*^9}, {
  3.6096389446211233`*^9, 3.609638946137813*^9}, {3.609644573175976*^9, 
  3.6096446049650517`*^9}, {3.609646555631206*^9, 3.6096465559736757`*^9}, {
  3.609650900556123*^9, 3.60965091966558*^9}, {3.609664658614739*^9, 
  3.609664658760437*^9}, {3.609664746538519*^9, 3.6096647567832727`*^9}, {
  3.609665179384776*^9, 3.609665180510923*^9}, {3.610847790438498*^9, 
  3.610847815659305*^9}, {3.610876347523224*^9, 3.610876368843339*^9}, {
  3.61827663453966*^9, 3.618276644494659*^9}, {3.61827688479604*^9, 
  3.6182768848388243`*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Correlation plots", "Subsubsection",
 CellChangeTimes->{{3.609641260312993*^9, 3.6096412625349283`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Needs", "[", "\"\<ErrorBarPlots`\>\"", "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.609642037060667*^9, 3.6096420445454483`*^9}, {
  3.609996928911669*^9, 3.609996937745859*^9}, {3.60999766248899*^9, 
  3.609997662606525*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "\[Chi]\[Kappa]ListPlot", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"FontSize", "\[Rule]", "10"}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"ImagePadding", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
     RowBox[{"FrameTicks", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"PointSize", "\[Rule]", "Small"}], ",", 
     RowBox[{"frameColor", "\[Rule]", "Black"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Chi]\[Kappa]ListPlot", "[", 
   RowBox[{"sample_", ",", 
    RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], ":=", 
  RowBox[{"ListLogLinearPlot", "[", 
   RowBox[{
    RowBox[{"Transpose", "@", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"sample", "\[LeftDoubleBracket]", 
        RowBox[{"All", ",", "2"}], "\[RightDoubleBracket]"}], ",", 
       RowBox[{"sample", "\[LeftDoubleBracket]", 
        RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}]}], "}"}]}], ",", 
    
    RowBox[{"Frame", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"True", ",", "False"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"True", ",", "False"}], "}"}]}], "}"}]}], ",", 
    RowBox[{"FrameLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<Stretching Factor\>\"", ",", "\"\<Off-axis angle\>\""}], 
      "}"}]}], ",", 
    RowBox[{"LabelStyle", "\[Rule]", 
     RowBox[{"Directive", "[", 
      RowBox[{"FontSize", "\[Rule]", 
       RowBox[{"OptionValue", "[", "FontSize", "]"}]}], "]"}]}], ",", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"OptionValue", "[", "PlotRange", "]"}]}], ",", 
    RowBox[{"ImageSize", "\[Rule]", 
     RowBox[{"OptionValue", "[", "ImageSize", "]"}]}], ",", 
    RowBox[{"ImagePadding", "\[Rule]", 
     RowBox[{"OptionValue", "[", "ImagePadding", "]"}]}], ",", 
    RowBox[{"FrameTicks", "\[Rule]", 
     RowBox[{"OptionValue", "[", "FrameTicks", "]"}]}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"Directive", "[", 
      RowBox[{"PointSize", "\[Rule]", 
       RowBox[{"OptionValue", "[", "PointSize", "]"}]}], "]"}]}], ",", 
    RowBox[{"FrameStyle", "\[Rule]", 
     RowBox[{"OptionValue", "[", "frameColor", "]"}]}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.609641279011052*^9, 3.609641295375565*^9}, {
   3.609641392477601*^9, 3.609641401986206*^9}, {3.609641441136017*^9, 
   3.609641442379567*^9}, {3.609641480237706*^9, 3.609641537466012*^9}, {
   3.609641885471024*^9, 3.609641936324978*^9}, {3.6096420508532467`*^9, 
   3.609642077731365*^9}, {3.609642119226645*^9, 3.609642195179572*^9}, {
   3.60964222606548*^9, 3.6096422308482847`*^9}, {3.609642277503998*^9, 
   3.6096423118394947`*^9}, {3.609642350886146*^9, 3.609642365956815*^9}, {
   3.609644830582081*^9, 3.609644830834968*^9}, {3.6096449860870447`*^9, 
   3.6096450027812033`*^9}, {3.609645190518502*^9, 3.609645192383938*^9}, {
   3.609646301434123*^9, 3.6096463549770403`*^9}, {3.6096464021756*^9, 
   3.6096464023135233`*^9}, 3.6096466547963543`*^9, {3.609648216544531*^9, 
   3.609648231520274*^9}, {3.609648754629854*^9, 3.609648765533299*^9}, {
   3.609649014986142*^9, 3.609649036568336*^9}, {3.6096651882484417`*^9, 
   3.6096651893281593`*^9}, {3.6097583666846027`*^9, 
   3.6097584096757317`*^9}, {3.60999664063404*^9, 3.609996690218821*^9}, {
   3.609996964953442*^9, 3.609996966218875*^9}, 3.609998130583955*^9, {
   3.610000520976674*^9, 3.610000558762969*^9}, {3.610001063883407*^9, 
   3.61000107357134*^9}, {3.610002040257538*^9, 3.610002047061574*^9}, {
   3.610589274055587*^9, 3.610589307156163*^9}, {3.6105893445805187`*^9, 
   3.610589345133417*^9}, {3.610589453787155*^9, 3.6105894557679377`*^9}, {
   3.610589493474124*^9, 3.61058955410306*^9}, {3.610937966050233*^9, 
   3.6109380151405277`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "ratio\[Kappa]ListPlot", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"FontSize", "\[Rule]", "10"}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"ImagePadding", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
     RowBox[{"FrameTicks", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"PointSize", "\[Rule]", "Small"}], ",", 
     RowBox[{"frameColor", "\[Rule]", "Black"}], ",", 
     RowBox[{"log\[Kappa]Scale", "\[Rule]", "True"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ratio\[Kappa]ListPlot", "[", 
   RowBox[{"sample_", ",", "observations_", ",", 
    RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], ":=", 
  RowBox[{"Show", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Apply", "[", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"OptionValue", "[", "log\[Kappa]Scale", "]"}], ",", 
        "ListLogLogPlot", ",", "ListLogLinearPlot"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Transpose", "@", 
         RowBox[{"{", 
          RowBox[{
           FractionBox[
            RowBox[{"sample", "\[LeftDoubleBracket]", 
             RowBox[{"All", ",", "2"}], "\[RightDoubleBracket]"}], 
            RowBox[{
             RowBox[{"sample", "\[LeftDoubleBracket]", 
              RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], "+", 
             RowBox[{"sample", "\[LeftDoubleBracket]", 
              RowBox[{"All", ",", "2"}], "\[RightDoubleBracket]"}]}]], ",", 
           RowBox[{"sample", "\[LeftDoubleBracket]", 
            RowBox[{"All", ",", "3"}], "\[RightDoubleBracket]"}]}], "}"}]}], 
        ",", 
        RowBox[{"Frame", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"True", ",", "False"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"True", ",", "False"}], "}"}]}], "}"}]}], ",", 
        RowBox[{"FrameLabel", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
          "\"\<Fraction of high energy photons\>\"", ",", 
           "\"\<Stretching Factor\>\""}], "}"}]}], ",", 
        RowBox[{"FrameStyle", "\[Rule]", 
         RowBox[{"OptionValue", "[", "frameColor", "]"}]}], ",", 
        RowBox[{"LabelStyle", "\[Rule]", 
         RowBox[{"Directive", "[", 
          RowBox[{"FontSize", "\[Rule]", 
           RowBox[{"OptionValue", "[", "FontSize", "]"}]}], "]"}]}], ",", 
        RowBox[{"PlotRange", "\[Rule]", 
         RowBox[{"OptionValue", "[", "PlotRange", "]"}]}], ",", 
        RowBox[{"FrameTicks", "\[Rule]", 
         RowBox[{"OptionValue", "[", "FrameTicks", "]"}]}], ",", 
        RowBox[{"PlotStyle", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"ColorData", "[", 
            RowBox[{"97", ",", "1"}], "]"}], ",", 
           RowBox[{"Directive", "[", 
            RowBox[{"PointSize", "\[Rule]", 
             RowBox[{"OptionValue", "[", "PointSize", "]"}]}], "]"}]}], 
          "}"}]}]}], "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Length", "@", "observations"}], ">", "0"}], ",", 
      RowBox[{
       RowBox[{"ErrorListPlot", "[", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Mean", "/@", 
              RowBox[{"obs", "\[LeftDoubleBracket]", 
               RowBox[{"{", 
                RowBox[{"2", ",", "3"}], "}"}], "\[RightDoubleBracket]"}]}], 
             ",", 
             RowBox[{"Apply", "[", 
              RowBox[{"ErrorBar", ",", 
               RowBox[{
                RowBox[{
                 FractionBox[
                  RowBox[{
                   RowBox[{"Differences", "[", "#", "]"}], 
                   "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
                  "2"], "&"}], "/@", 
                RowBox[{"obs", "\[LeftDoubleBracket]", 
                 RowBox[{"{", 
                  RowBox[{"2", ",", "3"}], "}"}], 
                 "\[RightDoubleBracket]"}]}]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"obs", ",", "observations"}], "}"}]}], "]"}], ",", 
         RowBox[{"PlotStyle", "\[Rule]", "Black"}]}], "]"}], "/.", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"x_Real", ",", "y_Real"}], "}"}], "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Log", "@", "x"}], ",", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"OptionValue", "[", "log\[Kappa]Scale", "]"}], ",", 
             "Log", ",", "Identity"}], "]"}], "@", "y"}]}], "}"}]}]}], ",", 
      RowBox[{"Graphics", "[", "]"}]}], "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{"Graphics", "[", 
     RowBox[{"Table", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Text", "[", 
        RowBox[{
         RowBox[{"observations", "\[LeftDoubleBracket]", 
          RowBox[{"i", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
         RowBox[{"Scaled", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{".01", ",", "0"}], "}"}], ",", 
           RowBox[{"Log", "@", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Mean", "[", 
               RowBox[{"observations", "\[LeftDoubleBracket]", 
                RowBox[{"i", ",", "2"}], "\[RightDoubleBracket]"}], "]"}], 
              ",", 
              RowBox[{"observations", "\[LeftDoubleBracket]", 
               RowBox[{"i", ",", "3", ",", 
                RowBox[{"observations", "\[LeftDoubleBracket]", 
                 RowBox[{"i", ",", "4"}], "\[RightDoubleBracket]"}]}], 
               "\[RightDoubleBracket]"}]}], "}"}]}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"Left", ",", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"observations", "\[LeftDoubleBracket]", 
               RowBox[{"i", ",", "4"}], "\[RightDoubleBracket]"}], "\[Equal]",
               "2"}], ",", "Top", ",", "Bottom"}], "]"}]}], "}"}]}], "]"}], 
       "\[IndentingNewLine]", ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{"Length", "[", "observations", "]"}]}], "}"}]}], "]"}], 
     "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{"Axes", "\[Rule]", "False"}], ",", 
    RowBox[{"ImageSize", "\[Rule]", 
     RowBox[{"OptionValue", "[", "ImageSize", "]"}]}], ",", 
    RowBox[{"ImagePadding", "\[Rule]", 
     RowBox[{"OptionValue", "[", "ImagePadding", "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]}], "Input",
 CellChangeTimes->{{3.609641279011052*^9, 3.609641295375565*^9}, {
   3.609641392477601*^9, 3.609641401986206*^9}, {3.609641441136017*^9, 
   3.609641442379567*^9}, {3.609641480237706*^9, 3.609641537466012*^9}, {
   3.609641885471024*^9, 3.609641936324978*^9}, {3.6096420508532467`*^9, 
   3.609642077731365*^9}, {3.609642119226645*^9, 3.609642195179572*^9}, {
   3.60964222606548*^9, 3.6096422308482847`*^9}, {3.609642277503998*^9, 
   3.6096423118394947`*^9}, {3.609642350886146*^9, 3.609642365956815*^9}, {
   3.609642416432074*^9, 3.609642430618224*^9}, {3.609642577990877*^9, 
   3.609642635828002*^9}, {3.609645154438546*^9, 3.609645178192333*^9}, {
   3.609645563771699*^9, 3.609645565326478*^9}, {3.609645936315946*^9, 
   3.609645977766192*^9}, {3.609646387458065*^9, 3.609646463075059*^9}, 
   3.609646656516675*^9, {3.609648306612466*^9, 3.609648318813725*^9}, {
   3.6096487686779537`*^9, 3.6096487828788223`*^9}, {3.60964881456*^9, 
   3.60964882695549*^9}, {3.609649524092677*^9, 3.609649536824375*^9}, {
   3.6096651923782167`*^9, 3.60966519314334*^9}, {3.609758430326338*^9, 
   3.60975844917204*^9}, {3.609995145700523*^9, 3.609995158111725*^9}, {
   3.609996303171307*^9, 3.60999630786156*^9}, {3.609996357389161*^9, 
   3.609996360763049*^9}, {3.609996425798112*^9, 3.609996430300147*^9}, {
   3.609996713304719*^9, 3.609996715055073*^9}, {3.6099969688512573`*^9, 
   3.609996969485546*^9}, {3.6099984008561687`*^9, 3.609998402423579*^9}, {
   3.60999871252*^9, 3.609998761198254*^9}, {3.609998906092676*^9, 
   3.6099989163231916`*^9}, {3.610001041007011*^9, 3.610001060662347*^9}, {
   3.610001467224742*^9, 3.610001467740533*^9}, {3.610002020498968*^9, 
   3.610002025025519*^9}, {3.6105895655612383`*^9, 3.6105895925343*^9}, {
   3.610938024921632*^9, 3.610938050380715*^9}, {3.610938600259042*^9, 
   3.610938608151949*^9}, {3.6109386604237022`*^9, 3.61093866972337*^9}, {
   3.610938715060627*^9, 3.610938782084496*^9}, {3.6109388528520937`*^9, 
   3.6109388822496147`*^9}, {3.6109390213512506`*^9, 3.610939066753594*^9}, {
   3.610939114134429*^9, 3.610939159905026*^9}, {3.6182721310108757`*^9, 
   3.618272205186247*^9}, {3.618272582002495*^9, 3.6182726324678583`*^9}, {
   3.6182726804130163`*^9, 3.61827271393532*^9}, {3.6182727441878633`*^9, 
   3.618272745273991*^9}, {3.618272900161881*^9, 3.6182729019336157`*^9}, {
   3.618273041430027*^9, 3.6182731042798986`*^9}, {3.618273137208632*^9, 
   3.618273156588009*^9}, {3.6182732709799623`*^9, 3.6182733030797853`*^9}, {
   3.618273385658927*^9, 3.6182733898186274`*^9}, {3.618273442754015*^9, 
   3.618273452040097*^9}, {3.6182767281619797`*^9, 3.618276749485835*^9}, {
   3.618276873630045*^9, 3.6182768736704693`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "ratio\[Chi]ListPlot", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"FontSize", "\[Rule]", "10"}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"ImagePadding", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
     RowBox[{"FrameTicks", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"PointSize", "\[Rule]", "Small"}], ",", 
     RowBox[{"frameColor", "\[Rule]", "Black"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ratio\[Chi]ListPlot", "[", 
   RowBox[{"sample_", ",", 
    RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], ":=", 
  RowBox[{"ListLogLinearPlot", "[", 
   RowBox[{
    RowBox[{"Transpose", "@", 
     RowBox[{"{", 
      RowBox[{
       FractionBox[
        RowBox[{"sample", "\[LeftDoubleBracket]", 
         RowBox[{"All", ",", "3"}], "\[RightDoubleBracket]"}], 
        RowBox[{
         RowBox[{"sample", "\[LeftDoubleBracket]", 
          RowBox[{"All", ",", "2"}], "\[RightDoubleBracket]"}], "+", 
         RowBox[{"sample", "\[LeftDoubleBracket]", 
          RowBox[{"All", ",", "3"}], "\[RightDoubleBracket]"}]}]], ",", 
       RowBox[{"sample", "\[LeftDoubleBracket]", 
        RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}]}], "}"}]}], ",", 
    
    RowBox[{"Frame", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"True", ",", "False"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"True", ",", "False"}], "}"}]}], "}"}]}], ",", 
    RowBox[{"FrameLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<Fraction of high energy photons\>\"", ",", 
       "\"\<Off-axis angle\>\""}], "}"}]}], ",", 
    RowBox[{"LabelStyle", "\[Rule]", 
     RowBox[{"Directive", "[", 
      RowBox[{"FontSize", "\[Rule]", 
       RowBox[{"OptionValue", "[", "FontSize", "]"}]}], "]"}]}], ",", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"OptionValue", "[", "PlotRange", "]"}]}], ",", 
    RowBox[{"ImageSize", "\[Rule]", 
     RowBox[{"OptionValue", "[", "ImageSize", "]"}]}], ",", 
    RowBox[{"ImagePadding", "\[Rule]", 
     RowBox[{"OptionValue", "[", "ImagePadding", "]"}]}], ",", 
    RowBox[{"FrameTicks", "\[Rule]", 
     RowBox[{"OptionValue", "[", "FrameTicks", "]"}]}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"Directive", "[", 
      RowBox[{"PointSize", "\[Rule]", 
       RowBox[{"OptionValue", "[", "PointSize", "]"}]}], "]"}]}], ",", 
    RowBox[{"FrameStyle", "\[Rule]", 
     RowBox[{"OptionValue", "[", "frameColor", "]"}]}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.609641279011052*^9, 3.609641295375565*^9}, {
   3.609641392477601*^9, 3.609641401986206*^9}, {3.609641441136017*^9, 
   3.609641442379567*^9}, {3.609641480237706*^9, 3.609641537466012*^9}, {
   3.609641885471024*^9, 3.609641936324978*^9}, {3.6096420508532467`*^9, 
   3.609642077731365*^9}, {3.609642119226645*^9, 3.609642195179572*^9}, {
   3.60964222606548*^9, 3.6096422308482847`*^9}, {3.609642277503998*^9, 
   3.6096423118394947`*^9}, {3.609642350886146*^9, 3.609642365956815*^9}, {
   3.609642416432074*^9, 3.609642430618224*^9}, {3.60964254240475*^9, 
   3.609642561438034*^9}, {3.609642700788495*^9, 3.6096427126318827`*^9}, {
   3.6096451971597843`*^9, 3.609645212529265*^9}, {3.609645552355853*^9, 
   3.609645552616294*^9}, {3.6096460972835217`*^9, 3.609646097817787*^9}, {
   3.6096464431171503`*^9, 3.6096464898844023`*^9}, {3.609646659412133*^9, 
   3.609646725256134*^9}, {3.609646793993126*^9, 3.6096468007554493`*^9}, {
   3.6096468524234743`*^9, 3.609646859636047*^9}, {3.609648275705935*^9, 
   3.6096482900080957`*^9}, {3.6096489787422047`*^9, 3.609649008784285*^9}, {
   3.609649543886816*^9, 3.6096495542799187`*^9}, {3.609665196681342*^9, 
   3.6096651974667883`*^9}, 3.609995164666066*^9, {3.6099963450573597`*^9, 
   3.60999635104795*^9}, {3.609996436302801*^9, 3.6099964441976967`*^9}, {
   3.609996975473761*^9, 3.609996976464491*^9}, {3.610000400430552*^9, 
   3.610000497374262*^9}, {3.610001025812619*^9, 3.610001035935293*^9}, {
   3.6100020312188997`*^9, 3.6100020517823668`*^9}, {3.6105895982926083`*^9, 
   3.610589615038868*^9}, {3.6109380632337427`*^9, 3.610938073809847*^9}, {
   3.6109381725236387`*^9, 3.610938176499041*^9}}]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Results", "Subsection",
 CellChangeTimes->{{3.6074998753290052`*^9, 3.6074998783107767`*^9}}],

Cell[CellGroupData[{

Cell["Minimization", "Subsubsection",
 CellChangeTimes->{{3.60749989928918*^9, 3.607499900687396*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"PrintTemporary", "[", 
   RowBox[{"Dynamic", "[", 
    RowBox[{"{", 
     RowBox[{"z", ",", "z1", ",", "z2"}], "}"}], "]"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"PrintTemporary", "[", 
   RowBox[{"Dynamic", "[", 
    RowBox[{"{", 
     RowBox[{"\[Chi]", ",", "\[Chi]0"}], "}"}], "]"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"PrintTemporary", "[", 
   RowBox[{"Dynamic", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Length", "[", "pointsChosen", "]"}], ",", "startedCount", ",", 
      "completedCount"}], "}"}], "]"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"findSingleBurstFit", "[", 
  RowBox[{
   RowBox[{"defaultUniverse", "[", "]"}], ",", 
   RowBox[{"defaultPopulation", "[", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"300", ",", "1"}], "}"}], ",", "2.1062", ",", 
   RowBox[{"{", 
    RowBox[{".1", ",", "1", ",", "\[Infinity]"}], "}"}], ",", 
   "totalPhotonCount090926A", ",", 
   RowBox[{"{", 
    RowBox[{"\[Kappa]LogTarget090926A", ",", "\[Kappa]LogError090926A"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Kappa]LogTarget090902B", ",", "\[Kappa]LogError090902B"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"photonRatioLogTarget090926A", ",", 
     RowBox[{"Log", "[", "10.", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     RowBox[{"Log", "[", "10.", "]"}]}], "}"}], ",", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"22.1525", ",", 
       RowBox[{"Log", "[", "0.000216424", "]"}], ",", 
       RowBox[{"-", "0.417021"}], ",", 
       RowBox[{"-", "1.35163"}], ",", 
       RowBox[{"Log", "[", "0.00704982", "]"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"25.864", ",", 
       RowBox[{"Log", "[", "4.90222*^-8", "]"}], ",", 
       RowBox[{"-", "2.90875"}], ",", "3.53801", ",", 
       RowBox[{"Log", "[", "0.00028657", "]"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"17.538", ",", 
       RowBox[{"Log", "[", "0.00146284", "]"}], ",", 
       RowBox[{"-", "0.20793"}], ",", 
       RowBox[{"-", "2.1336"}], ",", 
       RowBox[{"Log", "[", "0.00152624", "]"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"17.9736", ",", 
       RowBox[{"Log", "[", "4.52631*^-6", "]"}], ",", 
       RowBox[{"-", "1.40262"}], ",", 
       RowBox[{"-", "0.0114132"}], ",", 
       RowBox[{"Log", "[", "0.0003259", "]"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"5", ",", 
       RowBox[{"Log", "[", "1.12535*^-7", "]"}], ",", 
       RowBox[{"-", "0.2"}], ",", 
       RowBox[{"-", "2.0"}], ",", 
       RowBox[{"Log", "[", "0.00473795", "]"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"7", ",", 
       RowBox[{"Log", "[", "2.*^-12", "]"}], ",", 
       RowBox[{"-", "3"}], ",", 
       RowBox[{"-", "3"}], ",", 
       RowBox[{"Log", "[", "0.00173795", "]"}]}], "}"}]}], 
    "\[IndentingNewLine]", "}"}], ",", 
   RowBox[{"accurateQ", "\[Rule]", "False"}], ",", 
   RowBox[{"logQ", "\[Rule]", "True"}], ",", 
   RowBox[{"sampleSize", "\[Rule]", "10"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.606787540441008*^9, 3.606787631643077*^9}, {
   3.606787666514709*^9, 3.606787692123499*^9}, {3.606788046164083*^9, 
   3.6067880688333693`*^9}, {3.60678825023518*^9, 3.6067882550257177`*^9}, {
   3.606792324409047*^9, 3.6067923267770367`*^9}, {3.6067927532548943`*^9, 
   3.606792761195971*^9}, {3.606793036876443*^9, 3.606793052483157*^9}, {
   3.606793091236801*^9, 3.606793102837316*^9}, {3.606794309837031*^9, 
   3.606794334587343*^9}, {3.606794366547187*^9, 3.606794366867546*^9}, {
   3.606795078676282*^9, 3.606795091581581*^9}, {3.606795149578546*^9, 
   3.60679514991996*^9}, {3.6067952386075163`*^9, 3.606795239112365*^9}, {
   3.6067966570732613`*^9, 3.6067966629030457`*^9}, {3.606798760950096*^9, 
   3.606798761976829*^9}, {3.60679908104608*^9, 3.606799081389297*^9}, {
   3.6068117744959106`*^9, 3.6068117844065866`*^9}, {3.6068140021509743`*^9, 
   3.6068140026042223`*^9}, {3.6068152816721907`*^9, 3.606815289487356*^9}, {
   3.6068156660722103`*^9, 3.606815669024022*^9}, {3.606816953270817*^9, 
   3.6068169587738447`*^9}, {3.606818698860771*^9, 3.606818698981791*^9}, {
   3.60681883818729*^9, 3.6068188382801228`*^9}, {3.606826309355892*^9, 
   3.6068263114539127`*^9}, {3.6068263453069983`*^9, 3.606826347008851*^9}, 
   3.606871979478526*^9, {3.606970642661006*^9, 3.606970644629006*^9}, {
   3.607040084771667*^9, 3.607040120304093*^9}, {3.6070413420330276`*^9, 
   3.607041343416123*^9}, {3.607041674200344*^9, 3.607041677839254*^9}, {
   3.6070420558804703`*^9, 3.607042066437764*^9}, {3.607042408969769*^9, 
   3.607042412949823*^9}, {3.607042893781584*^9, 3.607042896421233*^9}, {
   3.607043053820203*^9, 3.607043056428385*^9}, {3.6070705827069473`*^9, 
   3.6070705998487864`*^9}, {3.607070882725918*^9, 3.607070914256212*^9}, {
   3.607071010611926*^9, 3.607071017717598*^9}, {3.607071345784321*^9, 
   3.607071348996977*^9}, {3.607073682948242*^9, 3.607073699000895*^9}, {
   3.60707988801705*^9, 3.607079922578576*^9}, {3.607079953850016*^9, 
   3.6070799562232237`*^9}, {3.607080017179563*^9, 3.6070800201294613`*^9}, {
   3.6071503260883493`*^9, 3.607150355059175*^9}, {3.607150467470962*^9, 
   3.607150518237198*^9}, {3.607150548293786*^9, 3.6071505503547573`*^9}, {
   3.607150633919725*^9, 3.6071506364358664`*^9}, {3.607150667525413*^9, 
   3.607150676158969*^9}, {3.607150763467977*^9, 3.6071507949225683`*^9}, {
   3.607150885850911*^9, 3.607150900981023*^9}, {3.607150952424551*^9, 
   3.6071509709417963`*^9}, {3.607151061908752*^9, 3.6071510749953003`*^9}, {
   3.607151111565999*^9, 3.607151111859749*^9}, {3.6071630634017773`*^9, 
   3.607163063562042*^9}, {3.607165135092894*^9, 3.607165138706964*^9}, {
   3.6071651775661097`*^9, 3.607165220875937*^9}, {3.607171490516179*^9, 
   3.607171512617487*^9}, {3.607173064113058*^9, 3.60717307868601*^9}, {
   3.607173775078308*^9, 3.607173788669252*^9}, {3.607174213744079*^9, 
   3.6071742358649817`*^9}, {3.6071743774040728`*^9, 3.607174380646597*^9}, {
   3.6073836137221746`*^9, 3.607383684236947*^9}, {3.6073852045485687`*^9, 
   3.607385229937605*^9}, {3.60738537083494*^9, 3.607385371736637*^9}, {
   3.607385835708268*^9, 3.607385839107675*^9}, {3.607387235110963*^9, 
   3.607387237205529*^9}, {3.6073873308544064`*^9, 3.607387339071673*^9}, {
   3.607387403854828*^9, 3.6073874448154507`*^9}, {3.607391461088468*^9, 
   3.607391464385047*^9}, {3.607391501343521*^9, 3.6073915032057543`*^9}, {
   3.607578979085574*^9, 3.6075789991858807`*^9}, {3.607580052715961*^9, 
   3.607580066492165*^9}, {3.607580510423753*^9, 3.6075805237515497`*^9}, {
   3.607580560612709*^9, 3.607580568772667*^9}, {3.607581029886907*^9, 
   3.607581029999578*^9}, {3.6075812469745817`*^9, 3.6075812488414097`*^9}, {
   3.607581913285289*^9, 3.607581923842937*^9}, 3.607582488792965*^9, {
   3.60759265677277*^9, 3.607592673044922*^9}, {3.6075933267535677`*^9, 
   3.607593343776815*^9}, {3.607593480840535*^9, 3.607593499632329*^9}, {
   3.607593677018961*^9, 3.60759373880721*^9}, {3.607597099183399*^9, 
   3.607597174878522*^9}, {3.607598062074772*^9, 3.607598098917726*^9}, {
   3.607598332529254*^9, 3.6075983499500647`*^9}, {3.6076010276591063`*^9, 
   3.607601086242148*^9}, {3.607607633546784*^9, 3.607607636258037*^9}, {
   3.607669234708241*^9, 3.607669237014553*^9}, {3.6077559464437113`*^9, 
   3.607755948777335*^9}, {3.607756586683123*^9, 3.607756588590888*^9}, {
   3.6093862173313*^9, 3.609386223213279*^9}, {3.6093955497865868`*^9, 
   3.609395550168585*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 TemplateBox[{"\"trying \"",RowBox[{"{", 
     RowBox[{
       RowBox[{"{", 
         RowBox[{
          "300", ",", "8.4`*^37", ",", "1.2`*^6", ",", "22.1525`", ",", "1", 
           ",", "0.00021642399999999984`", ",", 
           RowBox[{"-", "0.417021`"}], ",", 
           RowBox[{"-", "1.35163`"}]}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"2.1062`", ",", "0.0070498199999999974`"}], "}"}]}], "}"}]},
  "RowDefault"]], "Print",
 CellChangeTimes->{
  3.6095722685639067`*^9, 3.609572312707724*^9, 3.6095723651465673`*^9, 
   3.609572453222207*^9, 3.609572492973989*^9, {3.617602296699391*^9, 
   3.617602319857935*^9}, 3.617602394629306*^9, 3.617602998190041*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"3.615087196523855`", ",", 
   RowBox[{"{", 
    RowBox[{"0.0006689242546129222`", ",", "1.1878074273024486`", ",", 
     RowBox[{"-", "0.9780316423397244`"}], ",", 
     RowBox[{"-", "1.116984499127717`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "300", ",", "1.1062588503295299`*^35", ",", "1.2`*^6", ",", "22.1525`", 
     ",", "1", ",", "0.00021642399999999984`", ",", 
     RowBox[{"-", "0.417021`"}], ",", 
     RowBox[{"-", "1.35163`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.1062`", ",", "0.0070498199999999974`"}], "}"}]}], 
  "}"}]], "Print",
 CellChangeTimes->{
  3.6095722685639067`*^9, 3.609572312707724*^9, 3.6095723651465673`*^9, 
   3.609572453222207*^9, 3.609572492973989*^9, {3.617602296699391*^9, 
   3.617602319857935*^9}, 3.617602394629306*^9, 3.61760330555907*^9}],

Cell[BoxData[
 TemplateBox[{"\"trying \"",RowBox[{"{", 
     RowBox[{
       RowBox[{"{", 
         RowBox[{
          "300", ",", "8.4`*^37", ",", "1.2`*^6", ",", "25.864`", ",", "1", 
           ",", "4.902220000000007`*^-8", ",", 
           RowBox[{"-", "2.90875`"}], ",", "3.53801`"}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"2.1062`", ",", "0.00028657000000000004`"}], "}"}]}], "}"}]},
  
  "RowDefault"]], "Print",
 CellChangeTimes->{
  3.6095722685639067`*^9, 3.609572312707724*^9, 3.6095723651465673`*^9, 
   3.609572453222207*^9, 3.609572492973989*^9, {3.617602296699391*^9, 
   3.617602319857935*^9}, 3.617602394629306*^9, 3.617603305575959*^9}]
}, Open  ]],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{3.617602519971588*^9, 3.617605133452561*^9}]
}, Open  ]],

Cell["Findings", "Text",
 CellChangeTimes->{{3.606348133918042*^9, 3.606348135269116*^9}}],

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{"\[Gamma]", "\[GreaterEqual]", "50"}], TraditionalForm]]]], "Text",
 CellChangeTimes->{{3.606348156541897*^9, 3.6063481652157516`*^9}, {
  3.607067424905558*^9, 3.607067430113633*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"0.7938168112464861`", "\[VeryThinSpace]", "-", 
    RowBox[{"4.106377646794582`*^-14", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{
    "50.0657926779634`", ",", "19.501091186248775`", ",", 
     "0.0017054952666204536`", ",", 
     RowBox[{"-", "0.417534483951093`"}], ",", 
     RowBox[{"-", "1.1653144572014318`"}], ",", "0.044842302768962033`"}], 
    "}"}]}], "}"}]], "Input",
 CellChangeTimes->{{3.6063481255430517`*^9, 3.606348127726272*^9}, {
  3.606348194911273*^9, 3.606348228778201*^9}}],

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{"\[Gamma]", "\[GreaterEqual]", "100"}], TraditionalForm]]]], "Text",\

 CellChangeTimes->{{3.606388765262134*^9, 3.606388773732204*^9}, {
  3.607067416272358*^9, 3.6070674209058523`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.740281309209182`", ",", 
   RowBox[{"{", 
    RowBox[{
    "212.05667686475246`", ",", "20.586029895731766`", ",", 
     "0.0006018223237442693`", ",", 
     RowBox[{"-", "0.28834496910247603`"}], ",", 
     RowBox[{"-", "1.4234752020037233`"}], ",", "0.012381387855314176`"}], 
    "}"}]}], "}"}]], "Input"],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Gamma]", "=", "300"}], TraditionalForm]]],
 ", ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Kappa]", "=", "2.95"}], TraditionalForm]]]
}], "Text",
 CellChangeTimes->{{3.6064512944103737`*^9, 3.606451300587571*^9}, {
  3.6064576344732523`*^9, 3.606457638974822*^9}, {3.6067931367017*^9, 
  3.606793136777329*^9}, {3.6070674025938997`*^9, 3.60706741230442*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.48523460544730795`", ",", 
   RowBox[{"{", 
    RowBox[{
    "300", ",", "22.01039554696952`", ",", "0.00023951995459844163`", ",", 
     RowBox[{"-", "0.36664859506153297`"}], ",", 
     RowBox[{"-", "1.280471162683212`"}], ",", "0.011288050070583`"}], 
    "}"}]}], "}"}]], "Input",
 CellChangeTimes->{{3.606451302514258*^9, 3.606451331118482*^9}, {
  3.6067376286989727`*^9, 3.606737630870726*^9}}],

Cell[TextData[{
 "Distribution fit, double \[Kappa]Test, ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Gamma]", "=", "300"}], TraditionalForm]]]
}], "Text",
 CellChangeTimes->{{3.6070395878416758`*^9, 3.607039594377825*^9}, {
  3.607067364329997*^9, 3.60706739749542*^9}}],

Cell[BoxData[
 RowBox[{"4.627801475326828`", ",", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"-", "0.7128145412227463`"}], ",", "1.3035355218584697`", ",", 
    RowBox[{"-", "1.0880966542812152`"}], ",", 
    RowBox[{"-", "0.8526981382312875`"}]}], "}"}], ",", 
  RowBox[{"{", 
   RowBox[{
   "300", ",", "6.492989961591544`*^35", ",", "1.2`*^6", ",", 
    "17.81480416677621`", ",", "1", ",", "0.00020134682032022462`", ",", 
    RowBox[{"-", "0.37505543397413527`"}], ",", 
    RowBox[{"-", "1.2698890643165832`"}]}], "}"}], ",", 
  RowBox[{"{", 
   RowBox[{"2.1062`", ",", "0.006606500280573165`"}], "}"}]}]], "Input"],

Cell[TextData[{
 "Distribution fit, ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Gamma]", "=", "300"}], TraditionalForm]]]
}], "Text",
 CellChangeTimes->{{3.607067360381123*^9, 3.6070673900632877`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"3.68655", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1.17936"}], ",", "1.2531", ",", 
     RowBox[{"-", "0.649194"}], ",", 
     RowBox[{"-", "0.551328"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"300", ",", 
     RowBox[{"2.28024", " ", 
      SuperscriptBox["10", "35"]}], ",", 
     RowBox[{"1.2", " ", 
      SuperscriptBox["10", "6"]}], ",", "16.8911", ",", "1", ",", 
     "0.000169719", ",", 
     RowBox[{"-", "0.380545"}], ",", 
     RowBox[{"-", "1.25897"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.1062", ",", "0.00502948"}], "}"}]}], "}"}]], "Input",
 CellChangeTimes->{{3.6070674377781363`*^9, 3.6070674464053793`*^9}}],

Cell[TextData[{
 "Distribution fit, ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Gamma]", "=", "1000"}], TraditionalForm]]]
}], "Text",
 CellChangeTimes->{{3.607163045658436*^9, 3.607163050884712*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"3.65597876418943`", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1.28445195900536`"}], ",", "1.1660928432964677`", ",", 
     RowBox[{"-", "0.6154606016466347`"}], ",", 
     RowBox[{"-", "0.5172984224122911`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1000", ",", "1.3488906003565776`*^34", ",", "1.2`*^6", ",", 
     "17.630255636059324`", ",", "1", ",", "0.00004163798542967464`", ",", 
     RowBox[{"-", "0.3972290304663867`"}], ",", 
     RowBox[{"-", "1.2258882163348332`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.1062`", ",", "0.0013599261097429378`"}], "}"}]}], 
  "}"}]], "Input"],

Cell["Distribution fit, widespread initial points", "Text",
 CellChangeTimes->{{3.607236973296576*^9, 3.607236982155352*^9}, {
  3.607256380145895*^9, 3.6072563815854816`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"3.54219", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1.18859"}], ",", "1.24998", ",", 
     RowBox[{"-", "0.54779"}], ",", 
     RowBox[{"-", "0.516636"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"300", ",", 
     RowBox[{"1.54982", " ", 
      SuperscriptBox["10", "35"]}], ",", 
     RowBox[{"1.2", " ", 
      SuperscriptBox["10", "6"]}], ",", "23.2127", ",", "1", ",", 
     "0.000217938", ",", 
     RowBox[{"-", "0.347747"}], ",", 
     RowBox[{"-", "1.30455"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.1062", ",", "0.00503396"}], "}"}]}], "}"}]], "Input",
 CellChangeTimes->{{3.6072369662908783`*^9, 3.607236968923394*^9}, {
  3.607256378475994*^9, 3.6072564076046057`*^9}}],

Cell[TextData[{
 "Distribution fit, ",
 Cell[BoxData[
  FormBox[
   RowBox[{"Log", "[", "10.", "]"}], TraditionalForm]]],
 " error for the photonRatioTest"
}], "Text",
 CellChangeTimes->{{3.607470734900444*^9, 3.607470747778098*^9}, {
  3.607470778483934*^9, 3.6074707949697933`*^9}, {3.607470867881728*^9, 
  3.6074708682658157`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"2.07689", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.471716"}], ",", "1.11574", ",", 
     RowBox[{"-", "0.591337"}], ",", 
     RowBox[{"-", "0.509722"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"300", ",", 
     RowBox[{"1.733", " ", 
      SuperscriptBox["10", "36"]}], ",", 
     RowBox[{"1.2", " ", 
      SuperscriptBox["10", "6"]}], ",", "23.9119", ",", "1", ",", 
     "0.0000608492", ",", 
     RowBox[{"-", "0.693027"}], ",", 
     RowBox[{"-", "0.614004"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.1062", ",", "0.00584979"}], "}"}]}], "}"}]], "Input",
 CellChangeTimes->{{3.607470802659461*^9, 3.607470809548118*^9}}],

Cell[TextData[{
 "Distribution fit, ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SqrtBox["2"], 
    RowBox[{"Log", "[", "10.", "]"}]}], TraditionalForm]]],
 " errors for the photonRatioTest and photonRatioMedianTest"
}], "Text",
 CellChangeTimes->{{3.607470824930151*^9, 3.607470865217669*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1.74835", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.312454"}], ",", "1.11788", ",", 
     RowBox[{"-", "0.503465"}], ",", 
     RowBox[{"-", "0.384181"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"300", ",", 
     RowBox[{"1.59699", " ", 
      SuperscriptBox["10", "36"]}], ",", 
     RowBox[{"1.2", " ", 
      SuperscriptBox["10", "6"]}], ",", "23.5259", ",", "1", ",", 
     "0.0000645273", ",", 
     RowBox[{"-", "0.686477"}], ",", 
     RowBox[{"-", "0.638359"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.1062", ",", "0.00616176"}], "}"}]}], "}"}]], "Input",
 CellChangeTimes->{{3.607470900588119*^9, 3.607470946277495*^9}}],

Cell[TextData[{
 "Distribution fit, ",
 Cell[BoxData[
  FormBox[
   RowBox[{"Log", "[", "10.", "]"}], TraditionalForm]]],
 " error for the photonRatioTest, correct energy"
}], "Text",
 CellChangeTimes->{{3.6096289352036743`*^9, 3.609628957088965*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"2.16969", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.623479"}], ",", "1.11251", ",", 
     RowBox[{"-", "0.531924"}], ",", 
     RowBox[{"-", "0.510242"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"300", ",", 
     RowBox[{"1.78534", " ", 
      SuperscriptBox["10", "36"]}], ",", 
     RowBox[{"1.2", " ", 
      SuperscriptBox["10", "6"]}], ",", "22.5269", ",", "1", ",", 
     "0.0000502035", ",", 
     RowBox[{"-", "0.699813"}], ",", 
     RowBox[{"-", "0.626944"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.1062", ",", "0.00541037"}], "}"}]}], "}"}]], "Input",
 CellChangeTimes->{{3.609628966521572*^9, 3.6096289802586613`*^9}}],

Cell[TextData[{
 "After ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Theta]", "max"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " correction in Fermi tools"
}], "Text",
 CellChangeTimes->{{3.617691323297351*^9, 3.617691341036283*^9}}],

Cell[BoxData[{
 RowBox[{"{", 
  RowBox[{"2.13586", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.538139"}], ",", "1.11473", ",", 
     RowBox[{"-", "0.589639"}], ",", 
     RowBox[{"-", "0.50593"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"300", ",", 
     RowBox[{"8.20727", " ", 
      SuperscriptBox["10", "35"]}], ",", 
     RowBox[{"1.2", " ", 
      SuperscriptBox["10", "6"]}], ",", "22.9812", ",", "1", ",", 
     "0.0000796919", ",", 
     RowBox[{"-", "0.652342"}], ",", 
     RowBox[{"-", "0.726652"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.1062", ",", "0.00588908"}], "}"}]}], 
  "}"}], "\[IndentingNewLine]", 
 RowBox[{"{", 
  RowBox[{"2.13586", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"nj", "\[Rule]", "22.9812"}], ",", 
     RowBox[{"\[Theta]0j", "\[Rule]", 
      RowBox[{"-", "9.43734"}]}], ",", 
     RowBox[{"kj", "\[Rule]", 
      RowBox[{"-", "0.652342"}]}], ",", 
     RowBox[{"\[Alpha]j", "\[Rule]", 
      RowBox[{"-", "0.726652"}]}], ",", 
     RowBox[{"\[Chi]j", "\[Rule]", 
      RowBox[{"-", "5.13466"}]}]}], "}"}]}], "}"}]}], "Input",
 CellChangeTimes->{{3.617691348815392*^9, 3.617691379264559*^9}}],

Cell["After fixing of maximal energy", "Text",
 CellChangeTimes->{{3.617835309384933*^9, 3.617835313355678*^9}}],

Cell[BoxData[{
 RowBox[{"{", 
  RowBox[{"2.12434", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.531479"}], ",", "1.11134", ",", 
     RowBox[{"-", "0.592195"}], ",", 
     RowBox[{"-", "0.506059"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"300", ",", 
     RowBox[{"8.31605", " ", 
      SuperscriptBox["10", "35"]}], ",", 
     RowBox[{"1.2", " ", 
      SuperscriptBox["10", "6"]}], ",", "22.9977", ",", "1", ",", 
     "0.0000793393", ",", 
     RowBox[{"-", "0.65356"}], ",", 
     RowBox[{"-", "0.724394"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.1062", ",", "0.00590163"}], "}"}]}], 
  "}"}], "\[IndentingNewLine]", 
 RowBox[{"{", 
  RowBox[{"2.12434", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"nj", "\[Rule]", "22.9977"}], ",", 
     RowBox[{"\[Theta]0j", "\[Rule]", 
      RowBox[{"-", "9.44178"}]}], ",", 
     RowBox[{"kj", "\[Rule]", 
      RowBox[{"-", "0.65356"}]}], ",", 
     RowBox[{"\[Alpha]j", "\[Rule]", 
      RowBox[{"-", "0.724394"}]}], ",", 
     RowBox[{"\[Chi]j", "\[Rule]", 
      RowBox[{"-", "5.13253"}]}]}], "}"}]}], "}"}]}], "Input",
 CellChangeTimes->{{3.617835321235003*^9, 3.617835334945261*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Distribution", "Subsubsection",
 CellChangeTimes->{{3.607499913888262*^9, 3.60749991508009*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"sample16IA", "=", 
   RowBox[{"burstSample", "[", 
    RowBox[{
     RowBox[{"defaultUniverse", "[", "]"}], ",", 
     RowBox[{"defaultPopulation", "[", "]"}], ",", 
     RowBox[{"defaultBurst", "[", "]"}], ",", 
     RowBox[{"defaultDetectorArea", "[", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{".1", ",", "1.", ",", "\[Infinity]"}], "}"}], ",", "16", ",", 
     RowBox[{"computedValues", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<z\>\"", ",", "\"\<\[Chi]\>\"", ",", "\"\<pLow\>\"", ",", 
        "\"\<pHigh\>\"", ",", "\"\<duration\>\"", ",", "\"\<\[Kappa]\>\""}], 
       "}"}]}], ",", 
     RowBox[{"logQ", "\[Rule]", "True"}], ",", 
     RowBox[{"accurateQ", "\[Rule]", "False"}]}], "]"}]}], ";", 
  RowBox[{"Save", "[", 
   RowBox[{"\"\<sample16IA.m\>\"", ",", "sample16IA"}], "]"}], ";", 
  RowBox[{"sample16", "=", 
   RowBox[{"burstSample", "[", 
    RowBox[{
     RowBox[{"defaultUniverse", "[", "]"}], ",", 
     RowBox[{"defaultPopulation", "[", "]"}], ",", 
     RowBox[{"defaultBurst", "[", "]"}], ",", 
     RowBox[{"defaultDetectorArea", "[", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{".1", ",", "1.", ",", "\[Infinity]"}], "}"}], ",", "16", ",", 
     RowBox[{"computedValues", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<z\>\"", ",", "\"\<\[Chi]\>\"", ",", "\"\<pLow\>\"", ",", 
        "\"\<pHigh\>\"", ",", "\"\<duration\>\"", ",", "\"\<\[Kappa]\>\""}], 
       "}"}]}], ",", 
     RowBox[{"logQ", "\[Rule]", "True"}]}], "]"}]}], ";", 
  RowBox[{"Save", "[", 
   RowBox[{"\"\<sample16.m\>\"", ",", "sample16"}], "]"}], ";", 
  RowBox[{"sample16pc40", "=", 
   RowBox[{"burstSample", "[", 
    RowBox[{
     RowBox[{"defaultUniverse", "[", "]"}], ",", 
     RowBox[{"defaultPopulation", "[", "]"}], ",", 
     RowBox[{"defaultBurst", "[", "]"}], ",", 
     RowBox[{"defaultDetectorArea", "[", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{".1", ",", "1.", ",", "\[Infinity]"}], "}"}], ",", "16", ",", 
     RowBox[{"computedValues", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<z\>\"", ",", "\"\<\[Chi]\>\"", ",", "\"\<pLow\>\"", ",", 
        "\"\<pHigh\>\"", ",", "\"\<duration\>\"", ",", "\"\<\[Kappa]\>\""}], 
       "}"}]}], ",", 
     RowBox[{"logQ", "\[Rule]", "True"}], ",", 
     RowBox[{"pointCount", "\[Rule]", "40"}]}], "]"}]}], ";", 
  RowBox[{"Save", "[", 
   RowBox[{"\"\<sample16pc40.m\>\"", ",", "sample16pc40"}], "]"}], ";", 
  RowBox[{"sample256IA", "=", 
   RowBox[{"burstSample", "[", 
    RowBox[{
     RowBox[{"defaultUniverse", "[", "]"}], ",", 
     RowBox[{"defaultPopulation", "[", "]"}], ",", 
     RowBox[{"defaultBurst", "[", "]"}], ",", 
     RowBox[{"defaultDetectorArea", "[", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{".1", ",", "1.", ",", "\[Infinity]"}], "}"}], ",", "256", ",", 
     RowBox[{"computedValues", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<z\>\"", ",", "\"\<\[Chi]\>\"", ",", "\"\<pLow\>\"", ",", 
        "\"\<pHigh\>\"", ",", "\"\<duration\>\"", ",", "\"\<\[Kappa]\>\""}], 
       "}"}]}], ",", 
     RowBox[{"logQ", "\[Rule]", "True"}], ",", 
     RowBox[{"accurateQ", "\[Rule]", "False"}]}], "]"}]}], ";", 
  RowBox[{"Save", "[", 
   RowBox[{"\"\<sample256IA.m\>\"", ",", "sample256IA"}], "]"}], ";", 
  RowBox[{"sample256", "=", 
   RowBox[{"burstSample", "[", 
    RowBox[{
     RowBox[{"defaultUniverse", "[", "]"}], ",", 
     RowBox[{"defaultPopulation", "[", "]"}], ",", 
     RowBox[{"defaultBurst", "[", "]"}], ",", 
     RowBox[{"defaultDetectorArea", "[", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{".1", ",", "1.", ",", "\[Infinity]"}], "}"}], ",", "256", ",", 
     RowBox[{"computedValues", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<z\>\"", ",", "\"\<\[Chi]\>\"", ",", "\"\<pLow\>\"", ",", 
        "\"\<pHigh\>\"", ",", "\"\<duration\>\"", ",", "\"\<\[Kappa]\>\""}], 
       "}"}]}], ",", 
     RowBox[{"logQ", "\[Rule]", "True"}]}], "]"}]}], ";", 
  RowBox[{"Save", "[", 
   RowBox[{"\"\<sample256.m\>\"", ",", "sample256"}], "]"}], ";", 
  RowBox[{"sample256pc40", "=", 
   RowBox[{"burstSample", "[", 
    RowBox[{
     RowBox[{"defaultUniverse", "[", "]"}], ",", 
     RowBox[{"defaultPopulation", "[", "]"}], ",", 
     RowBox[{"defaultBurst", "[", "]"}], ",", 
     RowBox[{"defaultDetectorArea", "[", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{".1", ",", "1.", ",", "\[Infinity]"}], "}"}], ",", "256", ",", 
     RowBox[{"computedValues", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<z\>\"", ",", "\"\<\[Chi]\>\"", ",", "\"\<pLow\>\"", ",", 
        "\"\<pHigh\>\"", ",", "\"\<duration\>\"", ",", "\"\<\[Kappa]\>\""}], 
       "}"}]}], ",", 
     RowBox[{"logQ", "\[Rule]", "True"}], ",", 
     RowBox[{"pointCount", "\[Rule]", "40"}]}], "]"}]}], ";", 
  RowBox[{"Save", "[", 
   RowBox[{"\"\<sample256pc40.m\>\"", ",", "sample256pc40"}], "]"}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.607151737518517*^9, 3.607151787478895*^9}, {
   3.607152031768177*^9, 3.607152097444626*^9}, {3.6071521619008703`*^9, 
   3.6071521681023903`*^9}, 3.607152411791893*^9, {3.60725644295364*^9, 
   3.6072564477907457`*^9}, {3.607258593316545*^9, 3.607258682019373*^9}, {
   3.60725893428609*^9, 3.607258940576136*^9}, {3.607259243111906*^9, 
   3.6072592907797613`*^9}, {3.607471338418459*^9, 3.6074714631679087`*^9}, {
   3.607471502631407*^9, 3.607471510519861*^9}, {3.607471649217723*^9, 
   3.607471657704623*^9}, {3.6074720163187227`*^9, 3.607472057208458*^9}, {
   3.607514017352871*^9, 3.60751407260951*^9}, {3.609631336937778*^9, 
   3.609631354947994*^9}, {3.6096313906659927`*^9, 3.6096314074987707`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"sample4096IA", "=", 
   RowBox[{"burstSample", "[", 
    RowBox[{
     RowBox[{"defaultUniverse", "[", "]"}], ",", 
     RowBox[{"defaultPopulation", "[", "]"}], ",", 
     RowBox[{"defaultBurst", "[", "]"}], ",", 
     RowBox[{"defaultDetectorArea", "[", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{".1", ",", "1.", ",", "\[Infinity]"}], "}"}], ",", "4096", ",", 
     
     RowBox[{"computedValues", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<z\>\"", ",", "\"\<\[Chi]\>\"", ",", "\"\<pLow\>\"", ",", 
        "\"\<pHigh\>\"", ",", "\"\<duration\>\"", ",", "\"\<\[Kappa]\>\""}], 
       "}"}]}], ",", 
     RowBox[{"logQ", "\[Rule]", "True"}], ",", 
     RowBox[{"accurateQ", "\[Rule]", "False"}]}], "]"}]}], ";", 
  RowBox[{"Save", "[", 
   RowBox[{"\"\<sample4096IA.m\>\"", ",", "sample4096IA"}], "]"}], ";", 
  RowBox[{"sample4096", "=", 
   RowBox[{"burstSample", "[", 
    RowBox[{
     RowBox[{"defaultUniverse", "[", "]"}], ",", 
     RowBox[{"defaultPopulation", "[", "]"}], ",", 
     RowBox[{"defaultBurst", "[", "]"}], ",", 
     RowBox[{"defaultDetectorArea", "[", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{".1", ",", "1.", ",", "\[Infinity]"}], "}"}], ",", "4096", ",", 
     
     RowBox[{"computedValues", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<z\>\"", ",", "\"\<\[Chi]\>\"", ",", "\"\<pLow\>\"", ",", 
        "\"\<pHigh\>\"", ",", "\"\<duration\>\"", ",", "\"\<\[Kappa]\>\""}], 
       "}"}]}], ",", 
     RowBox[{"logQ", "\[Rule]", "True"}]}], "]"}]}], ";", 
  RowBox[{"Save", "[", 
   RowBox[{"\"\<sample4096.m\>\"", ",", "sample4096"}], "]"}], ";", 
  RowBox[{"sample4096pc40", "=", 
   RowBox[{"burstSample", "[", 
    RowBox[{
     RowBox[{"defaultUniverse", "[", "]"}], ",", 
     RowBox[{"defaultPopulation", "[", "]"}], ",", 
     RowBox[{"defaultBurst", "[", "]"}], ",", 
     RowBox[{"defaultDetectorArea", "[", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{".1", ",", "1.", ",", "\[Infinity]"}], "}"}], ",", "4096", ",", 
     
     RowBox[{"computedValues", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<z\>\"", ",", "\"\<\[Chi]\>\"", ",", "\"\<pLow\>\"", ",", 
        "\"\<pHigh\>\"", ",", "\"\<duration\>\"", ",", "\"\<\[Kappa]\>\""}], 
       "}"}]}], ",", 
     RowBox[{"logQ", "\[Rule]", "True"}], ",", 
     RowBox[{"pointCount", "\[Rule]", "40"}]}], "]"}]}], ";", 
  RowBox[{"Save", "[", 
   RowBox[{"\"\<sample4096pc40.m\>\"", ",", "sample4096pc40"}], "]"}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.6075140758695908`*^9, 3.607514090143182*^9}, {
  3.609666568912321*^9, 3.609666585938512*^9}, {3.6097104825083923`*^9, 
  3.609710487020596*^9}, {3.6097105793968353`*^9, 3.6097105838249817`*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Burst Fraction", "Subsubsection",
 CellChangeTimes->{{3.607499903944137*^9, 3.607499905709663*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"PrintTemporary", "[", 
   RowBox[{"Dynamic", "[", 
    RowBox[{"{", 
     RowBox[{"z", ",", "z1", ",", "z2"}], "}"}], "]"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"burstFraction", "[", 
  RowBox[{
   RowBox[{"defaultUniverse", "[", "]"}], ",", 
   RowBox[{"defaultPopulation", "[", "]"}], ",", 
   RowBox[{"defaultBurst", "[", "]"}], ",", 
   RowBox[{"defaultDetectorArea", "[", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{".1", ",", "1.", ",", "\[Infinity]"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.607472538226598*^9, 3.607472598984831*^9}}],

Cell[BoxData["0.10987602844095526`"], "Output",
 CellChangeTimes->{3.607477078455381*^9, 3.607499842060955*^9, 
  3.607514167560162*^9, 3.607518955297565*^9, 3.6178598949878263`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Computed samples", "Subsubsection",
 CellChangeTimes->{{3.6096449188208113`*^9, 3.609644921748653*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"<<", "\"\<sample16IA.m\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"<<", "\"\<sample16.m\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"<<", "\"\<sample16pc40.m\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"<<", "\"\<sample256IA.m\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"<<", "\"\<sample256.m\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"<<", "\"\<sample256pc40.m\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"<<", "\"\<sample4096IA.m\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"<<", "\"\<sample4096.m\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"<<", "\"\<sample4096pc40.m\>\""}], ";"}]}], "Input",
 CellChangeTimes->{{3.6096359866523247`*^9, 3.609635990636599*^9}, {
  3.609643021600891*^9, 3.609643024501835*^9}, {3.60964969356056*^9, 
  3.6096497074389467`*^9}, {3.60966424413723*^9, 3.609664249316772*^9}, {
  3.609710325338402*^9, 3.609710333753696*^9}, {3.609758090152154*^9, 
  3.609758114318233*^9}, {3.609972915409157*^9, 3.6099729201569*^9}, {
  3.610584782506156*^9, 3.610584814781681*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Get", "::", "noopen"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Cannot open \[NoBreak]\\!\\(\\\"sample4096pc40.m\\\"\\)\
\[NoBreak]. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/noopen\\\", ButtonNote -> \
\\\"Get::noopen\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.61826824853657*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Distribution plots", "Subsubsection",
 CellChangeTimes->{{3.609635882975088*^9, 3.60963588581352*^9}, {
  3.6096449332917128`*^9, 3.6096449338002033`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Kappa]Observed", "=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\"\<GRB090902B\>\"", ",", 
       RowBox[{"{", 
        RowBox[{"0.350166", ",", "0.893155"}], "}"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"\"\<GRB090510\>\"", ",", 
       RowBox[{"{", 
        RowBox[{"0.42816", ",", "1.60589"}], "}"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"\"\<GRB080916C\>\"", ",", 
       RowBox[{"{", 
        RowBox[{"0.665059", ",", "3.31859"}], "}"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"\"\<GRB090926A\>\"", ",", 
       RowBox[{"{", 
        RowBox[{"1.98748", ",", "6.62006"}], "}"}]}], "}"}]}], 
    "\[IndentingNewLine]", "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.594342734190405*^9, 3.594342752715184*^9}, {
  3.59434286903363*^9, 3.594342900024119*^9}, {3.594343771437028*^9, 
  3.594343773132771*^9}, {3.594852329377499*^9, 3.594852332247513*^9}, {
  3.5966927652249002`*^9, 3.596692799285636*^9}, {3.596693274643531*^9, 
  3.596693288462693*^9}, {3.5966933274676723`*^9, 3.5966933546761417`*^9}, {
  3.603446939569559*^9, 3.603447017756761*^9}, {3.603447061587146*^9, 
  3.603447066057764*^9}, {3.6096359148737793`*^9, 3.6096359282070913`*^9}, {
  3.618268311949285*^9, 3.618268362572994*^9}, {3.618271426384037*^9, 
  3.618271430886388*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[Kappa]HistogramPlot", "[", 
  RowBox[{
   RowBox[{"sample4096", "\[LeftDoubleBracket]", 
    RowBox[{"All", ",", 
     RowBox[{"-", "1"}]}], "\[RightDoubleBracket]"}], ",", 
   "\[Kappa]Observed"}], "]"}]], "Input",
 CellChangeTimes->{{3.609635980255172*^9, 3.609636038443963*^9}, {
  3.609636183561309*^9, 3.60963619188875*^9}, {3.609636367069709*^9, 
  3.609636369461276*^9}, {3.609636493042923*^9, 3.6096365314735327`*^9}, {
  3.609639000473216*^9, 3.609639008262295*^9}, {3.609644450906867*^9, 
  3.609644476854623*^9}, {3.609649731286344*^9, 3.60964973593781*^9}, {
  3.60966433070894*^9, 3.609664330890787*^9}, {3.609665973679592*^9, 
  3.60966597831504*^9}, {3.609758120706745*^9, 3.609758124641633*^9}, {
  3.609972930823106*^9, 3.60997293093909*^9}}],

Cell[BoxData[
 GraphicsBox[{{
    {RGBColor[0.368417, 0.506779, 0.709798], EdgeForm[{Opacity[
     0.46199999999999997`], Thickness[Small]}], {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], EdgeForm[{Opacity[
      0.46199999999999997`], Thickness[Small]}], 
      RectangleBox[{0.8, 0}, {0.85, 0.033447265625},
       RoundingRadius->0], RectangleBox[{0.85, 0}, {0.9, 0.069580078125},
       RoundingRadius->0], RectangleBox[{0.9, 0}, {0.95, 0.068115234375},
       RoundingRadius->0], RectangleBox[{0.95, 0}, {1., 0.0751953125},
       RoundingRadius->0], RectangleBox[{1., 0}, {1.05, 0.07275390625},
       RoundingRadius->0], RectangleBox[{1.05, 0}, {1.1, 0.0693359375},
       RoundingRadius->0], RectangleBox[{1.1, 0}, {1.15, 0.0712890625},
       RoundingRadius->0], RectangleBox[{1.15, 0}, {1.2, 0.065673828125},
       RoundingRadius->0], RectangleBox[{1.2, 0}, {1.25, 0.0693359375},
       RoundingRadius->0], RectangleBox[{1.25, 0}, {1.3, 0.0576171875},
       RoundingRadius->0], RectangleBox[{1.3, 0}, {1.35, 0.058837890625},
       RoundingRadius->0], RectangleBox[{1.35, 0}, {1.4, 0.04833984375},
       RoundingRadius->0], RectangleBox[{1.4, 0}, {1.45, 0.041748046875},
       RoundingRadius->0], RectangleBox[{1.45, 0}, {1.5, 0.033447265625},
       RoundingRadius->0], RectangleBox[{1.5, 0}, {1.55, 0.033203125},
       RoundingRadius->0], RectangleBox[{1.55, 0}, {1.6, 0.026611328125},
       RoundingRadius->0], RectangleBox[{1.6, 0}, {1.65, 0.022705078125},
       RoundingRadius->0], RectangleBox[{1.65, 0}, {1.7, 0.01806640625},
       RoundingRadius->0], RectangleBox[{1.7, 0}, {1.75, 0.016845703125},
       RoundingRadius->0], RectangleBox[{1.75, 0}, {1.8, 0.01416015625},
       RoundingRadius->0], RectangleBox[{1.8, 0}, {1.85, 0.010009765625},
       RoundingRadius->0], RectangleBox[{1.85, 0}, {1.9, 0.010986328125},
       RoundingRadius->0], RectangleBox[{1.9, 0}, {1.95, 0.005615234375},
       RoundingRadius->0], RectangleBox[{1.95, 0}, {2., 0.003662109375},
       RoundingRadius->0], RectangleBox[{2., 0}, {2.05, 0.001953125},
       RoundingRadius->0], RectangleBox[{2.05, 0}, {2.1, 0.000732421875},
       RoundingRadius->0], RectangleBox[{2.1, 0}, {2.15, 0.000244140625},
       RoundingRadius->0], RectangleBox[{2.15, 0}, {2.2, 0.000244140625},
       RoundingRadius->0], RectangleBox[{2.45, 0}, {2.5, 0.000244140625},
       RoundingRadius->
        0]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}}, {
    LineBox[{{0.350166, 0.0657958984375}, {0.893155, 0.0657958984375}}], 
    LineBox[{{0.350166, 0.063916015625}, {0.350166, 0.06767578125}}], 
    LineBox[{{0.893155, 0.063916015625}, {0.893155, 0.06767578125}}], 
    InsetBox["\<\"3\"\>", Scaled[{0.01, 0}, {0.350166, 0.0657958984375}], {
     Left, Bottom}]}, {
    LineBox[{{0.42816, 0.056396484375}, {1.60589, 0.056396484375}}], 
    LineBox[{{0.42816, 0.0545166015625}, {0.42816, 0.0582763671875}}], 
    LineBox[{{1.60589, 0.0545166015625}, {1.60589, 0.0582763671875}}], 
    InsetBox["\<\"2\"\>", Scaled[{0.01, 0}, {0.42816, 0.056396484375}], {
     Left, Bottom}]}, {
    ArrowBox[NCache[{{0.665059, 0.0469970703125}, {
       Rational[5, 2], 0.0469970703125}}, {{0.665059, 0.0469970703125}, {2.5, 
      0.0469970703125}}]], 
    LineBox[{{0.665059, 0.0451171875}, {0.665059, 0.048876953125}}], 
    InsetBox["\<\"1\"\>", Scaled[{0.01, 0}, {0.665059, 0.0469970703125}], {
     Left, Bottom}]}, {
    ArrowBox[NCache[{{1.98748, 0.03759765625}, {
       Rational[5, 2], 0.03759765625}}, {{1.98748, 0.03759765625}, {2.5, 
      0.03759765625}}]], 
    LineBox[{{1.98748, 0.0357177734375}, {1.98748, 0.0394775390625}}], 
    InsetBox["\<\"4\"\>", Scaled[{0.01, 0}, {1.98748, 0.03759765625}], {
     Left, Bottom}]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{0.766, 0},
  Frame->{{True, False}, {True, False}},
  FrameLabel->{{
     FormBox["\"Probability\"", TraditionalForm], None}, {
     FormBox["\"Stretching Factor\"", TraditionalForm], None}},
  FrameStyle->GrayLevel[0],
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->Automatic,
  LabelStyle->Directive[FontSize -> 10],
  PlotRange->{{0, 2.5}, {All, All}},
  PlotRangePadding->{{0, 0}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.609636003218059*^9, 3.609636053952828*^9}, {
   3.609636180226817*^9, 3.609636222128878*^9}, {3.609636314081313*^9, 
   3.6096363699513893`*^9}, {3.6096364907792807`*^9, 3.609636531893386*^9}, {
   3.609638998884776*^9, 3.609639008655566*^9}, 3.609640630931283*^9, {
   3.609644452899716*^9, 3.609644477357744*^9}, 3.609644635557328*^9, 
   3.609646584126134*^9, {3.609649733473061*^9, 3.609649736474476*^9}, 
   3.6096509452181673`*^9, 3.609664332820959*^9, {3.60966597523304*^9, 
   3.60966597895583*^9}, 3.6096660128641653`*^9, 3.60975812846548*^9, 
   3.609758174672577*^9, 3.6099729318622723`*^9, 3.618268364968739*^9, {
   3.618270929638775*^9, 3.6182710739077*^9}, {3.618271123179215*^9, 
   3.618271137406253*^9}, 3.6182712622881536`*^9, 3.618271296151984*^9, 
   3.61827136135884*^9, {3.618271403450707*^9, 3.6182714326094503`*^9}, {
   3.618271491090794*^9, 3.6182715059193974`*^9}, {3.6182715463399487`*^9, 
   3.61827155539902*^9}, 3.61827184797007*^9, {3.6182719446411657`*^9, 
   3.618271974611251*^9}, 3.6182720058209057`*^9, {3.618276207290428*^9, 
   3.618276221071908*^9}, 3.618276574446075*^9, 
   3.618276893006111*^9},ImageCache->GraphicsData["CompressedBitmap", "\<\
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
Teoz\
\>"]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[Kappa]CDFPlot", "[", 
  RowBox[{
   RowBox[{"sample4096", "\[LeftDoubleBracket]", 
    RowBox[{"All", ",", 
     RowBox[{"-", "1"}]}], "\[RightDoubleBracket]"}], ",", "\[Kappa]Observed",
    ",", 
   RowBox[{"PlotPoints", "\[Rule]", "4096"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.609639083156595*^9, 3.609639092199402*^9}, {
  3.609644456978179*^9, 3.609644508981615*^9}, {3.609644614671221*^9, 
  3.609644617244734*^9}, {3.6096497653667917`*^9, 3.609649766238616*^9}, {
  3.6096509266426764`*^9, 3.609650930474924*^9}, {3.609664335613008*^9, 
  3.609664335746616*^9}, {3.609758160684682*^9, 3.609758163503387*^9}, {
  3.6099729459884443`*^9, 3.609972946116826*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {GrayLevel[0.5], AbsoluteThickness[1.6], Opacity[1.], 
     LineBox[CompressedData["
1:eJxNzAswFAgYB/BlPc5zsV6JO2puU7gj8jjsGiKnEeNEqQ0RUufZw+VZyFby
3FwiIxvunOeGhF2Pu1XcmtxFRXJqPRKx2ilnve5u5nxf38w3//nN95/P4Hik
1wlJAoGQ9u/+l5SCFjbD8xKV8P9IrXqUD/IDaJvOL6BK1fOjwCOCpnu3+Sng
pKvR15j8HPAA3WMpm18K/mEfteY6vx7s3r6HkcnvBDtk7EoKv/gH+EI4s4ws
OQJWuruUcGo7uvSln++ve9EPPQ0UYzPQ6la1Z/9UfAGuIz5yzdUaBU8Ur8wr
m4yBzz891htyAC2v0s3iRqLNUhmHItjopJMa3f1Wf4EVi350czEYB1eGNuhJ
G78C530UPdShohPSLWNMPdFerLaeI2fQq2O8SHb7J3efkS5/99dg+0nd02f9
0YZn/DWvRaPXcifCm2+gf+qfJyuNofOPmnG3CdFJs7Fh1pIC8Hdyy+1BFPT6
XmJIawR65omzykAKevA4o3UyD81d7AteuYv+OUWJpHofzSR5PqD0opNK8oLs
XqBPmgwpeb3b9ADNu12rJXQDvbFkEMjdNwGuMjeW18hBE35xONqtPwk+uO1g
bWQD2iLL3uxy/zRYXfxlY/HMDFizynj47e45sJaf+bp1wjzY9EDbsVcKC2A3
R6eOK0VoX7uMBboAvbtoklSoIQQ3FX7cmrUDbX1T1jDVBn1BS6U20RHdXqBt
Ebd/0+O0dQ2D1hhvNO3GTofv6ejDVxpKNd6hYxNtJLgJi+C5aqZ/B+M9OHh0
gdPJFIHPJ/+muzL8AazW8HVzwd9LYDKxsTpdUQy2KvRxrnZfBV83En0l9FsD
CzjZ2hZh62DNm5MftovRbjG2T8iZG+Cnb3L6suvRQf5TXQpDaBlOW8euMXSV
Ti7n2+lNv6G5x4W0hQnRwiHbBxnL6CLX2JHX0gSHTVMrXJ9LkNC/65Y8TjRH
H8oX9Sz7osubsuOp0+j3z4xMU89JgAeC6iw5FyXBHaqOyvksIlgko5+6hS0F
tv5cqdf2mTS4nneZI7skAz7duN8jjfgZ2Ib3BbuYIgd206OxT1jKg7OkZwOe
OyiAJ0gV41OBiuCkwOq18kgl8M6hrlkCUxksOxzEkL5HAqvnGQbS/VXAgTXT
rMVKdO2jiql0Idq+o25riJoqmN/U4uligd7jLOcdbIkuGTzse8l600KabHCV
X+k36CiRmM61QzuqFQeLHdDqZvanLJ3RLRHJcbXu6CPVXekUH3TZDpdSzVD0
27K+Vpm4T/41JudEt6JpPIuQ0VX07TiKeCNTDf2YMxpPJoPL749WOpejPZzu
dIWaqIPJWtXsMTZ6PJ6ayXLSwH7aucbOPnSPniXPiK4J9t2wrZmdQ19NmxYQ
Y7XAvFs6xHApbTDLWxRlmIm+5aPWbKu6BT3TIii+g7bTlw7wMdQBE5NVWxix
6L6XeiptXPQ/jltXOw==
      "]]}}, {
    LineBox[NCache[{{0.350166, Rational[1, 8]}, {
       0.893155, Rational[1, 8]}}, {{0.350166, 0.125}, {0.893155, 0.125}}]], 
    LineBox[{{0.350166, 0.115}, {0.350166, 0.135}}], 
    LineBox[{{0.893155, 0.115}, {0.893155, 0.135}}], 
    InsetBox["\<\"3\"\>", NCache[
     Scaled[{0.01, 0}, {0.350166, Rational[1, 8]}], 
      Scaled[{0.01, 0}, {0.350166, 0.125}]], {Left, Bottom}]}, {
    LineBox[NCache[{{0.42816, Rational[3, 8]}, {1.60589, Rational[3, 8]}}, {{
      0.42816, 0.375}, {1.60589, 0.375}}]], 
    LineBox[{{0.42816, 0.365}, {0.42816, 0.385}}], 
    LineBox[{{1.60589, 0.365}, {1.60589, 0.385}}], 
    InsetBox["\<\"2\"\>", NCache[
     Scaled[{0.01, 0}, {0.42816, Rational[3, 8]}], 
      Scaled[{0.01, 0}, {0.42816, 0.375}]], {Left, Bottom}]}, {
    LineBox[NCache[{{0.665059, Rational[5, 8]}, {3.31859, Rational[5, 8]}}, {{
      0.665059, 0.625}, {3.31859, 0.625}}]], 
    LineBox[{{0.665059, 0.615}, {0.665059, 0.635}}], 
    LineBox[{{3.31859, 0.615}, {3.31859, 0.635}}], 
    InsetBox["\<\"1\"\>", NCache[
     Scaled[{0.01, 0}, {0.665059, Rational[5, 8]}], 
      Scaled[{0.01, 0}, {0.665059, 0.625}]], {Left, Bottom}]}, {
    LineBox[NCache[{{1.98748, Rational[7, 8]}, {6.62006, Rational[7, 8]}}, {{
      1.98748, 0.875}, {6.62006, 0.875}}]], 
    LineBox[{{1.98748, 0.865}, {1.98748, 0.885}}], 
    LineBox[{{6.62006, 0.865}, {6.62006, 0.885}}], 
    InsetBox["\<\"4\"\>", NCache[
     Scaled[{0.01, 0}, {1.98748, Rational[7, 8]}], 
      Scaled[{0.01, 0}, {1.98748, 0.875}]], {Left, Bottom}]}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], Thickness[Large], Opacity[1.], 
     LineBox[CompressedData["
1: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
yExH63JvU2YoIhUpf88+p8xRRMIH2jQTLcE2G/OkPE+D1ez82czPgAXzLYZU
rMDNC+8mOSL7GjSdyEFWTmLm7kcen9jVsOYs1S+KSLq6vfdRZNOodOUgyrJF
hLufNlmL/Ho7T/Y8snyH55oL1uAE55GgT8iG9WIaXOeo/lBE2FefYDiIXHM+
rMQL2elJnV0Fsv6Ch3p3bcCSai5yTufBU957t2chP69jV+6hrFtEQtna9nBf
AJvqPNiviTzTuuVwHnKkUa0pvy2Y8SJHUJkd1X+KyHaXbcl+F8EXfIweG10C
K70SrQ5EXrJs6GUV8nudooZJynZFJDHUrVXyMvjjvcQffyi7F5FU2vlRGXvw
VVGF3+bIaqcZ5iIpBxcRzrQ6xtfItB+hLH+RH8kYs2+5Ana6uH7VGWSNgp98
dynHF5HeHTfWL7wKdn26cvM5ZC3GT/L3KVcWEb69yUotyH0+truZHcAFr7Zr
KFJuLCIeyxi1bZF1dF8feogsGBZ+7APywLsTJ5c6UvVcRG4eH7G+jCz82ePq
R+Sfolouy6+By09zeexB9k3r8nGgPFJEjgym3M5AHr24885KJ3DA7/pEZ2Rh
5Zikfc7gQq8zyStdwEbvY5LVkRkkGpKvISddW5CSiaz5emtKN2WGYhJ+4W7K
3uvgrhWMqRnIEoVWqStcwZcM36Y6IPOkM6alU+YoJhUz29I+IZsfPJvG4QZm
vh+btgdZf/fC9DTk2K9n05e7g1UV7qXvRu7zbUy/Qlm4mPh3LMxIRZaVVsj4
SFm2mLSYPshV9KHOfzFp/DO4+DJyffh2o3TkOhmvrM/ItS/fMvL5UvVQTJ7O
ns7wQS6RnT80iZxnETFrcQucES2d1IKcKuc4zepH1UMxSayvPrgb+cHp5QnX
kOMYjk/mIEdvHYtb4w8Osbq1LxA5kPHd3efIfrHCI7OU44uJj7yN2tYA6j4s
Jl6NxdHnKFcWE4ftfd81boOt41cpigWCT7DsCVgYBNa1u/iJhrw/kcVbJxi8
u+2+zBNkcumHxwSyEpvCB+kQ8PZkDykLyo3FZJtKg9tdyrR/5zF1ttExFMzP
ISVyJAzMk3716m3KI8VklVrVqxpkjq5la2aRlzkeu7wlHMyUOSKQgMxA86nh
iEDj2Zw+rUaZoYRITKmxOFLmKCFKXqLpGZSFS4geB6NWN7KTxNMg9UhwgopL
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
UbzsRtzaTqX4TZ19GrxH9VrmFbDcgJ5WKXggl13/lpjVTt3bF7LvK/iErDTH
9HzGG7ueJEoRd7dTs67sUVwDbrCdUmkOThW/au0B3tuk+yMMLH+edfoKeHBr
kGQpcS/dD6sfb/kKnr3+X4DULcYK6ifehoENl/1V/AoW7Emt5C6YdH871Zyu
ZSMFvrK79cdqsIvEsXBz8EjCg7th4NDZf9j3wY+GR5PCbjMe/TBiZF7IeM7r
Qzfug1UqhqZI3WE8diI+eTX4yVq1Febg8NG3z9zBpncP2oYRD9Dzs4/wz8vg
dqU7EffB1/vMpN6CPbIGi/uJh+j5aL+hpkwR4zUK6fdtwIqzTI74g6W+/V5z
nni0nRJ+nfknH8xdsK3sBbjf+6Y2513G9apTHq8GPxPJC9wOLhm20vUG5zRx
TYkCp90reJJFPE7fv5NtQyrBoYd51rOIOToof+uiqePEXB3U/rX2lXOLGe+S
4DulCjb9e2/DVrB++15uN2KeDkrj8ez/wsBc6x9XD4PrqjxrHO8xfnpjXlQQ
uDi8yjgVfHOfD38JMV8HlWoo+fotOITPz3RmCeN9ta/e6IFNY5aYHwGrmx1v
uA1epros4RVYQqRx+2digQ5q9nCQ6LT7jDmbFN5JgYeLm5O0wL1JoVZW4A8B
yuK+4Nqdre/PEYt1UEXz1Wz+A6e0nW2dAKt+/NLZWjppqQ5K+UJjgcADxkrG
5YH6YMUbq1zsiGU6KIUpOSYB4OU2UupxxHIdlPzdhAW5YNkFbg+EyxhLn9Ld
eRS8qOOubgKxWgcltXq53C3wwvNXZleDJb/O+cUm1qT39ypHlehDxuLb++IN
waIzmvaeAIs8LFcpBAvPVZ9XQ6zVQQl550zpAQu+lPr8DyywJLFO/BHj2YEz
S1TB/O+DLhuDZ6mOhLmA+aLcPIOJdTuo6cO6fJ+J9Tso7q3FPzkfT9qAjveb
yz9IgKdOvVqhTmxEx88u0WxTMIfglMOh4InKvk0l4L+Se1bUg8cDmkT7wX/q
t0xMK2c8pvDk40Ji0w5qlJVTZA4ejk88eRo8MO626Du433HdY8snjPUsjbdo
VDBO2rTz3dynsH697dhWsJ7u7gXhYPdHLKUMcJKWg245uKK0a1srPk/Tae8o
sUUHNfdej69IJWO9Va5hymD3O5+TjMBJK91uuhJb0evlvb83E9vS67MGOYbB
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
      "]]}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->False,
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{True, False}, {True, False}},
  FrameLabel->{
    FormBox["\"Stretching Factor\"", TraditionalForm], 
    FormBox["\"CDF\"", TraditionalForm]},
  FrameStyle->GrayLevel[0],
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->Automatic,
  LabelStyle->Directive[FontSize -> 10],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{{0., 6.6862606}, {0., 1.}},
  PlotRangeClipping->True,
  PlotRangePadding->0,
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.609639093086679*^9, 3.609640632308679*^9, {3.609644457796214*^9, 
   3.609644509285597*^9}, {3.609644613264613*^9, 3.609644618484446*^9}, 
   3.609646596795245*^9, 3.6096497677302227`*^9, {3.609650924860756*^9, 
   3.6096509379553347`*^9}, 3.6096643433986483`*^9, 3.60975816872265*^9, 
   3.609758200560717*^9, 3.609972970485259*^9, 3.6182685037416973`*^9, 
   3.618271611017303*^9, 3.618272037664163*^9, 3.618276672559141*^9, 
   3.6182769177779427`*^9},ImageCache->GraphicsData["CompressedBitmap", "\<\
eJztXA20U9WVvvLyUJTiH2q1OmLtmq6ZlqzVWZ2OnTVjJ+3Y1hlrRjurM65m
Vag2qPUnBaWN1ekjj7/IjwRRo1UDYhTJSFekEPkJPxEe4UFAwk/4CRAeBCFg
HoT3CBBwz9n7/NybvPty8x6ra7VrzVsr9yXn3vPtffbZZ5+99znn/mjk04/8
4omRTz/60MhhPxg90vPIow+NGfb9p0azoqZLNO2SRzRNKw3T8Duwr+JCf4/i
RfwQ35P0rwkq5TKUyhX69Sa/1Ub/BrJLGWI+Bwgs0FwhKAC8wZ+aIwAAKlAq
lYDhaJeLsjL7XSoTOa1ZESopQl+QFMoZ8Ln9kClhQQlCDg38qdLlVdBl9ctI
rmKAZtjquXGcu9n073rIRH06/+zj9EWhyG4Vk0H67Q6vh4DDCYkSlxRUchBw
4rN2uu8KJJAUJIMu+h3OnIKE3zmAhDuU3y4lwekIECw2ImjXIJAuQcrvBH+y
CKWUn5FNcnjDs4VkCOzIlt0BDvbfE8mqRpZT4NQckCzJhl8PlXyclWlgd7DH
GcdYFeFluWZHrl2QyFcMrctANuan75yUF9KlKjae5/IK0b/hrEN4zVi2KORR
gABD9sTyrEFMJn5sSLFKZpkg0xFvXDyfBb+H9WiZPSM45JheyNMDOfAw2UZ3
rwGn3a+EhjT8qSIJzSeE5jAKDZ9lUnGwurE89kgBQqyf7P6kZpSao0Zq+aib
tToIxGo5DS52P14ok6Z54oKjqAfsnpjePkbPzujEC5x8MsDa50vofNRI7Qao
FHOQFhJDPc9l4oySBl4GkWa17f6UklpSSC3uZah2Jzid7ONyg4t9otljpD4o
CSEB0ZJrVZ+VDGqGkqqSmF9IrMw57UgHqPVl0HuK8SIwhyiJJZhE0BCU2YdG
KJNuxO8Gu91O/Gka8s34t1Ov8+pXqKZRBxvIVKjDmaBIYMSy9rxxXH4dCqkI
uOxiXDLUQCxNlLEP7NQK3kJ3JE3DPRNiXLjC1PpyLkocpVHH7ELH0kjSA9kK
72ePwwPpTt66OOkL17tYAQwSY9LRfKSX5WyYsyx0LC50LEg6luItvkUMTGTZ
TsJB9oNsRJVzMfB4wkAaU+JqliiJJkSzXPhhD7hDab2JREqDaK5MVi3uY+WB
lCqPZPKs6RXtuWpdw9s4loPJHHBzytqWjEO6YzO4NW65wpnDEHbbhdVDqRQg
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
m7xIVrvk/wC+RxJK\
\>"]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Correlation plots", "Subsubsection",
 CellChangeTimes->{{3.609644801281474*^9, 3.609644803015127*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"highFraction\[Kappa]Observed", "=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\"\<GRB080916C\>\"", ",", 
       RowBox[{"0.0606088", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"1", "-", 
           RowBox[{"1", "/", 
            SqrtBox["17"]}]}], ",", 
          RowBox[{"1", "+", 
           RowBox[{"1", "/", 
            SqrtBox["17"]}]}]}], "}"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"0.665059", ",", "3.31859"}], "}"}], ",", "2"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"\"\<GRB090510\>\"", ",", 
       RowBox[{"0.124604", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"1", "-", 
           RowBox[{"1", "/", 
            SqrtBox["26"]}]}], ",", 
          RowBox[{"1", "+", 
           RowBox[{"1", "/", 
            SqrtBox["26"]}]}]}], "}"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"0.42816", ",", "1.60589"}], "}"}], ",", "2"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"\"\<GRB090902B\>\"", ",", 
       RowBox[{"0.142558", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"1", "-", 
           RowBox[{"1", "/", 
            SqrtBox["51.1249"]}]}], ",", 
          RowBox[{"1", "+", 
           RowBox[{"1", "/", 
            SqrtBox["51.1249"]}]}]}], "}"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"0.350166", ",", "0.893155"}], "}"}], ",", "1"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"\"\<GRB090926A\>\"", ",", 
       RowBox[{"0.0570003", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"1", "-", 
           RowBox[{"1", "/", 
            SqrtBox["27"]}]}], ",", 
          RowBox[{"1", "+", 
           RowBox[{"1", "/", 
            SqrtBox["27"]}]}]}], "}"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"1.98748", ",", "6.62006"}], "}"}], ",", "2"}], "}"}]}], 
    "\[IndentingNewLine]", "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.6096451014355288`*^9, 3.6096451374568987`*^9}, {
  3.609645222026988*^9, 3.609645227887209*^9}, {3.609645393051215*^9, 
  3.609645428989118*^9}, {3.609645463432189*^9, 3.609645477467903*^9}, {
  3.609645609781362*^9, 3.609645642394065*^9}, {3.609645674156782*^9, 
  3.609645706993593*^9}, {3.6096458067672873`*^9, 3.6096458371022587`*^9}, {
  3.6100006551482983`*^9, 3.610000671716674*^9}, {3.618272274479507*^9, 
  3.618272307498221*^9}, {3.618272481532508*^9, 3.618272566386314*^9}, {
  3.618273351886237*^9, 3.618273365130822*^9}, {3.618273486468609*^9, 
  3.618273491272305*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ratio\[Kappa]ListPlot", "[", 
  RowBox[{
   RowBox[{"sample4096", "\[LeftDoubleBracket]", 
    RowBox[{"All", ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "4", ",", 
       RowBox[{"-", "1"}]}], "}"}]}], "\[RightDoubleBracket]"}], ",", 
   "highFraction\[Kappa]Observed", ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"All", ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"0.95", 
         RowBox[{"Min", "[", 
          RowBox[{
           RowBox[{"Min", "@", 
            RowBox[{"highFraction\[Kappa]Observed", "\[LeftDoubleBracket]", 
             RowBox[{"All", ",", "3", ",", "1"}], "\[RightDoubleBracket]"}]}],
            ",", 
           RowBox[{"Min", "@", 
            RowBox[{"sample4096", "\[LeftDoubleBracket]", 
             RowBox[{"All", ",", "6"}], "\[RightDoubleBracket]"}]}]}], 
          "]"}]}], ",", 
        RowBox[{"1.05", 
         RowBox[{"Max", "[", 
          RowBox[{
           RowBox[{"Max", "@", 
            RowBox[{"highFraction\[Kappa]Observed", "\[LeftDoubleBracket]", 
             RowBox[{"All", ",", "3", ",", "2"}], "\[RightDoubleBracket]"}]}],
            ",", 
           RowBox[{"Max", "@", 
            RowBox[{"sample4096", "\[LeftDoubleBracket]", 
             RowBox[{"All", ",", "6"}], "\[RightDoubleBracket]"}]}]}], 
          "]"}]}]}], "}"}]}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6096650972532883`*^9, 3.609665121188483*^9}, {
  3.609665203832144*^9, 3.609665219118981*^9}, {3.609758233235594*^9, 
  3.609758267152817*^9}, {3.609972985348139*^9, 3.609972985476069*^9}, {
  3.609997080802047*^9, 3.60999718294445*^9}, {3.609997492052512*^9, 
  3.6099974988324137`*^9}, {3.60999762567321*^9, 3.60999764980855*^9}, {
  3.609998312612007*^9, 3.609998373699478*^9}, {3.609998417739347*^9, 
  3.609998428640561*^9}, {3.609998740747856*^9, 3.609998744360976*^9}, {
  3.609998779712817*^9, 3.609998782993621*^9}, {3.609998864461544*^9, 
  3.609998889124649*^9}, {3.609998926692957*^9, 3.609998992852491*^9}, {
  3.609999065492115*^9, 3.609999072633073*^9}, {3.609999106131126*^9, 
  3.6099992564416437`*^9}, {3.609999461538074*^9, 3.6099994623562098`*^9}, {
  3.609999503850231*^9, 3.609999569720736*^9}, {3.618272810627265*^9, 
  3.618272833414793*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {{}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Small], 
      AbsoluteThickness[1.6], PointBox[CompressedData["
1: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
+B6LzF/Exv+3zzNanOIiOeb7/L+USRN6jxq/I1Z9HCQMwNfS+RY5N0rMt9BS
08vTD99uOLPb9ewiudGTXxvME+DanPvO475N9KrMR1Cj8Bv0ej88/MyVBGtl
Dao/D62BmEkhER+FTfTNo/RpWs4X+LU0rtw0sY3+XZHUYanKhVqcPVJyfR1d
f1vroE2IQ4y/HnqOum4jr4130a4iX5Gp4CXuT0coMFe2VHeYUzdwHDGzii0k
w09NRIgkCe1wdV3gHN+5LWTXcexscJY7Mi6LUXwrv4cKp1teXJgsgBuXo89I
/dhCxdPUMTzq0cDvJGE0eJgCc9ohZbPILjB2Vm2c9t9Giba1bnq6uRD1IqfI
yIIZF0WSvVItHgcPieF6O2oq/OBJ+d2ciD6QvnLjSocWCbb8pkMyw1UJv9Vr
N3AJE6bjUKRc0fkFpT90p51sSPCt+19XBUvK4aL+BImz+gYqGnrU8iTNA7l+
FiJ83VpDS29kNZluv4M0ku93rCMpMb+M5NRn835gNbn5zMeJgIPK1KUs1IoB
wpQkPdfJMZnfOcEjs81Az//BIrt3A0lv1Pt0Gn5BB89cTBL6S8DpeJLv93EM
paLu4elm20i5gk/HeisCHndF9Il/JMVNGav/+cq3ggZjTrWtzjZyq+mKUsr7
DtZfaDPCUqlw2mkvW1X2PnDxajsdVk2KXXWqrJvpWkFHZP7VpscGCs+0L3qu
7w/xJqPbpYgCX1fcrrK/3gvOGUIP4qZp8f3zbvdKTHrgrzt/tfF9In7LacWU
Id0Aa5IJ+fVkG4j/Zn8nmVAeSksSUzK1JWAzr0LjQq4K0OXOvcvKu4m4FzlE
5+bi0cexj7k/ytaRMWvqSYGgONT97ZaBQT85Dmt5/n67pwOIEufdy0w30J22
loG5vi+gKVqjrkZYQvS+ZicFmTA6z26qENZNjhkvnsXCj1tA+DmfvN6+X5mq
HqGiudEIXu2Hb7wLXUOGHw9/vC57B/71MmVcpqPEjuUk75mbuiEx6OtJD/lN
9PDyzMNThaUoZVq8ijljHcnLciilfPJAq9F5os2PNtBqBGegbowpOL7f5Vtx
/osKYmSJjPO1aPjXxMygwTZS5GKYeXE7Fm5zfJfo9lxH1gvNV8KepqCqrY+z
DxQ20CEOLvX2jSjQeJzzyezlDsrjvlkCIhlQHn9l+Xc2Oc7neXuoMqcDPjAc
izsZQsDX7udL8jTnQ6LrCw1GhlWUS0vPpuAQhCSZWILSTWgxvar8Gxfvn/BH
Rcrjgw451uXZLTtG0QoZDpk54k/mkd3ts6YP5MtRy6lcluApcnz52TlHK8pu
qOS7nc78fRO9t6W74EPvAjmJz27PCuwinotceQ3TxXBvlG/KbZ/nSe/+Ob/G
HYS4Vn2ozV+Q4b9pqYryHG1gkKWsSjZLjiXDIjVvTXYCP4fQXOnUBmqrlWqZ
ZI5BGzfDukt56LAdO5H3o/1PEPrpQVtisIImfE5wVzwoQLfqSvmCtFeRuZvO
krBCOjqsxPrIoG4RfXzYcNC6OR1h41DFzvxldKNk6NeH5FhEyD575U38HnKt
S+04y/QdRk7AG52ZRVTExP3w2m+Mntj4aeQozKEjFYetR1lrUSi5062ochLs
bRSZSRdSA79eGGvs1Cwh9bPWz4gBVSgnOYbJsoOI5YIf1NMaN0GR87fTXReZ
8MvQ4L4ZPAZhZsdNzj8lw5/OrPJmMLWBx2VHteti6+iZlve7ZbZ3EHmUPpNc
hQmXmH7+8YBjHIZIo09JSBPxl/t/bXiZ6+B9GWfQ3P7z+/sd7Q5YNkExS9HY
vDYtln8b5H7hzTCwVfZFnRPb50eqIA8DnW5In5b4NGNNxFtf45rH2Bqg7VU4
Lx/FEiI5Yn3gcloeAi/Vee9rREyHZv4rc6oDQeUhvsiVLfThQojP7YlwZJzO
SVKzP+/zfaGPImXqQEPz8enm40uIPanRnv1dNSo3y6wfaV1BSrs0AqM8+ehI
aL1N97lddGm5ddVrvgiSHxkq07oSsSjbq1CegnqoGQh93/2cFsfMttl9PN0H
pm0OT7oZGbDkDSVPXvJfcLdJtDP5LBEH1Mt2KyRVAt/G22+l2pS4UDKo5Nha
H7znOOjGeZoC+5PYeHOodII107uEhVVqzDSif1N+rAsYM2cVe94vIAGn5Ni/
cvnIxPVCLKkEE+YW8TK6hkdB8Zd73YMzJLhF/LIOSJcDf9v4cPDOCiJZWFyS
WyxGlMErqU3yRPxfrcA7Jet6iLvj/ZmHg4hHJPTfnbQvh4HKWYOTvIvofU9s
6t/QchQl+D2PYj/vy73JRLouZkLeycq/42eIuFCRQflmbCnU3XzX/UtlGQW7
N+U2j2ahlHfxREHabeTHpvqvr98IKJWS18/gPTRnaK7ccKAYzikKldewrKD2
5fvupgZlaIc30r9bah5lTnDxdB6sQpFg8lmRmRRPPQ1OyWJvgMPLn14fdF9A
vo27hemiNegSRXp43jcGfOuqNkeB0xCMFHKYc24RcXzSEhM61AyNuq15HLtb
6CrbBo846Ve0YszC4fRlC9naWPbdDY4AX1V9wbWjBBxmGTB3qaoMuMrU8mvd
yPCYY7M451YriPX0ufx0WUNutlEbeQPZ6E8kH82dETJ8W+stZ150O9g8EfZo
tGLBNys7XizNTYBwSJxwBi0TVrrrZ6VUPQrNZkelzXnIcdPZD93DDq1Aeb3+
t50FJb5SUys4TdoDFeKZATtnd5GXw4DMN8GvMG8hKdCYQI+z+BVVJqJG4eRN
gr8RJwF/rps0TUxC8JkkytGFeg8tP8hp/qdVAtWWWTF5j5ZRcoK1HX0pRrz3
3Xy+0i+hu+ZT9CUWpWi6/JVNP/02SlKT3P1yLBu2ojRnpacoMbL0Y7omNAB7
7AHkd3+QYf8Dzltrcq3w3t8zMKyJDu8s7YT+etULmyx3+09G7aKnISc80l+H
QuLF0dsU6WT4Jk9YifNsO1Q4P7X2qd1E6+mRp0UCQuHHIHOShiARu47pMGqv
VQLb3PTHl3LkeFR3O+712VZ4fTnSTOMAEWfb0spWi1XBh72eL6u8JPiHtcii
2qkSYLt7keqAIhGTXdxJ//a5DhxiL/ma/ltE0pdvqYikFKKi6nbNoHFqPHb7
vwJ1ri544d/qeD98GV3zcLz7MzILNbrK3KwTXUYmHmfPUNCVoKtGD2Xl/clw
ZUTPq2/8rXBZW7TlIw8Z/q5wdXO9qAVG4lcNsToj1jFGmy4VQ5AeorxzYZoc
k4/ZFZMvdwFBW5rv1C4RM0TZGZX+bYDzgiRltLsk+F1iTCm1YzX0Hu6q2n1H
i+3HrqbSGDbBRWV6zvD9/o7z5/959X01ZFeTBcyG7ftJqX+VoFI16Ojns3pU
UmOVCS1j29IBUKpoMl6W3EXSPHpWhvK58ERk6pZjEhF3kyzbvBxqgDPHI2TX
PpPjCKdH563PdcDr77fSZeRpsNoBG9HE+SGoEPvOz2lPhYV/3W1q+d4DD0NV
T6xbb6IO3tEe26GvKPACVYi95gqyovmvTzu6GLErsHT4wQp6kSkqWOhTjuzv
TjWcKCbgrONqqvRtCIhFzQtvCwiY9It+teL5NEhfuO16eIEKS9Szi5DtdcLa
Lxktc0syrF/8/LGreRvcd39k/Wjf/x3nzp9zP5gFppd97x0K2+eX8lslqgO1
cO8sTybCG+gK83/VD7uykfoX2TPvVudR5UOP/u8pVUjJnqo75coBfGq06PfN
F5PwuAl5BXoQsKGATHh/ZAV06TOV/SshYJ2jqaTqHpXwUtvozUdjcpx09Gq4
ytdOuMnp0Dm6voNcHkZGtrsXQaHt4b6AQALeyCVtaOYvhw4VrwUWWEB8l42k
nHAV6tCxe2tiRo5/O75Q4+nvhCP+GsVBZ6gwyWNXsdpzA5BLXNoWOb6H1t5Y
JF7n+QE7T6XtVCNo8HDHdPhd90GwSekY0HlDgplNJTxGyBHIpg/PTRgtoIs6
F0PbiyvQZ8n48IS/NFg8uOKYj3EvCI8oGtnu75eG46eUu7mawFuzxXCLhhwH
l7oytEp1QNTZnUN/O0jxryT7E9IkLcAaF1OSfJ0O4xe0Dy9ajILysQz3Ygda
LHrYrd347wjIJpbYbdKQ4T/87/1yfRsh1OY5t0Y76b5PhZcIT7bC7pkX8z6L
K+gOqWpp5ABCNaT1U6IHKXDfexmfc8Ru8LKDKt38/X7J/vfrCWM/cJu3aI6N
UePFj8kKXSuDcDFubETt/SKi5HLTsD1Wgf4MLjvvRdLgXmWSL3E97fDw2Okv
kWosmMro/IdB/lH4I3JOQ4WbFH/x936Wu1oL9UXT+scYGPHixegPlGGD8C+l
3K/01gbKifQ3+oOc4dtGtbWNFSW+PuVhcq63ByYVbxhKicyhUkY/2Y7nFWij
wfTwOsN+HomflksgbwT5Ged81EyCPxvtwOrnKvDtVB2c8yHi3Jatz4FfGiDJ
7/355SFSbLyk2l6CGmBjTvfJe+8VpKZZ+XDmZibK0sxKdbi6gj7xLvIwvspC
j+a/mlUtUuFTDUYNR/R+wiP+uxvywetohHu0tpqsFBWYxPay3KPFzksJAhoe
o3A4JPlsghE9NrQpPcbQNAD9fGzm1/sp8Iu81ptFLL1A4lDlXkFHhu9rgAg+
2AbOLp8UTz7cQRIHntN8R1+BLeyJtObROcQo8qPxHXUtsnYZZ3g6QI77hV8e
p+xuB7Z+2VhdYXKMLwmfusHbAaWKXjGKautIsPjFAfqLJUhZ7aHu39+kmI6Q
Hhuk3gyOrJYMF9M2UXzQ/LtXpx8iu7XXoVQTVPjQAX/ip5F9/tHu2ZzdJMPp
Y9a/bP60w5AjjXvZuy3UunfY8zykQuQZ1ZX8Liqs2L9+myplAH4/H5SZJhDw
vW9lNWW+34AGPSrtKKTDtRWj7/bEB+H08QPOk3sUOCs4pcJuvBfkfz+y+La3
g6rHPn1nn80Dl3PXwcSIDGs2BHqPyreD4p8d0T7XLfT2V9OUnmAo4MZI5zeS
BHxxpkve8nE5GIUelbgyRoLd7kSt0jnUwlZ4ZYXhfwz4u5pbW/2TUQgwvak2
2r6A9G8u537orUC2Ha/vlXYexn65YZrZK6PwqonpxIeAFZQwmxUbn52JHFz+
VBju+2tflG9h/tFUsNzYsCk1Isdw2vk1Z1cnBLe6Py91WEeHAsjiJpvS0KWb
CfTV4dvIyWlIiY4xB3JH/zz1GaHGltelLzBK9AKVttjKLZd1pDl2581zjRz0
stc0Nt97EzVlefqNHo5HP9l+3LiFFtG9NX31he0qpKH9x3mUmQSr/on7tD1Y
CF5qLarL+/74pEyxxHAhF9TU2y4Jp5HjSD6lmZCpeiiXEQtUUF1AR8yW4lIO
lKGvKge5Fi3p8SFmubfPc/Z5mdun6q0gI35xlul9hsE4HBL4MsxTtIwc0qrT
J9mLkZDszJ6eGgkOuXxiN5xYDVWpUhel/pDgD0OWiwEv6+CpZ3GBHNsierF9
1G6MIhcN3Yn1v7nDgj9yUNHMmI/C4/D73/gKFpEaWhZSepGPduUa81sO0+P+
98XRW2q9UMnb5JnBRo+ljTh1xQVGoe1JajzlHBnOk5YK8GFph3uchvzPdijx
fb4cCuGD/XBT0sdA7PkKCv0z+ewJeQaqbRu41ry5iYypHtdf9c+AwRtX/rCJ
LKIE4kyPqWIZ4jov9XxjYRM9cP1jW7+Vv7/fvql80dvnzwTBT7cONIB2t/vl
rrPTiFg55SuH61HhpLT/9ffzCOrtmxl/YETkrOyWZNlEeStrfsGDYejSi489
v18RsSqfy4K1VgP0b4699K1YQa/e+dk9eh6OLmSIF5f5U+B7HlelNrW7IdRX
6KSM8AKKldCJsDxYioqoW8rt5fYQtabK/danpZDH+aCGJWYb5UvlU4yOp0Fp
zn1Dv+O02P9ZccbO027ouUKbOGe07/uXVTNzC/qgNPTJHW0eSjyr9CjsxO0u
QH4RJpMqJNgmt6BB4G01nLrBzdKpvoCYtPzD+qfzkLPdJtElaBUVPf0Epg0B
6OTMBcGtj7TYeiASavZ53YiK02RZhBR7i8l86+mshst3Fbp5PlLgt5IXWSIq
2sE+YtL9oz0dzr+UM87/cAgO8BCUTuoQsFP8TzkmpmyIN+nelaQkwQyFBjYR
8YVApPmnc6iWDIN/RLPuWCtk9v1RNvy5h7wWltKkonPgYIbhrXEuIr6XTVPf
Y1UL47e5HMudNpAqxZ0pCe04VKkzgLlkiFiWP1bYu6cO5v2Mvq3t+2DpvS0x
BY4yeJLjbfsjkRavugnHDVCPwjrdOSeD+6T4TFHUCb+KJrDMJLKf3l8PmX8F
DDs3QZNG850ixhXUFVJcEhUfi/T8W9Z9ftFjtpRTPZExbUCbknuUY3IbESOW
KCWCsqHy1NGk6GQGrPdLt8X8TBtwyKVFbF5bQ8VxDx6jngC0h+sdW57R44Rr
TNtj1mOw9DK93ZmKgCVU9qLOmuUDDfWzW1pDFFgxNuqY458u2JmcE8h5So0H
c+Vez4i3wsGLx4oyJpYRyd1TT2S6UxDraMVJiro1VBvBPs88lIzopNOKI2+S
4hHBV1p+72vBYInRtqONHK/oNabbxbcDLe/sP2vKXbSQo5v6fCYaotUY87Sz
GDDHkxPFzMXDcLxowPD4y030KpTuZnlLDESrpIHyyf15ef9C3lakD6yeWW24
5e3/b3F6HMvXDNXNm2KvrtDjyqQ+ial/ozAVuOjguP+9XW/yTFbdKYOL9Lk/
o03330f29pqOYyEQyOeEhvb9eY/8mZjm3THQTqaSBjMyfMxAllxxrw2sMi7w
KIhuoEhNjpbU9hNQ5P2hk+4aOaZ4S4q0tWpAnux8m6fdInp5PKf7+p9sFKnz
RPo1JmBh/5V0JIngCPM9tHOcgGO7KDfS58uA42aVv0MdLX5s3ehg6jgIWYhW
SLOAHNsPXZKSoO6E9fcBqrcerSPqVuHUfskg1KXDL9nLRIJDGwvPVqFKIJp+
eeTaQ4p738XIki22wj0qQdHqDVIs+s+xgjmyBcg8Qe8lLwF3Xxlo9Du5z1fk
m7tVZ/YQF9lnkgvuuSC0/0sfPSTiB6VuD1f+a4A96oJYfHAJae+MnXn8vBrp
7XXQuVOQ4DbzHNE/ilXQdPfr+poQC/4vauCgHHEMlNuYfH73b6DhmYRcrx1L
1PBvtSL4MyXeq+Hd+BfXDe2uVXNu9uRYjkc6krmkHhzzxHIslaiwXZOVCh/F
TzhZV/O47i0Jjr5+5b6ITg0wn0ksO/NmFX1W9lpsof6GZM0XNt/KrqBi99Yj
Do+z0FH28MtFpyjwOrf12ZsLdbA++W8me40Km2s/fU8lOQDxFq5lQTHL6J33
+eR+1QTkEp34iLyPiLcJd757SjaBts33k7yd6yggckTkBIk2kLGIKJmxMuJr
xy4thor/AoXjIk8OnSXFd9ZHJujYWmCAQvj90H/78xbVpucw/B1R5pt9mnQg
YDrKSOXqZ+UQX2D+8zPpEnJ/0iVe7FqNHIN7e2gt9lBK1DKeOY4hnV/Ua7d0
GSlmv/lrLVOBbsv/e0ACpJj5zCux+f5mIOUffnBRmxRzRamlpP5ogVtaMzoV
JmtIOiLXQRPskOj9uYKYzHUUmm2xvREpi85+1hu1vc6A7RcF7XafdYGPjnfS
s3Pk+IJHI+319A6YMC3KSnfdQKZGklXFaj7oSAP7HUaHJWStMBt2yq4cHd8r
io78RoKV58ZnNtVqoPHiEXsplSWEzRZs/Aip6MDBRCuydSLmFg9iJs2sg0dN
ntf3Cwa9/yhHfLVXieYcScjj/Jmxi1uXrPbjX1C3OJUWV7SDMlUTeH6uFML8
yYYdtxUCPnA+6UbqRjFY3xvkmq6kw1T9lMosZaOw1S/AObvPI7FyAq9FZQpR
ZlcuV+beArrm7WnoWVCDbkzrEUWvbSNFQWrj86mJIEFq7OQivYVGjdHQYGEA
lDRY6Omz7SK5+GTWJ/VFoP2QW3u0iAZzKEWflt73y6Scbz0WBURclv829lpE
A/hGV9wvciHitp9OVNRdVcDR0SM930+NP6/dANHDI2DxbI97YHQb/akR8FO+
ngl/uE59cDuxhRSl37yKsH6I6gJJ1MzOEfDtYx4m1se/w828Usp5ako8Vtuo
orHTDT9zByKeFZHjKombwr/iu8BPXdE3wJUGawcv3fpI7IHaKIHComdE3IND
6tctGuAqpIVq2FHjyRcSabsjfWApm/wqbnoD2ShQOOecioPECl4bIdttpFz0
REOnIBuMT8XuUodRYN9DVWldgz3wY7asLVqQHCs+5nwSeKUTTI2PDB0Rp8Dm
863J1x274fDrvTMhmgy40XpqUfBiG9TD3cHnEtS4+u0uRf6ZXrikdq1YiriK
jP/7JHOKIQBpPUmwaHpHxCIUZrIJh2uAh9Gv+JTvAvr1avBjWGQJWqIuFBhr
JMd1VM+Hj5d2QSB3XLeCFzm2sBvUUeLsAtWFxOmQ4kX02/lUL0tgOpKZqN89
OkTEVvW+ufdLGqEVyj9Y1rDhLlKu3ftXJsF3Cgc2eFPgLeL92KuPeuDqftxp
8JLg870R9ITiKki+KNezkbeLNKvLGjdKi8DY97aB6+4SKvr2SsYgJxuRsp65
tvgfFZ4Re5Vnw9AD57ciV85/XEVcK24ZYqwxyEKOelZblxZ7mb5rve0/Alpj
qaekYlaR0/aMhH5IPhqUS6Ns3iDBmQzxZ+VLqmFNp5tsypsSe7MtH7h9rQ/4
7ulqjSkTMcGIYmryUAN4/W2qKI9YQMv9lmzoYTXi8f72rvfdCgr4ppqbrJ6I
zvobGvoYU+JH4jFt1+T74JZneepy2Ab6ttlvculTNhI9rDLvbLOJWDSej9gN
GCK7UU9hBvtdlJjxo0LErwjqrj32L+WkwUf8kqZmFzqBIeY59e9kEuxg4KtT
/LMcQiP5hsTc91B+wzM4f68UJLXz3rupk+Mox52ZXNF2kCrZDWvnp8JUJbh9
baUPplk5u/Xs19FQk+d7cQmMRlRCevXYl5CnhkxcGUMlevqmwm18gogfPRH7
1BVTAzIcWbpeZiT4xJ3H4V3R1SAt8fOe3m0SfFNUPjj8ShF4yopVfRujwlpz
+jt7g+3w/QMXmdv+/Kdy1cl+YO6GEaBjezu+hxwD2MzZ4vIBl3c7UNhuofZk
ZgP+n9+Bx+pl56NdKqyTstUYzNkHylOMVmtLOyj5KGX6wINsoL3tqzbOu41Y
Pq5qfHiTBUIzm7IjZ1fRgp+C43pgCYqimOm+wrGCaj9fvuvzLgpxFCUvpcaS
4UTPV+qfVevhePPaXDUzAxZ3KMg7kvwTKp0jv2iM7yAdnyxJLY0cSEj+nhOf
uI6sEi/LzogHgEnjaa1E/T1kZHqkzRD/gGU1YdJFelJM0Z3E2u3SBOE8G6aH
WimwzhcIPc3fChSjYQ6EFFrc6H6cUV50BMSsMzW05ZeR/1Fv/x8cGUijw/G1
ru8iUnUZMZqvzUW3FtSJfHybaEzhkmp8SDiM6hPdp/5bQa5QS2L8LxZ9Ix73
+aq4jR5xjZ5R6E4GT4Uxcl+PZRRufvU6uWMR0qv+++uSKSNuOHueTXxnDGYE
mXylUwn4zZ/wQ79Ly8F0dGDTip4Cn7S9a/b2fDMwFPKSsWUTsMj46nrejTIw
EXAoJOuYQxEXEz8/PFKDGBYP0IQ7keCOAi9tfvcaCDevWEpiJcVXRITj5i2a
QWzgBJE1k4g/nmQtHLRqgGaZuWPzL9aQs4eCDJP6NzQ8z+S7ILmEGhQHK8jt
89GdM4vUgjEH8PG5Lt3+kl8w7q9Vv6e4h8yT111WnwQgKWrE/MyZBq++U3Pm
f9sKaX9FXd74rSHq3faBu6+SUdTv9FMVJiT4q5TgsmN7BeRXUhtyb9BgM/NV
c4GanyBR5vFVbj+PfBWNjotbVIPFl8LqkodbyKhU5mqPgy9SEi7nst2lxC1v
RaeixZugTULvcV/YJrpH1yGjnBQP3BU/af/9/od8dvfePjhYhU4quuhbuBOx
5Gs6tWfGDRBJqzRozkSBWc6lH4mXbwGJhvkjCrKLSMHquNVtvWpEdXvw9exR
JhwcsDo+2D8OjR7NPez7/CeYUH+OXqkNfHl5FXPitlDq2xnDI51OaKo1MlRc
bBepGtAFm+hkA5vyyMSaHhW+QYirr6nrBx0wmA0MZcQ7atWexWvD0OHH/eyq
4yZq8NsQMiuLBiamdiH/AVI85mRYH6TWBJpdu3mPz9HjmmnHfssfY/BN5sHq
m8kttHbze6sqdTwst9CI5pzbQ9qD9evhq6WwtN1a7uTBhDv3TL5ay7fDWenN
rWVZWhx1qfJqNMMwhC7lGurZrqF7vxJGIwxVke7x9SSTAAI2te2bKCYpBga5
2CDP/fwNJ3wY9mKugqdJ7802yUmxrhKX832GBpj55slP4U/A2s1JXjFMJfC8
Vydk7Agjlv6lmBnLPwSV14X0rU4sIFNJOyv2tUJEGC90z3i9i4ZEY7XL+n9A
wdhT3mJncnxVa094gqsLeH4/2Eq4R4n7T3C8jzvYDoJGNxj0vzPiY5rL3Hur
Y3Dasz4ksnQ//wSmZ8T0a2D1WJ0+K80WspV+Krd5OQZUh+5fYVklYB+10zOJ
b6qAidH3dnrJPOLy6LITnS1Hl5Wsx1TCD+Cb8WK7Xy9PgGJF6wHpa3+RQPWb
S/MFteglzSRNCDURm2nM0hvcqIRr6buel/u3UVpe2Per/+VCdDZx3vg5DTZ8
+vKDL+8QlITls/e2EnAbq/mR+p8pEPKQrems/RI692Xz0Ok+jC6MqILu1R20
3fhDNVgrCeRcfujxSxFwjc0L31cUuUCnbS+dzEuG3cD+rVVzI+QvyFgttlBg
o+KB1dfEXtgubvwZqEOCk2RrReuuVsO9s8p2nKwUmP6c5CdOsXZgeNBhbte+
hIIPuDCZMeajKN6MILhJxCuuyeezzmBYLHy8Kq/Ngo2jjOf5hSdhcHFnQGeL
CdNVChz8Ij0G1YaNVb1ddLixN/PnNxgF1tO1UlZeK6jxwxrP8FwcOs4VmMK/
QoHZJi3NxWg7wN1Nj6Yvfg/xD5fx2I9hCMh9HZtWvIbMJulqyAay0ery5DF3
5z2kkix66F1HJrzRHyVpUKPFbE+vm77zGYX3Pvp3XPXZcLKaqGyP+jgMTbx8
LPCKGuePjbKY0PdAG3Ez1lmXHpurG8lKxI3Ax9jfKvIRtPii/uy1rzHDkOmc
zvKphB5XXDzHmlg3AsKvWkUnLTaQzMuhjDzOHJR/pmHI9SoRH2MRvVZpUQtf
qi4Wp0lQ4qFHM0H1Tq0QG8bqZ8VOjk9O3JJWzeuA5EqzVR6NRZTp5e3sxZ6L
/p2uRDEKVDiyoI/mk9kAhJ5Q9nwhR4GJRddR9vEm0K9f2U4VoMBktZ1/6N26
wTDo6MrGYSZMdmqdXBiPwUKkxbQZ7QI6rCS98TO0Gnm9Vlfyf7aFBu44DSgk
2YNC7UiQ26NFFKK8SLoYUoEmT5JwlEqw46zkYoa/v2ZAU1/T7KLIJvq9ZJry
jf0N+rw9dEVBnBm3byZMy8kNw6Sxs6NU1h7a6Emu+foXg4iSgWSO7jISdDQV
c3FJRaPVp0j1uWbRpSRPruhDFahXxyKSzG0NfZ1tZtQUTUTX7fAHq5tb6AZq
+1YnFQ9W1rqBH7fnkabQAWoh6goUVVz2xld5G51u2uVtbDKGJG4yZeHPq8j1
8Pidr2Y56HT2lfiM0h0kpv38sbZYHjw/GcOWEkOFF9O1Zy0a+6HKOetzzkkK
zFD0vHNbvRMkJfa4dkrXUUMZP18CWy5af33ZlkZgGsVwm4a1xFYiFif2Mc/A
dZTJvLonOKyEVOdyB0P1mHHxksGy6ZFxiJNns3zUuIUSvdRG1ZcCYX0shd3U
eBbN1HX5ER2rUMnd3ZK/IVS4XUblqpjGABSHHp4MeLaDAlW/qw6lZUHT782i
7AwitrtlaEhIqoKUjN+N7Bs7aIhp3OS8UwIsXv5S9PLeCtI/3jD0SicB+fkc
EZeq28/Tgu31sxoBaPDuUWXG50Sccd/IMeRJAxSajlxwndvPu1SuVKN93y3Z
Hr2dr7aHJrwPRGy2+oK80exTC34mPG1OusK3339aNrKJF2poMLtuM878+xOu
fD1ECLEhYE+xbo+Vf4Xg/VAsQ/HyKnp4wtJ7cqsE6dEQ33iW02JJypv+AaGj
YNB6djBqi4jH7dfBZ6URvt8+LrLHQIs/GHK9e6PTBfMc0QuUPKTYO6r9P0va
elhu61UUtifFrxbpBpgYWiEUD+b2+i8g9CNT4j4bRlG1xZKm0oz4/hNTmp2J
Hui+cuLDKzoy/EaPYlyBuhV+GZ4X8aalxOqi1vl9h/sg5YHAtMLAGuKLarny
Z8AUDoQRNVwfrKBvzmceDaYlIPVv9fJ/3Wkxq2nOD+tXo+B7kvYP7fVF5MM7
4/Vxny8SOOf4sjhJsdK96idZ7c1Qb6VqduQtOf5RmGU5pNAC3V+2VINYtlCS
SkbSI4tEyMjdPkh0XkfCyq3jnqQG0JHgpDOzw4QPGV4tqrCYgDGBItOVw+RY
c7E950h9G9ALHyU9Nk2Gr/cV3nkx1Qq6F28nSikR8H/Z9VdeGWD4Z7WREcm/
hLyNnzznDyhATwnVBdostJjqLieSp++GxePL9ALPyfDQOWuRQvZWUDmRc9rP
lRKTdGU+KK/rhUOCJ2xKFNaQ6K3PZRY4Cfm+zuY8nErELBr1ihZ3q+HTk8sf
Xeg2kDCrqbVMaRiYzzdqn3q1g/zLLzz+UBgF46qbj07/27//V8Y6AWUiJeur
T71eMGGk0/xU9eQE6Dl+uPItmxRXGq+aORe2wvVDqoftmynx9VjvVZHBfhAv
jb4r+nWf95RsX2bVDsCtENsjTXEb6FDrLWohoQRwOtx1arNhG3V/u18dzJcG
6iU8yX4jVPhdyTFhEsp+WDKT8TzqRIGXR1PvD052QPO14JYm4X+I96zdXZHy
GlRw+hYj1TANLlUI3HQt7YbsgQSK2Yz9PsBSis1xY3Bp029RXXoDkSREbFEW
x6NvlFKpemsMuPpFZvXooWE4bZtMOlywhfSyz5zkfeCDWs5sh+UdIsGqUszR
31EZHBqr+tTKTsT2Wh+/qxXWASuFx46e6CoSDgr/mCDth86xcaPMYRYsxX9d
hfziT5i+o/L1uuwWYrR/NlQcHwmx+YsBrxWI2IFuzPbcdi1ULt/LKUjeRHKF
KtrWo0EQepA/48alLUSlF/WlQC8GDrxMeM57eREtm33iU1esQZQq8yK/v5Bi
Pqt5ndA3jfCEw/9L7lkaXDtxopssewhqnbCVKy0VXj49e20vdwAOsZj8VVMg
xe8ct5hz0pohklv007nVVaSTwDNSbBaDaPIfhv9boMIOmrD+urkfnJxd1j5a
7CIz8b0bp7Zi4JlRrI64FCW+Q84WM2rRC/WNAW7t4v/QIcTCrooq0M2r8w0H
G+hx1JjJqTufR6GRuXjsD+sGKtE+ITV70heqzh+RW/tFgrFQOlcwTTUsmp3N
fMm6iByqUq5O7+cD/4an1iTjBqq5wObvxJaKPk2x084fZsSU0mIdIt6d4Nn2
w6lUhBR7mhtFdJI1QNFc4FVf0g30g+9U8cT5bFSS6+2q6EqN794qHxAs+Qn1
zjvKj5IXUd9Gz1WlkCy0+kc8ZC6CCtOajAtxqgyCcFGBYFzOEnoa/TaiZQMj
zjS34VStNXT1j7SIWk0GYolj4Fpl30BaLDx1LFxBYIXeavcOkeBbTH9sjpnV
AmepXa/P+jJaGtbQ28vOQB0f12/XGhIwldTw0Xq9H3AsmqR8vHEFUT08bqB1
zRetyfztjAUSTO0UXrg9j8HNRHCY9vUSGsuMjqHk/IE+3403vGFJgRP6LiRw
qLXAke4Sls6wBTTM3PFYtLscOaiL2R1wJOCof/ZaXFfLgSrA6OjOBgXmT+cf
uPy3B058KeDsTiPBWmp6Hw8KVEHP7yjqnxdJcTzpuMwOVxNk6L/oUNokxdJK
NnqkBY1A/obXu9eegD/fUZE7+l8FUB+9RLix79MWlAWKk5rV0DVmyD4uS4UR
d+nNoDs/YePCu4A8blrsKfivkfPwCJQbnX96eYkCP8jlDqifbgXnuwEaGVMb
SCHe1Fxf5z/kvzz37ZrOPg9OyH+Pf10OAsbr+TiBgNO3cm3/0eSC34NqS1IO
Clz69lra49vdcLvi6WL1Lwr8kHtKNL+lC5omJU+NrtJi4eCOaA6xYTg8z7j4
+AURp/YJRe3J1MALPhvZ27+psKZJ3L3/nDvBgv5xtEDfKmq6oF9RrxSNam7p
Uj312EZWV063hvtawEvo/WFHR7vf39omh693QXW3S4zW1ho6m3vErcDdHx0r
9GH9U0uJxeM51YmH+2HDfGnjuSktvuHeLvjiXh8QpXRoNvb5tL81vfzZgy54
kcG3NrbPE7Yef4dy/n4DCiWZ/D+1VFh3WDrbJnYQ5Fw99RvfUODciAHudbNW
iNIUCNTIp8CPzmf2qqV0AfW67aWjm/u+fe3x3YDRXqB9X+2XFLyC6idfH8v4
hBDOses/nEeOqXQNXnyQ7YTc/IrQ4X3e0vtemnfunR6CM5cm/kqR4ayMj1yU
+334huML3V7kMsqz1bzp+KQCzbW9+fE6nwrLxF647CrcB5vJl069TFtEdqOK
F8zry1C6h2Hsca8dRPGq7Nyb/Bxoe+nQKPCXFGceZ28Vb2+FaBMql+RiUhx4
vnj7SkkdGBZLSEZEbaGAQZbW0w3BoGXZcQDfZcQMHCpX/03/gh8aoxzik9tI
K/GoVEGhIxzqk/9xrXIV9UfPP2dZ/ISeJpGY6hURcEVYfZ9mbAYwrXCw5Yfu
od2hzajegBKwn+gKveC2jHbsR2O4NPNRqpaP7AmT/Wu1iYyupFS0XhtLen1o
HT03veXty+qB1tPDg4RzV1GrTpHjrLUtYpLtrWT9S4H9v9DPUB/qgQPG9N81
+Mhx9nkO/93ZDkj3K/v6X+L+/lPz4tMXqgXgunjYzZOINV/XMfdo1kP0zMFg
y4sUeMu5mkPreAc8Eeut/MS7jO4lDh1J9M5CHKEHPqUZk+DhL9EOTGYVwHHW
VSGefg1dOMr/6z4KRvezDjkSDaZRZ0bRBl1YNVrrfOL53Z8Si3z6Ss6e3QsT
dAdJXQZIMFv7Vpf302pwWZR7GVCyjDBT0uQDhTTEU9CvR8bNhHVZCiVVe35B
cKiFZMpXchzT5txtqdcKHaP5qjcbiHhhGTq6NxtAQKDbLkKYFB8cf9NB8GkG
odyBvdFGMrx4ojiU3bIdUhWtZlWKltEvnYulsgIVqPb830mmrDUUUEDU0KBy
A7ka89pwQyJufDohdMylAUo0Tl27KkaKR1JShijuN8Lm/yg273Aq3z+On2Me
e5QiJcQXIZQ0jI+iLSVRShkpGUlFKGVlU8qIkJm99+y+7b1nZEtW9p6/8/vz
+edcz3Vf7/v9fr3OdT1X+I0vPtlBMiGvj65MZUOcVeA7Z2Y6nDFrqk4x2gOx
vn8T2GYo8NidXJtDgg1wOaXe6AX5OSZfYLK9sQYWQs2Ox0ZR4y8MjHsZH7VB
O9elAPk4Kmzg7cbrYF0D1LzfmnmBFWd3WLtq/hiBV0N059y4N9Dn/v2KiTqF
6AeOfnU3dAVJvWAN/PsuDdVe3HJ5b76DdNbuZP/+mAmPTpOGJwSWUZaq2oeb
aiWIhsNdsIWbEptZCdZdFqkFvluS6fFVVNiph6Ho5u9meFYXUkPqWkJmq2VV
gy/S0CNpUckKwjrC1DoifALW8Hipu885cQWJbHi80DGKRwZBKk0ZBUT8AQIF
DI+Vg+70W255hl0kPUzKiH+XBYtLH1XZyOfPkkpZfCSsEhQOafFJTxGwgcYR
/7sppfAwve7Sq38EfO5lxpU+60JoNGySduNYRYaa3rHqUQHIlhj8uP+/TeTs
MCLZ4xwNF7kC3y5/20Cqv5W4KgKjkdHKpQ/ye2jxk0cu16eyuuEh5U/xzT4i
Tk9YaT+hhyCf+5n94UIqrOFkjLdo2uBMeFLcDnnfJY66TniqNYEq4XaMhhkR
u+65udFjVQmi32dv6wbQ4czWExUng36B3QMzGs3zNDgj03vc530L/Dq9ItRx
jgqrTbgf/cLeCiWdhjuzsUtIPFuBdWwPeX/Ooq76BCZ89K7ras3rARjZ9gqq
WttFWeJJxzWci6GJ0PJ1KWQRsV7WlA/6nIEmgOU/sYBdFLly2lfrcTEMaFDV
eD5mxfoj6hHZXwfAe8b3j9k9CrIPTPLb1VdDNOMXlUSvXRR/XNryAsbwdi0h
LOcAG5a3c39iYPQHVFiD1hJ71lFU+NPJ6LYfsNLQ7RrQSYmXOjUD7UeboQkd
MT9kR8BOPzJXLrpgeKRj8oDSlx5/NTt1KvViH4jcJYTS0lDh6Uqx1EsszdDa
RcvCHr6EHhAdG6dEs1H2gpap7fk5RO2ULccZVolmZy6ZzgM7fvt436pQQx88
JIpw3qZlxR13kq5E+Y/A2V39WjFqWlzhoJYQY9sNrc2JCp/W55CEndUlpvvV
yD9c1DOdfg/msiVMa4cMwjNVhvROanpc2+759s/+dqDq5fwZdY0WL9bp39yq
b4eLF+Xc3d8vI31uVVtNvkRU32LybuHANgq6X/XJpSAHxkTFbjFfoMPuAmPs
6Sv9QJ5ll8F72+jQJPcJY/VvwPf6qBEXaR2lxj8yMjf2RaRHtPYRajT4v4dD
ut5f6kCqZfFp+bltdORP7DnRgjzguXaPl9FhGbEv31+yT0tCXPv6iDdv0eJG
+fu9FXa/4I6A1UJsLgUuko98HC9J5oUCe2MHtXnUp7mSL+laisrPvmDyOs6E
QzVVWZ+b/gaKq9NUDX/X0KkPEiZl7oEo4VY0VYvhJnIa0qjSeP8d/jYaB7AK
k/s5sZnySlInDA+yMty5N4nc7jFxqShXo5tZ67GyVhtoLP4Xm4CCP1CxR/JU
iVHj0Yv0uhJirfD56Jm0hBub6J/yTL9CaTrweC6v2J+gxVJajhPuN1pAUmxN
K6iWCf/3I/TeTeNheDL7pnfrwgby4KFero76AlWfNsyEXlHj0I9nn/HbtoBb
eYtVZhkJ8/8wPSJR9Rvq46KTjdiYsZIMT14zYRiSaNcSU9UXEd192UPGxgVo
rxm6sNyxhF5Z4TD315no/rnm37Z85Pct1XfmCYuBbHdWY3mmRfT7jLOiQG8Z
0sCsAhn1NJhP3MkyqrsdajLOlnrXUuBDdAcaQ8i+TVPtFa9I9kMJS5uAmWPR
sDuJi1h/baPhX/nEUOp8eOfvLOchNY/2es+VCfiXIv4Tflt9O0soiCJ8fyJT
Jpp4Vs360n0H/d2X4St9OQumZT/myr5iwIpiK97Rmv1QpE0fwHyFFt8sOaPA
VtIFSiZt1ULviDh/PtX9cvpPMNL3iBkJocCXRCMcyq+XA3POUXnHTyx4cDfB
dJVuEFx8EkxouGixPa+znJ1NN5iOKTSlyJCw3/t8w8+oE8Ke7T2cOLqN6H+L
HAv6FwAiBdOOFlwEXN54cUpXoAT04iSIyWe2kFDtyuc04wQgBkzj0vNU+Aqv
xSX2uRaoPH0r1RSo8ImIG3Ohwi2wE783jmZmBt0VUnnkvv3//09YeBg5qHHG
xVvKhnLNUPviOdOBdCosmT8Y0DRRB3t4g54ma68iG0GG1+tmSaisnbT/awsN
Xv3Tt3hihsxLW0tOwSe20L+5Gm738jSoujvEZ32AgB8w7zvtKobA9IaMrwYi
YBoKr9TET2XgEOGSN52zjtwmFyp7H7lB6tsPbUL36XG3z1v9ZuNWsDmzqatS
t464vtirlU58hVmzil9B8RSYLVb0/b3CSphMzQuwqyRgiuyB2PPOpUDvTVPB
cJ0C35Xtr07hqoZvkioVfeEUWMz6RdZNlxowtqXpHnGnx8fNrph+o+8Fpivb
59266fAnP7pKx6E+0NGuiCZYseHHpW9jiHJDcKumr+DMFTIvvzi/8HykEwoG
C4zU15eR7YmHuhni2ejW3kXGk3KMOPpW81zB3yFIDo/e8+kDER/GlxW6MypB
8au7c/BFWjwVMq7OlfELMj5nGR87yYarxBlLWcp7gUe0ftXThhl7fBVnEmDq
gd230uYvbhLw0veHDoSBElBL163NGaTEei+LrPcIN8DuP4orPzu2EQUlYks8
WAg6T8vFQlPJe3b1yrk0/xR4f7is6Lv7PJLKlpjTHChDfoa0D2Yr19HzfGez
X06hMKf9leD8iezTbxykb3FUwGu10MeE0Fn0yGZjkC65Ci1qLRy8rECBn4ud
j33/vQps03zW1Q+yYdaF2E87/w2BZF1wpgrNNhLo3E1B6Bskfk323efDhjeq
MzjfKPSDhKof6aHOOnr74EFQxFQ4sO8ZfJLGRIeTCgx6oh36gfuM89jJgV3U
OcW45wJLIsg+DJJJsWLCz3dkQ7I42gFbWuYFkPl3IfRNu/aBRvjzieckD9nv
X8jqGZmxRyOTt8X7902uotyippNa/xDK5jlivC+RHS8+6Wfn5B+D7Cf6G7Wt
JMy9oSzlt9EJBsxTaS99SDiN2qso/1MrfKVSluXTZsUujpdP3bMfhadwPCKD
h4Svtfz3aiy2Fz4/c9ieS6PCDzfuk6QH6iCFTkFHP4wVc9U+2alxHwSboInn
+p3zKC768K13emWITU70KN30Kno0dNGF7tYPZB7Ix1wtsYsOMwZf7fyRCovP
NNnkTVZQ3w21hXzhTIQDpUPPv5tDTj7Zp2j/K0PtgnF7WNkJmJeZ4qHNp5/w
YR+drdDbHaQo//7IR8piaGzVcEwIZcH5f0uuZlZ0Q0PNNd/+SSIOZC4ebG4v
BdsmuqX9IeT7vO/X7br8FhDdSQ1oPc+Kl3otS38mDINL5KsLLr+YME3c6cUj
54ZBQDS7Jf/INoqb641KXMqFo1ZbeROM8yj3PY3qS9NqFHiqrftCGgNeec22
TfozCP/8RTjclLeQpeKeuusDmaDboWU3qk6JTzT4s/sZVUF04nVUf5Yaa4q3
dzivtUJL2tkc7q1ltF06dKTeCKMFvXO1Y3prSEYr9PaBkiyk/yUAVJVoMVPy
f7njqr9gjRCy9/UdAmZv1pD0kcaQ78La49i8jbyLQpdl5Fyg8fKwz/HnW0i1
3Kt5QDIOvMxeK6RdZMYsD7oumD4cAXFnJTmPp7sIbbf2XajPgtfyx7qv91Pj
VMpMkfPHGmBhSsLXtYUKiyy9u1W6vxXe4JEv8SEETBTQXT95Kgc8hfv2Jj/Y
QLR6N+0KB0PQs1tHsk8Vkfne5xtT+ngDvHz/8qhE4gb6815KsSoyCa6+KmQw
r6TFVdb91xa5WuEG3xMP9JUVixQUTQl/HoXqJ3wLH1npcR6Fv7O4/ADYSN1p
oP1Kg/2L+jzpc5oh2UqES/MjPf4Yq3jUuH8QEn0EVGypiJjm9JiREW056DdK
mAUmEPBpc3MfL4p8EMfxl74XrKP7U7peRM5IONoxMJr6lIjd37XU37tWDHd9
6DIpv84hOfZzBZRi+egwP4V32lVKvFN1vLjhcT1clnUVqSbS4bCmKsn2I70g
s8IsGm1NxEyB4xdZH2bDpwJbZ9FPy+jISALjlbhM5JJFeN15cgPp7APehYQA
eGyomUtHzt/+9ZzE0DOjUCF7t+GyLS3+fEsR+C26wE92YmO8mxrHcCRyFk23
wTjrI/bntGvow5l7fvA9HnW6tPJNla2hnxdCynyD3wLniuOz2xfJeRcYXLIi
YcBOM98a/9FjuWGG8VntNkizFNwRr19FwoknrTtcPiPFsr46ThcCtpLuupCr
lwXaCxdG+49to7+x7GmtVnkg6Xy4457lEqp6OUTnblWAtgoML3knkDBzR575
pZJeeLNIDLXOZMWOuq5MOTp/IGe3P1s6gQaHu7NH+SeQ+dX6l98oCwkLxLjM
cEX1AuPwq5yeDma89U5VcyVvBLRyTSlrD1JgTiOT2xzKtWCucnFxdt8qanLY
vPz0fQrysYm/5ajJjpkFeaI5dNpgG+3OXru7gBjkFsNnUwpRSrPOfqNvK8hL
ke5ijjlGtzWKT3qI7yL+bovVy2UZMMwy0ErJTI19xP65nya0A01WPJHpIwPO
fRztc9RmCOYU6BYvnaTBGrQCJ+c12sBASuuE5TQJ47hOzqDtX6BV/K7L8u0M
Krxfd0bkVRViuzb9qu06NZYv9LrOEt4O6vyd136GEbHsEZeU3rQqWPhZNDWU
t4bqdl3cEwXdUY5U2NEhnXmU4sE5udhegdToTe/4VdBg+w3rl1nHukDVfEGm
gEDEXjsHGT0/VAC3ybEToq8psUqDenKzfz14OPI/6/q0hT74dVyLW4qHqTES
jZ0TDf4xeeWgrmEnPDC1ucP9dwsp1feOLcomQcuNrLnd6iXUo30msf5jFvIx
21qVad1GRns9noQc8wWP6zRn/ntPwH5Wi+67nggMlcLmCl9uI42fMlvuhS/g
j81uT6rkCpqsCxzO2YpEtmfrTJdpllDKR/l01d58NKXRf49JfQ9myzn6a+BX
GzTykLa/6zLgG5aOOFqqF2xEEv+aFxLx2aTrzWeNqiGhQ69Z7SYdfhitrST1
vgdGPi6+Uhsk+2Tp3bn/f5J6f8BdU39+CzXwpez1sv4CbRL9LU5tLNgqdiqB
9HUY7I+MFCY5k/nDw/mMnGouXB+cZiI+ocMufz21e8J/Q8Kc5HRqHis2H1KY
GE4bgaUjjc7yGevItEo/9nBaEWpkql5j0qDB1txqN789rwEJ1uHyN2gOpXp9
F279/hMt3fk90NqzibrKPZYC2pPhv3LmjksvKHA2X8ATnsJqyL6VKnCGvOeK
dKSofUwYttorPZQZSbitk1WrT6kXKg4QiFVknugO7PZPXcwHSa5rJQx7KHCH
NwXvvBwG7nczbewXOPB4f955tegR0M09UZhbvYJcVND5/PGPSDDu6kLzBzJf
+w8cFJDKQKfevIxk6yZhvkcacxKBrSCYWT/DbUvAMxETO3ccSuCv4YDRH+M1
FC2jGd4r8hpujRzSdLSkwlHZ3Z1b9K1wcbOqTSdkD7Z6rWQdXj4GZe8+f77L
T+bBWqeGjaMYLHL0BSdMqHDI7tOp9u8NQKsVo83jTI2hwLVOc70FeqTHX51k
2UC6fY3hpYciwYeKqf61LA2e+iaafrevA3ISS6w/XqPBfyTgy9W0DrC1Ff/s
d2cNTT1Rqk47lI2OXLCt2nuVEV9OSG8Kr+6DPh3rmCPsG0ij2i5F0NQEyokK
N+Z1GPGyroOiezD5/nE3TSRvraNudLsx+pwLuuaxufpghg6T/hZ/+ywxCEnc
6zXyDkTs9+vPy2i9KuA0QNSC+5ZRRFHu3mKhclTFNXmg+RINPltygWaL0Alv
K1Ys4D4lTmHTSSC8bwQ2etH5dXIfbjhODMXLloLSib439YkkHFCxh1vwzS+I
zJ38fWCcAvsYCazZJNTDvYOHZp5XsWHO1g0GB58/oKYvVeUutY20398oC7JI
A033uz8IZP58qsNznJG/CuZQeb2JJxW2O3nDYNCrGaTi17pvZSyiOCdbTYnZ
YvT3yZLM0SEqPP88I3PRrBWqdjWuF/Qy4MTvrJK7l4cg7oRL/1mOeWQ9q2jt
EViFInm6np1/T4MjOa7dmvzcBWkFPX3PIzcRs+iE90EnF4h4GaemwEKDRxe9
T7j8LIMfGQntF/sosWVKUaR/cRmcesF5MOTiKgoL4EVaswHozoPygYTobXSq
hnFcOTATFp+Q1DTzlxFJ5jy6aVqOPGtr27mFiDhhbFzpJGcGzEg13lJsX0QK
D9d+2qyWoY3Fc9k2SeT7NuJhU+HUB3zvdeaaS2eRb5Lv0q+r5Whrz2LQx+Zl
pJWpliB4JBMZRY5SmY/S4O9LVB0y653w5qxV1rkGIk58tc558UcpkNh4vgXU
LiHvE6XhAls5iG6CcE1UjRUrXvR3LLYg+9nfCZ0XTgtIi2Uxp5+3HG1SP3Pn
OcaI8/gKVfe69sH5srTIlUNzqOr8jnes/E80Hnqq9zfZj1VmZtP3hnVDzoyw
vJzyNpJgXxT9HZQB7l4enR51FPgR1/rAm7p6EPrBTXBTZcCNUq+vZu0dhGGO
8aZSjyW03Bon2ZeTgt4vi/UGLe/DHfccwiid/4Bb5V3zzGoSti849khWvxdq
bdc92VzoccCM4oUrZoMAnJ+MLPYTsdaweN/21wp4lxIfkS5PhTVuChsp1LdA
WsMVNyrlNfSspuFW+aA96thfknhjaw4N3JSfvhuJkC9jePC5GyuoWVT8tttI
PupM+KElq7CLOhg/ha9HF8Ktz88Y7v1YRG+Fkf3Jr8XoSobCcyu1XWQb1JvO
dASDkO3ifuVPTDhQU9JN8Oow/DdJv/KjeBNd1bQ3PkYKBg5V29ukfgosRHHw
dI5aFey93lD9luxrU/3t1rcM6uHtbSr22URKrKDBTFTsboCYyBOcpxwpsMmP
id/PFmrBoOydh86NNWRkdarQVScDySs5591bWkWW089PjW05AV/KVIjqR7Iv
XN7QDlNMQun8TrLZmZsoin+3TLg5B0nJH6l2ZphFtE+UHnncqkbN9rZWlYwb
SM2TFFAYF4fOPODyJo1QYObe4hu4oxo0Yoz5q/dtottz/wRfC/nB3hlzJoXy
NcT37Pk9S2IEulh+J+O/3F2UysqXIL+MQOpr9P2sfxvotmw83SH/RJjKbncY
T6DARsFyhfrdNRC/ONgyuLiGiCvNNIbXPZDQ5QdXIuJWkMWaaqTIR1+0y1Oo
o/tvGe3Omyfk1KQhmcFChyafWVQlxB4sOkrulzNPkm+9oMfmtRff2OW1w8Ux
E7eUFUo8HrzW9k2lBcS0td8sitHiMkKE8wJ9G/zNe3ayf3oPFp8PY758YAT+
PQqbIRbtIEOtyUWhsCKw/2zLJiNF7utca4qf6s1wbW3TO2uUvB/5xw8Svcrg
ds2H5pRVAiYx9Q/50ubDSaeLK45ZjPinS0ywp9IguEoH3SzeS8R3OzijKDvz
IPh+1m9C3RqK+O+gtx3LexRx04+9WIe8/0nVRKGRYsQjXzRj7b+CRtYaiCFW
majqz8JkVioJl2W6MVtY9ME0Qe5LuSINXpuQpPek6IKRKTmD0xI0+O47MZ6o
kE74ydXQlVZJhX94fuGuONYGjOMvFEcebSFBvairBpR+YBQd+YVKlgUzx8R8
oGQZhpCb7DFj/Mso1Y/54IWZQiRiAI1zbydRWUQdh+xMDaLNElEXk6XAlT69
NIS2cmBZjP1RREvCt3VV/GbMeoB54FzrQhYBV1wrvKXxvBAKS2OcZzvW0cqs
8tGHwV+BVWxH+vljanylOOqzaFElGKvKKO9ZXUVn1b89FqAOQMce8zxOYSJh
2jvME6Yb7cD+oUQkRo8Wbz1XjOZ5WgOvCeofZl5tIh8CrUHDw2i4r7yw0TNE
jZc0RpaWO9thL4FiO3iHBQtIUNXFuLXB6hvJBnPRVSQY7tSjuFmC3grxGv9q
IWLWgeuPTQ+Ww7M7bpkPtVhxM+Ecn7bnINzcIP7Nq6fAD9i6J2901sFb6VzV
+f10uFfH+u4ysRtWeRkvBq8wYi8KrXT2MDIvlVhXdJnTYs5jMbTOKl3wkMVe
L9uTAZvcP/lqg7Mf9tu2HjDHC4h0umF6nqsMRa6kS7k4raIbh+7RnTikjb43
m3hEZrFhUw6Dx+1sw0DV0nbUZZKEdQwoQ2WZf0FopzhtDGkJpVXfmTseU4Le
vN8pvihMjQ12eUvneNtAK1bS+bXPPHqm0XtL+L8SRPXxVMaeb9SY4aGL782U
Nkhxu2Nx344Nlwlmx4ga9oKnY2LOcQYazKjWmvl7txnEZ3NUI/7No0S9h5qU
tmWI503Qf+p3KLFA+8BkTFoDCNi/X1mVZMSKmxZe8zMD4NrUvMspR8QOZ9sF
DChKoXl/s82xBQa8uE/HQ62sGwaVh5ZHOegxn79pTDD5fEya+HvSDlLiBe6o
XJqdBnhytJxQ5UGLrcZ/NOULd4KUalsA8wYj3mcRfUvx4QBwrfZ9sPGlweuv
pP0+og74llHzwOUYEdsF0NC6QRkERCy2xNJT4bc0qoZNxGaQSNlzdZl1Dek9
0NA+PxCKPpZ6DhytnEfpcopHLCRL0LHa2BbTW9uoLKdnhhCaDiTqx6+lEhcQ
zZsTNYlURWiHqXNnL/0G+vhcyJqLzwI0DmfFzP2ixNI6VOzn2uph/jDXu4cv
t1Bn7QzRpT8Rolw3m2r4WTFNRqu7He8o/Pnv9cF8TQb88qzIdU99cr/8eLKv
+BwD9rg/bdZm0QvmjkG7viJE/Iom++2kfjHs95Ps2PNhHfHkM3YeWXdBhux7
0gnbq8j32BvbtdLPKMzQKI1Uvovey8uUu5cgWLjFn3szlIRV+Ane8cx90PMl
umxyegNJn+7mnT6YCLcClFqv3t5GfNJqyy/c06Fd/YT+ruAasja26TpaYQEp
jsqLaecWkW6Htn5ESCY6f55V5HXTCoo0Zfq2ejgbPbtDf5rn7gZyq+eqUaj0
A24339d8r7dRPtWrV/fOpIDAdqi4bDYDttIXzl5+1QcTRVSiN7/PIb17ESVr
jqUoAt0SP7tBhSnsjbJmtFuguu58k4wWNU7QGT/01bgZflj5aJD8iXjyVoA+
5iyBH+mJ7Zv09PjMcljLPdwLHp8NFUIuLaGPM12f+v2yUXjy8CnKw3Q4Zd81
IdupDvhJe1a9K2sT/dPy/EZ7LRBae0I4/ubMo6oC6jE6xXJ0/U6KIN8pWuwm
s3v/89FmWP5rrG9xmoi3zIYyn94vAZOxYunumh0U3zP420DqJxTZaP7uU6HC
Ekj/TbRLM5RtdvquFhDxfa2xR+LCFWAiU9UuXLWCBG4c2KDIKkLZhh8sAu+t
ITlTljNeO8nIUlSF7g/Zxx54Of7afyof4vIsj7SPb6GD1qkWs5+y4H5Rxuf2
TztIJfDIJWXdMEiaJYzQqG2gr72/GdjuBAHR4rmU7zQBL+85zW0XkANx63LD
dW82UZrFHYFkBmf4KyA36clLwt0q585LHeiCr9vbRGtdGszKzqDfbdEKEXVu
NtPdrPhXnNAsT+kIWMvwD/Cb0WFeOWVq/sx+eCdGdfXqJA0W++biaPyvC2p1
znLvJ+edp5Kj4NmHMrSt7O00O0TAOt3vrh0uL4fa/L6D/zx3kAjvr0t2b4tg
u0GzZHecChufl9OPKm8Br6FL+nUrtPjhN8l9fu09cKewOm7fNA3em3L90Hht
Fxhrn46YcthGMrkos8A+Emgd43XS2GjxqFf+xLvfzRAXdF7y6C0i5jt92XtF
qxJuZqcduXiIDYvYL2TtDg1DldtBqa/fttGZ3GKnwTxT5G+dU88Yt4vYZoY7
3q5hmIlzu/upfRdpaKZTDFZgwEjKP2R2Hb2qbSngao1Hr6MHgUNrEeGD6InQ
jwxkw/+C7qgBNRZUrrkRHNsOVC6nT2xy7aDPkV7/CW4kwL/+dSrHU3RYMvqS
Pa9qF3BNjoop004gdTFP7oY/VehXDPt202UKnHzHodaBVA6m+Qv3Ak9Q4tS1
oKqspEZg1+TvY5wiYvb6kradoGown70hdf0gNeZUb9bU6GkDbipW24qflPi2
ShPpaXczVL1nYj+5tokEBJabS3jjYamjUTv/LxXe0fNW4XVvgfObf4YWE9ZR
uYuO+E1JR/R3SfSjeiMj7v1qaTLLPgT0trkJuu5b6EHvf/YvnmXC6tZB3zdZ
NNje/f1w0NsOKDicdUo6ZRnV/NV7ETyOkLuI9qaIJBX2TXoQmHK9BcKBq4mP
joBFNMY+WUggyKI7lZ9dRsAJ8Oowv1k5XO27cSuW/Hvu/wlfYRPshosvT5+V
sNlAdhd6eOgaY0DhSWnYOHEH1ck6CXR1RgLhuon+caY1lIFQqXBlJAq/+mBq
ZIuE++59sr+h0wXoe4kHBfk+sj/MC63274bIE8KFNG7U2P3clbOlp9vge5TU
B/0AEhb5sfMc2iqhn5PyYuLGJpINmZ56ZBECVzu6Xn55Q4U5Tz9ydXRqhdVo
u0dXFjZQv2Hkaze/KOgfIf5IymLBaZ0UF+N7e+BM3cZPXzIPbn6bV5lYS0C2
5o8DlT8RcOudlNoPmSXQtKOUlxC+ifr9JA/ofo9DJxctDLfpVpHJVYqcy+s+
yCskVFMqnoTX5p1NK1NrwaxPzCbp3C6iRAqdPbV50OZzNqmTmwPb3b64KHlj
BLr+80n83kDCx7mibmvP/IbYwe3OFOt1VHKl4WaXqxXQHjGbONW8gubzu8TW
jXzR6qJj1zWmXTSUGh4+9DEWbopIMW22raCzv0ryrzfFoELBu96yTfQ43pK5
4xO5D/kepKiF3aXCh/lc9o2db4XfV6SOh5kso2zHyv/StUrRw7KSk9FoDX3C
mxm6nOno9jHxotcelNhVpiU/abMOTkUSnzLnsuDxzLgWAZ8ReJARfHvzzRZq
unwx9nl3NuxJ+Xbwbu4quudyLa6uau3n7YKv1+6dnkepajJGkvPlSM2Q2sjQ
lwHbHsga7bIagjIs9/Qz2yrilZf6Y/+yAJ3Msm4oj2DAZXJVuqyMg7Bikfzw
oB0ltribY/gioQmOOy7yL2xTY/lGE6q7nJ2Qq0yk+fiRAsub7hVX16gBTQfn
1wYRa6i3et++IlNXiMtwsq69QsCnBP/01GkVgYHwfo8zgwvI2fxvMoN6BRok
5LyeBWp8+bJWn+iTdmBI0OF7qk6Do55yWL+r7YSt5IokeR0CrnLdET6ykwNa
XFfmdFVpscl5sYWY8lboVzwv255ExOYSc8SzRQXw9PIJq0DmVVTpcebZro0X
Sg1mW6d/sIqOX3AOcsjE6K1rSfvnE1RY0uD5L5aWZjgoZNsjnkaD70u4nmzd
7AJHEcsrFjxU+NRJo1fXDVugU2G6b8R5E50xnCzNXU2Bk+y8HFNk/k+V/fjo
inEZ3JR5w331NQO+ecJuNHqnC4zOTcUhXTrMb+bxX5HYb7hEM8uCr5P9ub9l
aDB8FFZe8kgleW2jjAPfDGTc8+Ge9PUcBeUtFP/rfdegWAb8PTwxKXSQBfe3
n4sZYR2Bpq53P7XSdtAAtV5Mpms+cItWPfz5mIjHzdQJrR0FYHLohLVe9Bry
376dbevrT/bB0GnyUWD2vg+xlh5VMDzIGFcyQId95FOrn/j0Q3zTrIAPPxGr
SRrUn0uvgDba4MN7PywiC/dWNXXGElSqf9W20JWEC2v59zm3/gaDtIDnh0Qm
kb73hX1vBquQ9H6b629z/iGe7cOKbp6VyEaIdS2Vl4B7NtKK76rkw82WgeZ/
KayY/xqfVK7mEHQ7fgl6msiMudXyUwOXRmBDz1U3aHsJJRg4KGXjMrQ+4Vuu
cGUDsakel4gWioS/G8pPPKvW0aJ1o85j9pPQXq4j/Y78/LCNYvnNQxHUXnrb
rbNynSyW/qGrz2xQy5GBDY2vNDgswn5Q8Fcn6Ag9M8uxWkUJt3Z/RvlFoTZO
msl8Ag1+8jVtJ7G8A1g+WnLQJtHjo2nySO5dNagSxoQoCyhxRa1P83f/ZmC/
4P1xuJ2IewV4xn/JlwM6n/LRc5EeK7kKVjAH9cBAfR1feskCShTenC7OL0D3
e12/83ky4zZbv9lrdKOg5KE8p+C2hvbEHjKce5yHapO6++cX1tBTtX6JEvtX
aH0uosJdl+yTnZ91LBnKYOfiA97/NunwPkqNq+8K+mBcJPeqmekW2n2QfIip
PwP2d7O+F4rZQbHyVrTU8hHw3aJs7z87Gixyf5maMrILfNfCFNM2ltE72qCl
59eL0DXXbbGPY5tIaU/cvwjXZMgbErktYU2J6cJ8aqXCG+CMUedN4ZOLyJlS
L7nIMgfF+6Sktklso3qN7frn4Avm15OG0jmJ2GPITedKfgU4jSjbbEfvoLUj
nDQR+/KBJ84yKUOJDkPFj+Cko/2QcFA/81UEEfvO0r54El8BKm8kumuG51DT
Tz3tUcMq1HzhwClvlRWkXKqxThRMR56570FZgA5bS3WTpM/0QszXzslrzmto
0i1M+bxLAZq8bTN2vYgCn/K/r6PtUAaqb+DkkfsbyDU0TojR2Bdd9otVGS8k
YgFPGU+116XgH7vX+YM8CY/Eri5YeLQCy9v3jHs9SFhqJWa5eX8fcMj5sN+P
IuLGUp8wocPVAMdiWv1dCLgp8T9FZc8ykGW/oxVSvoMUUh30vB5mQa0iv0a5
5gYykd/q18+OhODHVmVDsbT4J5OhkI1DLfzLbk2usqDGQ7GT33mY2oAl8OQr
tq90+EOC8NVkrwF4zfQXSpUpcDjXaIqtTi3MX71wbOjZJuqU0Rw5YuuFBhq7
7B66rqH9rjRyJ45koJafK15ub6nx822uOo/qNohjdq1ft/uHcrnxXrm6KmS0
5N//3Zsai/6t5uv72wqN/QNGp3jIPt1J0zA+HI3UlQNGfv+YRx1mprTbOxgd
fath6aqyjH7WMYiHRRWi1Mi7FkIx2+jN/TtDKg154PBVs5Bah9zXgrxp4fqV
UN6y3hqhT4dzjLtCjxb0w72nGnecnpDw19nOyIudvSCxfD7kMDUBD+wuX0iR
yoKZrdnHJxPW0Ntrqr6J9C9Byz2tmS1qEc1Usasu2hUguUDpb7+8FlBT/Gnx
7w+zUdyjBycWESWu1esW93pF9u2wZP8rmpto1puVSjTcEIUtBn3Rp9tFMjke
W2L3EoBycmXznzIB51c3mv92KQWm8zZiIwIEzC3z9IE6cwl8ceC5MvmXiDM2
vA7ARhkMcDlEfK5bQI9vH7fL2VOErpiYUr2en0McjhnWd94VI+ckF27zik2U
v/dG3NIZQ7j035LS1j8i/uGs7Cpyuwochlz9v12cRWef+1q8WStDRmnzc99/
rKLiP09sZKRdESd3z1oh9xaijaCZ8SrIggNmmZlZcROIcZziuh5PHRp5oZ3a
8ocG5x6Utl2u6oKOzjy52yVL6DlNkvkAfRpKGQvMH5ufR7pWJ/oPQwmKvr42
ErFJgaXeZNnVZdbAZ0v+ker9m8ie91gB/hoObIrCzO9y1pC3AVeKV2M0Un4j
9Z63m4hX9s+fO5dYAd8EHNNSeYlYnNfUjletGBYI49n/zuyiVv3+fubxSLjQ
8DDuKl5HtAX2DiOEaJTPUqBD6iTiL1O5OZ+MyX2mbFHm50vAm7/jF++xYVAa
X61JMabDV9P+/tC41A+vuPgbdr+toC96jw053GJRdhLTlMjJDTTodCyEVT8R
fOvtTE4/oMQZ/f9CdaQbYfhCp9sxNjKf7yg/7KctR86aP1uL7q6jGusEmtT9
BWhZ6U1j12VKbPXYdudnej3MugwEptvTYH8l/5PXfnZChHvdiWfC1PiXSNpw
byU5/z7H/edVN9Hm9ifTAaME5DRHs7xSw4yTj2uZXTowCGfOFJaIlVLjQSnB
lfyydnj3KGjkleciWgrlJ9FtliAD9qzvx4w2UeNjkC19mw5dq6e0Nzcp8R8m
Jk9dn2ZQL6KOPEb2N/oEP9f7XIVQU29/YStqB1GduyeZ1x8FT3xiZqfTKbFW
gKv0wG49NG9X4G9hlNjcV2PcrqgO8Lyh2zKwYnXLIL+Y8GHQESiu+pW1hEb1
7hSlfshGP/S591HoU+AgFXYKV/k6iD4+z9dGRcB7ZNeafSJ/QkfYx4oIYTqs
HByW/OFUJyxtnP9eepLMq5wH4hdfmaO8aDV3EpmvHQppHK8ld4NJY4SAt9wy
cmWvVLR3yUbEK5xV/OlU+BZ3zxlrct/1CsakTwcRcMOOjag5sRTq917eP1q0
gSRMTv1kGzaHmL49fXVJ2+jfsVQ/bsoUOBd5fsbWkBIL8Yvt5jypA8JUrB+H
AR32O2Yy4Ly3B/Ch74Nqe4g4bGKyUdCzFOyHTqpjMRIOWVJP2fndC6Z9fsLV
W+z4i7afUuLoKFgL+OzvJgdp/Sibu4TzKKT9l1/Mf5Ya2+nItTDYt8Gx6YSk
HHYCltfv96Y4kA6zf7w18yqJ2AEXMLH3VMNx56Riv6v0+KXS8IyZ/SDcoTZz
ZHHbRVQz6IZ5TyKsdj/P9yb7jFeOSsyL1TJoOr5/PXqYDic5zVQZuHdBUunU
k8FiBkzQiWDYKRoEZ2mlSuG97JgqWGDtjeoQPB2j8D1rSYkhQF+JqNwIl8VI
d2VPMWGFk2Wd89wj8GxsRqLIZAWl5ZyJXWPIRvano7n79SmxNl+ocTl7HdQp
WlWxNVNgH5rj3pR0NSCkr/GuQpge6xw1u1e43gIWu4yf+U7R4M36D4LRka2Q
KO73/Pw6JVY70/4sy7cZDnzq+MW4Oo9y2ded130wuiFblHzjxRZSjs/7fCM8
BTScVf1Vhwk4sO4DE385hqt2BqlVGwR8v4j1cmgSBnnnrb3hnST8jCcCL6n2
gZqe9kvawW10Lk7pnF9zCvQNPy8/cnMXPU/Kc0h4kgUbf5pkj4lR4GdUhq/z
ntZAGHdmvng/O07/k7q17/IgiOGCZJ2FLZSNHB5cfpIGLU5mr21oSHj63wM6
aYdeaF6+li99jAof/a9cQoa3DrScB8Iy7y2j/2T1T36iiULCF0ylvtcTcZbg
xZ8ljGVwL8jDPyiSCYvma0+MjQzCi6g7m9ZL68iRQO3+8WswiCibZes1suJ/
sdfnxG/3g5qgg9UTakq8RJEYfZqrEabco5dTDyyjvgbV5B9rCLky1tqfdabA
h/LP9Vr2V0DLWkuLwYd9+Ajxzt3I42PwLSXxdCj9CjJqt1YqV3NFLPBb5Sla
R0K+h0ry1tPRntrmmqZwKvzIaK0+p68J4hK2id567FgousVrTvEPpEzRgaLY
P/SFqCFsdq4aZXf81D6lR4d7e88EUDU1Q6H4YfXpegq8df4xYT9TA5xg3dKl
fEvAkXPykbIOxUBzSMC2xImInfNlcs2NSyDDf7TFTX8NWa7TjxKF30FLsKC8
xkNanJG7nHLlczforqY/15bcQBxjGROBHhHQI1n70ZibiM/y1HBTW2aB8Yla
pc6nO8iXwyuS/WwOHF2/bRFO7uuvxD+u8+PlsO/A1QcG3Rz4bJBvjBnDH9jv
sPmD6vQCyrLSGnj9Lw/l9S8EU05vofO3zwU910qDtHIh50Ocs6hlwyk2kqIc
lc9du6dtQ4dHoyNOGFvXwie9vW/O5M0h5od9/R0vSpCVKN+M8woV7qaIEfYq
bQWjgoJMEXMavMN90ZwY2QmxI2/touSosUvwmLOFNZmvNr6J5XQsoC8cN8W3
y0pQqv83ZmdOBlwiSs8mzDEInJvmC0u5jPg2uxj3+IVhkJ4YMia834dV76oo
m5/pAb4Pdtf6UhaR+2n9tPe2+agpynKyZmQZMZu6P9ZpyUDq2KCC+TAd1lMd
s+e07Afv8GUJ1hIKPPPgzvXx1lrg+8oX/46TBuM+N47y1A7QUYkJEn1CgV9/
vyplGFgCbtwC39IP78OSlXohrD//QNPpBe7t/Sz4huIh49vugxDNW/Q0f4IJ
BxpyatNc6AH92dsH5NuIWNrCgCHdtBo2Tzzz6omeQsEbeWUhEbXo+HHdhsx+
GtwQftbfUrobesso7bj8tpCW1FOSyvd4eEhSu21Uw4DZBudCRf+2wxFrnHvq
DRNmXfNvGyoZhkAXtTkeZjK/xv9gbToYjyqWnVK27zNg1TnTalnaIagYe6qG
Z6jw6KMNMVWFRkjbLHCrTV5BKLmZd847Cbl5xqWl2ayjLdXfeW/OfAZOm79p
ny8voKLRiZfXvlUg/Cbb9IrWDLJ8ECCvdRihWZ4R9dKADXR7UDd6qToObppq
/3QLpsQBYocuB0/XgNd35syP7ET8KHNXNoVYBibvSCSXt/+Q9Omd2FW6GnRL
MV9jyIaEDZrurps+7YRX61yO/HPUOMTtdoBXTweEUSkJMM7R4vZtGeEGsR7o
e8F1IVh3Db2iaTTPOG+HrpxNZuVQJ/N16Jfwt9cxPAqYGaVjYcZmTx5vDt/6
BV9bt4ra0AqSlcikvWkTiPSMep8kXl1GHWfoFf0X09CptG5n1VNbaGnstxml
VySZK02C0cFNZO4h8F2qNgZGDZxvaztNI7tyeNv9rgpNjL9B1BTsmOQkbBEb
OgrSH1MFisl7R/W0M7ifVACrraJ/BS130TOLD8raQ77Qo2r58fBLdmw61Nhp
Jz4CphIPQtW2yXzJmOZKDMuEqyrsuxemZ5Gxr8KvqMwi1JEsa5LcT4mdytvT
faUaob22jfPKGj2+nHU770lyH0T+W7nggnaRaeJnpd8nMiEuuBxRkPn/sNfb
HeFLVWDfEqUmGbuKoh7ElvUfjkDZfyotfcIoMD6kPeu5VQseOw1Ll9Q3UTaH
nb/VcjJ0jPw7rzVNjVcfGcgZkfekwllqpi11B7Vd94l4cioByoqfCv7nTMKB
tXX+Ic964Fnjng+5L1mx24eEj99qR6B507nZ4Bglbg56nvFwrgpk82TMy3Vo
sd1uylQ3UzekDJE6tBeXkPOZvuv0o+lI64USs2QwBe7uFnkXbVYPf29SSlA/
osF8iar6exrboc+H5cXLa/Mo+9PsbnlBBZr65+fWNrGKVFj2y7PcRChHS2mq
6OgyEr+kdy06uBQVFjboSXyjxv/Vpu0qyHfA75HP3e3TRDwYHCUwy1QBumGG
r91DyPyTrMc7s9sL2jeU7x19Ro9DwwPq97f2w4lt2tnIsHX0abxfVC3KA5gk
5eQ6I1hx/2gA5Uu1Dki0+fSeYMOIiV+9xyuZ+oGV3aAzO4EK1y5xriVotYLE
bH2yCeUeLHhilu6Naz+Iset94LQnYqm/Bxm0+kqBKkv0aB/7CnpMHVX7mCMT
7ZZ8v/I2ZxotzRb8FPpejro/6Akz9FLhFzPNI3cZ20BN+w9tkfIqSmzXsV3U
KERmVXZdZ6NZ8f2B7xoxp5uhOGk3bR/HEuJglvyXQCxDFDQcVfRkHjlA+tR0
yaYPFDQzg3U419B5j1Ubv9RoNC7M0Lk3dwHdnTv+9klrJnq4xZsROkKNO0aF
Hy0RO0FjdHKgoJiIjU5fdPWxqIIavQdKShLLSL3BUZvbNhvp0QvQHl9lxX3J
jyd6dptBNK5UzCGAHpeZV6mNewyAzCXjB57ibNja0rVxXGkU9jd8fm7wexVd
WR4rbT3oCjx1d5ja7WlxQAgf3zh9PdzgunFJbZKALxW5vjRWzQWrfhJh2GoL
BdxJoo9U90UzjKt/7vBTYL7JwkPrv6pAtPHKPe9+BswsoLlOVOmCv1/paE8d
Y8XXt/KkrumPwsv7IdY356kwo/fQc5+PraDYQabdagIOeUSOx7NiYGoW443u
p8WVOffbprbaQe295ZUyGXq8dCvQ7n3cAJwVjTM83sqMSVe7lKftOyBdscXG
dIEKt9PIKRwm8/uZOzXfd0ZocZ/Jm2dSh3rh1LbuxC9XIg62rGZVCaoEaqly
jq/jZD6N7Hn21W8UjJRs65cbqTGdwhePKKUOkFtyrKtsWUKB5/jOpDqUoCHg
nD+bsBd3ln7JmtwzCkqc0xmKJCIu7TE8Yp4VBRs0IlnajbtI8W5luFBMMdSR
QoLvma8hHUqBfmfF42hYCL+/8nYLvXkccvlk4wtYdJD6kWOyD3fLO3K77hmB
y7oHpkvDZpDEXj7vsahiVP/llOCHZgJ+lV1x7IfiD6gr2ud75dAqQnyjd4Wy
0pD5h4YoJgcinsiCS5m2GMYaexWLd9fR8+yesb9GUXA1mqPnX8AO+tSeIy9D
Uwjhl6ZyukZW0DerOzyXxorQIa7csrTfBDwUcSvnBkUJWLct6wfZ0GNgHb5T
LNMLHLQVrzTvMuK0vftt5bUGQYrP3Eyrl5w37TXW86HlcOFz38xa0xa6LnDh
sGBKFnSwO6c/kF9GISf71WQPZKDTdiNnaLPnULF4wOj9gAp0SrCj2u0fK44w
sRvLdu8A/uxyfr2MXfRAXEDN+EIarD49u/9NFgtmLUu4//JSD7hPydoQnZnw
cNkhw4uhXRB9qY/SWYECn9I+Ot6BqsDgdnsOnzs17uVZFSw40gakevodtReb
6LmYPU/8mW9o8nlZwv7bTPhA8/YB97BhuK9ZdKtZegUxnCLmjQpGoc/+3j6F
MiRsZcRb2PijF56a+Wa0C8yiOtku9u+qpYhO3UHpggsNng75DnvzuuBLtaK7
9iY19pJKY1Y8SM7HEZl9UyEEvLtRrW81UAZmgy7MW1Yk/PLxIUueD11gIsRE
rTpPxCk8XLH7xcuh+XJ7sKYWIzaCBJXpwCHQmC8KrT9Bh1/E2VXc7e4DCrOV
jvktSryHvfXSBqEOGj/t9aVQIPt9Ubtb/mEfpFVRyhBwnALn/uH4m/K8BuJD
FS/zqmyiHoLHRH9BOvitC9ypJ/dbnWgqo3FbA3grBb68TTeJ1mhjFs/51SDh
QWG9OT8q7Nn7YZ5vqRb463MHKpyoMbd7uK/9XDt8ga4COTIPx0okxwlJtELS
rTM6jnkLSCVSS/6cZjmabv97YYZ5D156uK/vnPUIiLy86fROgeyXO9/tO5ea
YeKY7w7dK0p8GJxcXp1vgJOMfxP7JrfQNs1LfprWdFB8clLiEwsFjq+WenvX
ohRmdamM5ZYosYDzzYJXai3QgPM7zsfOo/TwEOsJ+zL0GqSJjbwMeK8cbcQI
9yC4ljVp/PbcRLlhHGUFdPmI38RTiHR3DtV7qMaazlYht8Qq7oT5BdS7obtf
ur0MudNTLD6/sBeT2t4uVsWOwU9kLFrzchnJ+h3mvzuajDRcnXU60tZQwjfJ
hyr3Y1DdvqtrPycm0avDFnUMg5WolNb6HLyiwkmoS3/qfCuMRzWIJ6mTcINQ
A4tASwscnmE56ONBwrvU1/UtU1qg8siijgOiwMHMozdVB+qB/hdH4s4CBe7g
GTm7O1wFAat5vvupaDHNDybSZYlmyMinjvx5ZxVpxV06ep0zCj1IzHhllE+F
lf6Y5IbbtcLBuOQiOgcarNTHFscm0Al3fF57MS8TcEd15vpbh3LwsXtVy76w
gHw5tXSijhcgH8bysSstJIxEHWrspX5BUau4y1DqLnp6j+qmdkw+2LV31hsp
0GOFe/cET9f0A2O4a5hsFxM+5Kdrl2kxBIysk5/Te0jYxrqzUzi8F/i8husn
lDYQrZmXGHVMLkoyuMQic58Vpx46n+RR2Q7srmZyJuR9FfxSJ5lOGIDpa1wv
WdR2kIyDjc69vx+B+idV8p4ndDjg8a8Ef9UBOPHAXvB39SYKOcLJipZ8gLDH
Ora2Zhlp0bMXzCZmoLajwdEynwn4+yXCnSLeEvgodEvnrgkJrzn+99Ov8hcE
+spaP9Aj4EKhKJEhEgZhXmtLxLSGarhNO444+SDtdvEvVMcocIzVHjk6vVoI
qX78ZFCbAe+7n3yMmaEVLvFoGbJXUuIHHu+CrXJr4PDqB4S+kXCAn+d8P0cX
qFQ2JpAYqbDCZ4umU7+a4cRlhRnds+R+d/q7qGBfDMr3RTXLBlbQ75rJ9tSw
z+i6iIYgHf0G2lbXf5fi5QuXOF9HCcwRsNIgVcFnQwT+cf5y2xT/kOOE/qFc
hTKULR4YRknmpc98RfZ8l7tgz6PmF0VmC+hmSexevQCM1u99PFrMsYPE6cUf
nl/IguRVpXPDFfPI1Gqae1eoFEWV/9jRpSRiroF0lWnBMlCRXvTn2bOKXjup
n5/Ri0KZalm91JLrSP7VeRe5xe+IsOUueSx6Azml7P4KMkoCBS5B6aiLLNhk
0kp3U7kX1D8unByrocUHf+QQzvW0QH/qeLxcG7kP9T8InuPogw1nxc/JewlY
JoG5ab82Bk7DBba2F1RYhzEmpsGmBby3LVEMFzOucNoOlFLogykOu73Pxkj4
5CfvoMWcPrh0UMe1aZcZVzJM9pn29UBGxMFXshPr6IiD796KpS+gWz1av2LH
gttzAtYYBAfBgLLvAncNDY6x2MPfgjqAgjUjo1pkL/4omyitV/oHWNaPmxzg
/odGjs5FiE3VoAsWWx/VNTdR0nPP+An+CDhhZiIedpsG2x/D/f6rneBCOXpP
yHQPlp/rQH6Ro0DtQtWpbbCDfvDq97x/EwtzmQ7PqX2oseOMAP0XxQ4QSvkh
nCm2iszNsx29+NzRY7FD+4/w0mLiw+/jX3ZaIfXgyoFa+03UmM612RmYBOKM
30YyLHdQWlE8VehuJlwfXudnH9xBRWIo6o3vT1jVzz727w8l1tIY1XLPaYAG
Supv3eT9OCCrQa043gFJ3dV/HK2W0c1i9Ykq9SyU+tIzvfIMNWbpjWwWOtAM
yyenxJl0GLDFcIxHnf4QrDuqPPigSokV34YYV0rVA2ki8OaBQ2sonU9dyRt9
Q/+eggHXJjl/5+SsejdKQOHm2EMquXUU9VDSfHwkDR2aZwuWurCGnriYS0Sn
8EC/XbmLvSEjnt0qzUzlHQZi44ltR49tpNN3iOtoej4IHbqSv5tAjZ/rr6kt
3GyHKfoty3rGbaS7hdZ2WS1hROAiVfILBowrq9qv9g5AQtfjIt3WHXQYRat7
6hbDCZb617Ktq0j8gEKa1OFgpPZPVozHlRJrO9eZfNKshp/eRsH75llxt38u
Z77/COhJ3k+hyNlC1IdvxPAZZELkYfESBSI11uZV9KgbbYOrtyKSQ/rp8Oiv
juAv1AOw9mJTa683mScfvL6jJtINJWEpC8ZAwOlbdIYyfzC4BNfcCVLYRdvQ
KHnq/ReQi/CME+CixP2f4t5yS9WBO72l5eFHBBzzYHbSOOwn1MbE7/qx7KLQ
NRnTzkdpIFzgvvZGmhoHbFbauJm0QflRFYGMjzRY9vKXtRtL7dAgIB1Ye38X
rQkyVDjdjYWBmdW5HETABn+2vvP/yYMbeScZnNip8TubhVqHthZY9eXpsNXi
wE9kDvSJ7o7BUfpvpF8y/6PIvMOpft847hyOTSS7kpGUmYak3Ekoo62SVBQt
iTIzs5URsmWvrGxZPY89y94jq3ztvdfv/P4+1+e6Pp/nue/3+/W6zi7Srwqb
o9gsgRGO93PE1L2YI0DbVeHXKAy6M/ldxATMrGFftH+pGv6JfnE3vLuO9CNS
uu73JaAqHm9dCpO9+H3mjZMrDqPQYZbJxJNAi3s8kl5J2PXBtBDdW2YeWqya
Fdz+JqkbZCYknKR1FpH1KyPRpNZUxLKRrNjiS4kbbFUX9rk0QMOnAltfT0pM
o9N4VH6tASTfKRyqNF9A1a/j6AoOIzSTbUDaVKXBwlH7iTcsuyHkn3stTxEB
l38/cIPjZzUUjvafPy3HiAtSr+s5fRuEpYhDlc3sBBy+Z1lJu7UM5NkHaCVd
N1C/2APJ46kfUKY5N08mNTUes5gsT5Wrg/b5OH9azX1Y/lIdX93fERCPessr
QJ73NssNp+MnG0GxwY9YeXwBsX8JlBOKK0NPNAQd1u1WUfwD5mAr8vzXnLI/
klZBjb0M2+7N0jcDC5Mrzyk1Ah4TMP/XLVkJJ+323fRXIvvdqz8t3w5VwJsH
4XVydJQ4/E6yj7xnNewcEsnnTJhDGdktSlr7ypHL1r8rt3aW0FQKvUNqVAwq
f7rRljRF9vez/D/6ZjDw6Oe3y7JTY1O/PgY3v3Zwfr0n3SWPGV+uvrJrRDMK
xy7FJycHUeEEPguKdNUW4Mp/Fj89TYUL4J6v+eMWcHobJW1A5rm6ZfTdyK4c
KNlkVecL9uAd9otOAWvdoD8qHdN2ZRVtBURcL/HJRkN1FMmH43ZRjFwe8+GY
EihS/XpM6/MamhcTersrnIHG+odOVEfvoBBk2tle4A0xMnu+67msI+p52aA2
tXco69gNQdMdAp7Mkxvi06uFJsU190w6RmwQRvPrNZn3zwckkqJbqfFxxosq
b53bIemId20+ZsDfiNGNTqgHqO9ZcQrHUuC69nEPnqVSCGZMcE/UXUehZ8Mf
NA1+QTIzvr++NtDhOqP+8y1i3SDHlbDd+mYTyS83bS9mRwHT41hleq4t1H3R
zytDPg2e9tRxveMgYJkcHheOnkpoOWKFMt/SYIFNw+in57qAsBNUI9dMwqFN
c3IXyH3w82Z+3eVBalzG9OpdrW4nLO03y+cl+4gPHff7ku0akHQi8YjvzCL6
Ky2zsTvVKONUVQbJkBbTPiyuKk7vgj5HWzbr8BX0zGHZ/FVjFuofuzXUemgZ
vSl4NPy6Jhxl09B5rpdS4IA9Y+LHDMqB8cOeDpWAFbQenBNFtZGJ0h6r8X/0
IWKqN2eUyx/WQUWCV7Bw4BLSvS8s8O1tKbrXnf/dLHgdvd/LKUcvnI0ImrTo
tSMtNtm5oR053g2NG7f2v4ljxJ23OBMdZIbh734evaNW86huj8zp1fRq5H3W
wr7CeB3NrJUefjwfhWiTeDZ2Gtlxhf3To6rnxmBcUHiDxYMad373uvjzfivo
nfl99cP3NUQj/L3QnjEBnZ/hFXYRW0SsbJWPbS4UoubxbnTGnBFzDUvcZdrT
DgwCqZwcgxuoaL6+7O6nOPBtpRkMaNpELcV1+1nHs+A/+23t23ZUuLo9wYPf
vwVME5LY680pMIGrSNN7HQH/up0rV8MyGpmQWDyamoVuilMIxJCI2CK6Pehi
bQ2cL7Tb94zIjJmivOLGr4zAiYk24gN/Al4uP7HxsKkSrvmrCfpabaLAoMl5
muxkaHcMOyS6vIN82aoeUZ/NgPJTnxLybrNgqoxncfjqKDx+dnXqz+9VVHog
JpJnrRhZKL9cONjPhPOUSvv6Dw+Dxd2ZwENCRBwfK+nikFILR/tXpzOXNpD1
ar7rs1tRoHAwL/XNZUrM9VjcTEilChLDk7zY0kg4vObIg9OtrVD+jSbfm5oC
O1153kAjmAHJI9P/ffxOwHnzbhbLNDWwy2GUdOPNPJJ19bX4YZGPTmXZHxz8
j4Ara/8Veez+hKc4LOfTKyrcyXU6zoulBfJPxVPZlzPj6+ksvZPlfcBtxvzs
/hN63D8cXH4moRUsD1DplFGuoYFZjpCL84nIdj9VkSn5fUbdGQ5k7WuH7yfj
hy4J0mPf0yplp+70wgyl8s41221EukvpmxKZC1tvbtdkkHlF86TyewmTVgjb
yz4VY7qL+JP0H4tk/IQhfX63BUcKPCF3/luYbSk07suZ8T5Bwhb8QubihFbA
v6XvHvDYiyWLgsDn9Ai4Vt/gfUIG6SIxXvpmR7LvtRpNS8tsoCxrHy+14Wj4
mFG8+FiAButoKelki3TBZS3J+HApelyfrKgcRdMEDyhdNWM819HJx3y/LpW7
AcMPxReUd1hwYFr+wwH+UUhk7/80MrCGLKW8nkQEFqCpWRuxa/eIOLaWXjHY
tBYseR3KbHb2Yl6V7olK6h4IPrq29DdtBf2zeDzhKp2Pii/Tih83IOJNkbGe
6yx1UC+xnGMvv4KoZnd8ZxPzUSzNRk4ExSbSFY9+nz7ojq5F5E8mDeyisveF
sdL5P6CIbjWfl+wDfxJML1K+xEBt0GzyXXUH/bsZEh52rAhaH7UiWnJ+tqof
l3a9U4Q8Ha/tuXZ1F5VGS4sMLyRCiG4D/2OHNRT4oSJwIzYIpPTde/jMiPje
jCjjY8MqOJ5UmvjWahex1XycK5mKhqg/Ri/Cpyhwq6SdiwZzGTz7w24zBQz4
a7qL19SxetAuC5y0PEyJW7qjjdcK68Fl3OXk9H8krHHYsV09vw22uYYf1v+3
FxsaJUTf/jsKbJv36QIUKLBnzmsL17GfYModMSKjvIUcZ54rbTZ/gQsDR/g+
RSygl5++rGZ/QYhC55Xx4wtEnM+8f1/MlxpwHoffJc1E3DYt3LyP6xfozqgE
CJL55JwI6qDqLIVLDvx/mIJYMJ/Wm0d1dCNgniHnQ0qjwoOGr9WOJrVAjQ6D
3wVXBtzqNPRmoLoVeHMHe7imidjvnbxU/aNKMCQ8mpSrZsaCmvee/mTqgeKD
Xktbquvo1aAy02cDD8Sj8V641HoXjZu6POasSwMhzmQHnygObHg8SbhhaATm
qq2USt/vwQzSaR9CWbph+I/6oMImFdZ6pWR8fb4ZLtr2H4xrYMSJId6J7JXD
0BpEkSFA9iv5f6ONZWzl8DV5LG+amRJPqRM/P/epgqBnQfM+vGyY9d4Od9Sd
f8B+Ql5h5TIBR9t7Yb9TFUA7czKwpYCEAxSiHxQSm+GTyKvVpj1byKkjRo4i
KQF22t99sHq2gGgmXDraNitQRdX7Yt77y0iyJwwJHE9BjBHqDfG6cyiNgVeq
tBIjmnsvkr9tUeMzbKayzpSd8LaIMN5sRIEV2nk5bzOWw4D2yZl6003Ub9Ke
fyA0BnU/H1zMp15AFHsCLnVFlKOxIp1o5nhaXL7nZ/ilkF6Q4TuSUTk4g8JM
2yX/461Bz7nEN2f2biKD9URRhqNfQUL2t46yLjVm7JnA88qtcOFLd8l+6m3U
KmnxRsInEw69OOisXE2J+zydsyTgFywpPgvKT1lE3vWWIeKUqcjJqnr27uA8
GtT8FEojVIzudB+We7t3GdE+DFyIuF+MRFLNFtpVKLCa5MX6XplSiHr+pMiZ
n4QTf6Yqqy60whlV7f7G9hVEkFM8WWxchsq75OFG4xYa8KLUKS/NAO0D6t/c
cqfRxC/uDJewWmTmaOFW8WIDMVZc9f+cGwRNfF3uluxU+NX9T7IJ5k2w7+1T
9/SWbaRhphnqdjgXeHS4ScrKFNjLeC/rdYU8UOJw8AhhIuIAES1dtdJKsHX5
6BGXTIX/G+a8+qyvCgQM7mldGaHETS1irb8YmqFTWDVwS5gCa1w/arRHvBQ0
OwrkUxup8FLlHfX7my0wqLl5g0mcAkedVjl4azQfphljE50vbKDYqDer7H5f
oOHufxFXbOaR+Nj32AXWUhRHYfLh4jgrPiQfPVVC6Acv95Fmq/oFtBU9Yn+4
FqOc2Z0YD511tC4ujpQ8PqDw60eLZ5MI2JX1QmN0WBkoBAYyRfEvIlU2wXGn
wEr0d0v6ZK0FI4YyLW2f5R5obnlzv/fKFrKlkPybvOoPs1l6Pfs5V5BuULLA
D9soZCi4lqieTsS6R8ielNYAt+s+3X7BtRc/cuXpzfjUAyP1LO+S5Ik46eGi
Nx9NHaTfzVJ5/ZUSq/339epgZC3od18MZm7aQRLDFo7yfqlQ1+R4KYO4iljz
S+TtD+aj1ARPk6TxJYS35RLdmXPR7QaTX8fldhBBvHEsQfAxatT4GRF7jBmf
TJlJtYsYgTA7Oa+0tSX04cBpcC5KRcLjYtO1vfPIOcryp+YURru2g1dWx0i4
WGmQhqO4DfYr0m39J0LCdLG07RvybZBQmKzFb82E384c1Tmn8wdUkvyotQs5
seDJ2vma1L9AtdCm/0ibGl+qyUkK3G4Hdq+ob5+61pGnRSZy/OKL2n5Qmlw2
osY8hiF7Ups6ABoWm868pMbXTm9Ft/e0g31cur3BQSYsmXI93li3Fdwd4nrY
pBdRxae3+ODTPHTVpIv2efQSSh2lYP2Sl4MCQ8yCfjIQ8NMPlyPPJZfBK56v
513IPGB/6r+4lnTy/JTFntB5ScI5bmIXsuRqwdHY2rwGk/nX5clgy8dS+DwX
FpEVu4UuM9wTtfX+CKGRO40VH2nxtZXu3IO0/RB+oz6W/iYR3/mRJG9tVg2r
Z7D/y6UFFMc+bUgVXIbu90lOypUy4ERCvLvo3UE4zPjvoOOhGfTUjvdjemsN
2tETj7XyI+DMuLNPqocrQOgq9Sn64TX0dyNG8bBOPDLC333CuxfR2svHApE4
A3Uf5WB460/EdmW+AmihHlbT+WDVnBJPt5R5coQ0Qllp6U3VJVbcdlkl+dm+
Ucj+WFkS/poJS+nmh8mThiBgO+k1fkaJH86GX3nYXQeCbp+ay8j8rTUhwUkc
bQZTM1od54wFlBJ9SE07uwItPO6/XbizgnA4p+0lxjz08SIt22YSNTb+9mk4
3KATRJwOPzwfToEF5a3cZkuKoWWaS1EshBoT5wQDw0rawbz1CIdK6SZi9jv1
VysqE+p8eeV+ddFhlSP/dt3ftsK/nXEdGeImivFxVGv3fgditcvKNfep8XX+
C05cgR3QbVUhe+nxNPq5enTuy95aZBJR1cVjxYZ7U7WCxBR7wI1T3yGdbhm1
OJw2jD2RiNzj+NZdb1Hjeq1swonCDjg53sJqLLeFHtetZyZbx4LtkEZp5G16
fMYszmjMmOxD6/0zGWQ/iSF8UkNuZZBF5/mydHoVuS/9mVjEWchTqGKdv20J
nWE8tu9KIEK0LabHz+UzYnxDU/jd634w8Zwq9AjbRPPMrD+ojn2FSzb8DM4f
N1Hf+uD50rDvQJyNV7mRToV1mezXx/uaYTtj+Uvs7DZ6sMvJelQ1D3DOgyWZ
u3twgQXvoL/0ELw/537WM2ELnY//7umT4wKcdat4am4HZY1JaMtRZ0CIXhS/
5O9N5HrWhj4xLwI+px6Q2JuzgeJBu/D4gzS4+HkyVeUoJdaAY0o0xQ1w6etP
1xc1dPjH9a9qMxndQKVX+7Y9nohftNw4QMNWBj1W/+0PcaLB9LxmTBn1v8Gy
aWmoS38Dmbx7H6Nt8g1mhjNne+QWUIiT0+n9HjmoXND+7gVqErYPOht5/3kL
JEQT8qPvELEvc+bxs7+qQWzMz8D/wB48uHFgnXfvKPA+yNrPWkmBPRjpK7kZ
yiAYm/qwiLPgcz9epU92D8FxO0veuSXy9ylFfoY/n0B9r9BUvuhenK2Q7fhe
cwRou0UYz8mQMNtOK7uoQQuoO097HS6aQZwekkp2+6vRRFd4exT9JlpuOrRx
jTcahga8FoQzKPFv2l/2NYpNcLvPkTrGiYAT7T+U1chUgFKocNyq8gKy6dVU
4esrRfZfOXwprxDx8NdbTNo362CZYc3g+jQJ86ZTwNK5NrgfHpwjeGwLuf8d
vfN0KAuaDJzSG7npsd5RbflLNf3AtWBEE9Q4j4QuFb7+mopR6FzJge+ya0jr
94WNovJclHMi2GMpjRobxlF1jop3goFEzi2DrSU0+tKVqX68GL3++8TV+AID
vjfv3KZnPwD657sHPhftxXoOlNteq8NwYMGyOebiKhJ6l3bLkv8jkv5w+InK
a3J/ExWkSml+wOKtVIbnPVsozBJEWBayYa2GW+zs2iqSn7h22CIhBr2vz3e6
Q+bPdPtPE1v8rfBc/CDbfS5aHFIprDNxsxckBXl/a52nwK+/1JCIz8uAJydP
jzmZEcfbf6dRchuAW4e//lv/PY/e7hoWnMmvRLEFb/4taLFi85iSQ9qlg5BM
84ZFRXoDdZ3RqvHT/o5yRETE0AcCzvo+tD185ScEaWfjhAJqzK904RebUTuo
h0SdmjhGge9455U8X8fAEv/mqWjZEqKmrpN5KFmKWE9JNn7uWkHx/0QFPjZl
IdszHXoD2ST8tTysWuF5G0j+69JP96DBpkc7w67L9YBrw8GnTvOTZE6pa36z
XIOkUr4byvhQ4ttdEvJCfxsg8bS7VNFlOnyJId65ZLcfmi3U7eLT6fAI6X4d
dWw//CiSWvUZXkcM6QbMXYXOaKCrt8Dryl7cUtGW9OfPMMQU9LsK8jPgfiW+
J5dCOsBWRLDkNwsBz6/JVZ45VQz7V2Pr/D5R4QhRx64ryi1we3b2iWokFV44
TlJRvtkEmQL7qnnO0uPPXbl6x9Y6YSMh6JA+eX+aq/0EEsjz3K/F+OnqIxq8
LPP4xLtv3SDbOW91Qo8Kr/IF0+vebIGZaQkLthgi7jRaOiEkVAs/7w1uBk7S
4pcv3fT7p7rgd839YkLMGmoAx2CLaD9UGFr97bMRAd8/+SmwqAnDt8CYGKOX
9PjA3aCJd0WD0Gp09hSb/jZ6K6+SJiCRDdRpGf0rVwlY+TQ8O9lUBTkCoymq
72hwuIDjoVCqLpg/rXtR898mQvr1kVF8AXCnrvVlSSAVvtRA+k/kYDOktNhp
Bqgz4vopQZPFuV7w7e7t0mDaQaGZLbXcYbkQunLzGEF1DeUOrpNWXr6FQpmL
N93uE/G1ntd5x+7VA47LVU9kp8a9/9FTnXJqhrvqQ010cRsoJe2JKYtRDrpV
w73aQaTBep/3JYQadAFxPeH0RVMqHMJ1le7amxbwMsACPoe3kE3Ise0dvkxw
3U86Uh42g2S/nUneH12OlqOkNIzd6LDB0dhHkcR22K+XsES4sBfnWD2to+Qc
gkIXgfeCNURscu6MspFSNdzp8C3zOUKD5/Xd/BTsuoB6/ZYdlS01thBSfHTv
Vic4Ch7e33ZuF83rOLtd67OHr15WGfF9a0hpeX8yT0AY3NHe4Re6vYa+d51u
4cz+iMZMjNc7esj5x7Mxm9dcAY01Ww30b6mx9qHHH7letgPpv5FH1GFkv9nJ
Kv/t3AQm0o4iSSPLSJz78kRWXCT6EF2fyMW+hWjidFnN16Ig757YDlszE86Q
DvTtze8CzfpHbBXk/g9dLVGj/1APlrols2dJDHgrwPHrxlIXMK8z9PXnUuFr
la1SHsMtcMuhHuvF7yKTt9bu//3//7UdzyWdEmrMSpK1/jHQCdeZj6x6rCyj
OY4sWqv+GKSeSKtbM0iPX2FOH//aTpA1pGWIvrCEblYdK9mfUIDOx5SIC7Fv
olPVx3RNO4yRzL4hjuymbTR+cfVS3YMoMB1nSRUqosfXfee++X8YBPfbFDea
1Snxl9gJCmJADWi8XTlWmsCF5zL09x3k+As00fT086vrKPipn99HvwSU8bst
vIpjBp0dbhBQ5atEybfkq2TWqbGEfNwL9bguKIzs4X+xbxHFlqbfkdXORs/i
pHZP8FNgZy2t1yTTYsivsq5kz19D+b2kgT7ftygyccvTJ28ZxZEKWd3CktDD
CvB8KL+FVu7NrEdS5sKXcyUanXtWUPJElYXNRjJKa1X/fPn4Mjrm8yJiOzEM
pQ5HiN/V3EVDrsL++6eKoC5rftBDZC+2jHh8eJR3FEa7u/qIEvvwP9ttA8LW
X9B3dl49akTEM/L+L1QpasFGMf7113wGrHG3UUDj7hA8e3cx6VraGvL3dXzo
5BkGwuLe4lRkXmvSD6yxOD8CIm9eMrTNzCOlxTDrbZsi9E5iOrXm/hQ6tZ7l
cFC/DvknRbu8sZ1Ge+hY7h7srUDV1679cnu0g85a5LzStS4CcyleqX+PGfDi
Z7qzc1U9MFGiZxD1ioCHTz6rEr9cDfaOQ2nPYqlxhFD2xurXZnAKYRx794ic
V8lZnDJlvSDrVXDwzK9ZpFEfauHji9GDS85nXbUImPtG8fud7xWg+CYn8krX
LhI6ca2TSh0DEz5q2fx0EQ0xeTrmWOch5X/LK4nM2+jz74Djrdn5MBVTkkXV
QIv7isPWDzf2g6d9dX7tFwZ8/6+aV2hjO3zm6OsNr6TCTPsszmgvNoFHEYmF
KpAa2+vbVveQ9++W5Evau2NEfE9B2XafQj0kMUlqoN/78P6Cj3wvskfglwUb
M3cnJTYYZnfWgiZoI5xLcpxfR2LGFt9Ybb8jvttb9CWazPhVagRNiu4wTJKO
3/00tYuc7IN32l1ygTTAFn1jcRY9+i7GcvRCGZK247iWvbaOCPPS26OnAlCn
QqahBnk+fRJ5qf8rjgJ5RWLcBzHy+WlFFrSMtYOa0gz4jVLgRirTaOntCugi
HmbXC9lB/kxtZT/N0+Fv1RXhWMZdZC549hJ7YxjYvts7d0GYBtdefpBIbG0D
by7mLo4USswpzD6/tb8JCE/YHlzUWUbjUxrph85moPvjlncvfFtFX5jDhI7Y
+KPqj8vzQmLkfm8VMBOYb4F7L47SSK3RYA1eYlI2uR9Ybj5QnMyZQxQi2v/E
3KrRJbXE0e1sbiyivBxeWf0fBB25c92OmQY7vG1Kb/LohBux3kdvBzNiu8q1
dF/2YeCPW+qe/E6P11sfPlQS/AP3H4fwfSb3e07Q+DmGghIIDn1AHzm+gn78
Ht2gPfkNDUh45TjdImDVoKyxJ88rgaFFVVRWhxE/3VRf5W7qh9Ase94/EUTM
9JXd+r8j9UA62X8qRHoXUaaIJUseKoECTe7g2U5WHE/fG/fcZBhOr/f59Kxv
o84Km13W1gIYsdosOFy3hCbPl6ZePJGK9t2JC5VBBHyWPpLfybwM/nYFBfto
EvHu+6bEApV6uOx42HVpegsJPr8/3KaQDcxnH5xO/rkX73QIRYR2j4JP2H3p
JQ4ilncrdtphroGkisscWlEL6PPAi9mzUhgZPJIay/1Bwq/OUXxpXGqDqIJX
ZUpfaHCW1dwk/40e4EnLrHL/RoP1M1Tb7BTI+UlfnvprdBm9Yh6YcrfJQkcy
jgmY0e6gV//WVzTbEkCtQ7U9aoQSn6dNaS2IawKlEf6c6XxafOWBGaPfmT6w
li76fb2ABbdjL777MAS7ljkRZnsW0H/TwgcfGJehUwdO6D0h+7/wgY2xmtbf
cNb2iHkcuX+k5JIOn+DyQ5ar+xnHmYiY8eHLC7cnqiH/dJQhR+g6Iua+ZxjW
MQBF+j9PVMl8LNp3Xu6PbxOUCjq8ulTJjAUF4t8wUAzCvLFMaV4FFT5570mJ
w5VWOKJsQLdVTYcTxERmvTebILAxkGFudxkxxQbwZAdj9DT7P+4Hb9bR9cuq
lBJ5HyDtyMRgAuM8OtDdkERLX43c420oq8i+4R7GX3imvwrs5dbkP69RYVaH
8jrNtBZg5OSzrCDPy5FjecUfLlYAU8rwUOkELTYPp9fakegHm5q8la3LK2i4
jokxQycaOTYQjijMbCCO4YzowvDvwBdQ4HlbnQ6XOxitn2b5BZkvUq9kvptB
3hdrG00u1aAld8VETqcVpCRWKwts35AIPpJ5JH4d3bvD73p92wliBZj+shuu
oiZ/t9y/2ATu1VyQqGGiwbxuIgIvD3VB2oSlfJgxPR4PK7xhX/MHBrkjvF8d
I+ApgUuyFT8rwW6DYfYpJfk8X9qCP0sDKK6E/jkGbJim5/R6yNlhkHM/ciNE
dAP9HT51NXglEjI59PdSN02iO0lr34vbKlHoXfUDbSIzSDS48VabcS3ShWtr
xnQEPJH/jUe8sgyoE7BG8zYNluj8GLGZ0QG10aEjK9QLqM/29YaPeCnK8LVo
m1ekxeOtg2dqmXuglVFKhEaHCp99N+D5we8XzHn/o9biYMIqhvZhGkK9kM4H
vAecFxCjiOg2Y9APFMj32OJd2Q7KSLJ9b22eBo7NPyVUaGlwqtHg7yc6XUDl
XyVXbkDE/r7dqXYpdXD53s7cm0gW7BjRw8LcNQSWrKUP1QcWUdTnkPlnfzH6
Psx6LOEwCx46ir4INgyCrVltsflZKvzU/grVJEULuIx0+vczUWCmO2009lX5
wPjClZHlAxHT+kmsOa7WQuX5aPnTJEq8Rav5Zc/NX9BzgOtRCnl+h3dyypaH
4uA0s19V1B8SJg3bXElRb4bglCQ1Ssl1tHEx/laU4jPIZGe4zaywigqvysr2
PYtB3I7+HglOO+j4xNOlXP5kELg8q4cF11GtkPn8SR9fELqwSErhXEApq7Sh
71MK0cycvnUmFwueWLpCW01+/yTlXC0Pcn9d27wuMJecB6Qj6flzDARMIr3w
Y/pbAeYj12c8ewmY5+uiJx11DYTmnWsxDttClzichoAuA2hWnfVe7iXhM+eV
No5PtcIK6VTp0JUFZBYe8pjiYzFi9Ojt2NxHwD8YzdkyPSph6X7WFCeRhAWk
n9v10jbDIY2+HC9DZvzGc+uG8twItPDqzbgcJ+LVviezu63VwMejvxzaQYO3
CkIIS197QKvx57bgk1nUdI26R3K4FPELNh/7KE6FDz1se/uNqx5eSBfvWXtN
gzOsfTRNVduh1D7tUbnNIio6pJDZv5mN+kHiWLYmBT49E3TjCakUIh0kZtJg
EV2VfRjFIFKOOrsHYlYO7sFxdqefH8VDoF5Xqq0nso5erwsKOthko2PXE+92
2W6hzvy4fvdnmaikKf+VVvoCerjpd+ja1RK0kKSe8OMbI/YMjlQTFesHE0Pl
TV1hVuyfFdNQcOcPTO53tXWWIPdlEJPULfMfIGOlfCNlYA3dEKl8KL5tDwkk
yKGMZ8C+Sy/zzcJ7odWeXaqjnhYr5VZ+6VfsAs9zSYLClwi41Onz4Mj1ciis
DLm+kMqJDURPUEgyDMG/WheKDxxk/z19q2nHuRtO73t+Mql3Hr3ytuJnUixA
8jpHu9ssyX07n1Nw92gpKrpyWPQ8kRqbxB2J03jaDvZzazx/Igl4qfdq9Lcf
ZXC3Wb9wMH8XKZmUX6rQ/gb3f9TobtOSsKNlhlTOdBOM5KjGXSDz3e/HFSIt
HNloanB/bosoCd83vSXNndcKEgGqKmhjG83FF5SQaLJhcblxs7BwEWVYMtDZ
cmP0xKqt6vg/aqycExxwjZxHb7z0Lskas2Dn1Pa8GKNhsHow869faxNNRlwa
te79Cvp1ZtXNluQ8PNCeq5XXD+yM2b5nHXaQQtnioeuG3yFtqcbBWpoCf77Z
dEH9SQREj0naStKQcM5V9RGmHy3w/qRGJL/aPEo/rlzoS1mN3hxfkS5bJeIz
smbXyphrQZuTqco0Yh017OsrlQ6KhV3NQm7TAUpM+prrxKPWBBPEXzrbH9bR
/blY7t7jFpB1I7KWc40Wv34W2lmk1QpvvQp5zrymxh4jtY43OJrB3Kv1Tfq7
dfSRuj0ju+YtJO64ilWL0ONrfx+68LG0A57mHLWTWkNXxseuxFp/gHszc/bT
1zbR497Vl4pfHJGtj/2q5ilKvNztdaVW/ze4dUVdTbyzihqDxnRo9+ei2Fs9
ch8jqTGvy3kzWaZOMDyUkWt7lQK/fHbmLvFvMQxvdWqODyygxOHG/XsLfyK7
YFqpqkkC9q/KUG6/gyFjNnv4P4UlBCKH9TQXY9HbNyXrx5+socZSWY0Xe5LQ
2UOpOn6nlpHXJ+2MAvOf6KA873kRPQr8vBZieJbJjz3Ns9q4sYR+ZOgVqymU
ou1nu9v615gx7QLnDvWJIeiQ1b5Ju2cV1YRLazOsJqHjqywK9xIJuAA/kj12
owbansbcrSmhwmK75l7HmJvhnfAii7vvApp+1frGOPEH0jtDk/X5yBZie8sh
uxWSAZlifm0SFvOoa/N11rknpcish+HD41AS/jIObDk3W2H7PbfKYcENdI7w
pnD3phciJves4a/0ePcKc/w+8vaH9sWbfaKlx+43b+pfJ/ZDTMlIVscuLd6+
GJr5YboPDL7YKR+woMAPvuZkBI2WgthQwQMZl00UUG3ImewVA2wltDRn3DeR
LrWPe1vIdzgnlftQU3YVbXJlDLBIxyOabiMK82f0OGSp2ilbog0cXTjmlw/u
ooZA1semmQjaBdyuoFOr6JPTX3NZi3zE2ekU6a1ChX3e6m580miGbpVPhZUf
9+GOuhN7PCgHgd6Je1g+mB4Lj1AZ9V0YBLhst0qSocf7xqweOwwPQIkJm/So
PhU+021jwPG5EU6vlozB82W0e7zg79xUGTlnhq3ekhhx08erTMILQ+B//vKj
nsskvPjtcqBkUyvZd8X16uLWUf4+QsglhwhY1pVy2bFhwUJ37xo/MRiFluWj
lVFpm+gSj7cU4UI2+D6Vjjocu4gemW63XUzLRl4uYRfUutfQM9vkUVaNQnTm
0g2ZvppFlO1x18ZqvhQZ3FJh61pjxLx875HNiUG4z30pgW5wE2XbC9R88IoH
kZves2n51HjPyB3tvsBOSBB8kOJ4jB67sV9+uBHQDzolv0Nl2Cix+qc8VtWy
eijLRo2qzFR4fnTqsu7pZjhavx60kEiDRRzsd2gZ2qHcRjmXu2QLHW4ZOVbz
4yOsNVxJ+Vi7B7tcP3Vv58swHNRqPfWlnoD3+NA8pMmrhLqQIG/jBEb8fHGI
JPStB8oSW+crvm2g4yOfgrQPRsO9LCetozS7yNLbbsr8RQGZX62NKfXo8PQu
Z3U43wDckq3sqXEn97lB0Jn26EYIE+oxD16aQbIn66NNRKsQl0yetTXnIvJ3
ItSFOVQhlEJ7U3hsE9XcH3mBjqXA+KsCUVP/VeS6rS3/LMoGui+1jw2KELHQ
f6fcQ0urQchSN1ehawW9E/2RnMJbjsovmu3j92PDh78GZPRe/gc7j4I4iXUL
6G6MexjL4xIUJ5brcJhjEUlVZIzTR3xHGnfoymoxLY74088/9LAHHHRvfe+O
2oc1YvKvv18bAkXPfk6+L7Q4+6N71zB/P5yet6OZiZxHhIPRMZbcZajQ9KTA
ZPESsmdPXS3yykIJyja6lMs7KPSfRu4u5wcwuHj2yAMyPwhvcE3ITOSBnAdF
153pDbQuZ1yqkJoAX3/9F/3RbBllH94vbX8tE+k935dd1rSKmGhC6Cv+ZiKD
HjZat300OFFgxTF4rRYSstoNHg1R49HGoii3/jaQtrArciTzL0XLGT9Byn5g
3hOStiS0izirveRF2xBYFLjqrUvsIq6qFIqDR77A7M8CXu0wKqxzW96ZoqyZ
nG9Gihzk3xmcBXiNwgthysgjLH+NhN820Z9rCGsD+lsmL0NFqbDNFGPIYlYz
uPOIpv5QWUNV7vteM1ocB/S2lUq/i4ALC3/YFOTVQLwmY1nBK2rMquHn4+rd
Bg1owUlxhgHvm5t6um7WCb4ropzqA7to9ny+90xDPrzw2L3upEaFu/n8dilO
NUMPYkks4qHCFq7rwVVlZVDldzPpyy4lHvcRPvpXpxmIH7SfHavcRdpuZx2E
3YuApleWU+ooJYaHFfsSixrA4sgn4VWyf/cJ8qx8PVUBL8rreH5eYML1N9pP
KbwehpB5fsHCVUZsGpFZkpczDLT6NQ62/1aQ3cSDBwe0biJpYYHGgIVFlG/0
8tyVCYwq6u30LFVpMPuYOIXKf82gufXFOttxBp2adXvgWVeDej4kqHH37sXn
FR3nNs0GIc6W7UHQBxLOuBFSdwtaQQr9VBv+Sr4vTuLEhfhOCF5M+tZWwIhz
3giRrByGgHb29qKZ6gZq0HRlf8UUDeMqBpSpdCvoq/p6DNr1R836yzHqjiQc
yOlJWxzRBifzZU8Qo1mxIkHdpkT8D3ys9W6KFNtB1HFBfGGMaXB8Lb3eT5kS
72E8IFZ/ohG6DMRXTOam0CJdzaKzXg0KOd9iy03aRYMRQT8zBQvgpX+Jk8vW
Fppy090Z/JQFg1LXza5oUmIT2dPPI4zq4cddtniPE8xY62lqSnvnMIwYLaq2
X6DCFeOsFYGVTRCq+pOpJ4EOVzwWnd+x7gdlwXvOlPnbyDC/5u+bgHz4dzqk
4fvTVXSUXT5S4Vox8r4/VHNcfAUZKLfNV/YUoz2tB+ZIKhR4+czk1TGPInic
ryL45Tg9trvfkLo+MgAkbkEDERkiVrYeyvZprQWf7feyLrYUmG1u4k0OqRx4
dhYoLOQWkJ7+b1Xi5VK0sVV2YFd3A83Zvjjl3peBZO0zf7bVEvGe66nUlVR1
0BBjp7i/fwGd2P+Ox/pkLprVCi0qMyJg0VNHlhRflsKydbrG42wCLpZrPRd/
rRKELj2rlAmkx7LvOZ7pLzZBz97eK28D6HDQK1MNAdVusJL0MX/RS4V/jP+s
NzvWApPvYoxtzWjwsU0dw0SpdvBe+9Hm0EiBz7rULW/GloNlq5pOgvcGKs+9
EJ/9MhEOf4oLmzSmwHnj6BnJrhD6DU/vHbAjYGWn/OUm5SoQ5eTiOzhEhV9q
zam1rTRDtXHJkeWtdWQQGJZFkewH9NP3uV85TCNi9J2Rg8nVKNdDHXaliXjo
99U/VZrVMBo17c/vvIa+mRO27g0GoLmkhj05pzdQ03vzHdyRg4YnGTVcjlDg
dOFX6k1VJVA1Sx+jPbmLAiML6od7suB1o/vP3wx78cuudZHa3QFIlxqYUTYi
5/uUocupD30QqnLhjkohLb7Sf93KaKIZ/kn0U94+Q4P1jk3W+e9rg1v75K9U
Zm8h9XNJvg8u+oObnNnYR2DFTEHT4gzDo/DrcPDs8z9kXtFZfHniXDEyyGug
eO9AxJY8+aL9vLXQe8iwO9RtHmleTy1QuFiOasO495YqUOEFiZXST0d/Q8kd
g1smIZTYgIrVi9LjF3gdvu1f6b6Cwm+cjnjklo4+3jJ8MiS0hdzOzUWUaGTA
zfOkc/BmF23SO/vdYy2A4mgWR8/IdUR9eObFifex0EvjovwxcR1VBYca0+iE
IYFD032TAkQszbT6qlq1GsDUwUE0gRYfj73mwmbWBxkh19VefNtBLbNi/LWh
BWBRLcd51XoDpSoffC3zwxMtLXUlle1dRTxx1bolqAjpVFpPvjhHi5VbnorE
UNaCX7pi2O2vdBgNuA6ltvbDbTU7pwND68hYsHTtC8SA2rmvCmlGFLg8WuUI
v1I5VFJTurqeI+LNU+gc/WgN7LBoHnksRomH78+n8TM2gG7IKe1s03WUspPy
iO/+F/iYx2daZkjEXSciMmK4quD6DWc8xkSN35kolVQqdQCRlJjVWrSM5jmG
oifnMGLnOJPbIcuIT93hXm3u6IU2a+k2/0BmHDJ/6dGDA8PQXhVeteBNid/Y
q0oUNlUDR5uxjeheZpzG9dXuyb8hcIebXhvniXh5ZCnPtqgOvmr6JPyMnEMr
PtMElf1VSOGJv1/u1g66PcVmNLDuCFUwKTomSoMPulPkuf3oAjlTx5vCXpvo
3K/Nwgu/kkEy4w5O/bCMWmzE+60UY1DA9dm6qwWb5PtsmvTlS4DToTMc1sdW
UY5JhfXRs5loNDSFIOPIgA0fTsqyrw9CF1cv/zSso8iCJQXaa+noy2jYfnyf
GpsdivdUnm6H2qUgGg4dSswvZ2NztuY33OEaOKb/juzHh0LzC1qagLAz5Pvq
BQ1esj7udJqjG25wyZRrObJiItXXiIjtIejcc/K1cMs2Ml16OGzwKQVuhU9E
LBykxHZFxhSZ73/BSR4sE6vNgiPZg5BK8RCUikih6mpqTKliKmLP2glKvR28
NALUeIqBw5jhbQfsH7sxoBO5g/Dnzum3D61goewozZ8UEvbx+4k35NshbDPb
aaZvDQl81cVOfF/RSB3/06o0SvwX0qGk/DcEiUU5iw/tIKkXgclfbH4Cr4ge
IejvGsrQbr5lI+8NWUqSx0n9JDxzkK9lbqsRYjRZeULpd9DC1+DnWTFFIMZ6
eb0qh4DjGj+56GnUwG+5+h8d36lwWaWdkfLxZuCm6/qugAi4JUPwQWBcDWSk
3hNBotuo2zmmdvx+BnC3fIvq1NxCN01yha8yp0Ov77cXr0/T44K2/a+NXvVA
tNmqxrD/XrycZllYq90KU7wt7I6W6yh8Q+xuznsT1Db/IFxeh4h15M8F11+s
BQfFB0U3vSjxoeLE0rb5ajhe0PV6dD8FPt72757knVIQXkxtickl94nKDO/m
nVAU3EgbsphH5juLnBdeNzHyyNCWXbw7j/i8ElktcyvQslachn8JDX4zs9ny
ULcHFmzybo3fIvtvXpOoc2orvPvAPfph+j+Uwj83996sBu1vPi9cbsqODc8z
BfbVDwJjzq/5jIY5ZDhw+vaB8Go0rrreMn6DfF4i+uYBM6XgeaHJXDGKnKeZ
P0cmncqhYp/84DlJaiyjJWFzvqIDYo0MJe/U0uBk43+ryQE98OSvhlwyDytO
jBDF+HwHfPYM2MhXWED5U/wqLFyVqB05pXnS0eDXiyKmxuOdUFZQNyOoR4u/
MWJtupguiH0yZRB4kR7Pq5+L79YbhLuKOcrrWRRYnig98pW9FAIumo390aXF
a6faOHJetoJ/j7g479N11N+iNxW1JxTSjt4Paazfg4NmJi4/tOmEDtrSmGuy
9NjK+p8Ix68/oJyq3byVScKSZTNeJxh+Q0rL3wo3gUkkFxTxOzeoClkdXhgb
Ivf3fMpW9YZuGeiZHEj9kzSHVMPUytQvYuTHLCl48hoBG6fHqngEVsHG0WKj
HFYmHC/ZEuxG3QsnNmM/8F5dQhmKs/qcFSXodD8fc1gEAc+bzv/am5kLR621
dLqOrqCZ4ezfZj6FqMzwvY+FLDWOqjRQ2u1sAtnxBOMj6zT4l2/lzNRuGzye
P998mJ58P27CUXxVNUgxOiyAspQCrxx85YsflUHAlyttUvZUePmIef3ZN42w
cL1DzT+UgPvE8owDyL4jm1L/ucRhBf3ajpL1elaMMq5QCm1KkfPg2DWf8GO/
oVbFrmWNzDNZlNwhUa+zEH8nt9LaMCVOOMb6cOJQFQSMqQNdAQEHigzKp7tV
gfUrZtdbp3ZR7XgQHJBGkODgdsQznA7/2/xu8Yzs1wt+T7TXb1HgSJxx13ZP
JvjtlPs+X6LCh1tvdEl0t4AHhddV9YxNJBVh2Dd54zvc/d7sqtRL9nfvi8nN
k+lA0lS6J1/FhGXSaLq1OYehd343o7Z2EdG2NEkGWuSisvd/2HTqttGnbzz9
aaRMOFKHxbcH11B5xU3HPyeTkV5QNKxs7aKAVmuT8Yc/4JH/B/FC0iLStlpM
CDZAqONRvu/28AZ6IW7ex0yXDEFL+W81Gyiw1bhH30W1UvA9pJa4kkfApgLP
ZVSSf0C30rfp1i0KzATHjV9bVwC1gvzkmMs6EtS7dNbnlynkuV+49fAhI/Zr
ZLjHSNEFyywtjdxkX835bel0Z7YBvi6M2dDsmUFD7v2E/u0aNO/qe92MvF9m
Vhazc0cr4HFy288D40tIZdvnWYRFEZr28xSsq1xFcbPBgnHPzVHtoyB0guz3
crMSdN7ZJYiLT0n5TCoBBzfO38nIKQf99NKGWNU51PXQ2HOMtxT1u/3nUNy+
hF78sbx94U0h6jlvxHnxCQHnDfGMn3leAXe9q+wFMjeR+/mOkc+UbmhrYg7Y
fWhxpGbQz5iFLlhYlbz/RYoW+4V7p+973Q4dd3Uq8zso8MRDFV+XSxWwayXc
/fsqAYvY79yzZ6iAJVSXJBVBxA6SkQGSfvUgHvvgzIMrq+j5OX1z41O5qOeZ
fXuFFRX2eWd1+ZJzE3jezIwz71lFSC3BKVk0Hj1SY+cPUaLACRMZNJZBeWDk
rO/kTfYvrosBo1rC5cDQHEFj0ESHz7/+9LZNbADKh8K/569T4SntL643oltB
N4r+dfsGPQ67afvl4nYLWCuNDS4wkbCc6IcTr5+2At3MeoZh5CqidZsZ4niZ
hnwOanMV0zDg/1Jm6RtPDAF+lkBn1kSPJ/9u64Qd6gO5dNXX1OT3ax6WawqR
K0EjWkUuLFG7iJFmtdTGpABWr1v/mNJYQkO18b3fNSvRdsKfBVHVNbRps7WU
9tcdsXlvZsqrkDAPLXGr8nErJGkz1C1skXCaTXnX7rkOeCQjXr1+Zx0Flozu
X6n2RjIXZVpdpHaQEcWQwLG9SXCdX0qXYZkKC/X0Bo6yt5B9Qwx8ZUn47v6a
/vrJFpDXbJ2Z6SPhsNpvP3MV2+Af3eUYChtKHLMngEFcrgley1xlPUZJ7t97
qz9kBdthgEFFUc9yD97SCZlScSLzDH99UJPvFjL5PqZo9zsb5EiMT1RUiLju
FXW9d1MNfFVnogmkXERzL9zEnG8jFK77beAXYQIxlx4RLqeoRGrestZly4z4
rCZdeciBQfgoJGnV0ryIXOUCXxn5VyDC5Ryt1sPM+JKYVrwjboGjNy68JVyZ
R15hB+09CopRAN3r5Kbja4hNU3SXyzATEVII2328RCzTz5vgQlsNEtxXI86Q
+ZuKt/Laskkv/JfQevbvnVV03tE/f+X3W+Tdra0KnkQspVR52newHmpjMkD1
BA12KJItzyb7yR4Lno9TZ0i4fiuqh2anFY5rdO0oXKDEYhwWUv7OdbCQKLu7
+oIWHxGb7lF62gdjZScv+DkSscGMxvkgimqoCNb+3e2+ga4SXJ+30uoDv10a
/wyeRbdYsu+FkTCyr7dMGNleRIF0TCVWRyqQ0ojm9xs8lPi//4xqbdYroPsD
1eOUc1R4O2W3ilezCR5d/dnq94KEK+tFSn+/aQM9nNVdpECJ/ZUNvlbfqQfG
piiioyglfnLPrObO3xoQWNjxEZ9cQ1YbDPsuNgWiJ+8jmJvMdpEiH3NLQlke
ZJyJpL7et4rqknv5rE84I5lq3WQhuj3YgP8S30z9MEhELWYQBtfRWzyqkWR7
EQ3hiu9Wr7iwhn5lUC3Nf6B8/P3Ak3skHPnurj2jajM88sj8c4WNGrfrelRR
1jUD/4j9mJnrAtrueyZqNVmKmjWwBc+5PXgey2T9khiG6LwfttKHV9GpRisv
Ebt8NFZS9ziEc5l8Dh63/tz/jrTo2NcPJjDgyQ9/1vcu/4EBN7nmq3J02Obk
p1E51X5oHjTS7r2xjShNXnagomcoevGy9lc+IiZRO0U/8qkFwV6BBsnQNdRy
P4teU8AInK4Yxe+Sv+evaTkyZk9Bp/yHyHVAhW08P5h0fWwBU/4PYbX+G+iC
19JdNps0EHjAV/n6MjUu/Udp2bDYAeYTcfHr8hsoP2+AJ4rDAhha+R7ejN5B
ioE13v09ReC6lv1Xy4ASm6h5d3yZbITTazwE46wNpHA/VdxMLgGULxk1rsaR
9+PpSU2iYAPYDu6zVaiYR89uust3kec91mcmqM6YiANvnxcy7aoDk3HT/SQr
OnxybNxxS/EPfIu8zGg7S48f0PxT4kvpB8qWl9yInCf7Uz1aDkX+BDndIV1v
8r7zUqR0zHq3wHBmriXJgxIzsHG/67Oqh4ySkr+PrTcRR2x5beVIHOhJn6Gm
PkP28yAlgkpZM6ymjVQw/mDCCs6Zm2m+g8Dx5Kb4E9ltNFyCDF1rbsNvs/d6
5Y92kLTImo45ewko3J7j5pWgwYvv1N8XqnVDWUMu7UAJmfdyg5Kt1Wog++RX
VkFXZnx96bvPMXJeJMZastx0pME/rGbfeFh2g4h6I6UeuS9ZfnUtmzSUwHnn
vyrLWfT4ZOvLQwwhgzDcNOGeokKFfSWDS4crmyHCJWkwkWsGfTyi7Hn7RA16
NtYUvRLKikPjnu7fOj8KX4q0un8YryAu5bnwghOlKMYoSWitnYB/j9cvp++r
hQBstb2zQIXH1obj7ASagU3C/yPbZfJ+dU8tN6w0g1eoK95Wp8IHBTt5/t5s
AumJspJW4iIKdxl9bEhXin5EXV71GqLCJ9XSqHf+NgPPR4MuRjNK/CzMVh2f
agSPBcmaDgsWvJk06GdzZQT2+N9Qpmcj4M+GAt9bKnLg8lvxlUvUS+gdl7Cm
NFMKelb/rtnw5SKiKS5jOWVegM4ZKsUFfqLCtR/LZOtVG2H5vvNG6gUqLKz4
kqomuhFGlCXa/UZWyTzyg+NDTQ6KC+0rzC/eRXvVfg2xRxeC/fHT58X96fG9
kyG99aZ1YOByMWDtLgEvams429pVQfvmI16jQHrcF/mgWqm6H1hdHf/de0X2
Y0cKx4N6jcA7fsTa8ewWcvebWpq8mQnin30qGOfXEBX+KHGUzxz1mIV+zP2P
Ah/gC/udFlsB6uMB96+830U/0+bz7ksUg8yJ2yJmJ6dRslS3px5DDaJi/7xk
Uj6HnhWlWsuWlCPLo3vDzmkuoMuSZy/+vITQc/F7yp2v6PFWHVVWrVg/6OtS
xzbmEvEH06qRJO56IFa51XGQ+dBvMbfpd1ExOL7LPnZah4C/Pb1FqzyOYXLF
6qCCLQl77WS+tPnTBoscTjp05LzIfnJGuZvst56U2RnZ5HznlSJdkPauAwdr
xyEVC1p8MsKii2euE+7a5LGIX6HGLFvhMyEWzZBziCnMkX0OGTuExDq1YPRY
qWSMSY8Ky/70OaPIR77v3xefSuYuoemsNI6pDxjl+Ul2HKoiYFZW9serMjWw
w77/7lbPElqhJsmNxGcgaZKL1ojhBjqhG219cDAZtHdPSw8+m0dVAfW2TdQF
aHLFxztoewZFKJsKMTqXo3hfqTPWk0xk3v1+Imd1CN7WqtlYiFJh879drT8z
miFglu67guwKCv9W/PBXchJqeOAoMl+/hbjylwMPPcmFvEvqCoc+EPDGu8vu
veYVoCajbGSrsoIKsrQL6PYXoE+PXE9oqOwg4qb9sM9iAXxO8i/zPLaORlk1
J+WeRiPNcuXzMmR/8DKWMI991QEjJ7vVaMn59csZN5pQf0P3sg6aBIstIQai
JWlxqRRNWfrGPhelwzUZuRzfahpBMJgl+eqXDcSsotm8SghB7EtdDOm2G+js
V2/HeyOhwOh4olwrlQnPp/pyXx4ZArfbR5AhFwvuqGz6TZwZgjui9/5NWBLx
xmmPiQdmdXA8W6Q5nMwr1zIU3S4utEL0hLqd5gdyHnsMnLBR64DmludSIhJk
P3tonXCXdhjEBkVe3HanwOsPxh4IPSiFzazOAPkeOsx+fYHxb/IA7DQKFmxv
r6GwsGoh70PW8PyKxcjqYXbchRL1NU6MgeXul2QadQpcecGp97VPKSgbU88d
ebmEFgiypKOUpejO+rpTXMcWOiJaYlxcmQzTkrWXnETpsaKPYF4/ZTeYrwtR
YFMarNBiXBIz2AmyR/XEOmzpcdCa5+EvkX1g0WeWs0X2/f9VdN7hVH9/AL/3
uvZeRZTk21BEqRTyFiJRpJBUKFmJlIzICC2RUYikzLL3jHPsvfdeRdl7j9/9
/f25n+e5533e4/V6nnvPee4o7l6Q0wlhHU3hOR9osWKtmYl1YhccXldenalm
wX7zr8/f/zQCMj4SDdoC6+gKyfRILm8AYuz/Y3t/LxFvMsfF4dpSIK+4MDk8
W0BDL2ikP6sUIXzN0mK8nxHvi/PwVjJqBwktawN7PI/aR1IHmydzUYJWqN0P
E4pPsIxseQc3QUBcvNMdHmoc+Izqzu2URmC/yDIZe2QVFUlYkoWz4lGdiJHW
d2pWnMLxPofDdRAWubRTH5iTsUnbmVHWugaIzBJt6G9aQ6L6k3rSvKHA06w6
05FLg0U/fpCl39cJYzVqbg+fryFeKjQcqRcFUVYiBG32eaTVJvJ2wysDWWrK
M3MwLKHS9o+XSo9GIukvH1Y+11HhOf9A6eiYenhJdSeg5fU4kjR5OrdWWY2k
XDnO+vmvU3jisyWD8ScQPMhUrh+xgoghdezCjZkoT9fr6PE6Ii7bFyhovV0C
w/d/1l8tIOM6q2cl/vtbIGfW1FHbjvJ5w5vH0u4XIssODT6dThL+/SCM65Jx
HXz+8mLvmwNELPEuUefOp0L48XTZ+rjcHBrnXM9S+vsLCWmT9RbPsuE6j1/t
ci96wOpaUUNxyiqKmgzpbNXMQotqNKlaZVuoaPc5s4jgNNj5IR3nxDuD7s9t
y48pVKCgoAph4jkGLDlu9f6GQheE3RIoPH10B3kssjfyi/wCLyEs16m2gTj0
R6W5Drkho4ctaofy15HW41n6iyeCwdsscUCvngVrfgyJFvzUB29ZHDzl+Khw
26dQeja6ati1k/1xqoOAeeh+aPKGlsJIRIrHZw067AgF67kvmiGKTs7Q0IeM
Hw87ffvG0AQWCvln3jRNI+MqqyQXy0r07Hhmq4HnKnqT9ce1SO0eSvA2cvhW
v4X+u0W2n6FJBc6jRl3tXAsoqu1l2FntUqT5d/RSveEG4pKdZ/AxcUBG/HWD
Y7y0OPvFsFW1Ujuk8Cpo4kgKb/wUfXlfRQvdrc6USHqyjozZ+4ymaNwR9+s0
7dC2TXRsb8Ld8IhEmGkc6KCnZcVdDyrMshNHYL5Wdfmr/xbK3tHcUNDKhq3c
v0cL/qPCBTfMHzrdr4HJoDe6t/TJ+IwS6yWh8UYwchc9MyNHj8vN2p++PN8H
x1YZ5BjP0GNDouUHmcx+oDGe5XiwTMQh3aEZDq+r4L+4BxldX6jxw73OX/vD
WiBP/1dRwR52vDu35KVBxQjkjCg+DeOnwpMZmwQ+2yrweaxDGD5Hxp2ybt9f
oyboHL7MnZ26gJql+5IGrLJR4JtJ4TNG88jTTLiI+lIJ+r6XtU9CeQW5xslP
MJQnIfMs9zwfWyKO2E96u88Xg8X24qH332lw66ORWz8r2+HC8Lmo8wVbyEMs
3ey+eR6cOk6+10/hEzNzjw3zj40wweZ9VEmfiJ31soNeRuRDxw+D7ih7LuwQ
SS9kOPAHlpU3dtfcW0PLbKOmCRaRyOaViut80jravxR0ldH+G7L99oNbOIsW
5xsUvXYu6gZ7iUnL3oPUuFbjTdJnyvp7+cNJT9QJ2PV+7PJR2yw41D0j6vd+
A+Vupkn3FsfC10bbPbPJDPh3mObWqz2DoOQpKPMgeweZ3ZmXJ93Lhzvif7YO
Om0j+fuiXiXjecARI3y+iDIPXsyweZvkREF9+EeB9loabPbf2fg9La1wN+by
07cDFB58efBFL10HpEju0rvVs4N82/vcZW0xaN29wmjQSMDiDhZJUwLFkG5u
8DBpkIhFnBf9RiVKwOxk/ZWrS/TYRfNh9/nxDiDvTsreFqLG1N80LJ5NN4EG
7e7+Fac5NGelSR4Mz0PNrRai+k7zSO3D+vhqZw5aEY9UYaGmwXXdeRGKIa0w
TDpudOfvBpI9QbydX5EGhxi/U/8cnUXfdn2WeC2IUNrH98fWxGjwhPi9B59i
2kA55bX0zWcEvEj7WiB54BcI117fw9y8hQY5e3H7/lww9uOxN19aRkp/hjMS
9seiyrxV2mlxGrzhvNevQq0JWC05DtT7L6Eafc7HpV9TkH+q9o3FG2tovFbu
8EdXX1gM9T5E0qfF3dcYji97tAAily1105Kx+Jvrgs33G8FKg/w1vWUecTZ8
v5u2lIq4lgq+WXdTYctuwpDJRD24+Xy1PHmKjP/5sdPmvmsCF8uZdzmfd1DV
QElhVmsGkGMLzi1WE/AndacGTn8E6RKnX6SXbaAC3oH0tfh0yDHX0xen5EfQ
McurbLfLQP/h84SiHTJWbrU7doS3AVZOmc3//sGGWQqrxVjcfsOXmHuXLOb+
f75MmLreacp8ejyqWkhLhZ3Nxs1d6krAL90rs1GHFd973Zk4vNIPOrkXx/Nn
2PCSnBq5K6wDaK4X9El1ETBxuu+Et3IppFyIOHqFiw57SjzQBPV2SPJSerBM
IOLPx/5df05bBj9c/8ramW8i2jQkmuEdA/7Aa8XwiAY7Gj4jSJ3pgGEHRoOg
lR0UaNhJjvT5BdMTU6InIreQrkuO+23TbNAW0YmIXVtDl1yKih41BMIjg+CW
I0c20BRPF+3QnA2SeeZlEFe0hAbXmB/0t8ai34e/P1mRnUMxLFLmtKnlqH1K
dEJjh5JvLD9O3uRpg2+5R3UD3m4jEacOQmhgHpzR0DfnH1pFjq2uszsCH4Fs
iRfwO0Y8LXknPsikF0oWVO7kjVLh1FuvHzD3YbhkNOzzR5EaNxhvtGVwtYK+
4kkGZ10q3H69acLAqRpYby7vMaOj1FsAMWmzKBeuyWlYG2rsoOp2w6CKjUwI
3Hr8aOXTHFq9JpNk/6MU6S8/2zUvsYVOb7FrRoeGoTK7wb8m03SYb21XSV1X
O6i3PHnFqrqNBlRmBpM5skHV/7qy7vcl1BP8cneDL0JveD9y/zVcRmytm+r8
lRj903/59nw2xY+OGpkLrzYDU6XAKdI0Nc5vzOKqvtYCzyXYE/7FkjC7Gg3b
xLUq8NfgmVtynEPnqlTfOp4tQ0ups7r0cox40GatI2W5H/6zOHhS6hITvl2U
YEaTMQQq3NHTLy+xYSoDJSb+3EE4MWryO5SbCq9HOczT89WBBpeJNkmAE7vk
tRtz0Q7Dgd8f3l8WXETcWVKLmiXpSKS/KmYwjwnvaQrJFtMehJALhybvr66j
ilMxnaTqCOiil3BV0t9Cwk9O2VEZZsLz6u/9nA1kPLr8R5xc1wxWW+/229wj
4qtGGVwxfqVgZ7ttl6W0jTrjLZbNFp4htTWm2LtVCyjk+g+9Q0MYyWWa6z3p
o9TPft65kLoYsBFgPJJ+lApvPfcoPMFbC6evGZHepS+i6tKkWUuGUpR7LXhE
PpOAc7wCmtWKc8EjwIGbu5wDez1ZUOnWGAI+sZm2bSFa7JPsMeQm2QXYXksg
9yQRP+WdXNlsw2CrH9Rg9psO/5VY9ujM7IPd7xT++oawUviZ+qQhdMNo25Gk
PFVqLCJEZtI41wpY9dCJFJFtFC6Y8zqTNxMO9A80HRSnxdamAXx9Oe0glLT9
XyMTCWftFPwMqi8H9Ta/pnDxRbSu0eb5i5yJvqeflIxa2ERO9PKMLNeTIO3j
oklfMQFHBLlu/WFPhd2epgdpa0g4SpKxtXmzFpDa1bnHXzeQSMS55PNsKZBF
2nC0n2bF9SIeR6x9B6EtlVteyZiAx2epTp4+UQJZXD+s2CzY8Zp6QF2rwh/Q
pO4IifCmxgK63NSn5lrh50G1tqglGhw9q5GXKlgPLA1f00L/z2tbD8J+V9WA
/VFunFBDjcWflZX6KrZCyN7xiA9qK4jEGMOyOBSMvnsF6oEyxScWp6v5xorh
gHvbBdZ3lH5Ze8qMgyUfzVRZx2zQbyCpPEaGZ5vJMJex/2qvChW25zwZ9P/7
N/YcDjDI8ltCcSu5R5kelKI/Z9uiO6KImCMovKPwTgVQCbwcNq6gxQPyG5dz
ZZugpFDm8UlBWhy5Kma7j7ELsgsjkwzvMeAosTLee0mDYHPCpIXQTo1bGh+g
gJp6uPyj6cmxqm3Eo/3c8YNbAZxrKpBR6FhFP5tXS1OdHZCvzdfbkfkkvMXU
s77UUAnrFXFXAiqn0aS77pnwvGIknt3g68G8hhz+pKuPqnnAnmlRu452Is7m
aamfci6FL/vYVJ0ekXD5V5PlKrUaeJMs/ef9iQ1k0NG+0pT6FL2UnFReW6PB
2amWDms/O6GBvno76CsDXv6qWLt+pg1eKcblVbsvo+gnK4JMJ/MQv+1X99Ot
TJiTS/96SncLGO/pj/tC4UHBL2x2c0mpyEaeq87IhYA/3rPLZ+iMA9mrhTSO
oyRstcAYJTlVBfvmn6Y0+1Lhkhq5hV7PGghTzzfs6KPGe84e3hB63QZx4z6m
BCINFp6yuDhwrw2m3gnE1GgtIv+8dLfjCcmornY13EWChGFZcIixvwqafLbH
On3m0IFHu3x3TmJ0vNkk3bWAhC/8I9FV766DMdb1mxPWZNzCs08sOqcJuiqu
hRGk6DBVM+hv72uH/BM/ZNcuUr7fXfYu/b5y6Nc6m6QrxoFnbHsyCr1GYKkw
ZIpxYhYls0qeGeDC6KT1oYl/vmT8oaxEtYjiTyxR+XRTwSTM4SDzK0SvHAqf
iC/miBKxpqXT2+w4DIPtrsumGxtIaDGI9ygxHDKzGXx6O1mxyxuR9D0Xf4ON
sJSxNomImwVfhRJ8ckBin3SaFqUfWSumCvuzNcPUB59j1nbrqNnJu9q71xcC
arL9Ig7S4jblF5qmQ21wts5E+bMIDX5uXJAhutQGNWkJyTZHiXikbffCJmsJ
xNHGUOvKLCOWXXLBtZcL0ec9ff/VFFFjBuZX/10NoLzPUSB5eQ8Jv7JclGz3
KoZ+xuUg72kidkR3EhY4K8HOaIOO/+YOejXrpdOu+AP423U6GtvYsfrDbKT0
fQjO+3R3OgYtoprN7o0Q9TKEa2U7hxWZsY6o6772U0MgxsX/mLWekl/UGuRn
0AFfepu/Zg6QsU+IjJgdXxOo0G380BvixKuTjp3uOsNAF6HPIyFKj/N2OR5S
v9kIVEZGZ3fPbyEnr89+18qTQT5/ilQ1RYvzrKndVWl6oKeX6lKqBSduaXjz
xd6xDZqSMi+zU+L/SdJdXXGkDAwzWM4/U9xB7qmi47ofMkFI6ZALy9wiGpWS
H+M/lYhU+v8bNBdiwNW+M56SnIPAvzCz186BjO88HTP3GG6EFs/7bk9niHjg
RORUTVIpqCverXvKRY9vVn1j+svcB49Scvn4Vin9nk1xJj62HhZeKzRX2S+h
EzonPj5TSUOHWV+1PRAiYsOZvof9Z8vgw/hd8XZfAp79tb9adjgfzn2Zsa31
oceXdhVUSq20AP8TddP/3tFg6Tbv8JaVJlCyE5CfNt5AeDbSrSg7CETVL4gd
3TOPgjl1HE7xVCDP+9OxY6K0mNVJ9aizVhcw9S1oaPMto+9cJgUM+76jl/3f
bG+qUGPThrcapcdbIemY1jv+OgpPstqVhrK3wZ6+zsxCNTK29TSXK+1qgtvK
3sF1IrSYYDzJVX28DXqbEm+VJZOwiqvXW6X0Wuh4m5FzXWc3thoaO1o1Ngjd
lky9bqHTyKoY1/83U4Z4LBz8Z5KI2AqG5H61VQD9J5p/NORdmLV/p+EKYRDw
q3mbJX9afIXaqxP6OiCh2myp3GUJxejtfchdjpActRDVWNMyIj2P/pmXUYjE
XZzVDxpvoXumTcNf22KAvSbsKLGcjEMDBTkv+TVDnTnnvuPaBKy978xnkfwi
4NOiVou7QsCcVfqmiRezofzTftY1tIO0mPFadnou5FjG5G493kSqvBrlB53D
0ZOwbWPzJ8uIE3ubO6T+Qjt+Uu/Ndm0jfqWTYoZsOXDn9uOExtckfOPg3WSt
0how5Iq0f0JcRYdNOHxe52QiSTN7j7UHJHyqE/HW5FSD/oMPBUPMO8j8bCPI
i0bB4nDNpWhREn7mr+Iky1MOnX8tL/pskrBR94P3s87V4NC/51OLDw2Wf99/
reh5O4gGN7x6lUaNjy190p22bQXbLedfUm+p8S1dWb7U0FYY/WWBlNdJeEGA
L0D2IWU/ivi9b59eRXuJvDaadB8R9SGT/MwkOrzxvVUhNqsLal0lGp8r7SBC
Z7Hx6QdpECh/py2ehxGr6NYlBosMgeGhPXpzAkx4Sec4X//UIPxptp23baXC
dz9dtnyQUQevpe6J2ccTcO6KUso/MgZ0zdKx/N0aMr57tGNzKRIsDGkmVCxm
EPHZifd9JmXoCkkF9Kgp/aTBqT8+twqK2ZTnAvYz4YrN7n2tFB5fkOWa9EYL
aNQnuUlsLRadVxLtEecn4WWd/qnN05UwrBbioZtAi23PmIfqs3TD5+SrcYke
BCzVEX/RSCsFWFx+n5QLY8fFjR4ne7aG4E3ORqV8wAwK/32f3MVXgSx4TXl7
Swj49khuzrnCQnAczY0ULV1Biavhn5/7hKHKm0f9P28uoKYTdcYii/lodrLu
ZswqNRaLbftV8F8zpJkL3pIR2kEWE6OkVcdMKCy8f7dClQHPqXxuKe/rhCK/
Opbf0lRY6PhRy+SZStgSper6K7eEuKQ303/xJaPq556HF1qo8aJNypyCTSvU
qedvxQqS8aJSeddPujpIfubvbVFGxibL8h57p5rhSPyu+TfRW0iPxfjix/k0
OOf/eXjfGSK2+7Jf4JJNOag8UnHS8FxFrG/qeaklUhDTt/MdjqtzKHy0MuqK
7C8U6txnVHCaCtMPi+e66tQBzznHyG/eZCyhnNwrl90Ir04n8Q3nUeOQPVw7
mKoN+sl+dHHddPiW/1wkt1sHEK64OlRsbaFybkmoN84D6sYHMuqL2+hvQ4K0
+dcMsKjzPvBxPxnPhOhN3Peoh1HW0NL4uwSMHs7k3D5VDA8CTcoa8SK66MrF
vvdDCdo/YJKTm0/ABbUjz7fKS+DDra2t/fG0OEgvoGi+qgPeKjTImXauIoXg
t494Fp1BsHDGXopMjxXyP6dPanVD7nzjdsUzapw9ztl8ZqUBJi9qfvx7cBb5
ZRr/fO3wC33qkKZOrqfC70ZT9P1f1cIhf7LkmNky6pU8E3O9MB4div79mjhB
wgPOej0aHnXwgOljvkb2BDqZea/ofncV8hO+dkZlcgd9jm4e0h/MgJMi25pV
PUQcJKmyqLuvCkQqFVxYr+zCIjI2DC4vR6AlcElRMW8Foa3KJuvqaGT0rHLf
Jek5ZHXrPZWYTRlS79B5I8FPwOp19ktXnxUBU7TLOfyRCg/QhhIuldbCSRfp
Nf8eKhywFmtCx18PQTd5s5rn6LHtk/E/ThlNYKxt9MnVnBbrcrMH7X/TCW3H
+dirr26ghSfPoqwqUqFF5XGATewOinsUHC9shEA4/x/EtS2jhvGrLmo+n5EI
xw2m8TP/P9/E7sFmVAbFl77t/qtKhSeJxQITErVwoqac6krgErpp0r49qJKK
2gofKr+x58Cn5MYWnWT6ITPyxLediQ10W5ZPj6CRAE+ZSgwV9NbQGUXr6HnG
ryhtmsXxTAwtfsa3/23E7hb46szSRV9Pws675gzaUytB5tzuETHJZTR2WIz/
QnAaOjUbGvZHYQs5axfnX2/JAHpnp/KU8AWUtxpqequpFP30+ududpuAHzun
l6zUFMLLjwo2HEvbKMvNxGzhXCh8jh5p0b5KxltXSqx332qEGMMbi5OqZOwq
eEz/ETSBt7+50dsPJEwl0dBlTFMKXa4ti3rOzFjpFc2iGVUfnEL5n70pfPbK
9eXIGn8zdFcX2BTnEHBLZQCjnkkKzCh/HXsWRo8nGk/v33u8F1xyLe82m1Hj
6IvuEkVvW+CNbJ/90NY6MqqvSjWwMATncX4xudMkHL57ZsGLXA26J9FO8sA2
kj17y8Dv2y8I+9i/36hkB5EnTBVc5zCsDrqf7agmYcW8M/r2X2og/pFoUMoQ
I35PN3NmrG0Ilh0DHkzusOOX51SdJLJGoHjMcGH7PgvWrb4jLPNqGBSmH9F9
3U3ERd/6LnF/KYOlshknB0o+eSddrPel8Ky9iJzOWjYRhzU8JRmO/wKuNXlJ
5d3zqEdfUa+dJxPlaC0yyCmz4Y/2v2/7xv+G9T9OKrx7V1FO0by7nf1nRP9Q
rET3JC0W+hT9qPpRF8yul/o9rp1FZyQ2Dh1Rq0Slu9rde9eZMceTcCvOLyPQ
WPLpfdM2EYP9N/HBZ+VQym7Uph1ExJ2GflaKZ8tBc6PniyUTM6ZW27q6OdUE
vJ7VrXm61Fh9qSy4wbEBTBHNtblQIm5CZ6+3DFZAZvLxd5DOiMvoJT39swah
n81YsMFoE/F01xbLfU8EwV2yz9IMyDh2POBV49sG4HG9ZJd2ZwHFmx06wE4o
RY51s07MK0y4N8Yytot6AJJXdv13RZ0av/3Qz7SZ3AKX+ux1gtiY8bD9gFe4
/SDodKdE/cdNjU0czHQV11qgNiP3yOleJvzUNfPit+hBsPsg6xKcuIqy3P8s
/s0NQ9ezjud9ippAf7wSPnEcrkKcVPUs7y8tIJnzybfU+3LQdbclo/CWJfTn
nuSif1oEsueamNa8SMDUyudf5jWkwtYtwxxHYWrsXpdyqPVUK0g0ZY4x6dNg
hbgGuVDdJtDWjS7br7GJTltMSg68ewkx/2Tjy1woPGZygP8ydTfwW7EY/RUk
YdGdIi8FrlKo03q4lHFhHt1RIfteP1yKXjm1XtbjW0cXQmY/xY0Fwo0bkpea
Nugwy9xs7ZZEL4S0+GirR+2g579it00nI+BsI+/7d7dWUOeXZhJd9GN05nn/
OT1lyvy0KVX61DkEt/zFM6hfrCBNL97c/Vvf0JTRu1ZNOjZMkbPntPLd4Fcd
N60hsoOuBje+lXtcAOpZTe4X13dQFN9IWtPzIsgrcKAKdyBhHrgotH67Gtbt
G4OTWMjYmFuKw967CSzIQjUZInSYe0+wz1W3HpB98+jV3ykSFjAWwj3CtfDz
QH6AfdoKkj0Y17H+Kh3lTeKce00seBs/17jL0gEpXim/Rya3kbFOlWprWSEY
akrE3O+kwj7rv6ZOX6yD6/P8p+Y46XANS+t8lW4jGHTeesvxkQMLfak//TPl
D/j6lz55T+TAMXNkCaL8b3hovnvv+VQ6nHBSet6Erw8GPH6nvjm5iA52bsxf
vvsTqZLa4s9+XqDw9WL1PFc5Cia7WO/Pm0UGllPMDgsIGRrHHSEyzKFmQ2/e
6wYYzd9l15AdYsZV4Z6JBbgdLtEGiT6zIuKtXYeWrCpL4GpIQ4WQ6BZq9Lr5
RzApATKLaXMYutbRlkiOqO+aDWy84QulKVxCe9e8tDjLc1DYdenjd9bp8Et5
5t1Cit1gTP+qz0NrHbmN+V7fao+Edu2KImNxWpws49+7xVIFHLE/7rbbbyMj
j9DrdHJJMLZCQmKsG6hvyZBqf+UrdG0/R9D0YQKOYmV9S8NdBOByxOuoLyPe
949t3179dhjZXe6XemIZ/d00Hmp+HIVu3psM1eLYRHn7wyy6alIgRunH4dlL
BMxGs+Ue+LYYWDhjf98O3kH3Cjo8pDCG2h01xb1rnLijdELhOdcfaNATjaj8
t4QKHh+fNm7LQNYCxEsqmIij9ptUsdkUQSS90BOeM/SYh0udcNquBwRiPvPv
BjqsKN5RFanXAQVnYkvKGelwq18eTa5AD7A/sfpIl7yI+jUlTqQ9REiCmOTu
VEvEPEbhqcGBBZAyKJvi8WkLHc0J1zDiTYcw5QECe/IGKh9XkuTS/g45DGJS
Ms9o8LMbFtYnatshsoeTjuHNNLrgfPVciEQ5EhvTMjd/QYXt0h3/zvA0gjur
wLVv0gsoOfmGnM+PLCT+38f5dk0q/PTajZtyDpUU33NKGp6lwTmqs3O3aTqh
6xPjmo8GAQ/dMMs+TCoGBV3gy9Yi4fenQoZWOGqAbu/Rs2NtROzSMNi1/1sF
1LG2Hdtfs4aWxq0ZOcTfgWHJYvrLHxtIfHjw+MKhT3B6bWCBSFmvtvaBb94h
mciDyeKOO+0KSnvuzHL+92t0cvnbvVr6baSrTCXDejwbHjnqiwy5EzCvqhKT
BzOGQtbHaebHCJjqIjsfc3w+OO5naT1ss468xkLe0zumobOfY4e0+bZQwY14
9qmHqeDWSw5oe7uAYiOvSMlalyBCg5bAkvgGOmZnY5YoGQsxhTAZZEyDGQ4y
Voa+rAVzrS61nn467MymK0xr3QGqVkNDYMmIjfmHtbKUBsFCdOb9o5sknOx5
Ztz2RA34B7qpzyitIxllTdEXmpHAK+M3/QTR41MvT3GU2vYDz9aXFsb8GdQV
taq8vlaCIgfYaLSal1E33ZPDY5FBKJqaoEEXQsCHPvu2cxgWw87PkCf0v+cQ
Y2ss3+mMMpT6vv7kjyskLCIpZNX1phyuFvlXLRmuoa6EuElXvdeIicx09oPs
CnJOlle4ZemLgm/6Jqoa0GEqU1n5fiqKX6TuJjwZ2UR/frodu1ISDQZHJQWb
/xJx38iDlKzBMlANXUvfmqLw1Ath8jHFJsj6zKDN2TyD+A6NXcytqECN7xN+
9uwlYmGJVgOxlBJYmhWsbOahwqQec/W7E5VgJtL1dODTNsqrvD7iqJQPLrs+
sD0RX0VpQZ881PhTUVrrakn01ib6aSaivcGUCBN7RnxVPhIwSYpFjelzEcTd
yqjsC1xEt95I2N3UikYOD65+z+dmxAUv5TLlTw1CmaT+qeibzLhLZeJP0J5e
WL7cGfQ2YRO9Om9Ob3ElBgKTgy+z/WHCA308LtGnhiCBZ4mnNJoOx/OLedcn
90K5raPXy2+UxDktthUb3wmzYHzu+k86zNp1YP+Z8l4Yybo3eKSRiJ8KfNZM
UK4Aaod5ZPJgHYncmODGrD8hZ3lrkV2YiI97yrq7MJfD+qmwb6fJrHjdlfrP
1kQd+B/petEfPYd0LMQv1oohJB02xvr9Hy3+0TSQyXi6B07A4L/FBSrcxqGf
9Tm5Ee6/quHeAIpvvJ2aPE/hicrnqR+e2hPxeOXfCe/AMpjbXKIh2iwg3pyc
+ZIvhagmUNRIK4CI315kzX++VgGHHhvnxPCsoLs9B86nRgSjsFjFf+6HaXB4
cCBrgls7ZPS+ex2vuIOKLZ5y7kimgg86eu1COgs+PHmqjU9zCIZ//hFeFiZh
Ja5b7rqoFM7u7doOfsqKL2wH9SwxDYJInVnGVattlEjQFY25nAwHI8bqIxQI
WGK/1PWboYWgaSwdejpyAXk+t+ebk0hHvGzCFJdnw1cXY3/hrd8wfEdDhfcF
LZ7kbb/po9kFMfd51F5W0mCPc6X09XZNUMfyyo07kBq/6Q7BY7dawdx3ZcvB
kwGfsNkZU33eC0Ei8pNGoyS8KWMtN9RYBEJGyPrgD1psNKXtKyrZBTqsW+rv
Xiyjc9m0Jb3BYUje2Uty6h4RL/WuMD5BBXAkU+hE+CwVfiRjrGhS0gjnftYy
PQxYRVHdvJcvpMcjCW8jJNPNhpOqjI7pcrVBqv1dKot3RExvtXSLWFYC9y7d
VrWrXUNrLBRsrwyAgYFxw9/rVDhQLbBDQKIJvsqrOeV+20R3VE8RbstmgW3H
6pef////q3yGfcr3Coj/SNNo950e6559anrk/ABU8jUkVLrvIDOhlPgzShiO
Hurxi5Qi4VYsONR4thK8LuieQmgHoY5FQ3X+HKCq3xEK8yRirwo7ar2NUuAx
SGEsoNRrp2pRO49MJSyUPndtKmfGaooCpeGXR4Comzl4cW0eFR//bnCKMw09
ulIeHddHg6k8u1ocfDrBQIXFyIHiuwWPOE8PQw5wTVea8YzQYY/hww/Pz/ZB
3cWprqD2FURslXbX1rFEC9Ndc8WfaXBdiG7K4cB2ODTP1flfOAkLRzdWytyp
AufLTn4NXyjzoDSeUze+CBZdBBT7XmwiPWp6uXd/MmBePb3nCQ09VqfLO3tI
qx/+/jlQtA/PodMVV4ILGYpR/WzfWq8MAWeof3XhV8SwckbcgvMlPb5Xxihl
ktwOFVQ6+Qrr0+gm9e+mrAulqM/PU3CRixYXXPEL04hpA5MveW4xZbPo8IfB
eT/nUpQSx/B+7MImkj0jf6foXSR0Nh072KoziyJvPO/Wo8eoJPU/HSN5Okyd
M4OD73eDTf+1a9toBXlHhldr7LJDauyx9ZIXGLCmUo5X/NduoH8rKuoSv4wU
qjXk0GYGGpim8ndl2UTlcRyWs7+i0IyiUNnXpB3UGEY3IxCEoUnGZql3Fx3u
nfVtirzdA8692XwZVrMo0zj5g+K5MuSTJWevo0qDhxWO6QY4tgF9msSBjzuM
uJpT9WaZazf0a/fVJp8m47DMe78ONzXC5o9W7V3yjDg66HDtTechoDlUcFP0
EyeOzD37sLyOst96v3TVW+fQbUJxZciLEmR6mDVQ4QgNjhadXRBbaoXU1cbm
gMlN9LK/ufdUWhbUSt15khRKwuVFsR0M76qg4r+B/sPCi0ijTF40UYiynkba
lvSLTJhbIcLThNgHK+2cMsI7q0j4c5TQ+OYDpP6fT2cFMwNmlIvRLAzoB8H5
8zx3nhKx/sKokBdFm8QFtjtzDtDhi4JXlD329EDj1uj4hWZafKj4uO7Rgz3w
/Ylazcl8ItZK4TWWNqyAradXJlVJsyj+wapqpmcpCs4+FnbyBxG7c7ytM53O
h5wiet5B/VVUxK33nnDaHd2q/ExgZCdhd5ma71M1lPy76vBflAoZJ1v2R25w
NgL704E2XS4ili82C9adRVB5+6LpkwYi/mgkOTnVUQnGU7MX62w58Eqdm/K0
YC8o7R26+fEoI47KZJDFFL+KEIlkmzEhYbO0+6R460owj74u2CizgTjoExL1
rn6DgZUrds/WmPDcunhkdsEw6Ft7l3K9XUQsAr3uqgZpSPPBuZPYkgr3UJNt
W9/Vw/Gem0uGm5PIldnf7nBXKTK7rpoNkzuIl+lYwb7aXGhjOr39muLj6XLq
zSlpTaC58OXSy3s02Ef+7PVpmnbYu87gYXeShL93cr9w8yyDaCZYPd0/j+YH
x2K7H5eg0+yXLRPqFtGRXq/YT18S0YIkzbKwBi0+KWLzOaS6C9geN44KPmLE
6iY3GOKMBkA5z39UsIEBX7h+POKn6yDkCNxWM8leRS9eCdb8OFCEDntZhU8p
EXH5Zc3BgLEC2Ns7kCRwloi3hcsfa1eUArOhP43O/h1URmywIKbnQ+G+qfTj
fgyYdi8PLTNbHRjQ/za7srCFJl4OPu1USAKS4dWPuYuL6IWJX/qETzQS3Pid
7uxGwjX3Sr7+3qyEm2eudKr30+I/ycEXApVbwPd2Lao3o8dPM3WDXCh+N8r+
neNgGAH776XRDG8sgX+Ft7z2G5KxeNDfIos9TSD8d7cnuraFIuXcmtuLMsH9
1q0Al0BKfBtuv8s8ioE9f6r1vSwVPr4hG3MxrxbOdsWoDl9iw4a/+YuuevbD
ibNhi9/4abD0N5aO6rxWUDn7WTuqiA37VyjnOe7/A3IpL8ykKfyALd4ciVHt
g4i2UhfB4XlE/fvA+ezEMlSxNijy/fk8qs2aPtyZmY+GXgy5HRnZQBbafHIX
6/xgnKfYmZafGd89W252vnsA1Kosvm55bSPXz8F7xD/+gnJ/rvdJOvR4uGOb
fMKgFgQUtcL78xkwnauxW9KPXnjMlSF+c3IFeYkqi90zTUX8SlKZ5or//z1R
iVe2dDtMsMmMRzrQ4GbP/eIFyh0w9qLOHoJpMDeTpUB/ZTPU0UclCfBS4/ca
r9UT6lsg6mHXv4lfG6jb4Il56SM3lGA7H6zGtoN+3FRpdM/OB53MRZ8w7zXk
7VPGXLNuilKMM1k2z1PhXQ+HO++Q68HR5/gemywi1tuRtO04lQd5HiydKrcp
/Fh621ydowIKG40V6fy3kcuPY0xvZZMhM+vgsPxlZtyqcbi/q2QQbvvJPiAo
bqNr9aEz5ncTYeRPwTDRZwGJCOvS0zQhFFZ6ntfu9gIK38Udt2dfIQpPGWhJ
aV1EyQxil58vlqCDN/y8Ey/RY/7RjfBsjXYgf9t/488Tavxl9KDPXatmcFqW
xvkcBMzcfjK70B0DQZ13PPIvAy7pNuCW1xiETbWBj2LZZFw2pv/pNmMzlDDZ
rr99u4M2P4S7PInHUPdEa2/ABhPWjjb2XjXtBAdJ0/f3FAm48sX6s/jMItAS
t3Z73kODNfzuXdm11QSpjgxUCzxEvEiV3yz7tRR8SS1KTJR8TYMnF8K0ikDP
2L59cXoDDXdKn7nwKw4i9EJrFjcWkXfKPIO8ZAoaVQqTflS5gt4r+89IRxSj
G0XiDff3b6K4B5en3salwFGtvT9JXfNoYd2S5TDOQNeHznOc5CDj5wODbVPh
dWBKqNuXXbiJgn/8vcEs7wGc12z4Bq1JuLRCmkdYuAbMJYlB/ykxYu0Thqv6
lweATY9W7PHQNrrBWnRhutIRxRGcjKxuLKFxUvSB01xF6EpmSFRQ2g66Mq9z
pz8BQ/uHLbv9PYz4XLHE9IUzg6Chvtti1xd6nMoUAXHPu2Gf0CG/4rh1tB3i
2y8rnAgpJzmClDQmUcQNvnzC8RKUI9tp/cuCBicLiR9b/68D6n3v3+x0o8x7
z952zwoM3KG1V5gO0uD3145pPH3RBixGb2cHxin+G3TO9l1jNsr7ez5ThjI/
ctpZ+oXZeyDhEMO7ubYlZBtjYwAFCcj80lVR6w4ClrWSsCt9UgyH+q33tjfQ
4fu3jluc2eqGC/9xHVXlXkYztFU30E4MepPS42ybS4P5Pv/noU7ugAO7rlSX
aiwhWV7jUt/6WPQ4L8r0lt8KCpevnLsmlYCa6Biu5p3cQO9NJXSeX0iEARHt
zv/fR98aas56JOMXSqbtKPr3kgpz2MtK9xPqwXu3QkricVrsuvsVs+KxNgh+
OmS5ukTA0bk2apmPMqAu//acvTUZy+fSGQx1N8IX9imKO1DhZSamyWLPGjin
j709JVfQ1aBJHqvfbujUpwGrkS0Sfn7NbSizoA5Gd0UYpd6nw0XhinH32rtA
WtosaphtGX09n9zaxheHjIvFcpVadtD7eAXDgRY7dDPexVJzmoyfkEzaI4Qa
4AR1dsKX7R0k35c4rnY5Bhw8mlj4/cjY+SBtxWWmZpg689NbWJ8eqzK8rnbo
64eEpbxPnv0knPBKxEbxax3oKtzM/yW3ibSPOA/+fJwBw5w0cKCPBfdu5G+k
fBqCgDW5Oct7ZPx5lfroPesmuBUkEGr+chsdoxG8JDOWB8XWf4Y1pteRj3dB
b8qMGgQ0Fl7DItuIlf2msFhBPqSOCoScD6PC5x4QpL13N4IBW3gsfc0S4gsm
HHEQzUX+3CxHpt6TcJcIzzmpxRp4aFxrs+/8LNqTKX109V05crknKCNowIyV
l3lm7vOOgH/P4FAZP6X/BySHqvrXwb2djNMhnJx4XxnDAVPxLjhzMEdH7soc
Ms7w8hc8WI6MpvVQ/BdqfKNUm3MhoxX4jrbLtC1QfNq0+ITxE4yiyv5tvbtF
wr80/kkeqK0Gml26Fk9VyZivutp0ndIPiILNrxmqqPFj28smQuatcOJdBRcP
xef3CAxezO3MhjM9r39zUubppyR6j0ThcmjrH/XWzKXG5A9T3i+02mDovtJ1
Ln4mLHpIcVmksBemVYYDDaXp8bby/hIf9X5QMGRQ0r1Li7fn6PpGKtvgb6PB
SMAfyn4Ha9LxSGfBnEvIb7fjdLhLUzZBQbUbKk0WbmvrTKBHhqJp/mqVaEQ8
U6Yki4DlvuToNBzEkDnZLBClTcIm9tFviger4ZVxaV/Xq030QUUlOtY1FZ4J
djYeMKXC8Yk+xF8PG0BmafPlkYQ5RBjQvn/9aTn6Thh+5L25gjx3b5dLuPii
mt0jI8zBG0jqmHMGQ0sMXHFQjxmfZ8EPlQ8a5FgMwAODlSptOjoc42bW13q5
G3b55pjs4mHADGnC++S7WiHp/E0dswIivkm4IKrhVQzfG8Y5pn3ZMN4SGnj8
cwTyRKT/XOwiYu/5L7cM3CrhYjoa8HtLiWfdhTuhFRXwtcrhVz/aQC1SWSf3
k7xQ9EDrmGf7JroeePBj7GQGVOsWPaMtJmGqO5mhr8VrIFajdtt0PwMWpupi
o77VBSb/PNYvzZLwV+evzDJc1RB0PXfy+yANzpeIobKixPv7v/RsHZ45JDbo
2dVXWYKIWtqpnmxEfJg9osXkWDEoiBwxkb9CjQ8Jbtk9EW6Eiha9bcdLBPw8
gX38YU4cnKssiFyQ4cD5Eb9z5Uta4M/iWT9agS0kdmJri7U0AlZEVZ9WCjPj
1A5lUfEvg5BCqriav0CNlR4/i/Lob4OHpz1SzSj1x7P9Va2RRxO2ONup/m5T
6nsiSqt6tBlMtk4Vq8gy4221jYDDbf3wUop6IZOBCmNTJl3ywVIQnzW1ltq1
jopGVWfee0uCqWdgLAeFb3RVz5lElnZBlaDqeReZdXRjWMbv0Xc35Kr+sagz
kYjb921Q78xUQOcj0hFRCr+LdaVsOx2sgHOzkak3ach48lSUjjW5Boy/Kzs+
raXCyp6pWfLz9SAQYZwos5cNJ3LrW/b/NwgXTp6kRvVk7GXQaenu3wSJ13WT
T3JRYW3ZP7ivpg4Wbu8hmbCvIMXD9kpvH8egi+1sf+UHKP0ix0nt0c1w5MCj
W+OosYoOPPo0tW70CWnMza7LMTJi36wD9uMzvfCKcImR8e88+rs+GRE2XYIO
2K6nJFzdQSmqx92KihDMOO/+dDptDYnFeoQIrPoi1U3usunji6hgh1eTKzsO
MV6PXzoQzoLP27xvPVneAU7Ml6Vb/ddRULzA2G9HM/QwL+aCFGkLhSVetApc
SgGrF9x7lf8w4uyo04QvBgOgNLGe0axNhc2N/zn+Z1ULBTerJq5IMGIb5vSH
DJT5m1K8GdguTo0NB6/NmT1tAanz00eF4xmx17mAzFT/IdBbe7VY83s3plm1
XWslj0LBvFt9fP0mehL4adZTNRM2bCbyu2gIWHU9evhBdCH0555c9Hy6hKKT
/brUL6Sg9RMdYxHuVHj6366zHxPKYNTqFJtC1SYKfDQsx677BQ4bL0nHvFlF
P/WvxAYo+6EjGfZm2rso/P8xYPfUvzR0y6JALlRsAT1buPOz5U8J2noqre03
R4U9NRhIcTeqQShD1Jnh9gqyCduwkorKQQM71xsOJzFiv4Uv/C5xLRASai88
SkuH+8uOCfDd7gZdbYM4+LyCTnJx3W/SS0PntO0blQ/RY+ehQMEBt25Q+Xa7
KkJqHundu2OpGJGKXGQ1i1s82THPyookS+EQ7FuNPcEvuo7ypC8Lrd4Kh5jD
gk3azFT48cdzSQnalaD2h++3o8gaklJ7UWOq6IWyKyJdzipPo82rKq2a4xUo
+J3RULovIxYJOXFf6tsQZDq8qWV2X0NL88Lc/66EoCHzj3f6/Mm48nzDsV8S
DeA6V0buWZ1D3mulkU+yMlCoG1NucjUZn/V85pp3rgUqOfIbJvQo/Scmr0OE
twwa5n35bFjpsEDRyxtDGe3gpyny6U08Ha5YlbbPou4BmkG1m76xBCyYVp7o
uVIIbgd+7b62RsTn8px+XKAtg7ZIs21RCn90nr+wza0WgSKvRKtJBC6hyK59
5FvjJSjx2j1XDwo/ctfL1mU5pQF1HPHZi1OrSOf+wsk71TbooezIeCalP71P
SGI8ZdQJp/GxUufIFTTrcuHJEa2fSLj/YKlfBBG/ePpXMEmoAkJHdH87/1pH
NfzuN6jrf4DByIs7jJT48d6icmr1AXiYxVyQ4EuNC6/dTUn42gq5Y6JhBXrL
KLP+1J7WGIw8wvTaAkbX0HjeIc+uhSy0GHO85Hw1HVb6lCP61r4BLPN+7Pxl
WUUmM00THy88RmkVRddGNMj42JmDE18G6uFS+M3ziZR8eW3QpFPSMQRf5z2u
q4/SY6dXzP3g2AdcOtYj1lHUuEy3WQIrtULBXSHvqIFVtFPiGT7V6YuoGktV
Cik+IB+ICia9MZItJARJJBLwz+fwzU4pBXoe6vjaezJgngA6pzcW/cBMOB/Q
yUTA/ziT77BRnjt2H/7maceIp1UNpA5S9wMj9T7XHmUqzLi9aDag2ACO4jEL
Pp0seJee9eHDcv3ANBDxDgbYsc7oDet2Uhv4sRePN12nwl/f7A2OFaqBT0de
x5crLSH71wedSVU5qJDXi8XlCA2mr1IqIyS0wYplRiWm1Ou8i/2LqYMZ8HiQ
v0xKnxbTvks0JQl3gjPW/Gb7YQqxarOICLyoQtQlzKtakovIur6vm5mlEC2l
CA93niDglHGHXyydyXCRn2lN3XAdaR4uoso++xPM19/YLPyk+LXt3Yw7ihHI
KWKOq9efFofBwQvON+rBujRM9sOlKeSZsG6pQFOOPleMRTp/20C9svkr9wfj
UNiGp/tFGiY8tWv0wSTrECiFJLVck1hC/w58S3wYl4WaX+XURVxZQl4qs2ek
3EuQ3cuzQhPqGyjvAJ92T1QcGmkqN5t/P4fWOKSu61/IQPWyX1MMQ3aQzn85
D77ZZYDfy5DvAfHs+N5Vh0fFbB1wT+NQnNp7Mo43HOIaf9sErxuq9o3u2UKv
L0wlz25HgN2y/dguPWaM24uV5/KGQHzSfTlDZRXt/o9D5dgwQr8fTYcw1Ewi
htt2X/auVqAd3X6x2cJpdLiIbTKcpRg9sN1oYaHMl+38Yxt9082gfqP1/qDn
IrKp5D8UuqcUMR84yuoYsYhipN+IRTjHoVrlI6pqnWS8q2Ty0NGUJvh1jXfE
kGEVyetaqN1xj0Y+VQ9Kxj/Oo+SBmvW9kIXoEiq6/bXn0YmmJq8MrQrEoNsb
mK/NgO1j2fe55fTDyIWJO99LabFZ9fHovVsdMPOSIfrvHXq82+Ht5XzXNkiJ
NLutN0aFVc0UDsh71cFfuiM6TrVrSPNUuRn14etwtdm/1Gp8Ej2WuKhaZ16G
MpysIiNe0+Jpg8aVJ4tNcKbNuumnDS1+ZKTIF0hsg1uCQiKfq2gxY6gOCQ63
QF7gTD6PGzPe5PaVfMfYBYoJShuaGwRMoj6vfudjAXj5ThaT/9tGsra+XrIn
/NDfwhJF0TV6HFu6NJNZ1AWZd9UjxK220eXdN/J91j8AbfpzFocv64i7ltH0
U6MPYjQbPZPARIVFtOSrTl2ph7tJlu/bVubQ2z0EKgeXIqQs9sj5554plPD4
+u7s5xUo9VUUV/SJNbTRf43NsDkKvSCKLcSFbaDvHxgT+CfigZRTFXvYax3J
XRmpMVp/DonV+qHD5ctIg17n2O/p78j3SZ/NC58N5FpRemrL1RcEr7ZKq96h
wcv3r0op7u+AKf7qPJO8dfR06eL5hxavkLrdfAspdBWdNZ0uTom3Rdc36V0T
VanwZ75DX+02ysB+9y87sYV1FDNdctaQ9gHsJJok6jUuIcNfeyw7rQqQu+tG
/VOTVdSQh+pblTLQv19aEkzfFxHPQs3J9SOJ6FuZ7FubqnVUTXSx/SQUBUcI
yQf+NtNgm9WkWn+/RnC58b0hQJSMiT4PYzIXGsFWymjvOAsVPkpnuHydWAnz
NIIRoptMmIt/lY5htQuWGutV/LS2UNTdl3Jlpc9A9SJP5qj6NrrjWvqY6JIP
sPri1afxbXQCT/2i/VYIvwVKaUM7GTH3hmlm95V+qB878Yd5LzVW0BYWj6ys
haMXT5/YmSPiVAllAb+mcpComWRX8GTEoUaCUMHbBqlR7at2fvR44ZavpOaf
brDf6+MBGhz4XCt3z4RzD/Cz1zq96qbwtADro+7ZSjiH7DVCvtFjn/+iTEVE
e8H2cfDe/XeXUc8hs23elR/o0f/vAQtdR1nxq5Z7VmNQrHCx94MdGtzPqhp6
L6ITJN69OB3iN4umAh77K/4tQ+Gv5anYS1jw+MdklPq4Ay7IyIgc2KbDUsJy
tfxmPSB8jKe1mosRP73Gshy1uwteqCeEaEaz4dqGwTpO8jAci/9XT0Rr6Og1
t+vfliPgxq6vrYrnFtAPah0G994YdMgiZa81pd5Xw1j3piuVoliqmjH7Enqc
eUpM9PaHAfg3ck7PYJgOZ71mTtpya4UGkW6XjPxZBLMvIg6JlaLh7NmvgTsr
yPr7sfaR7ARk+eY3XdbPHSSmNy4m6kSJf2OSU7jAPFK4HEbqD6xAywMZDAo8
9FjWn87srGofrI4H7cv4bxlNMNpUkVaz0di2093MWTL2PROScCC/GZI2uy59
YOTAs1+O1LXe+g00fjx6f04zYbPC6n20D4Zhvsvl36u9RDyXq/v2wrcymPQV
/944zYIH9XvzD3wcgQ/JDAbnVIn4CHXknXaxcjBQ/P2VHLGJptp20kuiU4A7
Nljh9lECll1IkKO2LwI2FGL8kJ4W67kfo3qOO6FILoqu/TsR9zpL1P8UyoNt
h3p5sw4mnB7Q5BV3cRC+d66XBufT4UXD6JvStn1wZ+hdw8QeDrxXaPP2qagR
+B+sHF6F
       "]]}, {}}, {}}, {{}, 
    {GrayLevel[0], PointSize[0.019444444444444445`], AbsoluteThickness[1.6], 
     PointBox[{{-2.803315181928024, 
      0.6890510528715226}, {-2.0826145704153336`, 
      0.016881698868516114`}, {-1.9480063445387437`, -0.47536115519257577`}, \
{-2.8646987480035424`, 
      1.4594913827698772`}}], {{
       LineBox[{{-2.5861610312889782`, 
        0.6890510528715226}, {-3.0810939543835048`, 0.6890510528715226}}], 
       LineBox[{
        Offset[{0, 1.5}, {-2.5861610312889782`, 0.6890510528715226}], 
         Offset[{0, -1.5}, {-2.5861610312889782`, 0.6890510528715226}]}], 
       LineBox[{
        Offset[{0, 1.5}, {-3.0810939543835048`, 0.6890510528715226}], 
         Offset[{0, -1.5}, {-3.0810939543835048`, 0.6890510528715226}]}], 
       LineBox[{{-2.803315181928024, 
        1.1995399939231408`}, {-2.803315181928024, -0.4078795204573184}}], 
       LineBox[{
        Offset[{1.5, 0}, {-2.803315181928024, 1.1995399939231408`}], 
         Offset[{-1.5, 0}, {-2.803315181928024, 1.1995399939231408`}]}], 
       LineBox[{
        Offset[{1.5, 0}, {-2.803315181928024, -0.4078795204573184}], 
         Offset[{-1.5, 0}, {-2.803315181928024, -0.4078795204573184}]}]}, {
       LineBox[{{-1.903534816642733, 
        0.016881698868516114`}, {-2.3009150373412157`, 
        0.016881698868516114`}}], 
       LineBox[{
        Offset[{0, 1.5}, {-1.903534816642733, 0.016881698868516114`}], 
         Offset[{0, -1.5}, {-1.903534816642733, 0.016881698868516114`}]}], 
       LineBox[{
        Offset[{0, 1.5}, {-2.3009150373412157`, 0.016881698868516114`}], 
         Offset[{0, -1.5}, {-2.3009150373412157`, 0.016881698868516114`}]}], 
       LineBox[{{-2.0826145704153336`, 
        0.47367812002812204`}, {-2.0826145704153336`, -0.8482583214823279}}], 
       LineBox[{
        Offset[{1.5, 0}, {-2.0826145704153336`, 0.47367812002812204`}], 
         Offset[{-1.5, 0}, {-2.0826145704153336`, 0.47367812002812204`}]}], 
       LineBox[{
        Offset[{1.5, 0}, {-2.0826145704153336`, -0.8482583214823279}], 
         Offset[{-1.5, 0}, {-2.0826145704153336`, -0.8482583214823279}]}]}, {
       LineBox[{{-1.8171036540210694`, -0.47536115519257577`}, \
{-2.0986628028149763`, -0.47536115519257577`}}], 
       LineBox[{
        Offset[{0, 1.5}, {-1.8171036540210694`, -0.47536115519257577`}], 
         Offset[{0, -1.5}, {-1.8171036540210694`, -0.47536115519257577`}]}], 
       LineBox[{
        Offset[{0, 1.5}, {-2.0986628028149763`, -0.47536115519257577`}], 
         Offset[{0, -1.5}, {-2.0986628028149763`, -0.47536115519257577`}]}], 
       LineBox[{{-1.9480063445387437`, -0.11299514093911103`}, \
{-1.9480063445387437`, -1.0493479512223112`}}], 
       LineBox[{
        Offset[{1.5, 0}, {-1.9480063445387437`, -0.11299514093911103`}], 
         Offset[{-1.5, 0}, {-1.9480063445387437`, -0.11299514093911103`}]}], 
       LineBox[{
        Offset[{1.5, 0}, {-1.9480063445387437`, -1.0493479512223112`}], 
         Offset[{-1.5, 0}, {-1.9480063445387437`, -1.0493479512223112`}]}]}, {
       LineBox[{{-2.6886886585750602`, 
        1.4594913827698772`}, {-3.078449165414872, 1.4594913827698772`}}], 
       LineBox[{
        Offset[{0, 1.5}, {-2.6886886585750602`, 1.4594913827698772`}], 
         Offset[{0, -1.5}, {-2.6886886585750602`, 1.4594913827698772`}]}], 
       LineBox[{
        Offset[{0, 1.5}, {-3.078449165414872, 1.4594913827698772`}], 
         Offset[{0, -1.5}, {-3.078449165414872, 1.4594913827698772`}]}], 
       LineBox[{{-2.8646987480035424`, 
        1.890104433351953}, {-2.8646987480035424`, 0.686867504602637}}], 
       LineBox[{
        Offset[{1.5, 0}, {-2.8646987480035424`, 1.890104433351953}], 
         Offset[{-1.5, 0}, {-2.8646987480035424`, 1.890104433351953}]}], 
       LineBox[{
        Offset[{1.5, 0}, {-2.8646987480035424`, 0.686867504602637}], 
         Offset[{-1.5, 0}, {-2.8646987480035424`, 
          0.686867504602637}]}]}}}, {}}, {
    InsetBox["\<\"1\"\>", 
     Scaled[{0.01, 0}, {-2.803315181928024, 1.1995399939231408`}], {
     Left, Top}], 
    InsetBox["\<\"2\"\>", 
     Scaled[{0.01, 0}, {-2.0826145704153336`, 0.47367812002812204`}], {
     Left, Top}], 
    InsetBox["\<\"3\"\>", 
     Scaled[{0.01, 0}, {-1.9480063445387437`, -1.049347951222311}], {
     Left, Bottom}], 
    InsetBox["\<\"4\"\>", 
     Scaled[{0.01, 0}, {-2.8646987480035424`, 1.8901044333519528`}], {
     Left, Top}]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->False,
  AxesLabel->{None, None},
  AxesOrigin->{-6.7668792358862735`, -1.0854435663942055`},
  CoordinatesToolOptions:>{"DisplayFunction" -> ({
      Exp[
       Part[#, 1]], 
      Exp[
       Part[#, 2]]}& ), "CopiedValueFunction" -> ({
      Exp[
       Part[#, 1]], 
      Exp[
       Part[#, 2]]}& )},
  DisplayFunction->Identity,
  Frame->{{True, False}, {True, False}},
  FrameLabel->{{
     FormBox["\"Stretching Factor\"", TraditionalForm], None}, {
     FormBox["\"Fraction of high energy photons\"", TraditionalForm], None}},
  FrameStyle->GrayLevel[0],
  FrameTicks->FrontEndValueCache[{{
      Charting`ScaledTicks[{Log, Exp}], 
      Charting`ScaledFrameTicks[{Log, Exp}]}, {
      Charting`ScaledTicks[{Log, Exp}], 
      Charting`ScaledFrameTicks[{Log, Exp}]}}, {{{{-0.6931471805599453, 
        FormBox[
         TagBox[
          InterpretationBox["\"0.5\"", 0.5, AutoDelete -> True], 
          NumberForm[#, {
            DirectedInfinity[1], 1.}]& ], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {0., 
        FormBox["1", TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {0.6931471805599453, 
        FormBox["2", TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {1.6094379124341003`, 
        FormBox["5", TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {-1.6094379124341003`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-1.2039728043259361`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-0.916290731874155, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-0.5108256237659907, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-0.35667494393873245`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-0.2231435513142097, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-0.10536051565782628`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {1.0986122886681098`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {1.3862943611198906`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {1.791759469228055, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {1.9459101490553132`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {2.0794415416798357`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {2.1972245773362196`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {2.302585092994046, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}}, {{-0.6931471805599453, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {0., 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {0.6931471805599453, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {1.6094379124341003`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {-1.6094379124341003`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-1.2039728043259361`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-0.916290731874155, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-0.5108256237659907, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-0.35667494393873245`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-0.2231435513142097, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-0.10536051565782628`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {1.0986122886681098`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {1.3862943611198906`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {1.791759469228055, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {1.9459101490553132`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {2.0794415416798357`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {2.1972245773362196`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {2.302585092994046, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}}}, {{{-5.298317366548036, 
        FormBox[
         TemplateBox[{"\[Times]", "\"\[Times]\"", "5.`", 
           TemplateBox[{"10", 
             RowBox[{"-", "3"}]}, "Superscript", SyntaxForm -> 
            SuperscriptBox]}, "RowWithSeparators"], TraditionalForm], {0.01, 
        0.}, {
         AbsoluteThickness[0.1]}}, {-4.605170185988091, 
        FormBox[
         TemplateBox[{"\[Times]", "\"\[Times]\"", "1.`", 
           TemplateBox[{"10", 
             RowBox[{"-", "2"}]}, "Superscript", SyntaxForm -> 
            SuperscriptBox]}, "RowWithSeparators"], TraditionalForm], {0.01, 
        0.}, {
         AbsoluteThickness[0.1]}}, {-2.995732273553991, 
        FormBox[
         TagBox[
          InterpretationBox["\"0.05\"", 0.05, AutoDelete -> True], 
          NumberForm[#, {
            DirectedInfinity[1], 2.}]& ], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {-2.3025850929940455`, 
        FormBox[
         TagBox[
          InterpretationBox["\"0.10\"", 0.1, AutoDelete -> True], 
          NumberForm[#, {
            DirectedInfinity[1], 2.}]& ], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {-0.6931471805599453, 
        FormBox[
         TagBox[
          InterpretationBox["\"0.50\"", 0.5, AutoDelete -> True], 
          NumberForm[#, {
            DirectedInfinity[1], 2.}]& ], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {-7.600902459542082, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-7.418580902748128, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-7.264430222920869, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-7.1308988302963465`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-7.013115794639964, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-6.907755278982137, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-6.214608098422191, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-5.809142990314028, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-5.521460917862246, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-5.115995809754082, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-4.961845129926823, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-4.8283137373023015`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-4.710530701645918, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-3.912023005428146, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-3.506557897319982, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-3.2188758248682006`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-2.8134107167600364`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-2.659260036932778, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-2.5257286443082556`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-2.4079456086518722`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-1.6094379124341003`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-1.2039728043259361`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-0.916290731874155, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-0.5108256237659907, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-0.35667494393873245`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-0.2231435513142097, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-0.10536051565782628`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {0., 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}}, {{-5.298317366548036, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {-4.605170185988091, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {-2.995732273553991, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {-2.3025850929940455`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {-0.6931471805599453, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {-7.600902459542082, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-7.418580902748128, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-7.264430222920869, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-7.1308988302963465`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-7.013115794639964, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-6.907755278982137, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-6.214608098422191, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-5.809142990314028, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-5.521460917862246, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-5.115995809754082, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-4.961845129926823, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-4.8283137373023015`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-4.710530701645918, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-3.912023005428146, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-3.506557897319982, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-3.2188758248682006`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-2.8134107167600364`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-2.659260036932778, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-2.5257286443082556`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-2.4079456086518722`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-1.6094379124341003`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-1.2039728043259361`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-0.916290731874155, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-0.5108256237659907, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-0.35667494393873245`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-0.2231435513142097, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-0.10536051565782628`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {0., 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}}}}],
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->Automatic,
  ImageSize->Automatic,
  LabelStyle->Directive[FontSize -> 10],
  Method->{},
  PlotRange->{{-6.6747579030407085`, -0.7789926009245803}, \
{-1.1006412456098618`, 1.9388945975213847`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {0, 0}},
  Ticks->{
    Charting`ScaledTicks[{Log, Exp}], 
    Charting`ScaledTicks[{Log, Exp}]}]], "Output",
 CellChangeTimes->{{3.6099976317422857`*^9, 3.6099976503551292`*^9}, {
   3.6099983284667587`*^9, 3.609998374294106*^9}, {3.60999840535879*^9, 
   3.609998429155053*^9}, {3.6099987361330442`*^9, 3.6099987835390663`*^9}, {
   3.6099988862582293`*^9, 3.609998889640345*^9}, {3.609998921345643*^9, 
   3.609998927517172*^9}, 3.6099989936026077`*^9, {3.60999916045757*^9, 
   3.6099991957694283`*^9}, {3.609999238325061*^9, 3.609999257412656*^9}, 
   3.609999372644685*^9, 3.6099994631101847`*^9, {3.609999505293453*^9, 
   3.609999570453828*^9}, 3.610000595110866*^9, 3.610000672948403*^9, 
   3.618268527347114*^9, 3.618272570395664*^9, 3.618272637773692*^9, {
   3.61827268875985*^9, 3.618272717921042*^9}, 3.618272748799501*^9, {
   3.61827281697497*^9, 3.618272833806262*^9}, {3.618273065077739*^9, 
   3.61827307827389*^9}, 3.618273108356925*^9, {3.6182731426733913`*^9, 
   3.6182731602035017`*^9}, 3.6182733075477057`*^9, 3.618273393227872*^9, 
   3.618273458384314*^9, {3.618273488829852*^9, 3.6182734923642073`*^9}, 
   3.61827675456243*^9, 3.618276877246423*^9, 3.618276925917322*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[Chi]\[Kappa]ListPlot", "[", 
  RowBox[{"sample4096", "\[LeftDoubleBracket]", 
   RowBox[{"All", ",", 
    RowBox[{"{", 
     RowBox[{"2", ",", 
      RowBox[{"-", "1"}]}], "}"}]}], "\[RightDoubleBracket]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.609665222536592*^9, 3.609665224992021*^9}, {
  3.6097582700910263`*^9, 3.609758272116159*^9}, {3.6099729908514338`*^9, 
  3.609972990971394*^9}, {3.6100005754660063`*^9, 3.610000575688229*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Small], 
     AbsoluteThickness[1.6], PointBox[CompressedData["
1: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
co9vXx7Uz7oQlE2+ZjO+4OwbPo12qeHrfwQ2813npPyQ3hzc32B8ZSkAJTPT
rE6MQ+C/l3LJiWqT1/Xs5CVTpzAzb0kTEu0JKevP558lT+I+vcLO2DF31EmJ
7cpomQKtu5N+3UdPyDlO5BYfKCRM7pS+suDRBRfryfP1Ls14e8CL+JNCxsT1
xaetgd1I4w2cTF1zh8D8ZRmN4j4ExwjwbHCSkBcadiuUs4gIfn+bdXSHGRJK
R3aEkMYgT+4MiuSlYGv5BaJgfwcy/ra8qq12B01z/3vGe4P4tC3oye3/+/bh
dVrh6hk8TUvZfabYG3tVZH6+jW0kIilmMROmihjTDBy7lHkDi29C1r8YmyNG
dYV6JaaOcDg75a0wrYH8rAqmD7OLaHDbf+xaWzDefXN+8YrTnaBS4tTrgDl6
f6V/UlCYxLiUj/raih9+DmU1PftQjamL5d0fXzrhaICz6O3bL4m078zuoT/M
cTrzIU/Snjpi/KgcW9svXTz73LnT8GQGUcj2s/7XWVNcJHpetUingf5yVuK8
hQ0Mj++mP05fR5giypRUqIMjHf942zs2OfPZ816VBVPc3Tun+Yy0OV8Xmsg8
FgOImloYmIoWg7ZX5cHoQzus5Jh+dmkfRaiQr+8vKVcwlVv0/9HrBz7+3vpV
jYK2GkG+dLYiovdDwkHuAF0kH3R+3pVST7SvRzKdPqCLPJbVjaOTKsRqI498
qZMVKr7ZfHfmmAPHb+avAX2+yAjVmdb79gSFXy5a9xVYYLFlIGJrQAMRwDS3
e0RHC71y6rKi+mNQ7To4yDNBwRONbI2J1/nQ3uJedmevLfwu29puyWzAlJr6
pahEG0wwzzmJB6Yj7o66RbufBaz3t01QzNKJ/EMaenxqFlgr/bN+Qj+KSB6m
5q9PNUbuFbuAGKM25DHQ7r8Qvum/L3le2m36bsXLuBBOihPmw3bH/+p+DBv/
7S/GckzwiUz9g2+z//yZ2LjekrzBadlZnffhLUb2CY2vJLvjoejggx9LZejb
o57/iMEa1/hdwxZ+VxIWP1ZIQ4GbfUSnFBkVOw1TMQGToAE3zN1YR/iPduxT
U9MNmyEhyJbH191sAJcL2N+dN/dCWGKvrut/rQgl/hO61GkHygrDGDNTN57v
K+bz1yKBeJMneYWtmhB/PXw5rPUarhg57/g7PwRVV4ZT8hm+cLfaNneJvht7
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
+LUtmczAEX6irvxXAcEpfkXsSIAy9Ew2Oksn3iLxVX/vst/28ZTe4C8iC6B+
8+Oy+j0PPCNX5LQUbSW4ZNm8VkhSGB8XeP7f2x50SqS1a0o446+YAdlRmi7s
iBATldyuL+mLUNJ172rYXbV89Sty218q+MtIpnUITbudq8JoDPtfVPPknO5I
b9/nPrD9PAvLvufeejoCtZ+zNBtktji8WLgcFZiI3iOsTx9VmuDaybZjO+2L
UfH7+xHBIT2EHw5OortWihPSBywEz5jgBfmC/9elRtBwZrQHpdrgWnR4miX1
Ar7XpNEpCfug2FFlyuFTOSEsG8/XslsbYvdFo61U8rG0UJjTsO1Xvb9905Mo
GgnLzaqifayKmE9JvGjq1A5hvxslQj0uoNWcmBy0riNM4yq6LQOVMUKRxhlc
34fYzN5dNOPW2Dx2k0SeNITv76f1eA1IeBSz6Gfn1AfG60flkjMs8OywHPe/
hjpiK+Ji86UD91F3juoA5+FpiPRzjrh9tsd9Oq5jSzdmYXLuHG15jwNklO9I
kATG0LlTQkez0hcBV3XzPdwqCB/FT7ShkeqgNQ8w0OotJF73zmtR9WtCR2bR
i95+Es9FD38TOWiLVQ2lu0t97dB6vSZuFGaO2onHhxvzBlF3tU68n50Eh1fS
fEZRdVC4uDDxZHseeJt1YvfXLEA9rFN8j7kPZEVOmN4PmIahAu3LSDcXRBnR
q1PeGMOHd7b/PZ1wwSU7feoC81bIPPKL/s1HQszv8obYxHbCn3WklvIpF7oS
rkXaXxqBLMe1s0401lDhM95951Umel5G8P/jN8KB6S9x594PwPH1wsFoCRfs
34jsn6mbhevRKrOtMEf4Z6buf3s8k0j+F6SSXKAOmS/mrdd3zaBm7VM9S5I9
5vV+c8kIdyMzJE+tLMgOxOse5i8hOUTKy4L3Lwe08VfmXbmLwFMUBNWIZKwa
oWp+2eb2yyZCkDy25ryfJOw1ngupMBGEYlHlAR43Ldyf1k5Zb82AyVsO4eoR
MzznOiEV87ENlUsDXqvZJtAr2rqeS96AF29n4198s8alq5vpP/e0EcYz6Z5j
F8Wg/1b5l7nxEN5mfc/f+c8esY/vPw8eG4TClZ2Rs77WGPjHz9nFNYZzSzqv
zHltYUvZTSoU8yScAmVmVWIM8DbuWYLr3VoYG5c1i6eawtLQ4M+swihofJ1o
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
/bHhiRh/L4Gmdwe9BwYswVafTnXweDieeZ+hj5rXgdZdMT+q6i7sH+llWVa2
AoMfD4dVTAm+JUXNCZ4wg00nvUhrdC+kMsP8eSts4DbPGLWc24XpsPNsu3us
UR+4x5LR8TT2DdGr9SsYo6SkyK24oBGbPRV33n63BotcWMiD4F44SW13aMqx
xZ7FeYNV+48Ia37YqvXWGd9FC4MXWgvB8MDg741QYwxwhW1Sne8C3eez8++i
yHB8sPqivroagZ/lVzmPOWI25NiJKa0uaOTsY9snSoJGwGWvY4GlsHud9B//
Y1NAu3ZPcmkrvk0eeti7ZoHhw+y/Ys/XIhUL1V72JLQo9J2/ZjkOquzvAj12
jrCLe1de8H4cBXVmRQzTDvCY09TkVFMkEgM9r7G+MUehlZnIjblKoo3vw4OV
NiWwzghSyXzpgkliPLOPsQPOfw/QfNzcSBy2sjhz4eY1iEr4LP61HwX5ztHb
ymJeyFGIalZCD5ib3V5WHLDC5L6tc1fffMQ8y5bVzEYy3lsfoXb2GkPl+Kme
J7KOaFV+wGrOlIDg4p5dvqKmiL21mkhsPiO+2OVtft9rgoh9j2nL4nqxjd+N
3/IiCRJbbrmVC37Gj4SoLReyPbAjKZIrmjETleXfI+oyDbGTkVOg5WwHOoLm
ufrprbFM17jsp9dIGP8V+lB/+DpG4yIr3h0uRoQ/a1FWoinmA3Q3Rh/lYmrH
Xn7NCVOQL10wibNqwfT6g40NLXOoGWSk930cx49dOTOBJCfUzrLURtR1olcq
clVjiYxaHf6lDdcRPPuxnppVYAeLwsYp6+eFWP353bgpxhwnWMXir90pI9Tf
12xT3FCEkXTvUt1gGWFaOPH6QtVdrAh/vT0TVIoV+dv7n143gYd6a8bqxCdw
CB1jTNtqD2nXsbyQniYM8PsELj8gYffinPV76hr4+RXlb/9mDT3D9ptbr1cR
fTr8aWX897Dobno+cDiHeD3xeBYmqtgpn7Gjbnsz8MXsINUhG5w9YMvuei6f
yJUPJ2j1dMF//vhPCbMq/NtPb3nvlgnKrvSIvLlTh9+teySCP5vhksteY8Pl
TrBe+VU9buqCSHM7OZ6bA0h8ODc8es8BRbMVLfZ83WiU+BQ3dtQGfH+1LJJP
9SHz34dlud32uOzfvPL3dQ2OZKrfkHCwQE3+1Td5ZslY3zrbPCthjoJZwpja
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
b7mZe+e9K4l9777akUSUwMLCqvP7YiM44zi1eOMt8WsH9ZWJNzmEgsyOTIYE
XZzVTXA9OJqGo3pfdu+n7EP98xb3zh3FBG9emq7NgA7ipO2OMPrVELa7FbzN
bt+j+G722fe/xxA/Em+5HOQEh6n+noqcLjSMXdiS6kJCTGqZdltaCmHdFfn1
lK4e2ApXIg7p5+P74Q3Ng3EWWLO9HjjkUItqna9ydwrMUJyrUUx3oJgw+8B/
JuWkKrb+9RwPWS6GXpiPOEevOSZZlL9eMUggGrjfrr2c0METkpDDa/MP2Hv8
Zn5TFxltfpUd5B2phEDrXz79GA0wbHWiXv5ZRbwSbO40ZVNAY07+3tTGDlQr
Mb88ZOYMZhnlrt9boojfzHofrz7VweXYYB/ViZdQ4Xgt9h/ZGEsZofuvT4xh
6vDNG6rXnfChrrN968IYrk9y08XSuGLtQtCcpn0zouazxSMuWOJOjkSA+I8e
/Hp6YHEfOwlVQZ/Ousl+wI5tzsv+VCREaru+VaEdh7lgarrAd2esas5oHtGs
AmsIX5pgIhms8j8Yp9I+gcG/qPKyrx2ioxuOBB9yBX11un82tTH6iWRDubMz
yC/q8r5r7o26q75DliFVYGOh/SYvaoEfWy5Rn9hWRRDfaFujChVxnL+cVFaX
hif/7Zwr2GsMiZDDBSPbBtA5WzU7cNoR17pJ5YmjHxE3Hs2Uk2CLyD+Pj4bH
D0N9N58Bt5oDXFxP+ZYX/a+i847m6v/jeFYktCijJZXsihDliYxEEVJW9l6f
j70jSn2VpGSnzKzskXXtvfeeTaOklJH6+f1977nnvN/n9X4+H49z7zl3COu/
Z87OartBrs3Kgpw1DNeCUssnh8h4uhx00SR8FrxyYlq3Wt1xldLy1Du2Z0Sl
PPdxvlwj/GFMT69qq4N+/xmOJT9bTPtsl4xSqiay5W43BC5q4HB64GMF0wGM
m1yMlv3kgYHZ3KmehXeExoWkfMvv+ihgmt18HNmN/EsZq+QSe7xwodLXy+lC
d4RU5ZFmJ1QL21PzFGUQ6vf4P1YxGCBn76OSvX5bfLYQv7vZzhMW/aIfd7V3
ostSaSfTPicIGCzoSrLFgPQgXnznLisIPH8itePwECbYSpwGX5PBRkXMJOom
YYepZOT+O/a40c//cCO4gKikJrmcKzdG3cDzy3W8iUTMv5Km5xtm+B72QjI5
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
iENcf/REkmZxNUvdTUbBF/8DOtjjyg==
      "]]}, {}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{-0.25286706339655557`, 0},
  CoordinatesToolOptions:>{"DisplayFunction" -> ({
      Exp[
       Part[#, 1]], 
      Part[#, 2]}& ), "CopiedValueFunction" -> ({
      Exp[
       Part[#, 1]], 
      Part[#, 2]}& )},
  DisplayFunction->Identity,
  Frame->{{True, False}, {True, False}},
  FrameLabel->{{
     FormBox["\"Off-axis angle\"", TraditionalForm], None}, {
     FormBox["\"Stretching Factor\"", TraditionalForm], None}},
  FrameStyle->GrayLevel[0],
  FrameTicks->FrontEndValueCache[{{Automatic, Automatic}, {
      Charting`ScaledTicks[{Log, Exp}], 
      Charting`ScaledFrameTicks[{Log, Exp}]}}, {{
     Automatic, Automatic}, {{{-0.10536051565782628`, 
        FormBox[
         TagBox[
          InterpretationBox["\"0.9\"", 0.9, AutoDelete -> True], 
          NumberForm[#, {
            DirectedInfinity[1], 1.}]& ], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {0.09531017980432493, 
        FormBox[
         TagBox[
          InterpretationBox["\"1.1\"", 1.1, AutoDelete -> True], 
          NumberForm[#, {
            DirectedInfinity[1], 1.}]& ], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {0.26236426446749106`, 
        FormBox[
         TagBox[
          InterpretationBox["\"1.3\"", 1.3, AutoDelete -> True], 
          NumberForm[#, {
            DirectedInfinity[1], 1.}]& ], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {0.4054651081081644, 
        FormBox[
         TagBox[
          InterpretationBox["\"1.5\"", 1.5, AutoDelete -> True], 
          NumberForm[#, {
            DirectedInfinity[1], 1.}]& ], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {0.5306282510621704, 
        FormBox[
         TagBox[
          InterpretationBox["\"1.7\"", 1.7, AutoDelete -> True], 
          NumberForm[#, {
            DirectedInfinity[1], 1.}]& ], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {0.6418538861723947, 
        FormBox[
         TagBox[
          InterpretationBox["\"1.9\"", 1.9, AutoDelete -> True], 
          NumberForm[#, {
            DirectedInfinity[1], 1.}]& ], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {-0.6931471805599453, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-0.5108256237659907, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-0.35667494393873245`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-0.2231435513142097, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {0., 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {0.1823215567939546, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {0.3364722366212129, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {0.47000362924573563`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {0.5877866649021191, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}}, {{-0.10536051565782628`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {0.09531017980432493, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {0.26236426446749106`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {0.4054651081081644, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {0.5306282510621704, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {0.6418538861723947, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {-0.6931471805599453, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-0.5108256237659907, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-0.35667494393873245`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-0.2231435513142097, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {0., 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {0.1823215567939546, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {0.3364722366212129, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {0.47000362924573563`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {0.5877866649021191, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}}}}],
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->Automatic,
  LabelStyle->Directive[FontSize -> 10],
  Method->{},
  PlotRange->{{-0.23508724562987282`, 0.9028210914378205}, {
    0, 0.010641762408165509`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{
    Charting`ScaledTicks[{Log, Exp}], Automatic}]], "Output",
 CellChangeTimes->{
  3.609665225613473*^9, 3.609758274405983*^9, {3.609758393785983*^9, 
   3.609758413003058*^9}, 3.609972991564396*^9, 3.609996611571492*^9, 
   3.609996695143365*^9, 3.610000598703891*^9, 3.618268566200962*^9, 
   3.618273497631462*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ratio\[Chi]ListPlot", "[", 
  RowBox[{
   RowBox[{"sample4096", "\[LeftDoubleBracket]", 
    RowBox[{"All", ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "3", ",", "4"}], "}"}]}], "\[RightDoubleBracket]"}], 
   ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6096652329220667`*^9, 3.609665233159891*^9}, {
  3.6097582808007593`*^9, 3.609758282540194*^9}, {3.609972994470024*^9, 
  3.609973004547398*^9}, {3.609999404114973*^9, 3.609999407810217*^9}, {
  3.610000603531001*^9, 3.6100006040405293`*^9}, {3.610000815767473*^9, 
  3.610000855331314*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Small], 
     AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJwUl3c8Vu8fxj3DnhmFki2JCKHIp1BkF5WM7L0ee2WLIiO0SFaSlh0R910h
u6RQfQkVSbL3+j2/8895nT/OuO9zfa7regvbeZ91JNJQDw4amv+f9a479bAO
byIiZf8s66IduA04SVekcGKByucl0UJRcF2K5t6aETOuOmf3K4QzAKLj9hYe
SifjlPLjXYGB/iCp1lrWfpaItS2VEuaUnWCq9WxiXRYDXsK0j3v4/eG04O/m
sFvryLHhcaVUuCc087o66vyZRQR/S7KElSUEyuj5yrKso1zZpB2V2c7Qn3OL
0n6ZAfuWmGye3O0HC7mGnXv9ltC41zJf+D5HaKsidtwiEHDN7YepspLOkJia
0x6VTsTh2spn6EJdIFPM6x9ZmYRlXHXfEwUo4HuOZ8IwnhZ3jBYHPtXyASR9
3n2FgQbX3q3RHq90Aqm3hnHzt1eQh8H92O7PFnDOR7w1s5eMmy9dT7EM8YHX
XJtBJro78JwCs4/n2XBQl1xla0ygxW+PdD2KpvGBqpvlPT1jLFgLr3N+9w0G
liWaciOdLWQUqPa6MNEJRA+rbTSxceL+217d2QvhQI42brg/TYMftmyUUg5T
71+2dJZqYcaW68d1ZuXCIFFTpGLmFgGrNvRMK3nbQ7nqqdS/fnRY2NTwwnKW
H1QnXxOcq2bAWSJtNktzfrCLS3xlnbreqYhXjPSBrnDo/M4XCf820SmLwQJH
Iw+I2ww7Z/eRBgeav1IuOOwGHTw0kXM8TJg1W6Eqxccf7v6WnlX4QMBG9q9+
Bsq5g3q5WMvbDAKWjLtgsZHiCI9fDz2LPseC//tSWbLAGwiptMnLjgE0+NyQ
WNmvHc4QUm8wPrdIg5NiLVJFoiggqKmk9TORFv/h0CpKsvAFDgJpiO8VIw5l
Sc2vdwmEjWKxrqa3DFhi380n5DRfeJV95hrpNA0ejYv2PyRtB81JKVikix3v
2JpSOUGIBLY9oflSZjSY1/reeS0le0j7U+fSdngN5XnLLVv9tIXKmpP5Qcv/
UAr3u4DrvsZAfmywT6aMCYd78pRY0AXBRPt8wSaFFruNih1bU/SFN+f74waO
s2G1K2SWpepg0L+t7kb7eBdetVSxvt4dC1ENYo/GY5iwcQPak5zoD80j21NM
xwhYuTnLVJPTG0RXj5dlXJ1D22Lv72ddPwuEf1taumFEfERhd80DVV848oHV
pUWSA4tvXeZ9HRIK4ScX/0Sk0OJWxYNuckf9oatQ9vHWDmYc1nnRWnIhAOQL
DvfMHCHjcB/lS87NvuAe3n3CumUB8Z/8stPf3hLMvqiLGX8i4823stKKdRQQ
Ir8Y+HRwCf33g3VVqd4O5Fu3/sQo0eO5MwsK1Z99INhPgCNBjAN3Kn1M6WgP
hUHGDzp07ovol9+uW9m2BmB/3YD9QisjPhG0vub1NQhyFUzP/osi4D+ySk0n
OH1heAeD7fXgFTQ8+u7kTTY7+HBnIyf+DS2mU2J1FJr2B/+NsY6pb5z499PV
EwGi0cD/6BvroYg5pK1814b8wQbe+b28P0iaRUEMFT+U806BfUGs3bb4PPq5
t2+ojHgeUu9NJjgv0uIG9+93CmIpEN8mJbXycBUVVjyhOZ/hAPwl8UIy5Uy4
xld3Wl0+CPLc95mJptDg5bZ3GdjZCRjOb28FsSwimY/mF/klbME0SrFBc3YF
fdLx/P34uD3Qc72++imcBnOde/nQ29gFYm9v/rmlvogiv2n8ZbO3h+W784XT
csyYYsZV4+AaDNx9x4fjtcj4WmbWEi2ZOl+CPbK6/qvoXJ7pnv15zvA4nXnV
IHoR3ZbwqcoeNYXWiFMhiESHv6oc/Dge7gMcHx5lKbuR8V8f+dP7EvxAw/n4
MrsBKy6efhMjkxYCtX2kOZnSVST1Rlcs0c4Zmr6qDknpcuDjmoq0w0ciweut
rpGSLQPeHOvtjlb3B7XcWJaYVXqcyap/xlIyAC4zjtxOzZ1FHJTcKwLc5yAq
vTzNSYeM7U7lpdnco4Dwk+2sDxNc+KWKUNi/Z1Hw5fV5dYNPK+iFtkE7+mgF
82KEFyVNTPgr7dcQ3/YQePCq/kf8AC0OrmoJez/gD1FiqvNWzPTYZFqZf27M
H3jk15UMBOfRtbbdUe+sbcBx75X9g+HryIdDSC/rsCO0jupX7u/ZRu82Pu6o
H/KGjnWj4E3mJeTF9OrZx502wP/zeduJjXnUdeqWvPQlM7D5kNagq0TC9Wf+
rusEuMJtR5VY+xu0OGas59f0fQrwG8gkLGvS4eM7gv2+rPvDnapGWfbZVXSp
poA9N9oLNGkqiyqZ6bDhsxOv9+30AdV3jCIeLWto5VxA9JCcPTRpPk5xZJhH
VVKqV36OWkBSNUdvXggjLpG7OL1cGwCNW7uGRmZI+EFaas0OX3fYmR9pxNFE
xn65j583IC9os7RqbpsnY/2CAyU8ph6gLVxmpeS2jq5VvHMdELoId/deoGnh
XUT24qkkh6KzEKxsKHv4IwEPz3PtunvaAR6IZid1YBpsIt919686BX6VC9s8
yfuLnK/s+S+fRxdmgDMNzRGwguI43snmAed8z/iwdBJx6OeG5dB+Chx/HqHz
XXMTdV41HpT+bQsyGl+Z138tILdeHyGNT86wj9Jf8fLwPJr86eVtymILctEC
t0n7idiUlyY386ArxJpNeT1bJWF9BT+FBFVvMKkdue/msoZ8b4hoiNd6wsRY
dEt1FAt2i2NYW+ELhW/Otw4f6iJj2XJzBUlhHyiS7/uePUqLF194HblCzbMs
939qp8QJmLK3j2Pipwu0WPN8C1BjxO0lXzUeGPkD1+wbbiMfVsyVrZzf3RAE
HBrCphJztPhlwPsefYIv2BLY2N1jCRh7WIsfGXWA6gsuyz07GXCllUyRL68/
xEx3D3lxLKGuGwzHXC3soGDOrWbh3QqKSxo7dj3CHs6Lur3TFGbC81PDswS9
QHiY+L3ATJYBt1bsCVB67wdLXkkFSjJE/E5h1CCVlwKRp7nhUegScjnxw0nq
lzk0qbv0ne7nwUxqOy03amNgz7f5O/cZyPgnJULvXqwv/Md1SuG/WQ5sxsYo
/yovHM4fv19u/4MO6739+bbpQyDUvJhOPjbIgMdTTJAtyQ9cnd9HojskvG+s
fk91kBeIhw2fHqKhwcciJQO3j/nA53OMObt5GbH1S4eyET1/yPIrXls4zIGj
PqfVJ1uHQvOLPQntd8lYYJ9OrfYVClxu08lsWCdh8o94DkNGN1BtH7HyX1tC
1p4j2XyPrGDRnyVolZmMg9wjGoS+e4KWdcnh+tZ1JNXKOa9O4w2xxZU0Ed1k
HPwjibxiRIHaC5OjkycZ8B3unqO1YYHQIZR4oHrxHxIzKlUxeKgJgU8CXgp7
byLoHotWX3eBK0PFW22FRDyTts1Ob+4M27kRxKNSa+jIR/MIu1/uEEc0FZgV
3kadV7wuTV1ygftqy19iTblx3FyHoPLzGLjNriSfqEaLQ2bKtUR/eEHfYb6r
U/TL6D45y6KF2hfGWUJPm0/NokB1RgW/uNNwhr4x8SZVn0T2XsnVlz7Qw/bm
9HoGI/55T8OQLzMMTrNF6Fq2EzDhPVFstwUF0pV7nvB9IWP5iQ4GJyV/KAyY
3qO0lwbLFgaVjdX4wkTy6MXNN9vog0SPOKnMEbokhWT8TzHgbjv1gor3/vDw
w3j5zSQmbJAZsJVn6Q8OtJc1QpPn0V8N3kKjPedBmuk7EqyiwSfmNoxzpKj5
gwpOMb/fQCbcOcYCBGcoeTE1PX+PhAl/m3VEGX3BflT8FtcZWixauPdykK0P
RDzTKhDPWUIUE82RmExb8BC5dV9lcgExzyb0fOdyBs1OMYbn54k47gyHz/cl
CnT2/ohK2GTCq+fSOT3jAqDqYMXr9OUNVHnr93aZlg3MxzrLFXWvo7F0dvPM
h9agkvnq5X/6dJh75PudJYof2L6dc3reTcJMZTKHpcLd4fubYxNcVUsoO1qA
dLvfEZDoVz/CwxlkJ3bhaEyDCdB5cjHeCmbEzwyXr4zMB4JkyIOMJ7/YcEea
zYtRxjA4kxSlvMi7gQIeVi4P1jvDqOW+61s2RPzG+3zToronqH7dvuNZuIyu
fXr25rmiHRRv7HiOuXdhn98RB3nMYsEJ5dM5+jDhc2lqR8KEgqGd99LwiYQ1
1CgUftuhwBUGswb2r1DzovoH6fNwqQ0ETolyf9rxF5HqxK1fuB6HQ7RhmnpR
RGyPpucVn/lC0SNfpzd9LPjRlvQTB9MgUNAeU3tjTPWzmS4fhlQfuHqh/5D0
wW30Hmcxelk7geelbdB7zo4rN8b91x6HAF3Y6KNZEQbsQXvqwYKYH3gtmuaH
qNJi9w0pXWI6BSYZ2OS1NleQfv+lQ7sEqX5oPu6pJreJatcyQPqZCwRu7K1z
aF1B4R/ZFno5vSD2/WVt9egFxGGYbfVn5Bx8UqefCDZmwC2RnF6iFF9QecXD
zcLBgGeyQqvGSv1AVtmIjk6VjPXospXk9vvBl85Oq5PcNJh/hX2wh84dfP7Z
VEZ1zqBi5fivFZ2mcJEmadlkaRaxaOjE8WWfgbbbBRJ5u7aQackv/7ujbhD3
foN5MJQO7/c5mq8d5QN0zNp/DrLS4P7RTwGUx3Yw/k5gz8eP0+i/0B0de4VO
QkKhIJ9CIvV91oFZrOaeoLg3xd6bkerXaGYppc4fygXHn0fQELCWtlXo2oAP
FCYNfBEUm0FqUspvlmttIOhhclVk9wyqnOIKtrI0BtuEtKqV8h04dumIzO7Q
SHjp1ZRSfWcLveQqd9Rd8QEG4qx+1RgzNpDQYzU4FQiKPfKHBHYvoyp4P0Ib
bgOituLeBQfW0ReB5TsW3s7g8fLXjx3uJCyRzfHAutkNaIPaA3ro19CrkD38
79xd4Ku9bN9i0Rpqqr5R/ljcA/i/RT1Ek9TvK/Hqtsw8D3faWtV/xvxDt/nS
50e5rKHxxo03Q+UkHM5SmfopOACytE3jap2IWE8k2IK9zBs+EBLuaCiz4KIr
d5o+PAwGftkdt09KzaOCZwa9WMwY7jrH670yY8Gf05boT1oHg9LOzld0NlTe
ky273VbgAae0Otm/cK4h7UfiKocrncHUpXjoUAQJl5Yy8d2zdAWe3ewVNyP+
or8c5Tlxu09CueHkvu8GjNiwisC4xeYHFdq/sy6L0+HxwVtdHk8p4EN7uUa0
fgtVkEo8Wb54gNf9cO81CgE7j6++jz3oA2ce72nxbCdjpX/8bLEBHqDk06t3
ppKAfW0+PRHx8IDoug/5D6xpcF5njwNhrw9M01IOKweSsamoVs61DxTgrnzm
VTO4jgQQX2T7ZWcoSH92SPPHCprzCtaSNXODJ+TJWRsOOkzbz6+iq+MHr3eV
YhrrBdT735LklxcOQHyeKrj7EwnXGG/N3pPygo6cU/6FnbNIkqvpp3GtIUQN
uTkXOTFjN6EX9McsAiDJgOf7yidu3N/JkLNcFg0MjbcagwzJ+OVFK9scrwAw
qLcvvq5Ii9c7RewoMhRQOXUeNVBm0Qv/HtPm6bPAuSqXIxJGwocra0PKjgeC
ZQlXk5sGIxZJNCo69doPko3mPA99Y8KuzLIUX7sAIAqZfnIlk3C82I/3dqc8
oOPCeVnOq2Q8GHv+vKOYL7wwa19ZWCfgh3Pu9xKSHaG71ntDkJ4F8/NvotHB
MFif/HZH8xYD7u9qalK8HwB+vp8pwSnMWCfG87n2eiAY+WcVeGYxYCHBgCOr
NoFQVl9Eo8y6idoVtnPzspwg9JdzeKUJGSc6qP/bMeMPrc+ie58ps2PF2g+z
rSrhEOHCqN1KzSudyKb2Gw89YCkjW0BhNwn3fL2R9ua+C5hZRApTXq6j7qmI
jLxHl8CR7+j+yX4iXu6Ns/1+jAKqgzNX1/PWUDez5sQ9cwswqW5zrbhDh22e
C9W+GqP2sXtGb5vzyfiC9f1Neer/9/ChHPxhToc3S2VNhZ0DoUKw7m6x9Day
aantLtFwBWMbo7aX/pz43D7xF8NNkeDI8jufEruI1D3CP+bOO4CPR2HRBWqf
gScP6ldIFIiaL2fKNmHEU26MGkI6AXC3cea9ViI9XtE9Hluj4AtPT8Xyh/dv
ofChFzdSr9nDiemkTcsva+hF3umBsmUPGEi9yGt/jYDHz+rtdF3zhIIxGbm0
02tIZe2BGZ2ZE/yY/2nQ9WsDLUhILzq9o0ArrhxuOLmCcrxjN8eUbYH9x8Xk
kWsb6EJrDfPfG1bgfeCIcAIfHR5Y2zO8d4oCAnyU4MKXZPxpZaPBKs0bjq9I
KogprKM6LVq9f5K24P66QDdIexvJiNxj7//iC6eO5ksfe7WOUvsYIhkuOMG+
GGW3QV46fIAweLBCmcrXscadk5kbqOugmvJhN0/I86iqc/PdgVkLOpi3X1yG
68rf28MZGfD5oa1JzQY/UFc9pdprQ8Dx6twuF7rdYNysdRU3cODPXRG3+t+F
QeMrx8mYUAL+kli8g4+6/yrOvwixZqtol9/tIEUqn1y7KkNzd30ZWbxpPqrb
6wrPCM/PhOTSY6aYpsAEKV/g8tKxT4uh9kkVPq2cZGeAe/pqySu0+GlatUDN
cACw7ovzrRxYRco/HtsmyNvBTmmVRzITNNirtiNrMcMFGg8l5ZRSNlCGuslD
gR4HsPx8/4vSFRLumw5f1v/rDebsVNCz20AWV060PxJ2hZAbzGX3njBgpRC5
S1u8ARCf0iN1r4WEB9mP4z+0XmAnN+O3dn0VVZpLPzth6wJFXiMbjYgOD58a
m3C+6gOxZTLnH0wyY/0Iys7OohCYSNrX4n6OiGV3OWjETXrBstrDmnbyKvJR
zRuZ2joHzx7J63uH0eDhSdPonmRvcBSuPssluoYyivi4WMat4MrolepXr1eQ
d9WFraIbNtD3VM/F5SstHvpzl+Uhqx8QlRWTXnuvovSEWwFyEi5gdeidmSnN
PCL9pZ/J0LoAivzep+/10eKUylcrI+kBIOsgpu1E5avfS1x5ra8okPKR99Tl
7GUkY3RHos/aFaYGOMqOstDjI030PLnhflB8+67Ede01dFC/xmXnczV4PKnU
vKNsBWW5uKm58TrAUv6LQ90Wq8hbmRz6pccRoiO3xBZjJxBv2gkX1Zd68P3H
r7+DLhuIQVnu7kaXIxgKPFfuS15Bt4PHNt7+ugTN61f+nT+9ijJX/yUX/vAA
c8uqBIrnJhI26BJuzHKGN0WqC+OVtHjcSjrt7WdfiGPb80AiiwaLy7CE7/3n
CMXXPMzZ2ZaQ5K4q2j2SzqDGwXm71IsZP/ppY6NwKwh+Gx27HmdHi33nXod7
V/hDWVR5ldKlGTSc8+o4t/sFeL+/mvPOH1rM08IZq6TsA01ihqU7nq+heQUp
3uMNDlBVbG/4T3ILRST+VXXloPLjiNifRGqf7x5SDt1v4AhCS2mMPh5k/PCW
naA/sy+4VBgYk//RYoXfRR4NEd6wT0BmuvEPVZ/dv/nQmjWs6tzraxRhwToJ
9vX63sEg89915gaXRfQ8433ouTBz0GtrFLttu4QKevp2agTZAK8+l4VL2xwK
auExlPnhANg9W/dTzQIie8jtnrR3AprKg6qBRdtI2jAqvErBAYbFIdDu7xwq
2DnVvrPqHFwKzTCvOj2NLJJT6/7kaEE2bYxe3hsC7t2vvt+1kgI/PNzNN9/N
Izuu9i7NQTWoKing8O8l4p2C4efLtrygLvap1GcVDiz7UYG5dDkU7lH2eila
k/Ej2drLZYs+cP1otOlJ+RWUwtamY8PnCrm7WctpjThwMee/8q7cUBgi5e9X
Vifi2878d4yo/h/5WvD2NPX5zcvSrN6HvaGes250xpYZXw59/070TiDwNH3J
U5BnwE/Vae/PZgVA6aRywt8QIl58Xt1xf9ATevxyRMXo5pFFG/P+ZQcbgBTj
mdQTRFyWxuuSzuYJBwyGxHIX19Gmav/O7iwrcC8VJLyj6r3T9sviOps7mFtZ
SnXvnUemkRmLQYaH4Q2lvH34wyJKuuNhKfDdHPiy20P7FLZQvqNmyglLCpRY
uBowXyPifakDs9wbFHj3LTuyz4EZ874pDN2bEQzePVGX+tjZ8PbY5aQzMsFw
tuvQp5KDRBzdLHHSheQKYqtBTxtt6bFffdqew299IFJgZ6KgFB0OUWoIN7H0
gxCOyw9nlxixVIN3Uz9jMLCX/9Ptj5xFKcLyXqVvbcHr2uFCkjIHThA73pF8
Pgx0fyS1nZcm4BNVApJGFa6wr+fn9zubi6hy14sdIlQ/ob+z+KRLm4gj9vx9
0S9LgQdnUq+KCBBxaF7Ft1N3neFb0z8XCdE55PfEfWF3ognkHXj+go7q98uU
kSbVeVd4IdE08VOaiHcplS3WDQZAm87lvh9GC+h1VNKZVXpbeHy5iHiAeQNl
z9R7muyzA3r9khVpvI3oqnVTnc1cQUFX5s07zkW0etFQkzvBGDZFczP7js0g
24Tc7CaPM5ALXld1d5Aws1/RFVdVX+BdSAjYmTSLKpbfX3ewOQ5H6EpzXjxl
w83WaU+aqPoZfingI7hOxHty77xho85Tp+OHFwJb62inum+OwrVLsOjOKRBz
Yx0ZX4sxSmJ2gnRj5wPLu2mw/tWfFjqRniD02rSmNZGMcyVtrr0+5gny/V/i
/4tfRqUNSYGs7ebwO1eM6cwwGVdytnW8o+o99JLs9c5gTrzXsTHypWEEyGY9
kC1j5sBf/+UoR22GQjdlt7qPCC0+7m59uXHND+hPto+H+9Lj7zJh1Wf3+MNb
pfKbmwe3UHQheWDyhB3M+KpJdj5kxX27zQ1G7INBQocm002QBovYJ9q0TrjB
VUJedDzjNvL9Ut3LcdIDWvwrCl5YLCBnHpc+GycTED2XmHaXdR5JFpeEXPhi
BpNv/EK/sm6g7QuNJkp1FFjPs/qn/oces51yI09Y+8I2/03as6/I+HNTt41m
oztEZibfutfFgg9/ST+ZC6Gwxnn2q0TeFjr3tyCNn5PKryojhnSlZNzalvjz
UCkF3sZah6S1rqFMNNHaveoErwZ3PDI/QMQb+z7JZWlT+/305BVPLVps5OAv
K+fqDwFHcynm3ET897eNyEapK8Rt999YEiVg/odToSIdTsBzVoWBW5eI3c+9
Gw6i94GowiPp3lNz6GTsrlAYtIK6lo9Wt38y4qASMVqdI8Hgkfkh+lzOApr4
nGr16LMNdF7T0Gk7tIAKYlIZ7kiZwXG3i5ramWTMyeh5rXfKHY7aHnp/RYSM
gZ0ve+SuBwwXLbliM3bMZrs/uPdoGJRmGWwenqTFbw4oj+uY+ACNrbrY/i0i
fjTd0/zfXR9QPEB4zbxFwBfiXxdpsLjDAO/n5q3LzLhjs6M5gPUyqBiwCuZQ
87v202kJzR1uUNlCvvnvHgFj7pn3RyQ8wM65hut6EyOW5H19iLMoAPTfdrkv
qG2hW5ovEz3mXeCS3B+96EdErHSojlk+ngLSe+9rLl+lxbSfCjOeL3tCwHO9
Ug1tJvzP7V1FjHAAvJV/vk8wggEnhJ/Ilg4MgIvZxuIrIWvI9uTHF2vU/L91
mCErwmoRqREsrrF4XQD+05y9GbCIClyuUfr9dSHi7J8O8XoaTPl4YFF2zAWI
dd2zQbU0eGJL3HMywg5KZw2v8c4yYBWZG9IJ+4Ng+YeGjY8/GbNux3C6dPrA
uSSLEAsq/3snlaZfF3cF76PpJrvuEXHmu+cDgUa+YHJQpBzhVXS/yoTuycB5
MLuhKX15aQa916tKUxM1AP0Ihr7Hqtz47a8sXZayKLDsQim3rtPguU2T/7rq
POGzM8frqQYavHzYkmwr5wWetm6BV9xpMfuA2OKJSxTQEYz6NLKyiWgYHgUZ
7aTAyzDeLzdv0eCCixm6BnI+0GuUMssJs6i3WjBiZ4ge9NqFB3lRaLHYnquX
hm5RgC/TvP62NAMuSvsoRmb0g2ri/Ibc3m20h+dp2O0j7rBprR5ufJ8Ju0my
upceCoTQx73f7AIJ+L5eFn1SlxNoln6f/uU2izYta2Pf2pyFq2pFOQ8nmHDi
S07VHK1gkB3WdQujzsvRuBG56Fh/SLV677rORIvdS8KbFzJ9IO/g5q6JXhL+
7NB/kzDqAVwPChpKTrLg/feYnYurA8FgT1lSfRQz3iojVwnNBYBmcUP4GhMZ
o+C2ufvZfpAd6iBs/pGEeRTz8g/c8IYtaY+ZtLlFJOjxK+0K51l4R2r/c2gn
HY6UmF98/9EHUsKh2bGGHrv2PoiJRL4g7PPeanSUER/aVX3UdswfVB6MDptG
zqGLdrzv6fAZ+D24ELudy4TXID2rtC0ELu6RupFryolpwm9a0jhGwm85BXMj
YRKub3z5SMjCD9rrJp33sLHjhKqv87LyYTD1+E1Go94qOvRZay5z3gmerraE
hAbT432ff7kvPfODMd1TrsfkppFQY2RLj+N5WO3w5l1hI+POufsFjAN+oP03
tgZ1E/CS5FCoYqMbpH8yHpxOI+IxfuFELhcKPMqIVFwYIlF58Vq/kLkbrE47
XopMXUQ3+UpBJsYGKqwqnkQdX0TCRrwK+9RtwGLmLqV5jgEXt9zfjlnyA4t9
Z1e176wg4ksz56vv9KHWq3CA04QZd11+fit4XwDwZpUcfOjGij3+icf3bIXA
VzEen5NfqTx5kUmmcpEChKjmpLcsZPxCSMYsa54CsfEJuhIXqfOQmU5bLWEP
PPcuqVvtnkb99cq8gpYnIST+J5v1N1psR4pxY2j0A56vmoWOsrQ4jp1e8TuP
LzTqphTomq6g/q9JkwG0xmBgetFxYpyEU43sLnKIeEA0lz+byrM19JFVdEZA
xB7ClwOyGX4x4B0pJfqSloFQatu/9m+NjO86mpycEvWGoWimpNeX19H54SDu
ezxukCttvFjzmQFL6LadSRf1h3GHQY1JGuq83LmUtp1uD0zIorH3JQvW2rHr
I+1YMEjt5Y4d26bDbxwJBXyhPqA9buH7dHsTnegVjh33cYN4hZPg5UbGwxku
eZy0FND9vXnoy7V1VEoxSODMcwTcmRsbqEaDp//TfzBQ5Alu2buVVUcJuPSg
2PJFW2oe5TS9db3AhuvVxEhCxiFw01vHdOTjLFIVujxBMT8DYb0BJo2feHH7
x4bWAvUr4NfFIR53cxHJ1TBZ9520gaj4329dqfzqv2/todk3N/BfXQ1tdKPF
K4EMUVbfKXDnQ5JDY9QKMu9kS5cNsIIjOg9ZW3I20MUph53aTB5QPfLbOm2Y
Eft8LFBnEggCBlv5Rb34FXQ5oML+ZpoZeA54F9akrqEP4SPPfkRawX88r07p
oTnkP/ReqPCMBpjb/o4d2UHAW8/6FMwbHCHF9L3xApUft3lkLefzvcDUrOeI
7DNa/PymlFH73UB4oyF/67TxLOpTbDw3edQM7hrtFJrzZ8WHtFcUcm4EwT3h
tOagA9Q8qpX6LfZfMOySvPFdpG4BSeOneo95LoKM5t9tJ1MCZn/TpUUXTIHm
J8dUjv0mYJ13Pq0nYrzAOrm+VotnDh0OKpoZdLODoTOFmTqbnHgfX8VChjLV
X3POPRWrnUNZ14kLx87YwJZWZ817XlYs/GlXyc0bodAk2pVcxsOK5z7/leeb
D4KeS0+K6KfJOPYH195WN6qfC7rus9+kx7kTzN5A7aM6amku8g6LyCNH9PVJ
c1to7fl2onttDSEZ5TMrZ7xh8JTqbx65OSSgTNovpXoehBSPOazOrqGO21U4
UNiYOm9PjW44EfHCeDlfnBAFbPuSjn4+OIkCn+qkTz84CC/H1DNPRs6glQ/R
ul4e5kAUbOpT41xDxXuyFmYKbeCIx5X+cT8i7lqp6VbQ84Kva6Oe6W8X0RG2
53mc/k5wuEyp/nUmHd4h6Srq2uYL2ekyEhqys2gpPL2B/NQS6hjfv4nQ2kYB
Ym0md29T4IXg+XecBRto/odFq7+5CzRWnXPN2MuMg36UKauIhkC/KnPxtBsD
PmZ6UXfKzh8asy+dsRWhx8M7H/vPRPkDyrjvNWZEwH8GjW+8fucN+08Jc34y
m0U8dFG7+qn9NzZ8jRh/ewmttcpK/7ZxAom/hw+sX2HGXiZkdXfTAHBjEPRa
kCPhFqAT9PB3gaNnT/eJXKHDmxHJ9E9++EPE/bGkKxEsOFf/vaGcaTBwi9Do
S9jR4PQ8P5WCbAco8urbUqMn4JyQDu3PVD0SmabsdrWSMUlMpaopzAPKv/w2
cP1vGz3xnRxqkHeCnWWuej+FiFgj0ePGXy0f+GkoFP0mZhU91ip52NdgDU12
37CQBhHr3lytz3byhJkMt6fLVB7UNDT8hO394VJVatirYma8kqvPyrIzEFZY
FGJczpEw72yC/dMQH/AvJ/JLUddTIf/yHSM1j7vMu8/UsS+i8+q/w7SRIzhl
vl9J+8GKP19pZuwTDQfmx9W7BcY2kKzdgOGDfjdo2r/7UX4JG+b81bpS+Scc
BLSe3V87sYw+Xg/MnhRxhG3cHv3ennp/52HOP9lBMO9Z+jGWgQZHfYLrieL+
wMRor2czRPUvWg13xQo/2ByblqyyZsRXilW6fSNCYKfKnrqyXwuI7ZdbEDHE
HrhG3krQtS0j7wHBZyQTG2BRf1afq0PCb59fcqj57Acu8+xhvT20+EOxC/6v
ww+YRf9NhdBvIanYNzeKg+0h35T9hW0FG96SPKX/xzoU9tZ9c93ruYZCGx7v
OXnHFfKNnoGBBD2+Zjkj0xXgA8H2wauJL0h4r9rt//I1faGle03eT5UVf/1a
FFpXHQR/bs1FRVP3+7HuTS7DcGdQYa3+L997CxWZnnWPFnAHGtppmSEqP2c0
B88HGIeBbQmDOlDI+E/sh5de/NTnlx0WOX1oFbEo7peAKEeoS437xHKCFs/f
F93VwRsE2mTFnuTwOXRVR419/107yLW7pB6AabDtQvF7rpsuwLfDBG3upcF3
GCe55Vu8QECnOTOqjRkva3i/0q8PggrELGNVS4uvzHOrmNd7wUrkTWM9ixW0
/YvZ7Ku2PXy226c2wEHARA+2Ke5HHkD0vmFxrZ+EOXqOGExleoMJw4FDLask
LOLc9Ud4yQPIyeDkKUqD3QRivx1McwNN2rWtZult9PDUOs+9eGeQqQEmi4tE
TC0FjfvrvGCbsbYQ75xHivc0po9JqoDTdi9LEh0BXwqSnNpb4Q1dZ++uLMtw
4jPmeV6PRiLAoIcjbfzrKlp50JvTXmMPHVNLb+9cpcd1gyw3zgf4w8drzdOJ
EbT4oFbVJxW3QIh+IV/lr8+AZ5MaDkGjL0i0vbNsCyLgziv0PapM3rBDuvi1
dOAS8lnmO7YtbwuaPrNrQZqLaKyVXTjslA3s5s85WrefDvethyZ2BAfBytjU
38plBkyftEb3+LY/FPlee327YAG997Rab/FzhPj8YgvaL0SsXxJwbJ2Z6oeh
zyVEP62gdOuTlK9RTkDmlNOncLFj1x+tn430Q+D0XrlLuw6SsGz/lZf/XfKG
b3SykUMX1pC/4CQ98eVFoK+hJIxF0WB+h5zchQoKFNX6/HeVNI/yzr58ZCir
BNF3BvqZfbfRDrJhshF4Qum+QylbjQuI885QSATraTDUnjpPABKe2Jlj8MWS
AqR938+r2JJwdMe7V4mCFNCz+Wv31os6L48+SX0pdYZD56ZrC8pXkMC87b3+
U05w8KrTSNhJNjyRHV046n4Z0uxSH9kr0GJPgsHgVIYP/PKuqyi9torUDJP1
g8vtgK+D/wx71Dyis8lXJaicgb3bdfm5TwlYwy3B0uEeBTpV+CKOGc2jmq9G
U0bjjsC9sziYvELErFlV78vm3cCiK/kkNWDQCcUr/j2O+jAdTaB9kLkD30+r
UI9zDIe2uT/PHtRtonyGCRpM9ecZiY7NxEUa/OC33mJGgxOEmAwKTTax4J+X
En5tKATB+ldJwX/UPlKRXfyMhto3yj9XC5Vvz6IDxLIelb1icGrSiXjoxAYa
ZTV88VDVGZRJ7jHx6uvor4y3ZfYFR2jo8HVy5tlCuzJ2CR5n9wTbi8K2I3VM
+E7cv7rRb8HwqOppv28tEW/Z1V02DvSE9Py35+riiZg3kPeDEZ8rCPT2q898
ZcSXTrV2dVT5ga/9tvC3kQ2kmb31+4eOK/wW2h+XKL6OVFnKLihm2kHbLYIp
RYEGnxX/zncw0h50XjTSzzDS4yZ1400Lcz/4r/rbffs6Wpz/rWukZI0CGWa6
6TevMeFjzy9luhoEQ2ue5Ms6eyJ2esMedPixFxyHZ9nm4Yz4XKviAc/1APDX
LPF7MLmK9k7oyNMsu0PxW9FQmbANJOBnI6ci6wHu+wu3GO/RYZolvRGR4z7w
6t/rnvwDtNjvs5zZ/EsKeLvzDfEp0WH6Hz/OZJZTgDdgWzrLig3TvP16d+FR
OLTD2UEHZSqPfHTScD8VCEdMT9QfIy4hzjF729ARZ7C59NC36zIRn1XfnN0W
dwMR9oz6/emziKA+aa3ubgnzjC8lRztpMWuU7t/L4j5wS/hB3+kUWjxc+GDO
P48CxrPFk1n1c0iHNuebO5sjaPxq39o9RMSKKvT147kU+ABv4vzf8eDqT8+N
j3DGQPoffKsjlQ6rWsrt4+mjwHGq3ZmLEvCu/rnmYap+SlS0+ldfbKFJeX2S
/Ul3cE83dLm2NY/K7I/yPJ+xARKX9Im5Cwz40YZpKt+VAFBcz11UvLKE4sMS
BpL/2YOvFuM/W0dmzB6/wG5PFwg2o0/2HytYQkd8wmZCFs1gUOsZffcqAUeD
N2Xb2B2W7frIf1LpsUrEPbalJV8QM3G0GTUg4hsfLwYe3vSClImut2/uz6L+
DJXj3RKnQCT16eWBy4uIe4KrTRTbw8FMV9c0d3p82upCKFuWL+glv3mycG8V
/RTNWg+wuQCHeI1mYkPX0ELF1U/npal8MZIsyxaxhUz0lPf8qnaHthOWmY2C
TFikid3pR2IwsBU4MI6XEPA35wttF4ddIDtXbEg+aRt9X2F2m9ztA2q2LyIT
zWixPnPWbdVtDzjWsHXv4z4qb0s0Mp5t8YNJLsE+p4gVJJF8oNnN5BQMG2UN
OPHPI+fJgqCPXvpgHfg28ecvIuZP9hzxy3AFDYEKxxQKte+Or5DPnKGAuvJ/
Jk6GBPyToPGA5OUIyZryzU9HGfCh4YXPZVNB8DxOiJxI1f81iWvHEib8YBhY
eIJ+bqMCjZJE0UBnwG/6oujC1pHT/QuY64E7iAR7frLYYsA8hzN2NGUEgMEf
9uDl+U2komrIedfRBZgN001/im4gdLKh3lXeA2T+rmkOH1xC/ri7k5/GFPLo
/vapCiwi46826ookZxCoK5l/UkjGt7/nPH1qGQB7u5enW3awYXf+ZNZxH2rf
js29Yf5zE60u4m3M4woPS55XFRWvoLOXVsvdktzBq1PKpth5GxlX3fEXWHaD
BVNZ0hwrCbsMe1sYintBjsiq964PdPid+8fi7fxAoBu5F0XzmBnfLQvw4H0W
CPIh5ea22gso6JEc95cCOzDvjQ5wTJ9D3Lf/G+C3twW9WTOimNgaCp5seFhS
5wIjzsSkPxcW0Un+w0pnxB3hKXFv2l3dDWSVOjgr1ukMyadHadOvL6ByJlLl
4Y2L4NQy8eOINzuueTph1N0ZAn8PcKSrP6HBqZF3uY6RPcB75NtaMCsdduHP
yguRDQS2l6JknkoafKLu2iGCgRt4SUa9JPdOo7p3wk/tH5wGtjluppwYAsYy
e+g66Kjr83k7/4iLhKfpyHGC7d4g/02cyFVOxB/Cd81suXtCt8b0nhmPZVQc
MK1/jN8Gvs9wpM+qzaOPLZWhVaHWcEZ6jvFAATfu3soXTjGNhp+ZNu3buttU
vnMgXJy4CMcY0Q77WCYsePnT5FBcKDybOBQfmLGMmOkP9pIf2EDeeOn+t14E
LOH4RLr1ghvUNDG6Cq8yYetXvqphM4Gg/Pr6XS2qH4X3YQfbo1R/vvGypeHi
OopqKSy6EmcD+rJvhMK26LFP0zXWK/XB0KPsZPnl3hr6kvPG+peWGwi//Y95
anwK9bIXMZ15bQISuvHOvklETO8u9eH3nCfkMusP+nDQ4SNckW93TQSAcscM
32nNORQcWuuiLKsBDIaDAf92c+CJ+yZk4s8Q6Lze3c9P7X9a+3RujY/5QLqo
qG7Vg3X0dF+Nyb9DtvDnQ262kvwWcn1V5R6+7Qw8BsO/lp0YcMDrA2smbX5g
By7/bmWz4+9xdeL2qmHQmyFsfzx6DZEm6HbnL7kAB8dHmcxvJKy5xzBfZs4X
rD5vvbBUYMWh4hlVxYpB8FTj/FLg2DqiC/amOb3bGRbeMx2qUthG2mMltxXX
PWB+48ObmOsc+JfRVOehlEg4qL62vqDJjMUV7dke3QiE7PlqV6ewZSQpMSpy
7KArOO5deeR1kwbn6+dCKjVf2bQKbydT/bdkoHBPxQsPsH4USVmjJWHxCB7R
Yglf+Ps0eR9dJg2+WpA1flrABRwG7LJG+dgxS46ktrpgGDSdlHEOFp9FpY6/
quvu2gDNz5dJZQFbaObL1R9/TbyhdtRatD6WFnOzp6i/qKWAyPj59Ycm9Di/
4Wlik1UgHHA7xeb8nB1ziSf1RXGHglRye1ZuIwF/uMeQ+qrHA5b2tDlzMa0j
Xb38Fc9xZzAeOqfKuUSD7+XHWSfyewEHe7phacMMqvxD/+HzpXNwVD9k1CiH
Gw+/cxbqkIgG3bcfuNVPTKCUqd26dT4G4Mk0xpTFSM2no38DWe384ETpVvLR
rxvI6W+iUeIMBfIriTPuDky4NebLlldhADTcq+Ef+ECDZT/sMfdetYWsizxd
ByPmUUNG6w7VVlM4PGwMjsc3EadVSHNxvyNoxb9y2neMBrclOE1LFjkCi22E
eokoGZ/MJ2uVxFD1PqsRPPeeDvf/l1KfS+cLG/Wd/92yI2CpaFF7fXpPMDlo
EC7IRYdnTs3TKkb7A9v5Xp/wj/OI6UbIhFfDJcgTLbsNOkQc93SUFNXtCHMv
LZe0bTmxWtfDHS47ImBwbvOb3ToH/rdbkf9P4WVoce1sHvjMgt3/0N95cjMI
uKRajwWnLCKDNwQ5Jx8H2Ct06/G+RTr80WvH3EvHAEhKdGL6UrSNVHYSV+M/
e8LN6oDCZ/XLaOWY5fZvd3NYWhjbkxS7jYxUfZEftV8HOo8QOkyZcafKgMWG
RABEpjmfuebMgwNfUT9lKhqGfnlaSvoxYvHEwtNehCDoIa4Vxjqy4tFfjuSE
O8FwpXDcSPs+M05i1GLP/hYI5bGlnAkNrJg20Mv87Z9gkPX7cGjMdxXZXK19
6iB0AWqkO4auHSfi/wRD0EahD9xoVql/pkyPi0Rjvj9YDoTCe1wZwfxUfsqS
ENrmp0BJE2VJxHwOXfkdz/mVyQ6mpJpQwWkGrOnTHZcp6gfZ4gbJHlp0uHiz
7ekbHAjO7YsbTyTp8CRd3K14Km+73t69uMrLgW8XFXIffREKs7m+kxTmWZTp
Z5c1ZKsNKQFm+pn21H76KmFl2toeTrcO3060mEMeqsOhWiPGMCZBEGhU5sfN
AXulL3ZcAStnK4qK3Boi6PCbdYE9XN0YUj2ttAMPqoQZLc+Fw5h7bPSxim00
fKruw58nXiCn76JW5biAihY4AlMW7WGkZT/JWegfGjygwdOxdgEG7HxzyYnL
qIpntWlN1RZOhuO4YJ11xKhXkvfLwQWCQxxvXdmYQbZw05ZSRc3T+teB6QYb
yODuvY/6Y7bwSJhsIHt1Cdn4kjPLd1iCVKVqUVnjJqL9qH/9a7IbOEgU8Dwu
YMApkpcvr6n4Q3NsxdUqCToMf9aJs4Z+oKa8LbTZuII+TuQKC0RfgJWAo2FM
kpOocyWT7YjgBeCM4R9NvrWCllqENGu9nMB4unow22kH5lvnmI3uvQwPtHn8
LTrXUdX0KefeSgdYGX3M7+3+D0Wz/eT+YnoWGs5uNUxkMWCD98J9QkN+UJ/N
O3bTfhOZ0AS+vMrrCl3ja3WVZUQ8bGh0+maeCzwuG+/kX91EOVeNHDrDHWDu
6I06T5NFVCFibCZm6AAZaXxKx9rWUcEASbzpgTUMnt1twO5AxOUstHtPpnnB
S+/hw9emaXD9k5wEfj8vaNgYMawx3UYuUQyPv5XagLbbP2vffRw4io1nz3+U
ULAJ1Sw+/I4Jf9ktOThXEAiqd3fRZIXS4N5dRhU3WJwh9aJ8me7RJeSwOEfp
jzEBJyZiYPIbZmyrIGET9zkAXD4cHMxbJ+LdhoYXUkcp8Nxwr9w2GzPWq9w5
fsI+BGYE8mfpRUg4BTFLnu6m9pWeAV3ZCBK+t/uFWNRZCmTjweqBzFmk+GxA
L7X9IuS11qt5q7NjA3+Ww5rFl6FPVTzOj4WMd8l67csS94Ufropyqcz0OFA4
ykbvgQ88Pi85efrbMlJoVeRFl1yB+x7R/Nr5RWRx3c2BS84BzJ62a08kMeOb
Z3RuMt4LgHQJ5t/MJ+cQ9Ipeu62hDA8Fp8UqBEn4h8NEPJzzhvZgYwpfEC1m
+mnd/JAlAPpurBvf5lxHcV5Zd85Wu0JZ9cZOYuwK2pDTvvbLzBl6H8bY/d3k
wGeNcuOab4TBqGSd9yIvLS519XPeQfADVtndpD2TZHzkXeanRT0/cFQxLD6m
T4MfpbXGPxt0g6ng1bLcffMobG80/dUrl8CapqXWlpMZx/qfaYuUC4G5vQus
kg5kHOdj+MHmP18wEq+SyrhGj0m+NYpi1H6x64B4aMNpqr+d2nPq915bSA+o
FOR9QsQq3/cGV4u6QsKlo1fiWVbR0JHWw7rgAT4znbb7/TaRR/O5iPav9vDT
eM1CamoZnYs/H3dvxQL0Q45bp3hw4IYe8VjhkFBwio5TfVpJwslnd0r0z3vD
yV3GvBHd9Hiu36fY5K0PKDXmnz10lx1ffjl8BPNdBr2sML6uB6vI44Tu8QGC
N8Twft6/1rGBvoWx8sl9dAazBpGSjGEGzHWERLIlBMA8RSN5dwwdvh5h/+Sh
mj90n7jzvkt2Ct1d9XNcs9ODWik9dobvTFireUdUyOtgqPz2kO5fGQs2X86q
97lG5cG1jDkz9VUk5BJt9bHYGp7SH3vitMyGY8qNZo+3UfM4rIT0vXYdsTbe
PHjK0QbeS2/ce7GLgF+uXqbUh7vCrtHmhA/8RAwNmh+ERCnARXd90+nQEkq4
8px+jcqXCjzCqPw7J3aty313MycKJs8Y3T2puY4CQdxm44UTFNbM3Qw4TcQP
L7YLyTr5QNOCSVVtyRoyO6LMx5/rBNk795WdOrKO1DRKJ5lvOgO350MH0aNz
KEZ5mKlJXQHojWbkxm+QcNVI2Z5Hye5wSSDzRvVBJqzJsT+NhSsAWmNw8DVm
Bnxk60lqtYAv7OL0mjA9TcKX4lkCR728IFf4UILC0hI6OqZ20lDRHphqLuZM
zTJgR/0y4W+v/SEmNn75iu8WCjfbe/zdcXuwdyu0UzpGjz3O+jMut/lCe+fN
xI9KU6gA8dx6anYBdI7PdOzsYMXPb7UNhGcHQ+eO+tHfXKso8n4ta/cBV2hW
5NNa/kHA1fpeTKGivjBHOVjuyTWHYl0jt/n5LWDfarLNGPsqehbI9i423woS
/vAzz/Cy44+jZMYZs3BI7nkV0yhHwpG5P+IVUnyhbvrW8XTSKirgMztGW28G
DdWp13SvMeKoo6IdSd/8oT1208CiZA7Zv7dLlVKwh6XfSlnT9xlw/uFLXwUi
fEG2rvbAg6p55LgRXa4tZAqCzxK/P7FZRvtjvK8/GLQCzgdsQkv8q0jpwI6i
v8ZuEIyCbAeGCNgjY51W144Cgo3hA2krC8iZ9yWJP8gWeq+sGLa60mBejjW5
4zousCef8OZn5yJa+NekSzZzhWWNiU+FQMBKXNN+u2xcINHrwHfmgHk01zJH
Jruaw9WzRa6n/OnwUwokTbkFAl9fA+ene7OoPe9ghinBFKLM5MO5o2mwm2Gy
W764BzDcdNu9uUqHfYvL2mZvUUD8Rq1g3zMCPnDgroordX/7x/MY/1MhYflY
LjN1MU8oc/bo1V8j4ZtDz61PtroBbaBo6kAEDXbmHMyaYvcGxt1HaE5ReTo1
cupHS3QofB515f+pyYAF3izJHdLwhdXDl2++EGbGBgRzAd71AHjjpmh9dJ4O
VzYu/m31CoTYszfNy/6soj/qszfFxBwgc2H66Qk7Gmymki7tLUIBSfeVGvyQ
Bo/ofLtd/4GaR+db/EkCdJjx8887NOUUMHxrPdfygw7LFodIKnT4QdeY2v6R
JWZsOF4j1OkTBLwz7HOWHkS8MaLSdqfKFzzEQjUNxxnwzlbzvasGQeDLapkv
+WUJPTjBraBbaQ/v9BwZrK9vIJWUhB+vW2zBEwZehbMwY4/yWzzsbiHQ0hdf
YLO+jJxeJhiHyDvAnpdpXL9b6XG45BQW/Eldr8/8qoM3M84Rm7AOTA8G4jE7
plVqPz0++NyrzZX6/jKx5VFqn0igMc2Mr3UBOn2Nmt+tDDjslycNa6AvaF1L
du4MpMPftd2v19IHQp6V5C3zGjosfV5PyjrFDxhXwo7sXqPDJy6kyH2J9QHm
yJaMR3cWkdvby1/jd5sArgr/yvuCFi+UWPX27fWG6pq32d+pfStjcfMTh7Qd
gPSRXxPHyHhF85NeUqYvBArcYNnOXUBMLx4PzzKchumewFcBNVS/rEAXhoQD
YK3kyH7PZ3PomL59/iUDUyi97lq4N2UT1fpd/GtKdoMez6hOyQkSFntoqJTb
Q+UBL4b4knoSPnSwmXTwrCu41iur3c9bR3MyHko3ZBzBxr+XG59lx3Fn7/ht
aYbAK/MRAaWxDSRj2eifPGgLu75ovzrRtITsz1jITWm7UPmK4O1UR4O/7Jv+
eH+/PXAsCvDUZG8jm5xuKSqkQsSvz9mHExfQCYpTDzujFTyxSdMU91pA9s/z
Pf4O2sNKayHp5NAKKuoLFG8dol6X5tyWrV5Cxe1fK7z43YBDc6CJa4IOt/3M
vfOG5Afc7qzPzcVocYfhx532xylQmvH67oViAvYtaf56mdMbQEiFNzGZiJP3
uIvtOu0D+X933vFXocMTDx46vVX0h0vyA00JogtopDb6108nWxDI5k545k7A
K1bhQ6/p3UDg4LXTRazLCIc95HVbc4BzFbuiiS6T6Hix9GPRC2dh+dOl5OeZ
9Nj2bIeoho0f/GLZSYr/RsA/jbm2mCzdIX5Oy/NmwwISCGlX3zNlByK1X53I
whz4akih8n2zULiT7av2+C4tPvRJYzO62x96R2qMdTqI+Op9jcOCc9R5kuwL
vy9LwunctAvDlhSQqf62PdJJxvlux1ed/nnBE93gf0Z1C8gn0jWmtO40tCpO
jHFULCMv2uZHLZ88QeudT2uOKxE7lIzbBip7Q4P5/hPH5UmYaT/t1NvfPrB2
WsTtlNMW0hzbTadAdIVHQXfCr7AxYmmh55Xs4/5QnDH+eMc/IiaLCK2JXKWA
zvNOVx/q9WU9IbV94u4wl+MlX1xIi/uZjl/4suIJn/i0bx17RP4fRWcZVcXX
hfF76W6UsEBRFCRE8E/IRkIElZTujktcukMQJQRBMSgRQURAQBqMc1QQRKTF
JBSD7s73vh/ny6xz9tn7eX7Pmpk12NODRamyKABoD2R2HQAOfFbzypuU0lDw
+8l4Jl5wHa3013cJfTsPj3CBn2nOMhrPMTjomWsDbWc3r0aSKfm6hWr2aIUL
OPzH8Gvs0BIKffvCiOeuHtDxJoh0C1Jjvzpn9YwWXxAykHr2pIUG15Y0NKty
+IHnh+z3DJ8XkXPauWSfN3bgcFJMqpmwhh6bsDFZ/HAGp8UvA3Elyyj7ZRuj
6iM7cMy40FnZSMQCrzSrs9p9wXYyTPA08w5qE2CKafvPBRYWU3Q4KfWXKFtp
3u/uD8p7zYROThBwQ4SQWfAbH7B+9kHTb4qAmbe+/PS67wwdLp0n43lX0N6e
a3pe550gnJjlNHh4A70bGfLVI7vCWf57YUuZ6yhdq6X+D8X/3JY1r5zmpscm
Ivk2TMKU+1G/Or4xQMRnG37v7TrmDA2CntH7n9NgmkBJ5eYXZJB/UFq0TfF3
Af1H5vO7KXpKuFRo5EXEZ9ojmnV8yCB2f+aS7R1GnOzw4f6KfCBEWXnRGatS
9IgAyisSAfD1v+Ujn87Q4E/DiwsZh8jwut9le+bxImL906z9tUAXohXQ5/Zi
Vty9otnwzjwERrauZ7Ss7qDKEZPHX8AdOgnddxezF9DymI/JErU9jAH7YfE7
OyjxifOI0bI7DBnRvE9y4sAXPeyjhjzDIXn61h8vcypsF2vm+I/gAQUsNy+U
XKfUN+EH8cl+LwhbLc6tFeDE15kec9B1hcEFjozVkm9rqMd94Eq0hScsf/xy
7U4/Nb5+cNGg15YMneggeW8UAbfIxXTuoazHwYZkRX2LCSsf2VpIUAiEo6aE
HHo6GmwUTz/5nd0Xej7Ts3M9WERL5bUlq/Q2UDNv5hGuOovmcwkfP41ow8y0
pscccOEGuXuTpMUosCYe5btEz4G9swPfRiuGgsKOfZs4LT0e2NXjVkbvAz1d
Jco31mbRJLPFiWMJUnD7gVjSMyZufDa2frLINho8dZif9dMy4cbIh8aTjcFA
853vVf55ejwDhGebNAFw9qxSQkLkEtI2Tdb7cNce2rtJEfMCWyjSvkEXN3vA
XzFxAzYNRvxsv3SUOp8fCL06d3XYfAvVxXXtMaTwm1DgMTd+hjXk42cjKDdp
DwwO9NF5+nTYgfv0mJd8EEh3L7g2ndlC+WXWCo84vWHfefMDLJeXUNDI0Wri
QXvg3zVA1DOgx2GOTcVebj5gciho/nEdFVZJZpvWCCcDbWO0+2X9ORR5XOfY
1xNG0KTgw3r9BCt+nLHBezc7BKi0J2k+/ltFsh89R///vkixQQFNt8sGchOM
Ti264Az/OtzvcIjSYVb7z8wMF3zg1zAHs4n5OLouduAu585F0Ktee6wYtI5E
295Y3bz5/+eTD/e1iNNi2yF2zwJbT0g7Jl9RrLuBTl3KNPi9Sll/0tJytAw9
vtJz/HNzWiBIia+aZbSxYi7tP9qGR4LBeSb0+6bGOgom3HlvcMUZWm6sex3x
o8U+iU+9Zn/5QXxTd1DVWwasOrnJJWfuB+1FBU/dONlwWSr1X6vKYEoeWC0p
N1xAo398rqUZWwKPF9JY+rSIosPpaB4ctQWLM10/woXWkdQx4S6qOA+oSeBw
P826gDir5vB25UUwwhyHKtsp88VHTKmR9of3lQpvktuosGbj1vBpcx+ga73+
RIWSD8VN5Q3Col1hZxy/4Pi6hQYZvbYmMBkibscpJUrPIZcrj5GjjhEIy6Rv
DmwvoqPKWqG6J21hzLOVwzdhG02cyZFo+OMCk4opdYp+FF55X72szBoELyyZ
7rBp0eOLI/K3f1j5gRqpt/VIBBHrlhsXjuU5g5t9YuFINhU+zfK36PCgC7DV
Hjsdc4MdH+d+zPz6aBhcTS0m0fHTY9DGpl3/552/yp1lcgxY/CyzdUtQAOR6
8uwv+b2Fvmu5PtXRs4ejjZMx/vwE/GSRrU7Nhgx2RZLEp/KbKLTk7kIpvysQ
70ziN6o0uP1ypodpABne/WdQ7gE0OOzd4ZkIfy/YfsJTRDc9jb7I/dj04TIE
rhj2fSy8tDikeiZphYPC8z7erALPaLDV5/QbZyf9gftAhutTyxUUPhfXpyli
C2/7GHbf7abDLJ90uX8f94eazcXYLJlNdKeicOHlbXdoMf0pFCxAwENMxSr/
at3BQ1fulhEiYIsgnlNGMWS4nHe1frJ2DX1Z4v5OiHOG8rArvUcsmPDYeMHn
kOIQCJHfsL3wYQ1xCOhlRYe4woxX89eMJ1Q4qKvO9a+vG4yX19+JekfAb6o/
HL5iSAKmZLpm5otUuO/T+P4T10iQKXWheeABFRYd4SHZ7fiAezjdl5EEJhx3
YOO97XIgsGptqcZ/YcRuTW9rBwf8wcayuYAQxIl73v8raPoeAQbvBxrltejw
n4LklrsxPtA43OhmuLaE7vgr2jx0twQDngUWWSUWrHBZkcvEPBCePijgvnGF
iA81lETXrHqAyt2EuKyz9DjgIQvX0/c+UJlW7S4hy4nfZ5oeC02LhH1i7StJ
IWzYVJA/NNIvDHbCTpJ99AgYjfS13U/xAP1ntm21w9T4FPNcmAy7H+xMUWm9
+rSF/n1iJbboeIGNa5N4TvkGyt4Ul8gYdIfI/W9f3E+YQ9WaDUT+fn1Id6G3
mnm3hk4T/75kqXGDWcu7hLgbRPynK031+i8fCNTPcSLkzKB7di9dpZLOwoLZ
/J5zylT4W8zuUNWzJAivSF0z3MOJn7jJl2VABEh9yKq6QLeFRgRXe01yHKDk
7tNbu1I5sUVMEKG4MRIkddIZrG3W0MEmDeY4Vw/g4h52rmBlxFHXI5VNv/uC
oHzcX9mhHcQUsT/oJckBFK0z5MqCWDF93WcXRc5wwAEB9Xco/IvOHPG1v+QL
f27sk91HyfdjUuVqDi0OQAp7uXvX+Ar6fVe9oU7yPNTsO+i+q4QLPzXcsm26
Hwk1zvbrbT0MuGfRa1qD4reObBMVvqkMWKH4e7pbWRDcpVFXFLLkwLaP3rPl
3Q4FVziRV7mPATfKy/XKJvtCmuflrdkKGuzL7f0zdMYfyhiVbexzOfDPcRql
6bRwCMkY87bvn0Mb/zrf7zgYAKeS2DHGyRX0iv+f2CFNOyDfE2JrldxBxBSP
LxlEJ1jwNOY8TVpGCA2Iu4dYAb53Mkc1YhZ9nTRLVzczgj6RIm4OLgJOGOh9
0xzlDld2MYYfCdtGm3/pRIYLPaGjxyimOIcd72/ubDdqCYeP78/fGhwn4qG3
OypPVVwhvJNxcXc2Df7sOkQvNe0DYtvld3pUObCGKNXEbR6Knjz007j6lRVn
WzLx0eoGwyGxmu6Gg1tIW1C6xqLWG44FbdaPscwh66alwCzSEbh3qveLRgUz
3j9pV1+pFAhTt4/yxqtvIn+z6nt/dnuC7SezqN+G1PjlsKkjTneFgpKLqF2B
Fp8/xHJ8laIn3RUKtYKbS8hqj4H82IQezNudaftrt4qK5fYsCfqbgv3NO6Cj
Ro+Ffnx8pHTIF1YJ2TyBJgT8KoL7QPq8DzRc5fgW07WF7kbXbgUq2UHHuV+p
J7w3kVnid9Iqhwtc9wpUrjjLhisEPv88rR4Mx+PUlBJdd1DmX4Hv/N+cIfC0
xJeLg7S49obbjuZ/gTA/IXnrWjdF7wiFLbr7fCEUj9x8kk3AvnObTzj1nSBJ
dIDnqdU6EmEZbM0zswVPg4M1p15Q+m9YWbUIPMA30veYZMk6+qVb5v6mxRO0
/Z4zk9/R470T9cwnpgNBV8g5Ed3lwDs+TvnvWMOg1VloPoWDCfNsPx5IeOAP
IdImH+nv0uHGkyLWr9gp+hB0lN84hQnfv1Q4HG7iDyWphy6E0xCxycvGIyR2
H7DvkPS6V0zARsrCEdIqznAcP9G837iGJEldsP8GCY59Gvpd7krELTfU43vP
O4NpKmMV9d1ZNPEwKXKmzA72C1MlV2hT47YPvv+O7fWFc4rXjrYSGfFv9rP6
ZtX+ILfMJlYQTMTfVb5Y5t91gBuN4XFiN5aQ/Rkx3sEn1nC1mhDYL7uOSq3Z
ZXsuuoCTi3EdI6X/juQJhdQGhUCzounHc+H0uORQVazMjB+kK46tj36hxaMP
hEQjN3xhlMOBy5t+FZU+4P3aKmwL/Vd7hCberqIW59jV/ckuwLcc43npLAH/
NFeRKUl0Bxw7ndkxxYSvfHp58Mh4CFQEiGwfb19Bo9Of81lXHEHl7cAHvqsE
XCgp7P70/99zzmv8HpTYQk23Mo6pc3uDVNz+T+YBFF62lnpaJmkOm40umsnF
DFiFq+7U3Bs/CF0g5gRXcWBTk0nXuM1QqN0ZrDlZTIczdj+wPiEZCJ3BX9N/
szNgT3ArfebsCyy//Gq/fWLDHrY3SCktwWBW50HdtocKCwisKPp+9gLyhbML
M7tWkGB+RaPIDxtIDXliEGPMhdM0LAq26S7DFtqZOW86j4q/TneIzFhCWZfN
brfMZdRwNXC8kE0XLhm9lE08voN6mI3eDZ1xhl/sQz3UbLT4Svm3B7KXyUBX
/YTImsKMeRhNLfZlBcCsMuOCpiwdTm76XirH5g+O0mYyAZMMeIYw8JXEFwBm
LyM+B4RNI0PWLIuZMG3gPD/p13uRFt9bZMxRyyeDoXD/+Ve5RFy0K4wlpsQT
5l+9mPhZv4oalCRu0Jx3hFrp3GM/beaQL9PqR/dAbdBn8jBJb6bDRorJBY8e
+IIOeV6ukUDEu0qzyzNLvECQJCEjFkiNd9/+yqs/S4LEGGHPzzc2kefaF/+b
xi4w8ZeBLiqWDkds9+e+4SaDlUeIieC/TbTuF01+ZesC3brVszuti+g87xH9
UgNK/bw2V+R6tpBzS/7BeEp+SbxIJ384koBvsL01W8jyBRe13NnnvlvIUH5X
wb8xW/gTsvOtXGoZ/aLlHCo94AjhCh88lugW0eUrfSvpNy1gwmjQnNWQG3ub
y4bden4ZOvYxbN23ZcbcfaKpL2eDIORoyT/ycyKO4rWqaXP3huJPdl36eoyY
+Zv7uFloAIykLPjpDxNwWMHwr3qyC1gMJRjbz20iL/5lNqdue+iVHOyO7WXH
DQ7tz946hEL0wZHnpXEEbKM94gljTnBxeJKV6MyIBYToHviW+kPxrNRkeT0H
tk9ckJZ4GAaLBzviTleuIZMq+XPXQ7Whg7V1ldWIDv/gjr9X1BEEkhy/mkLR
LLoqqrp2ad4SFk1+DPV820CkctOHyvzucLiJ7ZOmDxW+Jve78MhjEtQYlB+S
p/j5FQMuPsZtZ9jse5eozsKALYZHUyOKfKBZgEBsofBE8c6tFzdDXECK//xr
Zm4qfPKG9TdRcWcQjJju5dLgxdtaTL+ERi6DbZ3M87rWZcTEfidT1sIFRIq0
57uuLKBMjXJuOXN7OBXq+5DzCwNOqeXOkdkKApGq9mnBcALOyD3zn7w5Cf65
DLn9cV9FFsYhKUz7XMFgZK9xTAANdukiTYft9YGzGy29NtncuCmNnqd4dzS8
jUhLMxUmYIe1Rx+eq5LAv9ZeZIxEg3+f5riV/NcP6M0KLffF0eLfD656jlf4
wbeTo36y7BS9vh/35YS9O6TSsLYHKtLhgCMcIEnpt9qS18Ep5+nw9Goj3eHH
vhAefjwt3WQV0fulSMqeMIWDGuEtPNosWPKRoXgoBMOATXDhQa51dMTtev2V
u47QRFTWnbNhwWfDrobK40CYFewce7q5hpaoNzjd2u3hfOLGitU0I/ZylK28
1+QHpYJr709fJuKasDdFLgnewOeIaEV2LaEPDddkTq2qQAv/uECXJh3m4Hxw
znwvGcKal/3Bgho/aph80LPmCZxMYnNrFD1MFhhZiFLyBDWZgdD2EgZc7eSR
EjrlDw/rxn8IjFLhU+reb8f7yGC+Z++0dwsnNtc+VtrCHwH69tItCdJbaFsA
RjaOuYJxgukjAoU/C45LzM5FeMIsamonJdFgllPD4VI9viD9ZPWLQeUCMj3L
8PCLtCn8c16UO/aTBg/za/9ye+gFLTtGFxu/M+P+qsfGWacCoUjm6qAC7xx6
lMNi2rAK8HDfZ0/VSDrsYan7jED2gYrGbwPeDzcQK9diH0u0A+T5Fukrs9Ph
g7T+1Rb8IfCosrjv7AA1Pr5HUYI+MhBO+fDtyT67gkKt3tNdnHAEE6umoeKC
LSSuNJBUJeQGC84M+sYNSyi43pEtIvI4JLW19QkeIeKrtU8FM4gOMC3dYaDS
t4Bu5aSn5qRqwfrCmZqQUka8wNsq/OWFPwhF2sx2vZlBTqfLXF+MG8Im90JG
StcSCnMjxyxQ/M3t4W8a8m86nKOheMOGjeIPCkHVZz4SMdPLEd3OBj9g4NyX
eaeNok+LKukRk5bAOEY4L6bPgY9yTQln0IfD1X9jNj6x84j5bfbtP/d0YIPW
M2GfBAve//LpA2fpYFB9W/Fwee8s+nPHKCDltjWM5pz6/oOSjz9fPjD8SjQM
aqdFTyupb6Fz9gE2VhfdIOF6Yn/iByqsVJpAu3iGDEceCRLidZix0eCZc64Q
CL94RzvfJC4iJuYbCovYHiKXxL9nLO3CTHzdx7clYyH+nSm5qpUBV03wNY1J
UfJa+FoS51Um7CQtdw1T/B74brj57ybi0YRC7rvpnhBR9iTv2WkaLLxoyXb3
PhkqPmrF06ivIvPWFN+jVU7waffrEt3NWZRTm3o2ydsCbrE8yDqju4w+PjD+
LuRkAv3Fj8wUlXfQl9qXIiRKnjFI82Q2f7SA4tj+ZDTnmoJWpbJ3kP4O+scs
Xyvz1wuOhC/sVr/Biut0/kRRTwfB4XGm5UcvN5DwuRmDkItOwKsTfolhkArH
hjP+7HJ3A56LH1vDKHmt6JSXzMl73hB2iYZrpoQaS0cxrY7YeEDhQxm+UzFU
mPfUd9lbtz3B8W1Eoo3uKrpnQNV7rd4cTqvF1ZsvriCD3thXaMAdhMomsnVS
VtCfmZVJvU0beCYcq1hTtYEimvim3E10Qfr0wdY45hnEKvjt5p8QNeiKDg96
x7KO6IO1Um/9sQR5K/5khhEqfOC1WIBEpDsYFboLt+7aQGUCl1JKrZyAZ5rM
qty0in5OBVa+cbGDs00mlYfrdpDcG1zErOMB0ncLLKqnKPrSKZisTu0BEzV9
l0eLqfAUZ8hQwTwJniwMdw8vrKJv9rGkmGEHOHLOSiuvaBnNZc9E1tc6w86+
5za2U0voYpVRhqSNLcgNP7/cmTqDdrwf//zSaAAt8s5PDXyY8FG9XzNnloPh
7F9SfNkyNdYs2hFj6vcGcUvL0AVxenx5iDnbtCYA/tV7yg5OcuN8yxbm4PZo
mHLInSa+2EZ9L9tNxSLIEJ0WziknTYPtbpAfWf3nC+dXN5KrfxOwsjZPyQFm
H7j0/kpX2QoBh/dm/IrOdwLZ2LPLMdUs+MmJ4IfTa0Fw7WSG3kseIhYKpaET
t3CCLIvqH4QPq+jcjaprhQuOkKeXzvXSZhHFPDZ8IkprAvtOv5gOvr2MpIZ8
nZmHLaHlz/x4dTkDvt1tYH2z2BcmCUo3m1ToMG+puxWPgg+MTCg5/idJ4SGb
LPmb38jwiv/j54p3NPiajA8PpzwZWEZ9VEYcNpF5XlD/9UwHcCt4eJNGkR0L
CTXfObweAtl6XIV/hZdQs7qElU+yCRx1hI7ZsHG01nRcZJlWDeirjxqKK1Lh
7b51fnc6N2BfePzoBT0DHr537GuivB+wDZ3pma+m7P+sR06YoAs8f1MYN/Np
DS03cS3/03UFDvHtk95OtJgQt7buHRgE7jpy6twrK6iwgUiiBEaQcNrnVMbK
gG32Vsut0AUC15XXRwvt6PGT38+v/rceDIEEwyvTfhtI1PQegxOm8If6/Pq3
n7Q4TNVLPd7UF3gIVFtZ2+y4dE/TYw/zSFgJlfpIFltBpvnjFX+nVSHsyAH3
r91E7F0qW7QV5gaeJvFV1mYcGAedGL3MFg5668R/9e1UuC5oxXE/pw+EnazT
mdvNiPU562KbxANh5QDL2axlFpz96GJV1c0QCHkd3PyZTI+7I1JcG2b9wJo9
2q4miRlfNvy5R1ElCHaH9wiQ8TxyL309u6OpDw+Xn0lfjV1BIVOa5e5DrnC/
i5T4sJoTN1zfEj5KFwk03b3Hro4zYDPmRvbfEQGQ03+cvpBhEe21rMz/y24A
oZHbL8+K0uI05eUlJ1pfMHssFReYOofqnhwlj+SbAE3KqUruTFrspvtnj0Gs
F5TFm/hbRHHiLol5haR9UZAUU1J7gpni/2rz2h+FA+D4TK1O3tQcktt7+wNs
6sO+0IzDhibUeNmOy2ld1RMORUcur0ix4BTuzZrGGEr/dnbt8CkRsavLAyV9
XTfo2t0VIjHPjONfVXtNaIXAsPrPpd+8TNh7VNVT93AgkDqFv1XsocarHpny
5129wPlYE6ElkR5ryP8S+VDvD9I6vXfY1lmw8Nvs04ezg4F/ZeBKyC06rDNe
v6VL6afMyvdWVyWImNq/rJeVyxfu5C10P2aiweX38zscRH1Bsoxbe4ljFY1T
8RtQUfQ/5U3S0LF3cyiktboyQcIEJNoed3sYbCEFXd4TPPdcgYHWKVC6ZB4d
fr3iFLJuAdus/ds8TOuI9V7ZhOOAIxjtry6c/UqNdX6k6f4UJsHcfv4Ia99N
FCwa8D5C0BXyr210vhfmwO81rG8egVD4czhwT4MxM44snTwtuhUCZx8573p5
hhk/T5e8aF8XBOSYjJ1bR4mYzzXbP7nPGXanS33ivrKG/ru2pvDWxAFcuLif
EbZW0CvCa0N03xFyXdwqGJp2UINaMP+pXjLMGwjX6eUw4DCFGzWpp33h282C
t+OT6+i4VkbraisJDO6o9Whf2kLXr8fe5E5whT5DGfsdkVWUJ+H+Wr7FFcpi
1BcqziwggximExb9dqCqynE0sHMZfRtjnb85ZU7pf6b/9pmuI5IIc0JDA4V3
428FCgVuIbkn8UffbjjDoa2c44o1zHhLpYe6uDAIxl7QiOndn0VD8xFvFcKM
IQ8ZHFdYp8EbemYXunn8oPWDaqecGS3OGThja+XkD4+CUo0YbhNxqczh13tq
XODRs5K+DSYm/MUn3TiPKRAS01yUszUXEbPV4BUqfRt48PTXKer9jDiko5c3
hC4IXtErGH6u3kCBXdqySzuO0PMtm/df7RwSWP91iJytBxdNykSETtFj9dv5
+7MOBMHSP3d7//+IuPm4zkB+myuQ/r48+eX9Nor93nf1dr4nvAgx/jFwgQan
LuZdGJT2hLcb/bdWGon44CP8NDXfHUhyLX2iLcsor7n99vQ7Q6hxueJ/z5zi
/zzfx8QKrSBA7ALjH0oes957LkL0pgcU1Qcc7BvdRH2jb9653CCBxYvKtL4b
2+hY59x5t2h7KJ0hjNDpr6N9DD+F8xJdgOjvLX1rkoCj543Osf5whKI1pV8f
QjfQ7t8iS+4UPf53SGk86QADXj7+gpF8PADubm0Rg23psD7tY7uVT/6Q9yE+
ZPILBy4xoTUP/hEGwXLCQ8JejNh370rEvUI/iBCn0dYep8Nd76xXUQ0Z2mwU
BHdT+n2s12eRM0QPttSTY2d+EvD639bnq7He0NYwsGcqaRsFaEVJLRwlw9ZH
49c7ozTYw9lyUiDQE67/1LT/sEyPg7NnfPe3+YLJ89aiXZN02Dbvj61FOhnc
Lf/Lm7i8hXgyWC9siTkCfcwTmwpOemy3wF1gmkPh4wxVqWMGRKxaZ/bjl7cn
6NVUHDy7lxNvyUowbpWGQ0v8Hum7mVtorLg98zzRFm4H17azFO0gjUzt7xaM
XjBdFG96o28HiTcPL3DPegNG0rezZ9ZQ/SX9ILlMSwgsGAZeswXEem0pSum8
PYQI+zAec6TFS/X2z1vCyEBz9T+ZDf5tlL4czrBP1wmmBtdoYk4x4j3MNAFC
lPXxj/8WV6cfQxHtz24KHdKHr4VcW53nqPCzgJhzWkt+4NEwb35Phhp7q2Yv
1xiSgctYeIBlgoix5op3DmU/5Bld6Yt7aHHBd/KVBEUyCNJwhDe/osYDJnkV
h355Q0skK5fs6gb62Nb2O17OFRY/dVg2/KPB/9UJfG3c7wmqG39+LhSvob4z
GpIRAZTzXxRLMexgwfPHQlVuPAoCpvC6YtuETSTcZFxUhkmwsrnnVmg1HVb+
KMm0/sgPGvdXnzpZtoQYuN55MCcZQMJRy42jUjQ4h91RXvWwDzwA/k4hRgLe
5Bu/FLbjDtWMpxpq3hLwTkOhfX2lJ2gP6Bo8ptxv7ciB+gAjSv70/U9BMmQd
Ea5ZPpk9QwJl5ze5o8RtFPnLL/lxmQMQLpLsT7CuooRGs+n8Jjt4oG01MbLJ
gI9eMWeU1AoEdP91IhVlHvs2SQ++vyXDQxnR53TxtPhwnI3a1z5fuJ8vfcX+
DgP2ixU3f9cRCoN81GdL1jfQu35f64WDTqD96bPvzVAaTI3TmpX9yLBSEOWg
Nb+OgmlHtXbdcoXBEeKj0mp2XHJf/n2TUzjIf1h/dYvCg1I0qU/WVewgnOx0
T/0GAf/8sez+298HOrfV6osfUHj29IbUDUlzkF3wd9liXEGdrd2fIwKc4Xp2
jrH0EwasPhhrQ7UZAl4D4iGlZ3bQyJHZMhNqN+hNVSjtF+TFCaVVHXOtl+Hz
4dSS+x8ZcN92LPM9Ez94PLzVXxa8hsL+fsw1nXYC+oNeY6e6llHDSbarESRn
WFmI+XyedQdJyaa3nU9yAL2j0qwbvcvozJ5/Om8P28NzEdNkxU4mrEz7Yk8l
ZxAIWZXp55rS4NZtJ//fymT4oSV9Ipe0hIqvBDeYtWmD9dvXsgVoFYVtNRDa
uSzgksTxF4GJ1NgtJLfzgyoJTj0kurLVsWOC/8hE20AIWFVmXdoI3URWkd8E
RYy8gLssc49p3Qo65+XHRdXgCpca7543/28OlSYY5/W164K+C62byy1mfCdz
YP9gQQC8xUquaZwriDz+OmNvmBHIVgd/bMpjxtpNx7WONwbCsv9T6z1R1LhF
CDhPPCfDiZgF4fktWowve38Pd/eBOnUiXUoKFTYV/cnP3E8C48txgY55q0jI
RKCzd8kViipjg9u0CBgvhO2xeOAKjqK7E+WH59G+cjH9UbmzMEyoDZwBWjyQ
Rv3vWCwZmItthFwN6fBLlQGPIewDm0+bS0/bEHBV4UDkr33OYMavNWurQ9Ef
42zaHZpAGFRRVewrJeK/ebvHjm84gus5maB7bCvI/ky7I4ngAuVZnGtMViso
t+J0wR+CNoRde92XJkODVbD3Bd43PrDnSPi34xV0uNF63JHvsQ/EHA3Q8t9H
gyVbG/svu3lDv/LkwEjcBtKr/U/b+DoJZLkO8E5Q+J/PhX1jxNYH9ORCBbUD
mXHuqtmNTEIIuJ2ZKEK2jJizWOu9yFd/0KSbYccXOTBrfjffkFsoLPvuky69
voUKym+K3mzzBPOTF2uV1TfRy36aw8zxJPi3f2z8yB52bOOu1C/tEgKdnyNe
mVVsoxymJHToujsIirVYv3IiYv/HUjt0IU5A2isTbFewiiL1n3frNZIoeTBn
UnKWiDs8LoUoGv3/eTdL0eshRiz/7XnoeIY/POmcOZQqTMRVBle8X0d6Qi99
1n6eKwtIqPHf5/2Gl+CNvXb482sMWJ/q17mHkr7gWHHHe+/RcaRQS183+Z8e
nNwdcjGsdgo5vTISEyDrQcgRjtXyAwR8YDnuSU+lC+h1D3VNlXHgNNHfptOO
4fAl5maGawkbLpXga8kPDIZ1u2u2GVuLqIY9Teddtjqsjd1qUtZaR1oPNlZi
at3g37q6c1LLGvKxYFR4dMcR+ppsTkZQrnN/KRc9iKVcv7kU3/9uDTm77Gdn
fOoA3QeH1o3u0mFvztOhXw3IYHPE06s2aAV9PqdKrle2h14+uvEGAh2WY899
/NyeDOwpAbz0pUxYPOs5n7VuOOgQ/h6hbqTGT16FmdZ6UvRfIznlVx8lv30S
+2xzww2QallK0gITnlQq1+i5HwRD7R+Enr2eR70H7zGt7LUCi+/X7gslsWG5
kcU7VWrBoJaoPqscT+EJXYlMnzeXoK30y+Dc/CoaDty/7rTHCdZm85oTbAm4
+fSJN11WXrB91urA4Q1G3N49JZIoGgCjR+u0vTw20SVHaAjII8HuLxyRRwq3
URH9WeUbdfZw3/8tz1QUHT5ZzM9uoewDt1ZzVSrWl5BF97cM2WIjOH9tSzzl
7wYSOKXbJDLoBvU/j16SDKbGgxZX5G0nfUDerV9PVHYBvZ7nFM7Us4UnqWXl
vZJbKKnM7/dsgT2QL5b+fMZHxNfm/2l+1PWG2BH1kK2CbfTjiS/fb2t32FcU
UFqpxojjn2jxiWT5QfEe+yq/PCKWL+pzkqj2gQuhkl/e/5pF4xHKDIWvVaFL
Q+BU8oVl5PUfKnn8wAaS6iJB/RAj/uxgJvtpxB8K7/aPn49bRfIjA1x0uQYw
fink78UXVHjouvLB7jl/0AkF2YMW68iSrzvfxtUOzqU/vjD6nIhT6tkTKh1d
4fZjnrgrpxkwPemazkudIGAPi2ThSWTAKzs/CnmSfIFXKZXLIp+Ic46FnOmh
9waQKOy5fZWAu783BpNfeYIil4lZdhMl/2cX2pnecoE2FWGjJuN1xDLN32Xd
7gZZTkFvfz6mx7O1x8olKPM9VdPztMWfFpdnKly52+4L7Pdk/TjvMuITlcsz
lyP8IJD1H7xRp8I1xnKTMfOeMKetIfHTcwPt2fu1g/TbFoY6PkdZX1tFtIky
5mmJ5tD9avl6fBgtPr3yducwZX1FbNfa16KmEJXA7dasBG1wW7w9eD+ZFsd+
ZL/tHeUJHYNDbqf2rSCjlOja5/r2YKh+Z+THIwovP096xNJhAsfCjAKuXVhC
0TnD8r6JJlD+0NT/SOEWeiWr2mbR4gGX7xo/p7Whwkwa/zE4/nKDpu61njx7
Rvzjchp3bLwfmLsamcQ6U+p3q4qKWdgPJJdUs/fTEvB2aW7j7Q4nmN6ccZIt
XkWMhPRqs4suYJZQ0cWZv4DO/NWz6imxAKV7JzO/Xp9HEkpDdyoK7aDIwUpm
AVHjwxvMA6vO7hCW+/S2lvEGKqPFEuVy9pC7kHHTnnEHxT2zV2EXdATq8eWN
KXUCDrr5JKsSewGraoj4yCECPnd9onBF3wNuXt6nNf6PiC1V1r0njrjBEP/l
vLQP86hb4dj5uDIL0CJ50ATOzSJ19xtSVU1WEFd6VZDcvIEqXrDbfHG0B83D
i2qbU0ScFBx5V4yJUo+f125nnp1BBaq+U/fZjcCtYm72/qMVtJw1MPn9vDPw
CX5bfS64iWKHyphUNLxBwKuqqrpoDHGVHo+/03QCRnwsy7v/0OHAOLeV2Gwy
fOqvV7r0ehG5Sne+O7fLHsr+3mv4OzeHfrndVaJ6YwwFF1dH8jaosBnjkJr7
pDukBQiPtO7eQPM2Evbrai7AqSLKFlG7iiaBUUQr1RbUQ6UjD3whYnH33FAd
7A6Zh2Iqyg8Q8caJxDmOn84wTxitmZLfQZc0WR/qUfKIxkfrIm28hqKu/Hq7
42sDDeyNNgz9lHlJDGj/7xlFz9T936bfouSDdA0F/zg3UBtdeV/mzoirO3si
Ogb8wI9f+ONO5jJaGOJavilvDzWlrBNHZdeR5gH56w8avOFWexTpPytqvJ3A
n/LvPMVfNPrjJTgXUNLBc0WRzy9AnPGrnhema0jrZPDD3Zb6sKQW2vH5HDWe
K+bN1bvuATNXh+49i6bDlkn0yaV2ZMhL+CDjKUqLfXW9O4I5yFCUeuL2nM4G
Kpwmzt1bNYPYWbql5fdsmFP8W+Beq1CQl3/+WvwNZf4Wp68HdHlDhEPGiF/S
AuIvRXE7GgbgyFV9X8JtA/E2bvxJPewFn1dOWW5sUOMRDZ+pFVUvMHxB+1CC
kt8i2nu+1yyT4X17tMZm/jaSy4syElZyAOfUwpnJZ9T4eFfyLRLyha6tZpyZ
S41ZCc97Aw75AZ5ziV8CDhzKoWl/nysMbA69bPlavYhOdJ5XkbhqDY/sBXdR
2VPhs13x2N3XCwpOzAn10hDwh42xN07IHT7lpjTniTJiNZvDfupLgbC4rnr/
jewKeiDbOD4qRtHrAv0EBgpfUzk77m9O9gVSR96hZKUl9L682ak2zAqIWnwt
ws9o8I3TJcqimj7wXaTw2WQGAXtY6vEf8yVBO8+53b9fUM6rDDGONTtA4QD3
wIfSLeQbNkrclekMZx6qToe7UGO5qdgooc++QJh4nM7ryIi/epzwG3gTAHjv
/WF9biIuDP23xnfOHaJ/yhpicQZ8L1Dck3nTBzwG0kVbN7mwzauj9QlxURB8
KHX3F3NOrK8W8DskMxwqDje8FFagxfS5hWTXrz4gMVlcWstFwMwOrYtt4Y4w
8yfZuP4dEQdcKOl5H+sFJ+JKX6ZrM2FWmvTicEl/MKH1imGP30H+OdO9f347
wMoX74ZkSp6piSmp7uD1hM4Tu9cKfjHiu8PrIUZWQVD6ZsJ5+CUzrimcLF4i
BULcSbV3ojxc+GcAief0eCS4/qW6pRBAjQO/KrROJvjAOXEGU8VTrLhs5+1M
ISEIPP9OS74gLaNHWTm3+GstIPq/AsFBe2rsMsoqob3kDh9Uglo4u6iwll/t
3aDP7nDE3iiiWZQJz55WVCE8CAH/HZY0oVN0eMH/bMn9UH8oOZ7urbpGjf/E
PHRsN/ACgRufvrKszCGqVyorR/aagq7ii6e6PpuIKsT9wdKaKxjF6dzW+UXA
JT5J22LybqAd5Vjesk7A9DsuiV8GXOF03CbPg34GXGl5m6FA3A/07Sx96Ye3
kPKyNXNRtDMM/PJuOqi3g0JD4jsqPzrD+p9ORQlxKkw6kP6bT9MTcgWrGo4P
cuGoa0JsKZrRII4bn9rMbyKOr0+H+rNcoTvWKzCEjgEXT4QqdrpS+n3pfMNJ
CRo8uvy645GtP5jFDeVWmS8hmzc1d24EOYGohof0/XYifhB7emi6whXMMxJv
ZzxkxbuazmsOvQoGn3yTjeDFNfTWu90y56MrHFX3qrHr4MC8m4e/eblEgL7I
5SBnWmr89hHfQguBDBMJBUvlAktIPUEs43e6IVxjaYtWiKPC40ST7JiDbtC9
2t3teGUXNn6Y6DDaGAOZZSX/5TAto3BvOVuv/SRghx8XXNEaElU7pborwRS4
27redz6gwXn3e7vH4khQVLxFTLbjwszPl2UtDSOhbIIRVMSnkLjuoehx8jmo
+fTK8pQdhb/UC9us1UPg+fH9hpPtVJg6XfWMJmV9MhybttRhBOz/n9f9tduu
QLf3UPjrWCK+UXi+zEzAFSpv/+6Ot19Fj9vYI/r+X88skdNG1vTYYuUX6yrB
D2xXnnlbSq2j7l3CaVcb3eCbVFuKuyARN6wv7VLqdwB3mTa1ftdttFeb01Pp
qBscW7vk/4Ci16yiRW1Jj3xhl4C2leMXXrz0qpDLRDkGdl/eeETz3zxS1s2V
bmGwhfrB+SzqyU00+qey9C0lX1U0HYnbyzeDvLZfVLELG0HT7HlzyxBGrByn
UXO6KxRu2PGEytfPIvechg6vRFMIEhOajlumwdlPuulZv/uAW2Nj1VEyHV76
N+wg5USGxyNhUflKtFhAcbdefpEnsK9nitd+mkc76TLvTnJegvLbmWxxfMxY
pVf0S/hMAPBtkOcX61iwm5gYW31XIJwc++lOiNyF22nV7awbY0HoStT5gbIF
FGM0xXbjtiV05geMvx9ZQk+7f9sw9VqDIXZsZtvPiO+c4Z1X4faD5AdLkhyv
qbDN0wU1l1QPELor9CSCjw6//u+1Wq8IhfcvFGaIOVNhA5k/AymUeYgXPJT5
bP8ubJnarsboEQOd/80Lbu1mx84GbJm3w0Oh4MAL14YxVjzxw48mbSAU7Gcu
CZzuJWKdq3EZ69Jk2JDxvP6tYAJdE/6C6dLE4cQJ249Vg3RY94jCsWBWit6+
pY7iT99EXZnpcltyLmDNoH/J7T0zDnr6hztDPRQOBuO6U6GsOGz3C9JOahDc
u6o/u49tHeVvJZnlP7OE5qXYsi0LZvxqYeqN0MMAaP7rqo+nafCT5HKLuiR/
qNhojG97uowKMp/9y+yzhfikooqKkDX0LOmVStG0C/CF/KtIOzePlIjZryTi
NAGH1nhomU0jo6pGTslwG5jZN2L45s46cus8ovzyCwn0PCxfxWdR48bRvujp
Eje4fp+tKoWLiO92/sq9O+8DpAgGhqthU8j15+OobzKqYKDSYPQzhAF3Fi9V
0G4FgN8af4zwLC02OEV7+1esD+TSqB1imaXHYqN29z2k/GDAh18jy3YVBSfq
/DLLcgIthaccvIYE7Opa907tkTs43Jn+zcjOhlljg1kNlcLgbs/mi160jN4l
mkyRk53Azu27c4n2ErJtXVJuWrWFUxVf4nRObaKvhMjKHzUWMN1CykJ7NtD1
DJ663eZu8Nsx7pJl7CRS2K72OCutA2OjoYiWiguH2VjzenVFwMmU8kMvKX43
FVbOrWPmDSs9Yv9EAnZQe1KqEEO5LXzTCUjZ78uFRdlz7OloosBD0ipHf4uA
TyrGsPa/cgDtC1w7GpMzKLlxNVFb1xY+PVUkPR2kxmcZtINE9nhAX1svn9Yq
E87xkaLd8zAQHk4ta1xFO4izj6uQ65UTFGU1ISoK/1/9cTFAYZTin935+lKP
V5DEsrSD1VMKT/15F5CaS4W1WWKvvOb1gcTtj4uahhuIcXDrKhsmwaeRKVWz
SVr8hrQ/vXfTD5rjpKd7y7dRqrXW4xh/R3j70lXkcBwDftW+eeDhSX/w7OC+
UufLgc8cPMqnxBQGXRtxXY4S1Pgfg92mxk8/UKyXIzfZ0OMsRXnhBxZ+UPaT
4ZPlwiLif/hyJOybLZj5qLFJZVHhvwkNe3iOesM/PWpJWgc6fKlfMHoiiHK+
qew+vufn0JWvtFc77c/DxFR6fO/YChKJWCqT6r0AtWZqEy+OLaF3Jx/5ceZq
w/PnH+0kM2lx2NA923LKvPwYSfvSN0nEMWfdO0023MA21yUwIZvCP+deMChd
DABLXXXzY55MmEtR79YTUgDIbNHPPMxdQ5rU1It/RpyBVUpJqT+PA1+sJQoF
zUdCSciNSEIIC64Ru0OVbR8MHFyO/TXFNNjuwFq1oKcPSM60PyVRc+PhmFOn
O65T/I7L7gpfNBGH0Zc8LaDxA5pqsWMDXMtI9lrW+UBZa9h5fV8rrHYS/dwm
2nh8NYIvV+xEmb/TYIPbisuXvnmDvuUf+hfqKyg6jiplTuESeLVEfVYo4MB/
lWk7JQ9Ew8vSnYpdvIsoxvDymlDiRaCi421hovDItLyU8d2yIFA2rsqy4VtF
HYXP0pKU7WBUlLmfp24eeT/vuZhnbQ/Wmwcqc0Zo8QsP2Fb5Sgaj3+NDjS+J
OOidSgjXbw94b2elpia5hBxI5n6muVZgx3SI/sQKB25a0/CPUI8GsaI34pfv
MGF7lQb7KfsAkNN0t0o6zokZV0d9bE3CYffHNG/HHyvIiSWrznaCBPs+mLD2
RdPjeqno+zeDg0GXX1dTf5yAd6w+2jodcIKgQQbCr6BNxGLLT+X33RqmWVb+
mAhTYSk/z9+HP5NArEPLPHmQGZd5h39OfxgC/+4y0p+S4MDCRxQ1m06Hgq9F
drDeHMVPLNLSd3Z8QOUThXZbCfiox/a9yecuwNolfqBgkB4HNQuHTjUFgH5k
gNZbOSas+fq9g2+VPyiIFbmc6GHDGxpuUi2D4fBMpTvEY54Gj8nTHkjK9AN5
k/f3t0fo8RQTnchrC184tWU79vUaEafdp/7b+tEDaKWbeO+OcmGrxapEjsAo
cFMLb1/qoMU3z3ZJumqQQWkx5sO77kXUY1bgG9WjBz+Bb06hmAdv7w1JW9C/
DGp8k5UqDEQ8krHBshpvC+t0R6stO3aQDOQnJxVSeJAhO8ucvIqouPfYSX53
hl9HcKRW2Cayv9b2M7PHDhYuSz+qJe3C4XWWWH8uBs7ZCky+yZ1GL6x3Jcb6
2UL7zVMiV7oIuLggp7WI3Q4+vNh1S2vvCrL8PWp2jmwN5Csf81kvEzG9MfX5
WQ8X+NvxXeXlzho6zuz3QO40CbQLeL9N3dlG+45NEGMp8/VAc6L288gy8grd
cTtraQh7+eveVvwg4APXND+xxbpBcO+SfUYIE74oJFGj0BMIvPTNfsamLFib
o3F8OjQIpIXIXmbfiXhF3Gr/VrsbaKQNTK92bqKFe1bxgQo+8Ikr7pnV6SVU
1Rb3p8jLFv6LGpGnr5lFkztKehH3dOCUyKfW+CkO7CPFp6dnEwXCNU3CdpU7
6KOGIBNDniOsuCrsDq1mxwMCb2a74sIhYUIxhBhH4cWqzhH2o2FQoDlAHadM
hbPdXDwvMviC46W+WqEEWlwQwpYmNOwJDO1M2/o+G+hy4WA+g6oNjHu/Ld59
iRWfsfju1uUTBBbGLwy6Ti4jx5DKrVOsjpB2Ozn1uRwDHmS0STHq9AVXr1uV
fYdmEN9wURpfsykwGl5W07hKhwdcaZNHrXzgZqtKguUGLV6u0pdys/IFpYNy
uyayCXhKz5S396sXeA1fZdsMYsAvHeiYFqMCgHSElVZnjojzP5/Myf/PDbrO
9WUZm7HgrylHybfqA8Fo7kVOuwwjPnxr7+emJ35A5bX8aW6TGv+Y+HLT9LEb
dNzguUWlTOkf+bDvxmGOYNb8hvnOCQrfnAiN3jnpCU9yVM4duLCBFHgsm8Xn
vSF97ZBJO0XfvuSOcf8Cf0hWu+d7iXEc/ehrK+nPOwuiw6J2s+k0+Olen6pb
nAEg3F431BxLi6OrF8S74shwEz43KlF4eKZuPbEgwgdKDeRtYurnkT1X5VT0
owsw2fdPY5qNG1+WETW+TYyGo756sRHKNLiEvC/VoNEHxiRubTP6UWOuKp6o
tngPkGX5VzIwvok6eMpP66W6gYqzrOQNdiqck3w8nXTOH2ZsadyVFqnx9/xF
iYAJb/iIGz6pPp5DHvXw9VKAAVCIkNhxgBk3ytDv21gOgGtvO41+JG2g3rFI
1RYGbRAmJR1hMJ1FL4l62undZyC+pEWweG4eXene02JzXgcSmKgWvDV4sPfT
h7EaldHwCrmLvfddQn/2fBfOGbQDo2txNp8qVpFvxmFLFwVb+LBLe/XV2Dhi
LtIYSNxrAG/og8+AHw3+ZX9omPzdG0bzPx4vNWTAH8b3jV2tDYL90+x7UhMZ
sNPtPfcqqYPh3cEFm8uICotTz97M7/MGpq+8JdvzVJhfihgzF+IHd1bqb+2m
occGl5Zexg4FQmUD7cNXJisoXPtXsME1e7AqqfRza6DBHdnXLZ9oesOeoqcv
GC/T4VQnFe8bb73BJDXwOtsSAX/tbZgp/uoBqVF+bVzz80go4XBDiJYVpLI0
/dXqZsBNrPL59ecC4EXP8as/y3eQk+5osECDK0T19be7KTNhOnHPww8PBgDL
g2u5ip9ZsfqaTPO1qmBg4RhPe/aNAT+LEajfkvYHoeu/2sfU1lHSK7VfD7kM
oNRRk13OggMf+Tpi+flBJHBd81IiUfz13AG/3qf7g2HyPL8vu/42Cn5MrfdO
1g5oX9E85XZmxOzEkMhBCT+QsYoW+dG6gbY1NsXPbDkAgTv4cdv7JSSnLrLK
LWYDvceyCuTSCPjM39/d/b99IOWIgY0piQGL0+b9ybD0h3u3FIOt7Cj7f5Q3
euGIO4geCA5ArKuo276nSKTOESz7jt+kkaDCE+d7NAbMvCC71cl52JIZ0689
d/zbHAqa+8xcuN5RY1VNdk0nJTfYv3IFoUwG3BBZWC/yMwAuvOsoZmChwRz7
xwzPq/mAzDnlaVsFIpYmnYJPD/xB3ULM+O3QMkrclsVCJc5w8aiRCCPTOrK4
2zm0Z78LaPIF5h+aJeBma3zn02FXuF10W2mLagqJ6ab08uWaQs3xe7nUFF4K
2fWmN8vJB7gdunxeeM2je0nGdRKKJrBmnnLsJe82siPSzTxidYOnK2pnfjXP
oda8tr58MSPIb3q0bUtNxNlh8eq7+Ulw4eTC7X3cK+hVt86JG+/toUq/+jut
1Bri27ZqvaZnB4TNBCmJgnUkxRgukt7sCcr8Iifzz7JjHcMT1DnjYWCYMi/7
9z09/sY/Y5vHFgSD5aNPlHoZsLI6U5TSeT9Yj1NJe8pDwBoWHyTvNpKAz2We
s9eHBtOzlZTFvfCB5K0AVMjPhl/kV38sMA6FCd4oHs+/DFggdvTeKpMfaO6x
uda5w4Zdc/b5G+EwqMzb46c4toayU8ko7ZwL2Lb+bl+OYsccXXdPqrCHgSP1
gIbgezr8Xp+Oe/ohRQ85Kitbj/Lgb9QzQX8o88u+doIkIDiFepKeMqYmy4KG
/2aKofEGumLXrLl7zRlkvEjHcy/RYYF1F73uMTJcpf5tfsSDGw/qs44+Ph4N
tFdp+i0dt5HlDErfOeUIs1WXvWlTaXF5xzPCDiLDkbJHolXiK0iFS5dxWMAF
nMT37j54gB6/k3nRYfMkAMr3LAu0RW+g5Yl0kUO33eE4S+ZIZcA28huZS/43
7AIXf60Jcw1vI7e5J481N7xgxb5GYuoPNY47WB1HV0qCj9S0mV8o/hFhquo+
nkyG0i+tf2KCllCLWHzxpLQ1lPsmPXsnT4vfnsvffd/RH5ZkJ46z2jDjkYCL
j+utA2At5oLVFR1q3GzAUyPC5gEMY/f0BPauIpkF39GIvQ4w5QqO/BsE7K6q
E9DD4g7Ken+taZTWULziG5M5R3PYO8eZJa2xihqVG4av67rAYFTT1WgXFizw
jZ1KzT8QiB0yWzGJW+i9+fPIt/v+/38mrYadYlpc9frHoKiJN0wwbQa0s2yh
LoOz9U8s7GDk0Fmapz7M+Mqh3dK01wOh+LPTC9uebTRP+rxQNOQBMuztgYo9
Kyj2ybsOLn8H0J9SFN93jRo/caQLCu90hVfJblm75jiw6HmWHRfBcLCTsiij
qt1EWcMy289OkuDh/uOvlYm0mK/5dN3LGDJoG+Q9zR5kxLHKJTy/rf1h1WfD
jCeZA1tYGbPTSUbC69yyeXcgYIG7zTLHRHzgatZ7kwzlHeS3VC3/rsEWlPKS
ig7xU+OTD1wfhHSTKP4QELDfgYAf1WUpPXR2g7bCJzvp7DtI3ut+1F97JxBt
TFgNPUmLxWtXfDgGfaDp2IVDlSl0uNg1v6ms0g8+Hjp5r81iB5XLffmkLOsA
Q9Mrs7WIgNvM3sX10TuDbr0scywXLT5GTag8KeQJK7f2fQo348Wdn2vjjty/
DMeYMhm+yu0gw3HPgSAFDxjZFTpLVcqFW5u5uZLWI2E4nvWmKibi9xtfSTSm
ZPgrlh7vYbKGjjJffjezYg3vBFLsCD5cmGeh9YxOQST0BzxjFShkwENsl81/
avjB1CFGXzYBBnwt7uGJrs9+cGpcIvaE1QJKpbNX5t3lBBzrxWo9adQ4FjUr
MmWQoD2pISLtOjXuED+UNET0AEm/Mwea/0fBecdT+b5xnMOxV0RGKkl2oYGK
S/Yse8ve6xx7z8xEUQnZQkkpRYv7Jg1UEvVFkVIke29+5/f3+eM8z3Nf1+fz
fr/O6zwh8yhnNPXTmrwVTNe7ETd06fHrZQXF42Qy5I2mtvO/oMaJzFXrSiEk
eP57UOnkaRa86GnDwCASCotFB153c1PjfHa1reokyjxyDzEcTV5HAa4OnwrI
TvAwhI//IR0d3mzJMLQ+FQpf5ipyGMx2Y84wC6PvrPEgXRIgcJAy71Wfbk09
NiCB2vtswmvZedQgR12kbmcCzgbCcWsxK+iwzahE3oozvDsRK1rbRofz7VxT
JA+GAAdrMv8JPWpc+qXzqiczGY7H7DbO0aDGSYnh0QGS3uBve6vjNCMN5h5h
YQml8Nn2AbHGPZWzaN/waPvrk2aQtDmqY7K9iJSfXuU/rO8Gr1zWe6snd9Du
2/L8tLy+wO/a+EWRmw7f9pA627eLBBd92e8nNbDhkwteLlKRYSChfvvu3Vxa
LLwcSBY5SwbeRvfbU1O02JCmbODewQBIDCiRc6Pw3JeS7zOJQh5Aw6WoO/eM
Ha/du/J1sSAKXH/LlfXqrKDd2002ptE28LOD6q5IxQ4SsN51amLTC17oFkpY
XVlF9n2dgk/O2MLY4M9jb0u3kWkDE4PXjAOUybM/cEpaQ4IyFpOBSi7wSMJI
OGibGsffElv/Nu4Pn9RWUx8ysuAjiq5S0nVhoHS9iljaQ4dJx46UuQwEQrVo
ZnsjZsavkV7R7vgwoLMM33O4nAo/a8+tiVb2hpsslalVjmsoncOiidPQCeSn
r34ofM+ImX1T0gfvhsBp3sqtHv8N1F3MusfvLsXPHco1mXj/7wv2R/j1PcFl
oIM3kIca/5XJi4tAfvBZNBw9DKDHxYtphZyugUC9nfvu9P/fP88nuH3+BBma
jRs7tIfpsL7aUaLdeRIs7g1uFKD4iNndgjI5aT84mkjkl96eQT+xtmq4pRrU
nXhTR/RhwBHxJCml0SD4nhDNFXlrGY31JJul+9vB4JjJz54DS0jEraXHhtUD
6ukZM9ZaKPnBdrCBxcMHWOLZv2pdX0bKfKcykzUuQK2DnlB6FgEfjWVyc33v
A22Vl28evrGITA0/1L/yMQLL/sYHwTfXUMjfAdsabAHUZgzIN4EBZ8r4jh0O
DIKudZO9/hUsmKbX/RehOQT+7OV3Eg+fQ0omYuWXDRQg81RobBtpDTnOl+4f
eeIADNX869td3Hg82+TuW+oEGBc+vM6RRocLr0YPSOcGgZPCx3PxD1bRSgzj
aJ+BAyhNCxxOklpAPAWF6wydttA93o8UQljwtvWTp5FDEcB88N4enuF1dIp/
SMCDzxOu9tAPX/+0gdyDCcx1S77wN3bLxjSGFusqPBdqlyRBUGU1d2cIFWbe
9+KM5SdPEFqLSeZ9v4Qa9viZqhy2B2NpqoNlRAJuWvPo7LtHAqXnMbvdCWz4
T3yrpdZqKBz710uwzaHGLJY/1ZgDyXA+R0/4avgGitbjSaod84QvCQUHJJe2
kWJmddB/JFd4deJSZYMpB77zlPHB4M0IcHA/N/nj4woy8dg3+JlsBKGaXvP7
BlmxYahfkqVjGIRaTN84cIiAP73xrLezJYH44MrUw8V15P250uhAoDuc3ddw
z1+bBrPejqTpX3KHqlvVl7lqidg96N+XEw8C4NUd+sZMOiosrZLjsUjhgbsj
U3/TH1DjE7vEJo/+9ocdHr9qI/859N0wdrTtqSOceBS7b/gvNX6ZoZAStuoK
Lrjg8SVvWmzkCLJfs/2h8cRt2thXbPhHoUM/PX8k8AWzuVs7M+EUjo//eDTC
IUyQ1q6VZhVpagZBxiUHiN5L+yKIcj2yo7F5VqlkeHD89k91YSYKX+U8XjEJ
gWkaze3z0VvonuOH/ol3XrDpb/qujsIrMdGLtlHgBwWc3JNlQTsoSYlNdZLX
B366CqXMJ1Bh7352BbdT3tC1+/F05jEiFqy5J+UNAYA/ylkIpnFiOVXhxUMS
sZD81kjA+ScD/tRcnH2UIwzu9fhNycmvI7F9/mJPKX6fXvdyweEgPbbpTt2R
awkAbaujt2/JMGEdcsUhon0E2NIkm5VlrKG+3B8Coh1uwPxUzZPGnAP7akn9
mr0XAVXcg5dGhlaR6A1eQ65RY5iciZI6b0nAp0Q8bOhqfCBMIK41apsTN8y2
mdT+joOb4quLf2qXkU4Tf8i8ihW81GaQlnUj4Jcvy10ucvtC55Glx7HKy6g2
0+Qazy0rKKdff1xEtYE4mnffvZHoCOeLGieqh3bQRQ536ieb7vCCcaVRgOID
bFvqhh/3ugGdWzf5ge42OniDK6ag0Qd67HsQAyU/S+qZJMKqjSAj4Tz7+XM7
6O3P91PC9s6Q5/heyCFuFWUYF7/1svQFGdfUgf3BBGyUOv1SsN4TZKtbqgLC
d1BM/SmnNX4nKPnh53lrkgqXRFz4rXjeC9x/cEdNAjOePkXT+Vg9Cmxab0yE
idDgLm010Vm+AEgaTzo+9ZeI/d47Fb876w9bvL8udP7lxDYnCUU3HWOBa8Oa
8fpZKrwRWvJK4GwABPEVjchrbqLv1+NWbn5xBpUh0f2XiuaRXojvwedxlkBl
501yUCFgl7IJgYhMMlwch49N3QRsHOHVFF3pB47TWteFKXwib1Mg8uuJF6jH
Cf1gzeXAbiZRnW35kRBSdzqLWEuLh0tpbed2keGdHXO2SjIzHt/y2WmxjQCB
J8MDvFMELBNdJHt8xx18qO0nTr9lw/QarQOJLyLh5b7Li5u6a6iaPGISHe4M
/AYRh1sid1DfnreJzYYucGjP3bisEh4cGM/9Qpk5EWbfhmu0RLDjoUqlzMLc
KPj1Q3/47AYt/nI6hCMqzRdUowf3VbxnwYcq1OoMCkOgJ5eq7iDFr8YOvVj1
NfCGwrtjDVNsNPiGrV7PmSQPyHXPncsS4MIMJ8/y0TvEAvcx5bPL2tTY6ubd
wj+NZGCYPn7j8zMiNjY5y3y0IgguiXmvfGLfRA9lpfMCdNxh+0tgfLj7PPo3
/m305hVdaHsT8VLAegl98JyubWlxApYi/fe3HWdRwec7jhqZ1kBv6Xn3ziYd
5lVnmlr6//uwX1CPd/tR4fKYmG39Y/4wZHN8ujNoA7llsx6pW7OFfo/hhUa6
efQ1oMCyMsoIxl7YlbLdZsCPNN06n3yk8Nl+0brXw9OIzSc8R8FfAzx4pTem
OTcQzUnl65733eCI4kc7TUc6XE30jIt2DAKVa/1Ne+m2kMh3Qsa6uCcc8Nx3
UfMtxW/XaFI4uwNgUc09t7FmAVXp6arm/HGBxPC3MxbDcyi4r/6b4gU7MO8X
OR3AuYTO37J2UlO1ALF7wfNftKiw8dXmC8dGvKHEw/nFRSEiduLivRehQwIF
XZvBri/LqKt+nT7/61l41acMRl2biKvg79GevZ5gI6h/J+XJFOLx7mA0k1CA
4ITQlDbPdXSUfulZyy53+LS/LzWMmxZP7o07o9RFht0BLqn3P28hL8319FbK
PvHb8RE1NanwetS5XW0sbqDBE5eWx0rAweHf807Le0F0UnpaxV1avK19QzUy
PgQOulla6YzQ4ArTqvlLxiT477Dujc3DVPhhWZDsSAYJzL4+U77XRYsNZBs8
3Cl5Pmy2YcQqTYVHqjxGTy+5wRRLedVFlXVUZeSjfnnIDd5b/C3SiZpDYWF/
/hTNWUAFFTledXwXrt2wP3EuORYup450h3fOI9OYDQpomMPjme2yNLs15PE3
39V43BluGYq/nKmmxlpTPkMCDzzg7I0brCVCC0jxdX9b+qwq/NmUO94eyoJV
U2s/TiiGQ/dnf+tvOpuo2rPF6ehTZ5h55DSwd88ycngZRzhxyBV8hFer9O8T
cDez5o0X7/zAtOOSqScvJ74vEMLkfiAORjo5AquVCZg2XlZOMJQE9y0eafkW
0uDokKqyOyGe4NqvepPt0zaam6wvcnzvAh2fEtTrCCvoVP6j5lsvLOFeZQa5
epzCtx1Pq2yzL4Dpe/IH2dPb6IyvkoKFtj10GTQXlUuw4X7Vo5/cd0KhIOb0
5drVRRT6LVC9pcMJDo9LTbV/m0MP1eJD8nMsYCd6WGdljIhtl0cdbfX9Ya8a
4+ZfMSLWazu87lBJgsrnd62EIin9XT/owSIdDlrV2XQ2z/fguPeFDrd/JALt
fK+rvQ0d1qka5dzJCgDuyyV3LvWtIVteDfFr0k7Q+5SGrO1H4VMR1U//MQcA
vF/4pOBFhz3LXzyozvGH2Ir7sW77WLHeiw/dLUuRkBpXMcAlt4Aul1Z91bJz
gHPkPgaP0kV0VavKjDfSHm7kBec2M1PjB1vsCWaxXuDNX6iUROGBfU0JP+2+
+YJZa/kxOy8itpN8X0qDQyCBFBnyDlPhw12TccL//z/1bEHRo/JN9EY18UrX
DSfIL97uaktnwNu7QoNnHALgllFnOZMxAVebAq/cmBesKOAcr8V5FNEb7JjK
ZAzW349OnG5hxpdemmobPg4BEZbRfQkHplFO0tvO0/yqsO0kXR6eTY3dmUaq
Gke84NA5uhNMv1aRJ9eXlUg1B/DDD7Ju9S+g6+LmhQofnKBfnIc5IIeAvceM
nevYSbByfz+shNDg4O4HSpnVJGhtaTHWXdyFn8scCaP5EQ316a+bbvmy4s8R
2u92/MPg+la1L3anwRcdv69ONHuBcMql7lYKf/8+Kde1Rz0IgoIZ7C7WzaPX
bRIVd3t1Yd5h0PT59jJqVIxzckNWkK7KwLVRTYdt/DS5Y0UDQCxR5ILSLSo8
RCx8UDHiDp+neNWk8ugwYa05W00zEEJ6RHm0WjbQ2h9JfLfDBzquCpz+0MeI
6739mYJfh8Ho9ridPGEDnf02aZuT4AxS7Uua76zp8Fe19OlzlPPvD29TVHeY
Qs/CSMzHTqkCuehNH384F57TM7sfdjYeUva4xt1nXELpZh7Wr0JdILVi/1qy
CR02kf4oo/mZ4oPjn3eRTm8iD4PGg6z73SD6p0FLsSkTzgsLVRO8HAJKa4PT
dRQ/eSujaTCi6AWPGDO8WqZWkOduDh9WDhvIONS2JtS7iPZdSDA6FGMKDJ+D
ZM80suA+Bb+4W71hQM6YfJ5WsIH2yo/ti2t3BfUoIeaL6RtI7CTnYuE7byDM
3NYyuk+LL8iPPHm+QYatuqVr5TNbaKqznz9KygvwY9tFeQt2fCpo7vCV4AiI
OJN6KqNyE+U5LEnIGzvBno4VPDm7jeSrX6TQObhCnlOJ0NGPG0j5amOlXp0r
XLkneITz8TqSDh/XDeP1A9UrE/e0xGlwRt6D9qF1H1AvbE72fMeIPQZ9s3OC
QoDWqT3gy20Cppv6O83qFgwD4X/35iXSY4YWSfeur6EQ9mnxZ5/rOrpfdF6F
lckXpn89nBk4PY+a3+4NM0l1glfCsRYqdERcuL/pfKxFAFSWUjeWmhNw0oEl
HHY6AKTGst1yBNmxz9AJsQ8LYSBg+2jvrtdUmKaGEKb0ngw3cVAWhzQHlhNW
ezusEAmyMWECs4vbqPCahqBKugPocx6abJTkxLTBJ3gVImOAoV+M5Yw8EafO
U690vQsA/YtTl0VeTKOTFTUJgX/04F/frS8lTBso4ow49UCKO/wcujx/uI4G
z1BNdv5po+Tp9wS6skRKXr+4dO1ToBdo5B+uWNGcR4+mr7Mn/TKF2EKeqzQ6
BFzqdeVJQLcvLDGvuhlOEfHrpHvtyeF+YH3r5mNhiU103I+Y0xznA5/cEu93
8TFhIeNX12lMg4F33o8+t2sOWbVsrzVLWkL+bJPgA8VVxKJVLZraZQGPj91M
W6ylw0eFWEJ+BZPA7chjE7fNRaRhtar4esgcfP84J5NUmPGtwjMfP74MAVel
/qErLzhx8bHJ36M5sSA4H9ZdprqClvYesdH46AZy8SLOWr5UeKfb9tSquxss
mNxj9hjYRBo65bWXznjD6js+qVOrK4h4OWSy67cjRHQ2JppT+JN5KXTsY0Ug
eEjv47LmZcAzx56ybaEAOCos8NFKiQo3jPPZ3qA8L/7HDU5sd1lwi2tu2XB4
GJiIFI6ufZxD7927WwIP6UD5M//ReatdWMuKv1X/UzTcpffn0JJbRye+t0Zf
bbOCx2JiUiieGh8frxgqCXKDXJt6XPmMkt/pEZXrjYGgn1dy4p8EFf7FLfqS
n98HOG77u0i2LiLmkZ325hoj2HXiaNeVvmUkfuEbwWjLFqIVvjoN1RNxvphd
toOTPxwd7XO9n0aPpfRro2UekSH5/T6XxLkJ9PxDwM/AQk2QqXngI59Fg/cP
n1C+EhsAVSdTZV5oM+LvqII7AAVCd6h+zO37jFhqv/jyoUdB8PSFzErWrzWk
Yzi61kbrDEN9355d1uHEFyCgjftzDJQ9G0wWFmLGOq/Gqxe4wiFaTLjpIwc1
/pA0tyaY5wZ7V8o7si/RYotE9tSBvWQwnZlx1i2mxTcbmwsIHD7w8ODut/yn
mDDjgvbO9eJQWK/MPeBK2Z8rNywNTK0CYNCK5dI5e3ps0uR1giuMDIr/zYUf
c6LFts2Jqj+FSDA9dSSUq4yA/a033pvJB0Cz5fDGjQkGzGJlkXH3cjB8fGf9
krpsFdXfKAvozXCG5/lv71zxo/jrS8Ys3y/ucOdGWZmfFxN+FjfOVyAXBD1+
p05wuW6hUsa+3wounkBXWze4fI4an+YvWzzO4wePD/6u0Q2kx6Xr4S3bqYEw
d9JR1Wx0AykNEjXKLVzAvKPHq+kGLabaqE37Y+ILNZ9jzK7rs+BzvmlFY5Q8
v9r/rc+AdRsplXLX7I/3hPxlYwlq3VU0WnPM+rSyBzyXVzVOsSbgX7Ougv6/
/ABXPNGv4qbDbvYEC47xILDQ//mJsWIdFR6tuzlSagom7/hWvhLocRPxR4v7
CgkIa5UnVYNo8UGBmsQr/CS47IYPZolsoqPDM/svEr0heS9R9FXBNFpRjv9X
4WIOSyUyBqQURjywnF2pMhAKe50qF6lVODHe+KZbpBkLz5MORgi/I+BwXtbY
hGxPMP96tTVLlB5TWUqwCHaQgG7NJIY2mg5bZFk9T1sgQYKwyN7eMzvon3aJ
1J9Meyi8HF53+/sq+o/Ofbb1ow+Y22wLHTJdRQoLhS2lb11gjExa+zpAhY+8
fBRl0+ILXe823zMFUPpxm9PG8kggEP+O2NMV0OAtianWH63+QJZLEKseWUL6
l9t3VyFXiC/trOLl3kSb1LGMZx66QoOl1DZXNyv+u/urmINYJJh12nO1Ufq/
+w7flsIebwhzbJo5RWTGzgbXqIMVwoBtjfn74BNavJFDthMbJoFJXCd2ur2D
xm8V5l71J4HYdsaiXRMdFghizGfZJIEhm+hK2vIScr3s6b6Z6AL6VQyO74aZ
8HWtmHlJvzBQ9GFgLlVZRP/2vRBktLEBpbIm6UPcG+jMF+XD/1k5gfzunzz1
n7aQlpE281MHZwga57h36AUTlv7gPR9CCIZUUyqjbn0a3KY2PK/k7AkGAcsS
LZW8uHFArbas/SLQlzIxza2soRjLLsGoGTuo+9h76w3PNBKtc9gqSDSBuybK
b+TX6HCn1sCIjiYZnhcPCHnuXkCOThOMmsecwL1CZueYEBXWJym98pP2hMY3
ka+5G1fR762lN06XXKG4ajMjq2EJmd1BnxhYneFCG2RcUN5EB0P6qB5l+8O1
M00G/7Evo6eXFkyMZh2htkf/irbsEvKi//m87JgH3PtVJG1htoMELnScd/9A
ho5Hc8NpYpzYaTTO/fGZGPjd3/edcGQ35oqpE1StiwPXixdXxP0IeMdYVdOv
nQxRard9CxuZcVpuSer15WBwD1StPl+7iqT1D3q17vjCYelMaVoKr92N6JNe
kw8FMX8v5t7pOWQRy8bXSnkegUem7r2znkSRO+vqrDtSkFNdmuQfPYXmI+8o
jVaYwtvz5z+k2G+j82XuTgfcSBAiIyAz6sCMbV/sbi/cFQb/mpzcSryp8b6v
Z/mdq/wgNuFnrXs5HTaoYIu1vBsMiXksY4H2TPjroVmJFzEhoHj52T6FDzNo
/cof8ds/bMBW/eKpZCtqbBBfGeEc7A1q/o+Ldfp20DvbYgnOTBKwYvGwbpcF
JOzwmVdGwAE0R5eWqyhN89Hj3qjGXX+YLGt6RPueAZcJyiSNFwZARuzbxvZr
zNjlX92tlPZwuMLz/dut17RYIOnvH7X1AEh7QeSgvUGHu3XeXhR+RZnfo14M
FmMEXKX06N2fUB+oZj1qgD7uxgHLeWXTkfHwIZSLje8/ih/1se79aEWGXuoz
1Qlza6hZM1z8v8PWsN90k6nJjA0ft/c4F9MTBhNEWYtLkzvoSpdOzGiMGxCH
uEqNFmYQmdnUokTKEuRieM7Xr66hvMJ/1Oa3HOG/sw99DCjz+ezQ9oweoxco
qxEq4qXosPNGSUOQZADoaUxD9m8qfE5L1OfyvB/0EUS4nfK2kc8OW1RdoCv8
eaNzuJxlB+XKJcRkvXCE6EDOWZXD9Njrm5rHz7dBkMnL1sdTQ4NfHDugW7hI
AmpnLltVuyUkuusY/baGI1iPh1mo3FlBvF9GiNaDLvA2fWnukBQRP7z2Yajt
mh9YeorTy6zSY3WUFttBFQQcxrZqE49nUdYtussig6qgrlf1e6ueD8u2f2eM
Sk2CXFFzwxg2ekxaeP2Ily4QjMozxU1vsuCIQ5lqZq0hIFSx2D/xgAlHmeCG
hvpgsHbI23+F0u+O790XK1Xd4Ga+LVPx+DKqbON5aOHjCENHLj9ONKHGLVEi
T06sk4D5s66koh0LtiyhCr1lEgb5j2IFfhQRcPuLBBW2C75APD54Ik9uB0nw
3mdX4ibDMzO+mzP/7cLX7326ekgsBk6ufc8aWNtCc8sTCcZ5PjASvvFMpGMR
1R2g/5gi6wy7zSvy5RE1rj9/7NsBOw/405d7M8uMgLvOvpkgUXxaO0EkeXFq
EzktHXxLneQFbKdsT95t5sRCYrbCM7yxkFVgLbfIQ8DfvnmmrchS5qlNm8eq
ZB7t4/rxsK7OAtzsZcaePCXijp5hzYeUfS955t2qcY0eN44tHLj/kAz8tQ/f
pN6hx+F8S0n91kFgyPTq3offS+jkR4KhmrA9iNZJHAxm2EZshdeIAdEuoPdV
90vJCA2mP1Dt5rRDAo0RocdTjQz46YMTyW03AyFS7sVHw2cc+EvaTbvmuCjY
CXtcFMw+j57XxpmfZTGFE4LHnJwp/l9c6GNT5OILp6JFQyoo/SMXlC4oZeQM
YSt7WcZZCVi3hPY/Ax8yNJ4s8eHJX0PXadwOtym6ghrTD2ddCh+LbGtJnFMn
QYtwnLf6azY8uXrB7LdzBMyR5Fsa2mgxkcGm6AOZBKKaboybbxlxTFiL/N5b
4XCj6wbz7M4SYuF7fcwgzBBc6v/y2fqvoewfPozWlP2pFf03XMkyh/JCvv7V
SlSH1NtRNG8ovjErFPK38JonxJ5eVb6ySovvtTk7Ji2RgWXP/rA2yrzYv8yT
zhDwBtaaXz9b/jHgitPK9YGkQIh617C8qb2MWp4pDT+66AIJ76lFz06vo3OF
V6OJ/n6w//qzDFN9RgqPy2cY8UXAQ897Og8Dp9HnymjVBlcNWExVq9qTuIxo
/tmo6E04ghgWfSh6ew29nbrju1fHDcoPsv7h9llBN7NU5lP1vMHyncqRd6z0
2OLDHosj1wOg9l+YcgGJCaMjklQUY4VhvqJMbwlqfE267p4YLQli1plnXGho
cOeFcIa0AR9QW87/IQFc+MnhqdhU0zg4nSpqlCe5jpz/jROED3jCQx5XTrpP
E+jO1dI9jX0mkG+hL9grNo28VGTVp30UwBHOr5IYqfGfa3TN9aVeQFeJDbq3
6HHRTSloFw+G9tL8kWW6eTSQHD3mjs2h7mpo75waAzZ6FeN2cToQelhkxOjt
aPHU4OSu+qteMJs5SmfFw4olVwKp/HrC4f5+EBC8OI98nl18/b7LHm7sdwgN
bN1Gl9QNF8uZXSGhu/mIFgM9VvkjxpZvGgC0OW9Ov3Ij4Dzu44YMT31B23J7
1r+YA48H3N4vyRcFYbtaLugPLaBBGfGc4S0TePBrl0SlCAc+Lv+Quyk7EqKD
21+GnKLF971t7nFQeDZp5L+cQVYqXPz3r+2gojuweCazcMQTcMrxX9bRbmR4
rVSqfJJIg3WFgpt+NJNgQJDXvoYyv93RTkIrfH5wki37TckPIu7Xr7LwehwE
N2uq9WiOrqEjto41Xsuu8JCb2ZTt7AqSf768U9XrBHwJOWmViduIY6k5oa3U
BQ5qzzhh4TXE+Y2zZf93DzikskCs2TOPRDP/WLBFXIDpWdfIh7wc2KzmzqJp
eCRUaz6xSqP0l4b6kMw3Sr8RRe83zjJT40LZWo03/3wgZMRwOuMbNRZU93Ft
ovhyfsOZz6SCTZS/u+unDY8n0K9cdPLiJOLh15JpDRSeXCaeaPmpQ8mX5aJK
T0lbYEn79nVjNzUuetkSp17jD4vWjyb3EIiYSo94XsIpEA4YfH982YcNr3Bm
xl4UD4PPAk7TSbIEPOGL5a2KvWE/v+tS/ld6PNTeGckSTAarruYtYecZJNrX
fD0oyAqEhLsl0qVp8a7DF9UUnYLAU+4l+6ovxZ90xWTpN4KgJbbW/lXUApp7
zMTmZuMIg3BEot6MCms43Q/08PKG4rgj07WwgI6qqhRcFTeE//qHypb3sWOb
Dwo27NvhoN/RYuMktobKqCxUkhUtQcKwyqIvehOJZnwu4KDMQ9OnRm+r+/Po
r+3WOdG71jBfrV/59A4LttlxctjzXxiQfTQ3HA/vwrnV2SnTPdEwsTc5+uKR
bVRrIHr2Nr03yIdrGtUMraLnOYzF5yl+X0mExzS3mfF7ubo9zgfCoCeWW+Zr
JwMmc7qf5K4Khowz1cKH1alxuMCm9qirFzx/nWc4f28PPkKeRzPqF2G0PYkq
nocBi9T6P9n4HQgnd3scr/42h64cVPE4f9oBlO3E+3vDltDowsK9RnVDeKEj
IqlEoMPr4uFG2TIBEDu7yv+jmBrrKBhGvKDMj0W36/Phxh1kwUK+fxecwfrp
O8ctBiL2apKtvZwQCCOPdStUKHwXVvPFLMbPCiaH9z75LEnEZb5Js3JBZDhy
XVcLrW+h+S9OVwSPeMDCUtfG8+cLqMjXwufBTzNwDu99IztKhx/6rBQ/ovCF
/2UndUUSB44O3fXeJDkSwm2nRwetNtCi8hOhSX03cO0Iftsdxohf9V5aFNEK
Am6W+qun4rZRvYuGgE67K9QuvouLlKPC61xMcGXUAUrHjkYfpSfi3BvC3nhX
AEQcNygW0ptDTn/3mAaZq4G/7LJc6woBP4/sT7cO8QKbPaxvgorWUIvo9UsH
aHxhx+w5X9AQDU6/UNW9KOoH/wgf7Lbi19Dta4dDDAZc4ZFRcfueVQYcvBXv
0fIlFAIuP+dX8KXDQu/PLcVXBEPI5R7/+4Fr6M6YhLrWG1eo2k6WeivGhC81
NhiYpIcBntrzO0ZmFU330Ir1UfrDcno2dur8BpLd7RHolE7hp6zYFbMTNNjv
r/hN9kA/SOkrOVdlvoI8lDOtbm5ZQbnJwOn0Yjp88umZgi1Kn/kcqHsSfY4K
59KJ7/br8YBfm/+ZjQ/NI1oGD5s/o5YQc5NB5s0ENTZ3iT/oH+cGdTP1v/6e
XUQDSY2eqifdIcC/aU3WeRVd6PujmyjsAKcO3LPLPrGE2AMiLn2fMoV9ygJK
Yk5U+FMgA10JtxeIuTSErxstIraYbx4B9saw5b6z5XqeDafpDBrctwmHr4o2
xgzsK4ipJX9h8/8/Mq9wnLWsosYDLhWeoxf9oNelzOJdEy0WzotaONTrA4GH
FzhSr84jK1Ur07oye3BSoH90RXQTHd7Pv9hx3QseSmX3HgmdQxqGzxqFTCwg
eIA53iGfiIm3KIm86gtbEXxaIsLrSFLX6eayrBMQ7g6s4kImvGeMU4x7Xwjk
f78dfImBCZfpDjxoSguGsqaRR193GLCMTbww6+tAcLsWoykYSoXNJUzb9454
g9TPZ7bySRvoTtQvRVYOd+BqYqBXSN1AtwkD1MVd3nBG5skFM8UVNLEcpv9W
wAno+/2oQtyZsGDChl8JfzgkJPHMLe3bQT2MbQ7XKPz65WCKDjqxgnT4SOp0
bJaw57/E4kwtWvzjsN9VugAy9Gtdev46fTe2MW0bvFYfD0yJfL+UbzJhrnMZ
u4S3gwC0Y1aI8kx4I6SKNoIlGJrIXHK/XWkxxxoIDHV7w8mVpjHwWELJLFe7
gzO0ICf3V3gAkQXTkuvOhe4EQ46Stv2ANhH/B86/L1L4TtFH2qmjYg0p1msL
fbb1giVHmaTtKA6cIiFxM+BPBHxeEn9dUruBZn5wKB9394erLnIlIuULKLSe
McmZkqeXkwpU9PpXkbfTQSE2GWNQUDeS//5uAZ18vXSk6bcRuJlocfWtsmAX
HvbGINMwsOZTr2Qc3kCiQkmLLw3cQcw4c6a2kQ5nMb5rnjkUAJXCtjUJEkxY
6lyNamlCMNg1fcyX56LBTys7z1j8JUNrPerSZaPFhRmdSRcofSPeuZY7X0WP
C9s1H3qQguFVlOYTvqZNdEbw0AXvGCdYfa9Tk97OjhUuyBmxWEfAPqueE9c6
qbGnuYjEBG8AdOTlZpIqWfCDVE2uodhwaK3qmWu7s460H8Vf8bb0AMtHiVbi
9DtozFbD9MAbTwq/RpJonBjxflLEHYlfgWCi+HrgXSoNPqg1Lec1SoKCQwMh
Nxen0bMIaerv8obAK98QGblnAdG4SYpkhpwAVMNgfHhsA/WZD3H9/32D497P
JINyVtBS2e2Kp5S+61f/MjYsRsBw6vLY7k9kOBTm+ORs3zKaZYvedzPrJLxS
Dd4tlM2FZ9OWXo7tjYNt+9w9hI55VHU6QTzB1RoqpJ7EifAsoF8MDwolY1zA
wJyxtR0zYOOBXl6TiiCIczR50F+yG38rLUjPTIkHtYzBPfuvMWDGp45OjW4B
cHIuhn66eA6dfrWYG5ZpBs+Djh+ceLmIjn98u9H00gEqNaMcaZa20a92hvAT
LA7gpnpK1JbCD4mGwfwegr5wOo2qz3xqHeVX07041OkJhR/+lqYHU3hau+BN
Sr4DOHnsrm/9tIKCrOevujPagtsAF0PKbnpssv3K4UBiGFQ++uJm/5MOuxu9
NuMzDgK50JgXCRT+HaZ2suI+HwRs7Hm1i4d2UPvDffH9/b4Q+izZae3IDsqJ
l2PKm3SAmeZnAjYFtJhvsHfXgpkfJd/81Hgon09V5P2TFveCSb+0gsZVItao
zU4Saw4AJhOyV74kLR7NPsHL1eMPqfyS955qraI935is+ozcAQX00Lr2UeOd
nubzlTP+cNuMpfWZNx0O06ANaa8LhPdoPlFtmhlnd6S/t6sMh6vLknv0h3YQ
c7LLhs5Vd/BM2zFM1KPFjD+OTT7MI8MA4qh6wU+LU38YrgkeDoU32cbV13Zo
sE3dHt49SiQgxNu4S7zeQUHlFZySGRS++qa4R0acBk/9PpDeu+4DoaKXDq9Q
/PsOTLfGBZPA81UHf7MKK6Z6MCPVExQKeXNCws9XWHDDa6+nzKMhwOD6Li56
dBmVpcae5b7tDXKHD3Zdn19AHyS+Ji99MIG2zhinMF167FFWzJbgHgJmm9ci
6xOmkbCfj9xJ3bMwEF+px/eNE5PPi5wzU46Dimgu29x4ImbriMpv3usHMqhZ
71chHZ7cRb1W+44MNxeq7/Q+Y8H4l0zPZb1QYJgxXQjWXUeZz3o4EpUo867l
RnOPcRn9DarfmeHxgG7XpTL9BCKmkYyS9JUnwfFGxWOE0l14vjSP+uSDGEhv
z/xULLWNcNPMjde1riC7er8zW5MGd6VN7u9j8oc+N+ll8uwkct848vWNsDbk
KX2O5iPuoBtJ3E/vl3mCV05TYtLmJvpDxyNpO+IJwzKGwTpmNHh0K3l7284b
nlpw3U47xobnOerGUklhMOK3oPtFhRb3auSu2cyRIV+3mXWgkhHnzG/dud8Q
BJrClhdpGrfQ2uKMe/stbxg9mff+gcsKsn78isZ42xgyrX++k5VeRp6NI+Un
W0yBvUdwlqhFhZcMz/Fd0fYAh0Yt4WuyTFjgyGGWu4RgIPIJu4nJE3C/ZELq
QjIJsrYiFJOiqfDFi0+f0E75A//2PFXo6Xn0xUHy7ktJc1jfbBXccVxH5SMZ
4+BhCYqxD5t72yl58ddrH9WBAHhfFqO2d3AePTK8hhicHGHGKv9Fqx813uRj
8jXX94ClyPsGDvXUeOX9brXMH15wSN39tfwNJsx9ern1l2cEDHB+0wm4zojL
0v99HzYPgfCjWSGe32jxO7Whop8iATARWEaKDqbHtZtfFwy4giFz9WlvXBcV
PlRrraMW4gNhPXp2lZnraIsw3jGu5g0ilyoKJkhUWK7heNYzB3cY9DnJORRD
jY98fz5deMMHJPfw7t/3kxb7BdDdZXQKgLekJtGlzTWkFb3SPsXpDkxT1nze
cVPoq/BRUaytB0/S9GFHjoADS2wZd0S94XfJVI7QxVXUbb7RMHDWGWar37M/
PrmOdj6zvmljMYNfEywGSaJUOMVa5b/VV57wZoapzGZiB53na6XZcXcF367U
5o/MnFi/R4tqyjsW7ssMTWv6MeKgzWOzuu1BkK+lYq71nAE34qsWtEJhMHpk
kMZUgR5/Sg4yxmrBYLJbWed1/Sb6t8/uVLe4M6ScDh5Lh104IrS7a1IzCj6I
3Jzx+DGHOrL/7l3VtAO3hvdUEXEEbCx1xpBxnAzfDvj056fMIarISufq0ybQ
XsDH2XKWFr/Cd+m93QKhydzNhJxHg0s1DL/V6ATAZRHTnNepy+jCh+Bp/hgH
SDfxcf55aBPZBp4oLHbyAmMl4hnw30F3Uyzoffo94GUpR0JG8RpKcS1wnv/r
A9/okzTTq9YQoaaUu+CMIxw8MPV94iABc0xeOLB53hsgKC5OspIB+3H1mmzr
BUJdnqGe551tpOJ3msvjPRlC357ecy5yHc2mh9yw63eExcW+6lbOFaR6bnp5
z1FTsHsdOeF5hgH72EX235wPh+z7agWmhYzY4TnLmHRUEJjqxSQK/lxDOun9
2UK7vEHvTOHZWj+Kj/1oqVe28IPXdDTJyWcI2CzVKEsu1ge2OcxEHaRocMcG
w6SziQ845p2wqQ9aQ1u//iTn3fKA9Ib9Qa0+BMxbyNXkkeIJhkYX8RgrHVYy
2x/f+4aSp8SqRz0vltBr47peltOGwM2j8OSrIgu+Osby3e1pGPRGyvXm3GDD
7jmM3H7K4fDlza0385k02FVniMmW7AE8vaQoSU423MZUcEEZh0EqGF9eVyJg
pWepd99G+UGhWVZlc/Es+kVnsz4npQ9nnXOyn2xuI2kC7lbY6wBvYEJyTJIe
P1jmcrVzD4DTQQnGhy9voHLd42cvNXvC0TpzfC9+CZ2YV+3H0a5w3XCm49yz
DXS1Soj3zit3OJk/zRMpsYJ6vZXV8gbs4Hd+DbV8AjP+Pf3u/uzfYOjj/SY0
BWsoSlDQXOaXDVz7XbAXW9Ph13LsSTFD/tC+mEvPY0eDmad/l2mMkcCcd0jC
NZAeF80tdz4QCAXq7Z9XvT3pce492rn85wFgxCv/yiphF/67x8aB9lE0/Md+
3Pfw5y10ajdzw8wHVzC59a9ofh8Nzo6/I621RclrfixfbsOBqV5d6pEoiYQW
MRn09i0dZp/YK6J9nAQa374K0B+kw1RGNiNxFF7bO2Y0ZFe8jVrBWumNgAPM
t4rT/6ghYi7J6jHpixR+2qhPnP5O2WfvRMb6344w0iHk8qaWBp9LVfKuEfKF
XKmSi9I/t1H4EcEbdTd8QUDMiTr3zyq6OrS/9e+WBzzSOCpLHCTi6Y38ABp/
Ct+b7eLPZ9pGz+0fsdN2+oHULu21N4+pKeeh/mnczR8+nu58+vUBLT4VOvb5
Tl4A8DH2PTiLqPF0qhDHl+8UfrhnKYYkt1CDXroWk6gH8H2+U/Kf2SbalUg2
06Tw27erdzx9TzJh5ePTohMtIVAavGLwK4cTL06FZ144GQ+TAp+5E8LWUFfp
NekyBxfonbO9pWxHwIyiTw44e/hAnJrtC+PLNJhNI76xM8UDZJ/1+f7eS4Vt
1OeYWb/5wOGFe5/LniwjF7uzIVtarnCziyFvoWEB+eX9VB4MMoO0OhvFBYs5
9FsWOY+fMoQlqwqDnCZ67LpMdmjxIcN8VIPJuAkR691gT10y84fAeL7f8VN/
kfjAmTuRkedhb7fS4VdB3Dh7WCWw2S4BWB5/mKt7P4uSipX822rPwrju2udx
I2ps/eWaEhvBEzJUPoWolVBhzUM2LZN0JGjbrTx85igdpr+1NmmtTYZyP5+j
5u30WDWrrtoihQzOfwxO3+XfhRlVfLXnYmPhSsb19caz82ifbdB/PsW68AUl
1mYw0uNJzRvM5k8CoPVZx7SwEwOmqxf09/geBOXOk243VJkwTdwRFlXlILBQ
e6y59ogK6/9RGlLa6wXXVYPHfjgy4JfUcOGIYCjkDEhLC7isIXFTk1FzPi+o
FbfO6+pkx9PSLVZXTkXDV4aWsvOKTPjd66a17UpKn9+z6d58SMTowmVjpeZg
qPn8py3l4AQqUfjh61RoDOEi82M/Kf19ZucVcdvXF5zIgvd+VM8iLSG36tR9
NpDNdlT4+HlqfIgJGQh0+MK6+Eu/x7tYcVX6VIrN13A4tlEeL3BuEd2QPMkT
qmYBJwf3sxUUUWMG74dCvdHOIB5pZdcnvozMX+6fraK1gFafiKxQRTrsa9d9
SjYqGBTHK0mia5S+URHY50nZd4c5pW4Rplm0EPOxrY1ZAdRKC67TtFDhordt
5ovgDdev6fTKxNLiGnfZgh/2gTBv+FUvJ58y77kP3vde9wbFms4rTXEUHrTg
vT530xTqdGgObcjQ46TeybTpW6HQrhXzeZXCM1y1yLDAxBaE/uPTWP1Fg6+Q
q1lP3Q+G62P6wPiMGo9mHWc8tuENkd5sySYndpDMX/O5E/P+UBmXIppxixEP
rjb036Gc33y2s82aCRU25nv+yX3TGbK3X131WKTF3J5zTWtNZEijunxOv24D
0XaQWrSlvMHiQXeyxrd1NKLsLMts4wdEMw1L5TesOCrX786afhh8m9upa29f
QGIGLPZPFB2gNeIHl13HFkrw4oy7RnIH0Q4svTW8imIt/VLKbC6AU24pLG/u
IO+OqM691e5gnxMv/Zy4gBaUjPW/LlrAV/vGq1u/1tGue2e88128IXexMcDs
PRU+d+hIpvKmJ1w9oFe13ECNH0PcF0FNF+jXuDPVs0mFHQIHwiOukIDurPLE
WNIackq5nUf1whUaUlVMLlyg+GRY0ErKbDgscXzu4qP46pL09MLSKy8onB+L
omefRl1fZHK/z6rAXPJVw2DKfnHtM46WY/YGh7u9zYLji2ie8IOq3d0SprIz
hDter6C2uQemDiru0G6fi45R/J77ks8bMDUD3v0amgr3qPGHawYf+tI9wfV+
y/ty3VkkeDBKwYPGGgZT/sa9/LKI/tPIKDJMtYIBJb89qs7UOBrfmrSnfJ9F
5pvYgw830B83lXeWUw6w+W8WuLMY8CQWkzHdppzfylHrazIMuDyiyC6QNgS+
Wti9bvxKhYv3ss6QxEiwE364/+M5aqxfQy+jvewFi6ijWqaIgJs0OMsvFJFA
utxWwVZnBRk1KlYrb1O+3z32S1s4Le44mnnLoz4AMowfVoQMrCDqAJpXDC6O
YK/HLZSnQYV1z08o3ZVxA7+LromZFP+yPcDXdLLaA5i7i+jdPjHiLbar/3Rr
g+DVz1sPGtdosQHnSQ7ZryRwLGHy/bLOhL2ujF4a5YmASI2x4XlWIh7qIscd
f+MPjNNrdT7FK2hqhPUg63l7yNpnw/uSnhk/TtTy6pgKAuxeyRj8iQn3/12U
ObsQAqfv6/rSUa5v1L+4/A2bEYxYvUjiKNlBN1/yN5Y89YAVw8inkwaLyE30
YehgvQJsVf6Yl9RdReXyO6hw0wW4MjceKmsRsbJPlnknfwBU2zB3zG8Sccrd
Ew3y8mSwl5d+u2a+hjQy+nao2Z1BXlW+J0lmG7G9WUmKzXYBQyEZR+YlWjxh
xkHl1uNL8Q0puKpIxE+imoYJLn6gbNYzPf2diDOvb2hYvAqAUUbtMqooGvwh
zeC+/0N/8JU/t0uChg7PW4X5vyj1hyFmLTWnMHacq9a+yRoSAalCnbmfrm6i
uSeybIOr3nCayOKspUXAEdQzH5iiyFCoz0p/g2YB0b+bNGlisoRbjneGPlD/
QzNc8UFvVC1AL1MxsnWJBd8M3rqWYhsG6YeOhn/uXkCCybJ3jk5qALX2Y6se
ETbcpRMhnscQDeJGKgHUOnOoPKjRe/2vHVxn9L37SXYV7boy+DztjQ1Q11Bv
fRcg4OS7T84wSHjDEb5zRQoU/rZv16tLYg2Cv5U9p/6Yr6BSMTMb+jwPyOy3
0YUMApZPkWA4vkHhnbI60D1G4a02ibqpmiBgD+VPn1Sg9B9v77UrOmSQNejb
PqtCg8nfSfmaFP+Zr1LcWfFkwPvvkHsqKc9vrPW4SnYCAY8/v4Xf0gRC202b
j/2p64jKk18j5aszCMXUCk3jGfTsVXBl5h47iO0MqxzZWkDXXscp51dogcaI
2QMjfhrMEp347890EPTH0zrUnKHFIZzLJ8nGAWB/rrkn25OIBa2qdvG6kcEJ
P+p/cZYG1ykd92CN9QaWTyWEBEkaLJLDibaDA+Hg/HaW9MQqsupbG1YqdgLn
iCK2T8E7yHl/2xmPWneoUyimM/y+ggy/p1NJibuB/FvHu4cY2bE1/UuIJoXD
kZKFOurhNXTg+kFkauwCP3Hbg3BvXqzn83FT2+wiaMpGDDlbEnHI/OK3C72B
YJ/28IcOFx0+7HEpyqgpCIRGYseCk+fRb+vV1uJzptBtgEP5z7Djt4VFFyum
wqG04Wm0nMgKOnIideK4iCWMNXU45O2h8PYhRW/lEUewYuRe21fJjM9skccS
OkNgKOV097nTjDj4ibGONmMQdA/72Xwz2kKzDwJEyOccoHRB26ZwPwGzJWal
Ndz2BeFvB98fzV9FYiT61Fw9d0jU8bu9Q7kfK2+7O/HitnAi5yelDmhx4Hdb
M3qmAAgSii9oz1lHGo/3vWWc94ODtvtf+2rT4Wl1Pe4GbzKE/Ku4vaa8jtiI
5vUl1S7A3LP/gnHpNsqZrj5h+pgEyav1f6zcaHClBM0/KyIJTq7yU5MeraOh
Ip17aupeoKnu17VSQcDsbFefGZv4QfTw7uizbXPIffD382Tv81CeNZ3bQaLs
D4GFhzWNBOTxoL3EcEZcHtmjtOMSCHeKtVmiZ5jw/Sa/v+s3QoDmsxcfouRJ
sgc+p1lG2T/Hn46ZlH0/VPu5AFPu59fDJ2HENBqcdbT33fgfL6hravrjELmB
Dh71ILV+cwcnOQU6OgVa7M6roU+D/WGldqSN5Skr/pOV5X6CKhx4nI2lnRW3
ULhubjH5owN8DI5wemW/jaz03YOlzvjBWdNZPoEj9Nh26WHn3ngytL5/wjDU
RI05PkqsEL/7Qv3xwl3CyWw4IszmNn9gOFSVh3EYJ9Bj6Ss/mC7RkUFMv4vG
idKXj9zjT/P1uYPSxT9aS4+Y8P6uP3KnfgTBr0//Umu0aHH7dYNHlj0kKEqq
Hq7inUZV9we0Dz/WBPexT6XL+bsw+85j58eS0XDthVX/U9Iykvv4Aj9f1YMy
v+pDq1+o8XOtY2NVd/zgOg7f2p6n5GH0vVs7ZB/gOpKTzqVNi+kfLL/7mUCC
y/nJeEufFheY1OV3DvmA3L/Wph7CAhpkzEoU0jCDpyXaK5d/0mI9L+2utGZf
4E9362MJpsHbPEERY4Z+kDZ/9N3XUA7cNiFe8FQ9EthzjDSZuCh9aXMgqGjL
GbQDpJfV6RaR4F6e7/MPXMC9M7Dbx2sBvflyyeLjPjs446NRceMSLf5dx0Ro
vxgIS9YX1++p0OLVaL5XVAo+MKJ55Ev2yApK+WuVtmRgBRX53583vtxBij6Y
LumgJ8TKnlSSzmHCvHT0ovndkeCWpHp91YIauxhlSQFlHr9s2Av43WDCdXyj
eVkcIbArOWHU0psGS0y8++5V4QcC46KRCac2EaM7vRvrvBdIX8lqY5lbRStl
8yJGRFcYCM5Pf/KXCl+eq+jvZCeB/vh1a52IHTTmyNnAH+YF8sdMxYKPTyGR
XK1d3DU6QMt9ZZH8ahYlcN2c/33FBMLEOQvOmM2joGcX79eYWYGHtKXmf95M
WFL+zxELlhBwdaQr73pCwGssMZ8kKD5AeJPSwUPhw5sJby++1CRDQmC9xEk7
anzfhctJcpcHTCyH7zsbTcQW9sRE/n1kWOBJtGOk5EU2LVFjcF8IZNDU19VT
8n3Qwe/ee6IvxEUm/NQKZcBaMsqbhPPBYBHVwCGtQ4c9KzKMB84Ew+MDrAUJ
3LOIoZBhaXbbGhw0msZYnWixpUbWQsMc5bw/qrocfbKI9jycCCKdMYGG7KNf
D7yhxoJFgnZixb6wzb3XYnNgERlp0dUylzqCHDHJasRnHYk4/eXio+yDzc5J
uWH3OSRWf9cxoN+Bcv1Zmblb0yiQyyje65w53L4qoxA5wYqLB4t9F9LCIKBd
LypUkha//XmS+k4ECa7PMD44q7iM/LtzJ2QcneC9bYLYXOcmmhHett1X5AMN
6vpnD8RT41aHCYPzDV6gJ6/pF621jLy+SspVH7WES/bJxwy0tpFTdoKqQK83
XKnOac2QWENvhSrX80ccwOyVppI8xR94RHWftHeTYeR4vx4DJb+k3m9ION+y
ActH+8g3pRZRiXTHJ09eI5gMu1ruIcmIW03Y8g94hYPwTY67566toxU2p/9U
rjgA92If8/3odWQhUK7MSXYHloRjr6zuUfJFWFfHUjsMUkxFkQ8vB9b+LcRY
SB8J5pKWo//CCDhv8oHqjZO+IFsv1n2LwivLV/bO7uEnQek//RizeDpMRxO+
kERFgu7PHjJiR9ixt/SdGqmZcJAaFvM0TaXC3FkSd6XLyLDx6L/rygOMmDnp
KT6VGATbXcLPtrZWEVNrTdIDojt46ISOrIhw4ydPu+NNveMhbOfaXXp9Ksy7
i2HKUMkHNEl0s6JeiwhNMbzPazQG87W1xIqvm+gyJ/u/Bh53mDrarp4oyYQ/
jbeM98uGQsjaISocRI+LfhWw1pUGgqK4k9TXaCZszSXhImQVAqHfgx9vUnx/
feWX3IhVKBT+1138NIsehzx+7pElSAbRda3VmQ42LKEub27ZGQZnMo91me9f
R80aoockHzoC89CfEGdBamz3RVZgNs4HaFdiWcKDF9AD9QtvLk6ZADby8/k3
xIwHnZXyVcco/mhGdgjD88jkTEW9x5wd3DMrCK12p8X1ajWr5Kd+kHO3JsqO
l4i7c5Wb97cHwi4NtskqsVVknCQ1ilns4YOUi1kpkR3fnCzmaPeNgMXd5g9d
vWjxJw8dZjauQChvkO4a6l5DpNRiBWZ2T+D9rDfz3zM6PMT3NPC/0v9VdB7+
VL5vHHeGvSUkJSkhNERCLrJDVrbsPc859shIScusZJZZSaWQIu5bX9pWZTXI
CEWy9/id3x9wzut57nNdn8/7/TrndR4qjH4wjPeNXEasbiq3BGIDoDhQhsGS
dwY1kCkhCi9dIMDsBCcf2zzK2Xz+9vqqO6jkpixmtZBw+g6lu/tVaXCOdCbj
88U/KGVjYV312RFQjuNTSktfQTz8wW5kTw8Q28vx2rFwEWld3l+52GENtTZX
pOVaCPitVTr3q0BvGHS933qqnox7G8fu1x+nwPMpryjLsEUUzvi7qDLNBAK6
TbZb9RAx6UdRcXFRIGTlnt2RtJuAN+9o/pC29oR7QQtUOfVpJPznS3332zMg
bkm2m1PiwX6mz2euTURDoGlj26uKJSTEuOVSQbAlzBkyPbFoXkcj0Srva0y8
YPOeSln0tn/ovnv7Fhu1k5CZ+UaKcIwN32LVv5kpQ//8bUUbFKQ30TVbyd9y
e3zhijhW7zFcRZc5qYFJ9Pxw8/1sKFG3gtqH8gpKr3jANe+H/XatXPhfGRn9
nI+ES1wRF9S3k/AsLHG8/u4DAps11/92M+DEh87RvYn+MFRYcT7LhIWeH9lJ
XT5hUMyi7uycTMbkgvKOjgAa+GnWKSZ1TCIvmbg/NC1NCJGr/uJ0YQktuImz
EUw8oPyaW8Sd1nWkeH7veSMfT6CPcW8X/yySWDYqmWAxALOxEb1W51WUMBfa
sP09/XpFWn6ObmPGM//mm03HgqBim6YZLqLzRr/CjlpeF3B4Xy3/iLaC5vLu
kiODXGDrxaeWOZ1riO1J/dZ7w57wr72/m5WZG2su2ZMSmSNg5qPBQn76Onp8
aSrx/99Pr78Yk67fQ8L9DmvfVL/6wkRmko2tIxmrrB5PS9pOA7cEWcV/6qyY
pR+9YN4eDPuX2NTZFVnxTbdSdu9dQcDkMcXnvkDAFb0x6LdgIOwpc6/qzWXE
gkbyt51cAqDW8WVjvTAv1v/xNnLCLhqeD2kF5YmQ8OuuoqP6wkGQTLFiGDxG
74Msk2TbIgr0DJ7cWvNkFr2bWYrenecAN5MmpBTdZtA/5sir9ammULCD+4e8
7iLy73vvzmLrCD7PEmqTQwlYK6I+3yPdE/w25iSuFjBhtoADfXxZNNAYPFZ8
vH4dMZV3tV+Y8IcjcmSXPjqf6Nz7JL5h7g/jPNekdRwJ+J/yooXce3fovuf0
tTicH8eLVOvzzsfBgu6q4AeXZVS/s7DgzBEnCE7Uj5t5tIJKdVRzU1UcIfTO
va1Sz5hx5KkPF+a/USFcfiLg+15G7Gg8HqR9lgrfRW4TacYMeCRNZt8YhwdI
fP0nm3Z1FW3TF2fOuP//57OFCk89ZsMzR/hC3uuEgM4FMVX3mk20KOyuV53q
DWcO/lrfG72BJH1DgiMnKMBXKnW8kd4H2ceU1WzmvaH19nXRro9M+EBiZdFW
hWBwKD0ZdKmfGVcYdx/Kag+GiqMCdrbf6H7CoevNnuMHFg5G7E7tDLj67kwS
/3cqVPo4+T76ScC0zN69Abe9wPtwq9GpeVZcuteLo9k0DMiCj2o2xBlx0wSX
jPEaDUyYBfsWo6fRd8fHU9rYET598ZN1jJ5BLWHvR15nOcLiwSJ9LkYmvL56
dXGlKQAGiXJuZ8ZW0euxfYk7PfxBgr2A8f7IFIrZ093ivdMenl6/un/5ABNO
ZpP4IvUvEHQrLqpYhzDgz5/DBgLPeIHUR3Nhzk/riKUjhvXGOT/wSBMK95lf
QGd3G1KVfzvD29ol5smDTNhk160K24MhwB3At7s1fR5N92sSfnQ6QfoTy9Nz
p5eR7YGbQoG7vWAu55oE0ZEZz/V63G7BIYDIzfNfmcn47MA2/ch3/hBoQs6v
/DyDqC28WezursA/X3+H+pWEuX/5ND9+6QfxyfkBh4+QMSdXtue7fgrEBvy7
/DxrE6VXc09l5noA+W79sbn3DLjY7FkCb54XVMornK1sXkXfzbMkImUC4bmP
neNB+nxk4ASFpYwwcPSNLG/cJOM+cpyvt1MwLB7xnhm+x4PF1l4SXI9GQW6p
i57f///v73vOQJFyEJApIwYNzCSs4FSq9eenB6RVXqlut+LGZYe62brkosDq
hfafun88mNy+tiXsXwwwmdf/UO5lwBHdHinpBylQoVEobcTPgr92kXMMw0Pg
0RUd9wUGAq400Zf7q+cP9+LG1MJ81pDehYcPpks8IB22BbL5M+GyPRuC4wsU
GIxgd8pc3EQsP1suU156w+T4X9lDRevImbrNqPKJL1jKWBXeXV5GN7zuZQ52
eoK/063PkpKrqJFVVlFqnwuohlxxKmucR0bk7MWhY64wvK+Atqg2jX53PM68
3q0NXX9lx002GfG9q5Q7ET40uPNC2ibj0gZyPCl7MDPbFxRNHH1EBpbQ9WlG
SQ5jHyAH4Fl8mR3zMZVyeDWFwX+z+mdqR0h4R7nJC4H0MNBzG0z+pcWID5bL
7zooQQFHrcNsMTYkXJl10lZBLAi4rReEvVk2kTSldp/ccRqYqptQnU02ka9g
Rsnui55wc53iv3hjGmW0cGclIGNwXAgRmJFfR2cP3OgTuGUHzWE/xzwnWbB/
952Hqr6hYPyZlshtsIE0G03klMxpYJBurmtTMI8E7GKmjxHMIWnb9a1jzgso
bqByv4zLKfjteO7S8RoyFhiKd3wqSgGOt6JHiJOMeChnU1s5NQgi5XnLf98l
4v2SYtM6F3wh3URoej5qGnl1+qVmnzKC+SdTNqzq7FiSZ4+71fVQ2OO397Cy
Hgfm0Dnz5kJyKOhvLZk8p8eDt9iGB4n8iIJDI57DOVtJuMZWlei1iwom/J6W
RNEtWHc04dQSxMHu4ZSrJ8Xm0MYfxB/2yglk+t6V/qzlwOA14me2GAbZGhIT
rkt0/47ZLy2u5gW9rPJxOo7081A4zLDSTIXI9wV9W9rI2M1Iebfg1UAIXL+8
K9iFgO2dtzDxHvWFsNCNsGc6G+hlcK9aR7IDGC5z3HV4N4u0jsjnx8meBvVq
HzvaDwY8fGiV2xOcIViUXbJSmoSVnLZYTbj6gYKpG/Fy5Rzac4ex4oGrFrww
vTV0opoBJ0+WtDjQPOB8RsTWra/58KVg4zMunHGw/cC/zg1xZvzj1X0fznNU
wOEWoi8O06+nfKv4rI8XhDpmtnkPs2A14p5TBUxBIHhZcyw1mxvz1if4e1Gi
YaRT8lGtASOOnNLoV9egv95A4lCFzAbauXqFyWzJC3b39XfsPciM97w+qnq/
NQjEH23saecg4pVmr4fn6fxh3JnWcfvgHBpqDWRBrE5QUHn4aPHsGrqjPk3g
+elJz785zx+vGPAdsWI/Jw1XELzgtZf5AxH/LnJxEGKlADI8NU3JX0Xqpx6o
+b3yhWfE1ajwSW7MvZRXO2McBZ1Ptp7Q8WDAJNXaE194AuAZ/71AHj9enHIw
ncMoNhrMGLuzC68xYk7+tvmPWlS4v9ews3ieCS8tfvQesA4Drrb8pzl0Xrt4
QfiE135/CJfeiss/MGI1OdbS3QMBkL3jT2GK4SISiHKp3kh2g4IrN+1Al4jH
iqq++qV4wu6ETg3uyzOosKjA8qr8Gfj3jlq6yrqKJuyS5QKFA2C6atep7/ok
7KdrBjKX/EB4X4bTs7R5JJqTW3lrxxH4pdRZ0l1MwBFrgWU1IRQgiZ4b9HjD
jA2cAk/5m9D3uUGVcliMzj81e+0n1qhQ01D0yNmFDZdv2XjVcSAYgg95fmbo
YsROd2KU/WpD4OS9Dtr+dxvIPi6tRH+rPxzrqFfV7F5CxPNkmQROd0gNzrcv
qiPiPZrL3Lo/fWDlTZlRxttJRLp/du0a3ecO1rSlnudcRrutSrRDkzxBeFI2
rLuLgMXuZa0sIG/I3cljEO1PxOlvr7CZkSmQ9Fjl19VDq2g78Y7r4l4XOHd0
Qnd5mQlj98JLKoNUaGN9v5GZT/eZdXGx8dVwSNQqq32fsIBknnkI3KyzBJHQ
/ASFLxz4UZ3l+cyUKPAQ7ivLpfPgn7UTBboqrhB8gr/FLZYBy1oOnukLdAG1
Uw1MUSNErPl7T4JNIA12zgRVfEql552trrIlnVfzjOucu38w4uXTh7gjS6hQ
9ifZi4HAhG3FHFOl2Sjw97Jo6QeLOTT4Pn2nZ50LtHxcuh0rT8QdW5R3EMv8
oSN5Y7QneRpN1Nws+3nLBuQ+eVbG1RNxQu4q7xg5EEa5V6zHqWT8cOTim8th
VOh9Y5rHoMyCHxiUmnX9FwJ1h+6pLWsT8Q3pJ6UpST7QZ6H0yOYAH27h2p1z
hBYD8w3Zf9nHp9Dw+WtNQ0Q7OEyVGP+dSsaeWwPkTk1Tgau4juXvLSI+hdq6
ss28oYF2cO65LAHXpEz+Z3TaC352xS14ra4iOc4/YzKh7lBdw5b8vYcbfxbf
MiJdEwHBUsoelkQC7j+PBLe5uYP8TpWnFvQ8qhx6ru51LAD+piTvp4atIN5W
78jrI+6Q8aEmrXAvM7Yfe0wNVQwGpRZP3SwZJpyTVP7suToFPjwtfxwsTcCB
G4rWtXtpUMZcymijuoC4mm6O/ZUxhyzhH3s+NDLibVqRqXoPKaDEV3/0pDAR
4/1MJ7zveUIf+0LmtUkCztChCjxv8YMwt1UWEetNVDYa9U2HzhciXVbd7Z28
uFFOtnrMNQaOJ3/ticqcQ9qk/d/9SPKAP6r1DGpx4pVjKzP7JMLhAL8IhbuV
Cd/cxvF93z0a5H7/lF/dT8bjEfE3mq77gT7L6j27gS047eWPzaivccBS6Cgk
L8uK9ZhjbgQdjwCSm5uS4Mw68tQ91/ykwANO1P0lvvvLjHfqJIcfv0KDb99J
ek/8tmDRMxsbO0rioeNR9Ule+vnHCM9cSL7iD85VXMdDtDZRC8FB8rW7J4jr
SMRyTc+hcEMpBlzhAvp9e376iLPhNqXOtj1mwSAy+29HWAQZu/60E85xpsHn
C67xQf8I2HCfbqLuMg2MtRxagvhZcQI2kvr2PQj8K15s375Ewt7F9a5LuTSY
vaj56V34PApvM+u/KOQE+7gTO93FCdg6ToOHL5gCKX8cDnalMuAvt5IRpdgT
juX+C/2YzIrlLsayX9QKBxGasdeey0w4dlvY3rtWdL4OEz0x6bGKekhJ8NPB
HWSNNQ5IC8+gZlHLXAdLZbjgOnl3VJYZZ36rPFx1hQocP2ZNLLcvoKM1ubo9
Q25wru9OqLU+I97TIxmnfpQCj/ZbXBZpoZ+f3leL5sIQEP7RU91gSMZB46U2
Eu8oYK977VaLDDPOv6vGEVsYDN87Hto2Pybi7bIC2xrjA6H7UtVzcytBrNJ1
lHNmNQG+BnB8j8+ZRH+Tfsg832UKQn4R6f8e0eeHW+rmNikKsN5g+s1EFsB8
y3ul8/6dA5w4EzyfzowP3M1S0v4RBOXvvedfx86jNgs0dYnVHNQZxUmjHQtI
7N3L2tfppnAwNsZ4r8c6yp2UtazWcQfeD3nShNdkXCFEYDpK78cWny075SwZ
sEO5wzsJbT/YbsFoWGbEgKUmbGt+uHrA6xu7uJfRJuJhjfx9rcQLngeUvlin
rKEUhRxb5XB7oOVtePjQFlBCx5ubqd6nYTNN+aq3wAYq2vbH33DdB87YU8rb
LxLxeBSjSQsTBZz5i8JphCVUPxsksEfNGo56h59fdidikTK9R9/C6bzmnlI/
wLmJ8jrHhc78coG5wQ96JbJErCDdKKLXRIOesQDt5DUiLrFsNYtK9oWIPuEb
n5OZ8D8XTGHho4DsrbbExKeMWLlGb1TkCA1C12NeKl9ixHczGcyVcqgw8tIP
6a4QsaPiRoSZGhW6G0Wu2SssoTwFPVGLaVdglPCsq37Egifn/z3l6AqGj3Hy
7ZE6dF6scjyau+wON0+c6XwgxI6J5X9GqHwh4CwhbDctyoGZB991PO0MhV+f
QmdCv5DwX+b2P2ZdvnBR2eVA+AMGPPlMsHFIzhuQaUDU68vL6FP6VwPfWn/w
c2Ya1/f7h4Z2r5uJ3DUFI6I+2DESMbFtbv6iYQC84tGdztjFgUdflEXdGo+A
WTX+iWtoFtUdLzf85+IBx3Vkvx0UoecP3sf8x5UKg4bZ523KmbF6mNfPncU0
yHp8quzheQb8tbbr2Co9f7hihw+r5/Fiud21df6DZyHp+erbExn/UMLu4A+7
xU6C3zavbd//Y8ChF8MSBgODIGrkRZFs0yKK3/f9ko6cK7y1lk7PWptFlL8H
c0/k2MDURIt16RIjXvA1fdJ+Jhie+ojZqopvIsmY18rp1zyhocHV4Y0BG+aR
WXsS4xEGjWktXMMqJJykug0c6by7LkvqHVOfR1vildo+/+cM7yMv7Jv9zIjt
RM6nFCTRoMW4bv2uGBnnvZG2vVfuA49D0q/5NZNxqoCiy3dOKkg+EJhJKllH
xs60vS8avOBYetbgTkUCTgzOi0naHgD6/vrRJheW0J9lf0mijj1w3DneHbU0
jZS+bm2y5j8DOTE/3OoVSLhY1tml9gwVhI5FFd25RsZJUcfj7On5najwaPtg
LSPWMC4I/txEhT5yGkvZVxbMwnXoswBnKDAYxUW8WV9Hup5OsTHM/sDY7q5q
PLeBPld4bF/09gS/lmu7r+8i43nCCaXxKl8Y4c5peuDAgF/732MasKOA+03P
5nY8h9od11/sVNGFXf2ez1/UMeBHuQd4g9f9IMV2fX3XA2acfNTrpCl/MFzS
bFP36llCfIvvGlPovCLW8C9cmcyK/57/yp4oEAIvZto33oQwYmlJqXuf6fM7
oW12fWzvFFqRObTzhJoT3OhWYXzcSsIfWFTzPsgGgUQ6+eio9wLiuLiUonja
GSRKhi8Sxon46zni1g/b6dfHcb3OpGYc3W2XC7W0UYc0KVNF/YlNNNPYuh8d
84DDMhtm777R87kk6IzenwCQeasZy20kgDNs5tV0PpyDzzfntbRqF1Hoxvu6
Q07O4BbydqeeyjRqfDHXuypuBMbdVknyIgx4SvDBd302f+AoiT2Gr5MwLuBg
TqHz7+FYleX0byR8lInvWdYWP8i03vbs0zQrph0trb0eHwEelm434nyYcefh
ywHmu4OgU2477/tTdB410rktujsQPutTMoLvbqJJP2e3lY8UkKr7DWWdC6hJ
wX5X7RF3kOE7zfFHcQ2pJfAVKNL57tDIHcExAxL+dVRlPVrQDw59eE0yujmP
puZqWkMjnaCzwVc3KZwPD3ud6ZfcFQfVRYfubI6vop/KL57lOnlDEMd/zpp2
y+jK1/5jiced4ekkV5RiKTPm2htIrjUPhfwYrl7WViJuev+oMivTB1SPCQ4d
OLqAVGOmu6U9HODIVE7eL8119I1lH8/Vdz7AGhP9uuL2LBqG21fZArTh/pXf
Cd72DLjmCHfa+3RvOHddM5hvfgNdvcL5cKHRGbJKhj5bniLjOQXig5lQGpQ6
n56bMCBjag2bxc2gALiW7uN2KYWIA+szC5veeEJv3Oc5uxhOfHwweKG3OQKO
oLqsa3Q+i2KV3lLjTIWv7+uDXz1nwBkitwZ5hVzhn27+aEgeK976ZGGfqEoI
xL4IcPjkzYhJvNs+xhjRIEntR/jA+gqqMmF2m5d3hZg/IgfUFej5va86hWBK
AZvDaPNx/wbqrOf0npH2g7zrfbvc/ttE5w687nud7g9LPxOUut8TseKYctOD
w1R44C+bWTHAju+n5D6t/BYCC1EZ7hObvPjtyom349wx8GrUeXbDlQt3XZd7
WPgpHDQn/VnyBQl4xZo6Ip8ZCPPN/6Ij6PO0N57fbS6IBuEy6lbLNQTc/HOX
5kyuO/AvnziqKziDohxed5854wLPLebY1HV5sDrB9U2kVSSs/IrW37ZjCY2g
aDmCgSuw+h74z+YwM/4cnW1Mo/fJ1EpTGuXjFJqKvjzQtqIATQJdCd9XOHGM
4cs801dh0P7fjasdGwRcW7LK0bTpA028bp2WmQRcRkveVa9ABbPVb7kBHJw4
aOLsuoRFNGy78P5LrQ0j7je2OdvcHgxeiMl0OoeAO7LTpQyW/KH6sdxlqGTH
msKsFxmdQ6GPx0OszW0NeQfuH6x45QViAmohT53IOMbgIotvry8IxemFPT0z
i16eO3WJPcUAolqmojkXOfDRpF8fSRXh8HhRYI+RMSM2ZVTUD/YNBL0f4VaZ
PJz4xOEv/24bhIPV14riPVvp+S6hwe/VSIGPVS8kFb5z4PIL62pcc2EQlqIW
e+vhEiprCpj6xuwC5s/kam8UjyP/I9+ErVa0YQupleuq3ixSW/uQ37ByBszj
591uf55HMhFxep7v3SCcf3zSTJsBz1qO5ieecYN1W+fnUVKMuNba3eJSDAXk
O6pHORyZcM9a6VSbXwhY2pQ07zJZQ0ZfP3Hej3eB0t9qD5pjmbHKaoqofioV
RAK53MbEiJiLO1Er8V4QtFj4zldpzCDvVHeRYxeNITH6y0m77SvIkp+YKZrq
CadPH9XrWGXBFWLlz/DuYMj+nGxpXLyJqJ9GG2f3uIBS+7arl20Xkd91fdxS
6QWKkX3H7HR5Ma17O+dbs7Ngm36wivHsIpoIu6dRNeECf90ufzFj4cEe7G/S
XvdEQ9r7skkTmU10ou/BLul5XzB+1pGgvbKJsvfPil9JCYDa+gjS7Qgi9nP7
eeK7sD+shLffesRFxnIveb/pSVLAjyz+oUqGBSP9qEMSHTRQS/JPHPtLxPf8
unH+Cbrf767LCH+6iMZ62xp13tpC7QR+7tLBhfMc9jzbjIyGiisVw0MTG0i6
V/rv5kM6z5vJl7r2kHD8fPgrxQhfMJ8ROTK9hQULLSda3+UMB6ce20t81/kw
90nptNPpMZCa3kS7SuDD9/NrGfb/OQu+PoI7jj9hwRN+dj8XZ2nQf374SdLh
OWTn6z0lzOwOBsTOB0pZs0hXvmxfga0C3CLHUnfVTqEKu1q54zftwNmjTJLA
No3exiQK1svawowDr4naACcmSZwrvFYTBXrMmbIhgQSc3GzT6WzoA6ey296I
y66jKrKznTybJ1S/Yn7O1ruC7jH/Oi3/yhVWk7bnMDXMo7PzvV0vwmwgz1xF
7swKC95WPk7s5QoBD9bEH+ctVlDFGbUH74x9oMvyTaPHQWb8yP/jrvVv4cB3
955DV/gGir14eb97qjuMLhLRAe5VJPReYHJ7ujOY7uLLnNzHgLN6OdXO36MA
xEpekU5lx5RAnoNyWREwJPg67cmhBWResXOv4H1XsHaZyLHgW0MHBMzHDi/7
QKnOvX1Tegz4UqTYo+gCf+DacnfY/tYmYphJTL/+1h8+bhpq7Vjegh1rFw1x
Thy02ckWvv09j0rKM/hWvtoDVZSgp48J+NfpFeHn2Z5QxCpOE1JkxU+pxz/+
Gw4G0dIsEUFgwQT5b15XjodAveLd/16zs2DGH4rB5a9pwEsLvM7yeA6Vqhn7
9/09DfKERwnRHwn41a4n1K6n7lDxU63i/A06v1Te2H1jzgvydPsZeB+vovuf
lGhefh7wnO2AsmoIE76etb0rU5wGRd+2sLAlTSKhSZWXpZdM4MCohY/PWRI2
9+h26KP7UQK3qOkdlVl0wUz4zCs5Jzi45/pMlxkJE7xUvpC1vem+F/1ocIoJ
337kpP/LkQa9N9iXk00YcPxRE0EHSwpo2sD2GgsirpVoT5g4FwgsO6SVRjsJ
eIfPp+MBMxRo4e7cv+vDMqLEafG9OO8Bzv/NVZ67t4rI37nUgx+4gcJy/yyB
fr8MydfNhKId4DyH35kEZvr+JuDQ9UxPOLxwx+Uj6wY6fKOWfPK8D/hHOcoM
JDBg6bNK/BzV3tDATXnqs58BK+zpUV4u84KoXVxf9gWvIA1Lvl+Sny1BKevu
gOX2deRBWKpnHfOC+O/kjM5Ls+jELtTMVmUEDG0WovMHV5H6iYrDZ0y8obQB
JjI9mDCjYrScNH8Y+Fj0Gn7ro/NjxyFGj22hYBA4MAAB7Nj8YJCR3clQ8JP9
d9XfmohvFcwaJhgEQvrNeON/OiuI0DrgO6XuA9tU0yZpiBVPViu27PMNBqH1
3M/sdf8QmDx9frvkNBT18zBZfFpASg3Chg0Z7lDCyGDCks2ArZaehOB+X9i8
n01jHZ5GH2NvXG/4pAdPrrYevmdExLkVwVr/ZOn71pj+bt55Gb094PiPLcYV
OMgcSilqi+havviTjH0ecMs69aGBEwv+47oUsUMqGLKeCDLQhtaQVa1x4dPn
7uAkfVTs0xgBf71tm7OqQwODnOXK9b8knOcYk23JTYFnWWyWWz79Q1f35kTz
WGhD+9Xy+992EDAhrX3ogq4vzE+Jvf0kRMJ1fZKZbZw+4C3TG9R/YwMVBDVa
Si/6QqxACg/t4BIaqsjdfpTHHp5+WfqvZH0NOfGZt6gHecK48FCq/nUGTMl9
0SuWSYUy26q3P27OIf135u/d/rpDhPupgrqt7LgxtYh64EsINB91PFJizYnF
mFz4R3oiYOFkT+al8jXk761flCjjATcf3zrJ84sDf+L/G2v2OAzKheaFmkpY
cDZJPOKjeBC8Do26cu4OJw6+sZYZvh4JU+BxzPw+C9ZYSameFQmCoWcuPyXb
CTjOYavgmhgVGCNmkKf7Cho4uP74eJsfPF9Yn+OVIuDMnfvlm3YGwsqRvDsK
ZG5sKPP9W1V/DKRL9p7tK5lGbtMcgvEPbEElb5S74Dczvu3/3ny3FQ0Owc/f
c7MkfNVSpjoyJwBcEz9sXQUyFtjF456yEghvI5+kBIUTcIV0EzpiSIXptXkm
QvAsEj3vkfl5wQo+3JR1s8ggYPmU1ZjxSwEgQfF4Xiq0iOQfxzwQ/OsGeXe1
fifsY8Inca4wLZYKVd8vX3ygtYl0ZOoKn0W7QzKSNtWo5ML8akUaVbURMHj/
l9SCFBGfua16aF3UG5R29G7cCuLGjheX9YU4o0CmxbvqVOAG+iZi+OFZtzvs
LRxtLdRkwDG3PjyfbPUGMw+VHIWiWfSQJ8I1+LYzbOORwvvnefC/Ag32w/ei
YPCMif62s8z4+Q+vRd96Ot+6Chmee8uETfI2hpamQqCFKzF+601G3Ld/rPUq
kQY+qYvrERfYMMx2PB+lhEKmzIkJtxEiFvTq4zz/MwTE3RB17z36+10O23H6
SBBYca8bXz67gM5/ujSSzucOJ2KuHP3rQsB2KzODHHEeIFktfuj2FAl3yd2S
X24NgGP3P3L4Ziyhb5VWnQ0nHED+mhtS/cqDbx2Tc2Wxi4Un4Q4kv8sEfNrm
sbb0kje46NkbhH1cRl/3ytV8K/eE/v4/zsMrJLxyZWN7RBQF8k8YRr+4s4ba
xDckOkUDILR7Kfd+DwFXC5s7xt/3gwfXmdrDCljxlqvXjzo3B8Hb7W3lbxM2
UZF+2BY/XX+QlviWVqRMxPqGvAe9a6hwRcPmCEKbqIR5cFJ40BNIrZvieRcI
mJvlSRpZgs6HThXs9fR9vS9oeq6phgKzTZFxHa85cVVS9W+psjAg2FT/1F6e
QRkNhpTroq7gb/S6pOwHE91nAobcblPBSZ/LLYLuu3XpqnczNb2Bf/Ktt9AQ
C34uHrDx8jLd37X/9mZ2LSLLMo6whrOeMDvZO/0qiwkD67nHXoIUkJjh79lz
m4g7+Mt18+/7QszJ6LS2XAbsNKRzNJ7ZF+ZiRbV+nF1DE9+/Xnp9lgIzxpXf
aEys+Agqmhn+TYOxX7sbd+JpJMnz/fyDIAtonfqx/F2VAY8FpWYKzvjAouJB
vy3nWLFPdmrvfcUweEOyqtNcmUShy1YC8RWn4UfaBbE5fmZ8/oBkTphyMHjm
1saXNk+hOOfp4KJOU6goY7s6qrGG0py6R2aFPKCnY//eL1ZTqGXkgYOTrD38
92SPldsJFvzkVPP2y3VBENxnarqBFlFykvLHYC1PMOS923pUgw0/ui1bOlQf
CqyXZGVjHyygho5CMw9jO+ifJKXHca0hFVFztm38dvBPS7w5/9Emul0uN1N6
PxA6VIPnvwuw4NCy5b/LZVSI+V6zvSpwCg3dfdYxWGcCyc/Uw60MmLDOmLbK
Y+tAYH0qv/v6JjsuTrqqjXvCoc/yx8fHCmSskqP8pHPBH9bufbEUOMGOf8tP
etpsDQEmiXpr2RtbcIL5eVMH3zgg2L20Mf4yjbI4Zn57SpqB1z7um5qSTDhX
T/N1zDANniy1f8qYoPvGzlWLfKD7gPIZ2qMcOr+uuv2T/u4Lb/b09+2TmkNf
mQ9kNZ3+/+9RmD9XanPgXZH026WFw2LXFlWpzSXUNaI1qu7gDsZ7knvecLJh
dtZvH0R/B4PYzHGhM0EE3NaYwJpxwBMOim70PN9N51OWJ+OypCBoXx/5o/GJ
Gb+QIH5UY6JBAc3ww+E6Av5RJvKTt9cP1oOMJgyIU+j6ny9PN6XN4VbN/rzD
9+j8oLmSwuPuDs8bWbf9dFxC/Y++EZOM3cH2bRYDOy8RX0lMPugsEwAxpyL2
FOuTcXrasKzGfTo/BfV32vAT8IebK/8tE73grb22F62NntcFtnmq4oHg8XdK
uyWUD89TfvMqn4wDnR0D1tel2bFe4uxADDUUCmWKeP55EnHmvHEvGzs9j0rM
xdpVV9Fxx3yRx6Me0L9oFBayzIFNWk/o/hkMBUfqtSb+S3Pocrb/u9+czmDm
fuwwDiBh4unj640GVJD7Zj3vvDaBir+aS7QIWYC3uUENTGyi6EvmASd9vaCT
Q2HjIt3Hnc7Knit8GARms7l651yYsPFAIZf5VCDsWGE7H3aYiLOarKG32BtK
OGBJoW8GiRxyD9mpYQIKvCcDylvm0HvDlSJZ5AKzR5kWpEyYcf26cLljHRV4
KO0jYv7sWOLtRw3Lh6GgW5s+ItbGhrsGk27ivSHwXNTe0LNmCT0+HB/mlHgM
9l0JvP1Xh4Cvbx/UC37jATu+9z8SVSLgL1FtIoyiVOB0Tmey2rWJDgr7j8pO
+kDDzr+Vcmls+CrvudEygyhwYh32NppdR64DhRpOmh5AdD51/cXcHNp57iuW
OuQOYqvDlTHxdN/r6gnkWqeCtaJRj3EfMy5POWOvdzEUUu0/olZvVvxLpTJy
/69gGOEt4Nubx4APX9PIfV3iD78bbK/scibjdyVeyqzTVJAaE7yATNeRaaAf
LCVQIcHWNiP25iZqrmerfDnmB7x1f79cVSNh07fv8ro6qKDUW2owqMeD2djm
9vIERMMhpby5OyJM+Jyxou3wPA30lbIsixt58Msjn555HIoC9Yqz3ip0fjB/
cXkg0pcGhZ1NsWKDM0jQ8m7Xo9ea8Gb5p0xB5AzKrN5ualZqDwNnB+Ilh1ZR
+LVj3Z/mXeGP0KsYZhFO/E5bxDqxMBwM3/nlr1/ZQE9P56DRbRR4nc5/9ZEV
K/7hGfxnUy8SRLUsbvfVseFvN0uxSFkoUPirDlpPLCJ18eqzw7r2IKKjXO2j
xYT1lxp2x+yiwTiP6p+iCCZ86/tjjsBnVBg92xIOt5iwpnSPjMhGMLSwFj8S
3caI10oGxLgVKVDs2/t7/OUq+l3VZC8u6wzloTO3DHk2UfHEzyrjrb5gVT2X
nHdtGeG0J8eJgW5Q4VHNtXachCmfL2i4/PWHqGQ54eBn/38e9qhiWaMb1J7n
6tG3p/NgfPmp1qAAaGj30GJJ30ATqbs5qPfcofrZ3sETJzmxTqC7sKJXONin
qbkzaG0gmYtiN1oL3GHoV/0gIXkW1U3bkllvWEJe0/FtYfazqOlD5ZGUfGu4
XdH/ueLLHGJTyi05dEgL9p5Ou/ZQjxULbu1/HLYlDMh3dp3+RWPEp3yfvbQ7
HgTRCyq4jo8BZy6P9uTS/Z3BeNufojE2vGNc8cvbsBBYM+y/fqCGjL1L6zYv
/6LCfxyhK5cubSKhD8VG/t4B0EKz2JGxyoHHtrasNAdGQsRRr6suWgz4SPZ+
jfMZfmBxkBof+Y0J1ybJaES9DYEnUWykWSECDujew7HPwQ9SiZ91OOjzKnmv
6J59PxXsPMK75iZX0aFf1KwHbV5QaJfzYW51DrVf/W9vXI0zjOjkqfi/XUQc
ZOXZoBQWON14sM11Fz2vnUd3X37mA9IWO+4Te2fQzPIGu/l9ZzAfOM53mI+M
a6tnGQflfcGLoWVnTcMaUtLOXzsi4QJbTIO3/6QSsfzlhxsMWwPA5yghc48O
O0Z2G3PUuFDgsWM+QBnYQFtek5iWrM9AGUO0W+DpefTJZ/RhcaMJGFVnF2c+
3UQaj6pIv2IDoStlPWzXN3bMXcWTXzkRCibGgn4Cuaw4cShm8fKfENgpLpH2
qmwFxfwNsHq3LwAqDvNl6phMoPoj71YuOtrAc7Ue6ks/JmwfPHBXb4QCramu
1j3xDJiR+U6RfIQPbM35aMSxlwmzLt1ZPNESCFxul6b6/8wh5+Ci+I1BO6gd
O16tSu+PqE5XtckpKpRLsF2e7pxHbaKoxabWGXz0TslSuxnwglGJ59VNH5Do
o+7oamPB6R4rI8zUYNDYwy9tsHUBHSIhsUZWV0iq+BYT+oIJ//H9sXKymAa7
BYzeN5nMo6pknaLMXleg1BZ72aYtopM/Yw7KLjtCBwvbqdrDq2iave6mEr0v
+2Use/7/PPqk4aqrywEW8Ji5u/H3ORL+Mnwv3mjdD64JalY8lGPGIRdN8uzv
BsOtoIGApXkG/EDafGs0txu01NlPh1PJOMx63rTMgga5vH/xShwJ61YVJfQR
fOGYI7524egiEmez5fTu8YQjN/oDh9aJ2Oqra8H+wgAYESh0e+LKglNLwt1W
dYJBRcW7eJBnAflJbNcSl3EBj1cHXuh83kSvx94B5y57sH4QG2A2ScbNHPMt
u9WD4RBjTXnuxiY6ZpTG4BfkAhHnO7hE0sj4sfKvPJYwKvxVvH9NypEV+7o5
KQn7BEH5fO2NC31EHEE1U9Y2CQQbTeu6l+prSKrZzmUC+8PgFibY/YMLe2Vu
7Ol9FwEZy+rTAS5kPKZBVXiQRQXbTNEcn3MbqB+9ZPUd8YVX1F+DJpMriHeR
Qe8pnU8z2htMscwGytWS0izM8IcnI6LZx/NI+NVNtj7edxRw4rl9l/XDPMow
qjn7c8Ma0rdySf69SsQ5nQ9rvnQEgq/Hx+Cdx6fQBZORO0x+BhDrIqYq5sSJ
D4skynmrhEH6t58DzSIkXC9IM7g4TAGXzSqF7C1bcJxo4cwQczwo7n1upW40
jaaG59/XreqB26QdepDLiCVlwznbt1Ngu3SXaufsIlJ4VVW9VV4Pipt/r1+2
JeILhq+KuXgCgEnAxi/IgIx35X0iyE4GAkHs00W2d4yYXGhXsRBK973Lb/iF
6D5fcl5V/8SMOyh+uzi8hd6nym0dnr1JgdDZN3LN7AUjXt/H0PYzlgIDrjrm
/CIcOEFkozjPIhwm9QdvOquw4lua7t1XqEGg6cymY+PAjLmFqOOahcEw1u40
lPFrE1VxOdVYdXrAdGz2cLwcC+Z4bxs/XkD3Dc9Ze0urcfT6bviVk7MGMHSw
WvW/ZwyYnPVSlbDfG6onPokWWxKx0vjCQ34WCiR6NP3oTVxDQkeIMuK6PhAi
1tO+24uE599X5cykUkB1fu2cZPk02jMp2XNHURsKGAb9r60tomVtk9cmn93g
g+DQEOetVeRow9yXq+4FRhHGpX9muPDkvQdVJk8jwd1p8Z0lCwtulR+iGZgF
gUDqc08BITb88mn7m61XwuHRcWsr73oC3hIkf1WD6gUFbX/4JlN5cNaRpF/n
T0dBrYzKL+1eOj/KkJ453PEH7UrUn3aJgNs3FbZxlAdA/ruIl31oFSnlcURP
3HeCkv4voxe61tCeuGO/zmzxg/c2jSHMr4iYz6u7UWnED+6afNzw2kXnWeMD
jVOMYeD5+/yK3hQRD7b/IGvSaJBp/mKi4CcTFiye8m94FwQFvytrrISm0YWC
tQCu72ZAsLB8coGHgG1E7Ez8FrxBU0bS84QRI75y2rioIjIY3ny224jSY8CK
mrcUHja6wLG39UWzqnxYSKP2MIzFwa85pTRm0XUU5fW8kbnSDRZlDYLeSnHi
peKWD7ctw6GC+OZU3Swjzu95HX/sOgV8Fc4/8abvX1v/6i1KlTOsb+kijW2Q
cf+HTL3/WqjguX7klb4aJ07TZhuw44iAc8qMs9VsJOzXfeCLhnQIHJzyoioL
0PdvVP5KhIQbeF24eZePzjcKir71D1AwvBMzOB6ruoJ8tZrTAt+6QJzx9cae
hwQsJjl5hIuJAj3+RElZOr+/SBNosFukwLGpoifWTGR8scNCZUeWN3gU6EYF
fSThSOZzR/PG/UC00OOh6g4eXN+ukb7yXxRoHD7MiFrJeJ1JJ9nlGg0emts8
PsxPwpxP13cesQiAWXthoifvIno18N9c+4IzaHfxjJ3oX0FeGqAgd8wRIoRs
PkSZLKG4RLP8yluuYDI9taLOzo6DPbwkLq2EQiKDHjv72Awy6Rtv/T1pBLtD
VyrKT20iKVr+HZWHgfAvRvCGwtNl1BvVPzzk5wIGa1ubJ+XmUIp60OrJFDdg
N38wv/s2F947UbM/TCwaojlPqnxJX0Gb3is5JB5X8K0t1VAmrqN0hkMtvz95
QeDZrTt0f7FjZmeuMAujMNAZX6n6ZEnCAgwZ15sUaFBv/W7cSJ4dK9nfP67o
EQoVr9Zudh1kxGIBbCu9H6igfHxSWuoBO94XVzP25lkI2C0nzn0YFsQNqaVc
4ZsJUD8T3/qgdQ1RXBqtygYosBo8XtfLxICPWs83tzz3gb4Xh+cuBM2jxxOG
ArJSzrByqHu0MIGEv3aa+JgahsBI4BEezXdrSHBvwy01PjfY5zGvUpq0hDgv
9iruHHAFyapwb0uBJaQfIPOsoNAWbP3q1XMOzCL5ANkyhVFDup+pWKZNk/DN
H6veitrBIF4lG8Nmv4gI3M8P8D62hP5N87Z9j9hxqdAdEdrVSMjOCZcaYWbB
hdPrs4d1gsDG0qkMshbR8V9FrWxkezhmGd6uK8GKA6pf3r2hFAL6d+zfFSrP
oNnT1tsCwt0gVs3s1ecLvNj3mS1XwsezsHPp7iER2RUkEMW1v2rNC0r3iXVY
cpKwhHPGbGdEEBj+2j4cJbOMVvDbrePxrlDzpihWSXcSDa1yfU3eqQe3LrsN
VKay4wa1Qdu+uBCojkj6yJmwjPxY3IWlEpxhwOf6mR/pZEy51Eh7kB0EcdPN
5G9L02jc41/1HewCOfEcLx6/J2Ov1PXvow8p8Javrm3cjoD9n4d+qez1hbaZ
1O3B3Cz4+D7aQPqJEEgzk7mR9IAFd3CND7ruDwamn4bWqXcZsPEW5cFve4Ig
fvdLQdNlAna8M3W857M3dBZ5b8jS+SPzWaF/42d3KDIqMZS/OY96Fl+62Oup
wUNTl7jzdH68OKE2/LifAoxlhJCzR5bQj8AVvmYPD/BVG/pTTc8n4QjfJzlK
VFDA+5tiihaRZLzBwrlsJ5Dq29uUVkj3uZDlYkoBBXKGbIZjXq6gTCWpvkpT
X3AaOnuGnX5+7Y6/3c/ddAffZ5z15amMOG5beurWx1R4MSqbV2+3gB772xzQ
2GUM5/PsOjNGltGTqh1pG8nmMFcq99/x9yx4q37GMwmBCAiovbc5xrWEGkMn
rZknPeDpm0bTIRMyTv1zt86Bzud6t62PP6TPy1MZRw/2iyGQP3Pe3HiEFb/Q
CJ24JxYC/FbUIWoxI87ZepEFK9P3x0H8WnH/EmIu+95RE+4KpPYm/Qa6DxB/
/fjcN2IGag0MmfIPGbBMXNHTfXSe+OZrlRp+gQ0v37jU5vgiBDgZjmf0cDBg
bFce8EbJDaK+7rtzIYwdv/5IXCyXCQN2xp1x33RJeKn5ukOGMAWiDpbOJvdw
4VaT7Cny10jg6C+8DP28+P4vWa+F6DhI4331p8OchD/a5pe2f6DBDcmLD17r
0Hk0/2ePgJEtNGy7whUryYR7Z/mkBeh9uhhQ9RbT93Ux/6ac4Gt3oPwUaVZ2
ZMavK3gdGPWDIAab3QlN+YvOxXDcbv+uAoz/cS5ZHJ1DjLJAeCtuBfMVUoM9
hxiwGFXQ5E6HK2iLcCwbO6+gZ48vlvy36gc+K0nBs/fn0NmjO5Z793hCdOE0
//d0ZkwgeX6sJ4UDtSlPLUXvL/pknd5Qtd0Mst6MFsXcWUXsnPv3WyjbQN7q
hQRtJg7MunJa8m9OKOhkP/psKj+P9NliFn4H28OnxOcthUbzaDi8qEzJWgvC
zimJjxuvojxhJZbeHzYw1PHae+bqNCIZVO42yXGFVrX8CufsTSS3z6I6NMgD
0s5lF2Q84MXh46nZ0TviwMVEoszwKhlri5XtbZulwsW2dztHhNeRgQXX14Zm
NwhbCB8VsOPEFWMMafnLYXBwImGhSn8JhaQlpgfo6MOw/2Q224cJdGyxluvA
0knYtOk7MNUwifgfHLmfds8G3ENXP3PR+yXI9mS3yH4qGJ/+4vrzwhwSPzLO
EcekDZy7pbmjCucQdei/+2NzrvBRV9LAsIeMK7Ilhfkv0+Cl6bYhZ7YlNOjy
9wCzsDMkv3P/78/1GXTCc+aSyQ5nYCl/8zXdcgbl7sz8oswmB2w232/WWbLh
0lZWD22zEBjSGD9T0MSMiXYxQ2SJYPh3jq1k7AwrHgm6fFcsKgwqirzt7UZJ
WGxbtnRiki+MsUhaRX9cRhFqrwJ7H7nBqU/pTYF/JlDzrdvkqW/mUBUdWFR4
kRmvz3NZu1SEgmInteN+MDOO7b47JS4VArZi4jJZ75ixcQPfWE9kKNTe/Fcn
FM+Jl9V+5268jgStcp1Vs1UGfPEpm9S3U55wJXXiFXnPBoqs1LYrumQPYw3/
ackus2LbT51Hmx6FQrWDceHBwA1067qo7y9JZ2CujOSKyKX3r97bd4GZzsDu
PaJYzkHCZvmRYpc7A8HhUcDVzsVpxDHXdTrwsCXoHvCPuS/8F/XckPgUvdMI
niQW85ccWkaq3XuMdfmd4CzhwGxZ3iry2xNpysvgA8Tn7+7uu7KCxkeDy8rt
3eDhe8ecwdcLSNtMLLWJPk+ptB/BZ5NXkRwLC8c9ZTcQO/VFxeAME67bWnlb
iUD3FZH3tZ61KyjS8OcA17QzGIfNfCbmLKE3b121xlPdwXyNNe6hAQn7COz8
r/I/TwgXfBl2YHYFcTvpxv8+5QqbDz0f2rXPI7m8KEnhntOQELfaGuS5hHi7
7ylv9ljD75cW8hwF9P3qrniJRVzhTrPapeB3K+jXwIhZv7Q3SDI83j32iQk/
6KBZCVJDIfZ0QVuGLBkfVSM9V7xChVBltx1/uEh4ajJkJPCsN8wwiRXKrnHg
+T3jV0aYImG+vVU/zWIdyUsqOOjS58tAW6h6xHgDmTrJ4ScaFICls4k3/myg
td1RcgrSgTAs2sSc08OOhZ71sN5MDYPW0UO/OHcwYpnTGlp8eiEgra1waHOa
gG9wSpNunvUF+Q8TvJoX2PHOzh+hw9MR8KS4ayksjRVXNFlu+1ARAuE7ks+D
CR82VPnVn6IUByK8H6MTvxLwXY4HNOaAQDiGwk2y77Bi5qu3xCLVQyCUcmvH
LocFFPCGEXhFXcA/IUFRJGcFPQ0SZ2cptIe7Uq+uuW8y4YWnH9IOrlJB/vJZ
hey0KcSh0RCqFmMEty+eIPH+x4VfNrsxW1tGg4aqqszuDRb8vDc4kuVaMEjt
F/rynp8dfy5oiz8B4XDWuDzbrIQH5++9Y1fOHw37H/xuJaBlNBpqJn100xdO
C+R/0To2i+6SzEWo7F4g4Vexg0rf95+HSrTu92jCXdKH0fD/WHHgZ7abJ/uD
4PfQMTunQRa87zFrSKpeGLTJfI2tqptCU9RzL3rzzWCwZir/5uYiasZjywdG
HCAgaZjl2f1NtPzwAd+xMF8Ybn8UfVt0BhXqv2f5a7UPFvqr2DSFWPEZX5WS
r41BsPQnc2fVngVU6yXu3BlrA6Mb0Q7VU2RsYVe45v6JCo/WevVS2PnwVfbw
0qD5s8CUJmT3S4EDW9wLd76/FAIzvbG/E3cQcKxB7lpMvD9MpB4saJ/kwlRm
XuaGhXBIeczmdMyAgItUb5yOFaP7sdZwPrlwDYX2x5aoB3jD1ru3NO2l6X13
0jYX/ecHPCjbw5eVGSuS2fi5NKjQqF7M0lVAwO8mN+uKv7nBRkTrCe9uDtwR
EeI7vDscCnpWmm7VsWDCLqsXUe9pcGbgctu4MB82emgWpqETA/8DLQvTkg==

      "]]}, {}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{-6.7668792358862735`, 0},
  CoordinatesToolOptions:>{"DisplayFunction" -> ({
      Exp[
       Part[#, 1]], 
      Part[#, 2]}& ), "CopiedValueFunction" -> ({
      Exp[
       Part[#, 1]], 
      Part[#, 2]}& )},
  DisplayFunction->Identity,
  Frame->{{True, False}, {True, False}},
  FrameLabel->{{
     FormBox["\"Off-axis angle\"", TraditionalForm], None}, {
     FormBox["\"Fraction of high energy photons\"", TraditionalForm], None}},
  FrameStyle->GrayLevel[0],
  FrameTicks->FrontEndValueCache[{{Automatic, Automatic}, {
      Charting`ScaledTicks[{Log, Exp}], 
      Charting`ScaledFrameTicks[{Log, Exp}]}}, {{
     Automatic, Automatic}, {{{-5.298317366548036, 
        FormBox[
         TemplateBox[{"\[Times]", "\"\[Times]\"", "5.`", 
           TemplateBox[{"10", 
             RowBox[{"-", "3"}]}, "Superscript", SyntaxForm -> 
            SuperscriptBox]}, "RowWithSeparators"], TraditionalForm], {0.01, 
        0.}, {
         AbsoluteThickness[0.1]}}, {-4.605170185988091, 
        FormBox[
         TemplateBox[{"\[Times]", "\"\[Times]\"", "1.`", 
           TemplateBox[{"10", 
             RowBox[{"-", "2"}]}, "Superscript", SyntaxForm -> 
            SuperscriptBox]}, "RowWithSeparators"], TraditionalForm], {0.01, 
        0.}, {
         AbsoluteThickness[0.1]}}, {-2.995732273553991, 
        FormBox[
         TagBox[
          InterpretationBox["\"0.05\"", 0.05, AutoDelete -> True], 
          NumberForm[#, {
            DirectedInfinity[1], 2.}]& ], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {-2.3025850929940455`, 
        FormBox[
         TagBox[
          InterpretationBox["\"0.10\"", 0.1, AutoDelete -> True], 
          NumberForm[#, {
            DirectedInfinity[1], 2.}]& ], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {-0.6931471805599453, 
        FormBox[
         TagBox[
          InterpretationBox["\"0.50\"", 0.5, AutoDelete -> True], 
          NumberForm[#, {
            DirectedInfinity[1], 2.}]& ], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {-7.600902459542082, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-7.418580902748128, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-7.264430222920869, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-7.1308988302963465`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-7.013115794639964, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-6.907755278982137, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-6.214608098422191, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-5.809142990314028, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-5.521460917862246, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-5.115995809754082, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-4.961845129926823, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-4.8283137373023015`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-4.710530701645918, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-3.912023005428146, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-3.506557897319982, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-3.2188758248682006`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-2.8134107167600364`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-2.659260036932778, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-2.5257286443082556`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-2.4079456086518722`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-1.6094379124341003`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-1.2039728043259361`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-0.916290731874155, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-0.5108256237659907, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-0.35667494393873245`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-0.2231435513142097, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-0.10536051565782628`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {0., 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}}, {{-5.298317366548036, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {-4.605170185988091, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {-2.995732273553991, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {-2.3025850929940455`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {-0.6931471805599453, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {-7.600902459542082, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-7.418580902748128, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-7.264430222920869, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-7.1308988302963465`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-7.013115794639964, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-6.907755278982137, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-6.214608098422191, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-5.809142990314028, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-5.521460917862246, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-5.115995809754082, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-4.961845129926823, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-4.8283137373023015`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-4.710530701645918, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-3.912023005428146, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-3.506557897319982, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-3.2188758248682006`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-2.8134107167600364`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-2.659260036932778, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-2.5257286443082556`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-2.4079456086518722`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-1.6094379124341003`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-1.2039728043259361`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-0.916290731874155, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-0.5108256237659907, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-0.35667494393873245`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-0.2231435513142097, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-0.10536051565782628`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {0., 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}}}}],
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->Automatic,
  LabelStyle->Directive[FontSize -> 10],
  Method->{},
  PlotRange->{{-6.6747579030407085`, -0.7789926009245803}, {
    0, 0.010641762408165509`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{
    Charting`ScaledTicks[{Log, Exp}], Automatic}]], "Output",
 CellChangeTimes->{3.610000866649651*^9, 
  3.6182685686058083`*^9},ImageCache->GraphicsData["CompressedBitmap", "\<\
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
mplhmnPQcP2aV8qxA39/KA7sML/3rvo/0FDlqw==\
\>"]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Burst CDF plots", "Subsubsection",
 CellChangeTimes->{{3.6096524880046663`*^9, 3.609652490730268*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"PrintTemporary", "[", 
   RowBox[{"Dynamic", "[", "\[Tau]", "]"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"burstCDFPlot", "[", 
  RowBox[{
   RowBox[{"defaultUniverse", "[", "]"}], ",", 
   RowBox[{"defaultBurst", "[", "]"}], ",", 
   RowBox[{"defaultObserver", "[", 
    RowBox[{
     RowBox[{"z", "\[Rule]", "1.822"}], ",", 
     RowBox[{"\[Chi]", "\[Rule]", "0"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{".1", ",", "1", ",", "\[Infinity]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.609652654732028*^9, 3.6096527059005404`*^9}, {
   3.609654185690916*^9, 3.609654189840137*^9}, {3.6096545753239727`*^9, 
   3.609654621538562*^9}, {3.609654788617795*^9, 3.6096547887273273`*^9}, {
   3.6099886916149187`*^9, 3.6099886984925547`*^9}, 3.61827822342594*^9, {
   3.618351551598682*^9, 3.6183515823427687`*^9}, {3.6183516641137123`*^9, 
   3.618351668881055*^9}, {3.618355426155777*^9, 3.618355453667679*^9}, {
   3.618356506032975*^9, 3.618356507611971*^9}}],

Cell[BoxData[
 TagBox[
  GraphicsBox[{{{}, {}, 
     {RGBColor[0.922526, 0.385626, 0.209179], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
Cy7xl9Lh/wCKjCwZ
       "]]}, 
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
KQ==
       "]]}}, InsetBox[
     TemplateBox[{StyleBox["\"0.1 \[Dash] 1 GeV\"", 
        RGBColor[0.922526, 0.385626, 0.209179], FontSize -> 10, StripOnInput -> 
        False],StyleBox["\"1 \[Dash] 300 GeV\"", 
        RGBColor[0.368417, 0.506779, 0.709798], FontSize -> 10, StripOnInput -> 
        False]},
      "LineLegend",
      DisplayFunction->(FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.922526, 0.385626, 0.209179]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.922526, 0.385626, 0.209179]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial", FontSize -> 10}, Background -> Automatic, 
         StripOnInput -> False], TraditionalForm]& ),
      Editable->True,
      InterpretationFunction:>(RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"Directive", "[", 
               RowBox[{"FontSize", "\[Rule]", "10"}], "]"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& )], 
     Scaled[{0.79, 0.2}], ImageScaled[{0.5, 0.5}],
     BaseStyle->{FontSize -> Larger},
     FormatType->StandardForm]},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->{True, True},
   AxesLabel->{None, None},
   AxesOrigin->{0, 0},
   DisplayFunction->Identity,
   Frame->{{True, False}, {True, False}},
   FrameLabel->{{
      FormBox["\"Photon Fraction\"", TraditionalForm], None}, {
      FormBox["\"Time, sec\"", TraditionalForm], None}},
   FrameStyle->GrayLevel[0],
   FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
   GridLines->{None, None},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   LabelStyle->Directive[FontSize -> 10],
   Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
   PlotRange->{{0, 121.34019927597564`}, {0., 0.9999975390235976}},
   PlotRangeClipping->True,
   PlotRangePadding->{{
      Scaled[0.02], 
      Scaled[0.02]}, {
      Scaled[0.05], 
      Scaled[0.05]}},
   Ticks->{Automatic, Automatic}],
  InterpretTemplate[Legended[
    Graphics[{{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[0.922526, 0.385626, 0.209179]], 
        Line[CompressedData["
1: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
Cy7xl9Lh/wCKjCwZ
         "]]}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[0.368417, 0.506779, 0.709798]], 
        Line[CompressedData["
1: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
KQ==
         "]]}}}, {
     DisplayFunction -> Identity, AspectRatio -> GoldenRatio^(-1), 
      Axes -> {True, True}, AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
      DisplayFunction :> Identity, Frame -> {{True, False}, {True, False}}, 
      FrameLabel -> {{"Photon Fraction", None}, {"Time, sec", None}}, 
      FrameStyle -> GrayLevel[0], 
      FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
      GridLines -> {None, None}, GridLinesStyle -> Directive[
        GrayLevel[0.5, 0.4]], LabelStyle -> Directive[FontSize -> 10], 
      Method -> {
       "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None}, 
      PlotRange -> {{0, 121.34019927597564`}, {0., 0.9999975390235976}}, 
      PlotRangeClipping -> True, PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
    Placed[
     Unevaluated[
      LineLegend[{
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[0.922526, 0.385626, 0.209179]], 
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[0.368417, 0.506779, 0.709798]]}, {
        Style["0.1 \[Dash] 1 GeV", 
         RGBColor[0.922526, 0.385626, 0.209179], FontSize -> 10], 
        Style["1 \[Dash] 300 GeV", 
         RGBColor[0.368417, 0.506779, 0.709798], FontSize -> 10]}, LabelStyle -> 
       Directive[FontSize -> 10], LegendLayout -> "Column"]], {0.79, 0.2}, 
     Identity]]& ],
  AutoDelete->True,
  Editable->True,
  SelectWithContents->False,
  Selectable->True]], "Output",
 CellChangeTimes->{
  3.60965301295968*^9, 3.609654398337327*^9, 3.6096546149220877`*^9, 
   3.60965468149671*^9, 3.60965617842878*^9, 3.610876610064046*^9, 
   3.6108766821578712`*^9, 3.610876795673526*^9, 3.618278157190126*^9, 
   3.6183515491622458`*^9, 3.6183515798882093`*^9, 3.618351700109344*^9, {
   3.618351740183158*^9, 3.61835174842062*^9}, 3.61835202227431*^9, 
   3.618352133294662*^9, 3.6183544245730133`*^9, {3.6183554407259817`*^9, 
   3.618355464842369*^9}, 3.618355593531371*^9, 3.6183565081383057`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"PrintTemporary", "[", 
   RowBox[{"Dynamic", "[", "\[Tau]", "]"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"burstCDFPlot", "[", 
  RowBox[{
   RowBox[{"defaultUniverse", "[", "]"}], ",", 
   RowBox[{"defaultBurst", "[", "]"}], ",", 
   RowBox[{"defaultObserver", "[", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{".1", ",", "1", ",", "\[Infinity]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.", ",", "1."}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.609652654732028*^9, 3.6096526948009357`*^9}, {
   3.609653091042328*^9, 3.6096530932169323`*^9}, {3.6096531987905483`*^9, 
   3.6096531990224524`*^9}, {3.6096537142760277`*^9, 3.60965371597886*^9}, {
   3.609654198298106*^9, 3.6096541984096212`*^9}, {3.609654601745103*^9, 
   3.60965464165694*^9}, {3.6096547912316713`*^9, 3.609654791359303*^9}, {
   3.609911722980451*^9, 3.609911726811225*^9}, {3.609911867704343*^9, 
   3.609911872480226*^9}, {3.6099119696066236`*^9, 3.609911969799815*^9}, 
   3.6099887074938717`*^9, {3.610876622801993*^9, 3.610876630607148*^9}, {
   3.610876688149922*^9, 3.61087669535562*^9}, {3.610876753125654*^9, 
   3.610876781354433*^9}, 3.618278212242507*^9, {3.618355436260521*^9, 
   3.618355458946739*^9}, {3.6183565104413233`*^9, 3.61835651285325*^9}}],

Cell[BoxData[
 TagBox[
  GraphicsBox[{{{}, {}, 
     {RGBColor[0.922526, 0.385626, 0.209179], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
       "]]}, 
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
2BTXCDMabn/NAw7/vzV3EkzRv9Holrl4PnxoLPpbVWOKaW0Cscci8iGHOncp
k8sM3c6GnTUwLgDxzJRH/qVmGOJwYqPfl2sgINYpwz+zC0sKb2o9CisBL5ai
jcLvXRg3/s1j36USqG+Li0Fuc9yqtG1yvq4E3MPgfZikOU4X7Vy6/LMEqntr
sofMzfHMopWITmQp2CdliVXlm2Nd7HenirPX4TK7r4Ct3W6sjhtJEGouB4Up
9sWMegscXjF3i12rGmw5+G2n9+5F0RG1PSLDt8BER2+VzsA+TNG8e9rj5G2o
yUubGbW0Qbb0ng+WsS3w7HFYtmC6LapdF74fl9UKx6j1/e9/2aFU5p2VouqP
YPV/vK1bnR1wsk1dO6n7MSg1mdEGch3RVNTiRuT+Dhjy+VSkxEHFKBt1Hy+D
TlivRcsbsXTGp0c2ge/qbpim2W81qN2P86S711uZXijUsvJas84VqYk+1lc7
XsAnSU3X3S5uKKfgBnd8X8EdZvgn+XvuSPmW6rXLsB+SQ16k167wwAeGz4zr
uQdgW1jIupRSDxywrXcOHngDV8qNnNDZE41eTHqv/vQWLL+f+S3z1xMvdA5k
lb0bgg7mH5++ai9UU7pck7byAzTUHSsz9fDGTXxtVoGbR2CCj2E1xnkQO1Iq
x9jVRmHsUupt17qDuHE2//dHh4+grKEcx+lyCA+7hBzuD/gE79M6FX3/HMJQ
amHZmojPcEAlJy27wgfbaQpBd69+Adm+T+5ctr7YZ+DYNFv6FWprXb4Zcvnh
/BcbaZUHY3CmYNen62V+SJTXU+7fHYfnVIOqF3v9Uflb0Nd/xRPw3sST8vyv
P85+KbWNT5kEbcrv7b+uBeAJZXc2HuoUOIW2TS84BmLi0Lm/MqLTQNzjf9fg
HIhN31IW+sSnQW6V/dNw10AcGFI3jd8wDTMFo8VznoF4p9G776v0NJx98e/A
DC0QnTr6n6UqT0Ozhv6LrycDEXayxjJwGqRnKuv7KwNRueLKopv/NEzQMqNv
cdPwG9W95XXdNAgle+4w4aXhHg/r5IWGadCrUCJfrqIhUbbyi1jTNMRPN7t/
X0NDmVXHtW1bpkGePmKouYGGiX5qNnWPp8GDobRUpUbDtG/Cpdqvp6E/uPlo
OZWG82AXJv1zGh6EfwguKKOhHj/6VGmy4L7TY6Z/BQ0raIOjl7VYcE/3BkO9
moZbRtpbTumwoPnXkaCWOhr+LK7JsNNnQX2UoP/gfRpGfNQaHqKwoPw04SH0
moY3as6YFlmz4GJ6ttVJziAMXmv0mzOIBYfqqcperkGoVpefqJjPgsLA+98X
3YNQgf25SkYBCz5JKzaneAbhuYy7Z7kKWXAw8adlq08QVl7JjX5bzAIvj3S6
dHAQ3nnj7hFxgwUH+F7dHI4LwpVbOtIjG1jg7L5P16UqCF9ubq3P6GTBXm4z
U3sOOr614ntr/Z0FZcMC7O+56HhYQvEEfY4FPA19zf4r6chWVyyZ+IMFD3wP
aUXz03ErZ6ZO608W6Hacki0TpWPT/lFemSUWyCU9ZGdTpuMxG+1nVVwk/FpL
aSm3oyM3oVawWoQE6gRPhI4jHVeHeVrzi5JQ96BHu5VKR2t5Hz5eMRKYoR4V
/W505JKuLfwnTsLnV9HZ7H7L+78m40YkSejJaIlwiqSj/+vVGUflSCjeaLCD
s4iOxdequxc0SRisl9ZvK1nO087jPLWdBEHrFYZnyuhYFrlhaFiLhKMnu4xW
VdPRe2lq4L4OCRZfPazW3aHjnQ2ZDUf1SSCr4w7J9tJxxe8PLxopJOiadKcZ
/6FjwcGm6Jh9JNCGatNXsDHwGqf4KgdrEvLDM7PaORjox3n4hqINCXzXPXP3
8DDQPr9a67ktCUMCc2V26xjYpL86ZJUjCSdfiz/w3srAbHsTqpsrCc8CvGZi
HRg4f7Er2tWPBBx40ixKZaBIzF4+Xn8S6k3VEq7vZ2BS/In3t5ZdIL0k031g
+V7yBRpf4HKe/kt2EgEMDDOa2lwRRIKCUUd9dRQDb4rEJvWGkBCzXv34UAkD
+wSacy9HkjB/On03s4yBF3aP1GocJyFwbkmEs4KBG55ZKDxZtmN3R6ViDQMX
eEwUv0eRoBrn/SG0mYFpbio3KSeW+51JN+brZSBLM4baGkeC9pM/vDt+MdDg
T/m81bnl/x7nOSz6h4Hf7cNgdNmRmus+/PjHQI23e/rCzpPgaSXsMsjBRJFF
xcmMCySUNG7VyOJhotiD46/6UknYnmw/JCrMxKE3lUYaGSRY6pRpCykz0Zfe
nR6YS8LwBbXJEypMzNwSOTG+bMbkrbxvqkycSFlf4JtHQmrevVW96kzs+ToI
nvkkDPD1jZzXYWJzjqn53mskHHr/L1nAiIm9joQMb8lyH3pxxseNmehS+pEz
atnxF/kWp0yYqOa00mF22Td2ixzs3MVEvm6q6ZtSEmZrlfQT9zLx9aspRl4Z
CadWV5O/rJh4r8tmYE05CSL+2kUB1kyM32JyK2bZuptwjYUdE4vi93a43yDh
6dG2ttv2THSk5XM+X7bLS4tjWx2Z+OPQUq1+BQlTqj3qWU5M5A7/PViy7Kh4
hy88zkx0XbXzP+FKEv4HVrixXA==
       "]]}}, InsetBox[
     TemplateBox[{StyleBox["\"0.1 \[Dash] 1 GeV\"", 
        RGBColor[0.922526, 0.385626, 0.209179], FontSize -> 10, StripOnInput -> 
        False],StyleBox["\"1 \[Dash] 300 GeV\"", 
        RGBColor[0.368417, 0.506779, 0.709798], FontSize -> 10, StripOnInput -> 
        False]},
      "LineLegend",
      DisplayFunction->(FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.922526, 0.385626, 0.209179]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.922526, 0.385626, 0.209179]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial", FontSize -> 10}, Background -> Automatic, 
         StripOnInput -> False], TraditionalForm]& ),
      Editable->True,
      InterpretationFunction:>(RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"Directive", "[", 
               RowBox[{"FontSize", "\[Rule]", "10"}], "]"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& )], 
     Scaled[{0.79, 0.2}], ImageScaled[{0.5, 0.5}],
     BaseStyle->{FontSize -> Larger},
     FormatType->StandardForm]},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->{True, True},
   AxesLabel->{None, None},
   AxesOrigin->{0, 0},
   DisplayFunction->Identity,
   Frame->{{True, False}, {True, False}},
   FrameLabel->{{
      FormBox["\"Photon Fraction\"", TraditionalForm], None}, {
      FormBox["\"Time, sec\"", TraditionalForm], None}},
   FrameStyle->GrayLevel[0],
   FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
   GridLines->{None, None},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   LabelStyle->Directive[FontSize -> 10],
   Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
   PlotRange->{{0, 261.56467812678335`}, {0., 0.9967020292051187}},
   PlotRangeClipping->True,
   PlotRangePadding->{{
      Scaled[0.02], 
      Scaled[0.02]}, {
      Scaled[0.05], 
      Scaled[0.05]}},
   Ticks->{Automatic, Automatic}],
  InterpretTemplate[Legended[
    Graphics[{{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[0.922526, 0.385626, 0.209179]], 
        Line[CompressedData["
1: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
         "]]}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[0.368417, 0.506779, 0.709798]], 
        Line[CompressedData["
1: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
2BTXCDMabn/NAw7/vzV3EkzRv9Holrl4PnxoLPpbVWOKaW0Cscci8iGHOncp
k8sM3c6GnTUwLgDxzJRH/qVmGOJwYqPfl2sgINYpwz+zC0sKb2o9CisBL5ai
jcLvXRg3/s1j36USqG+Li0Fuc9yqtG1yvq4E3MPgfZikOU4X7Vy6/LMEqntr
sofMzfHMopWITmQp2CdliVXlm2Nd7HenirPX4TK7r4Ct3W6sjhtJEGouB4Up
9sWMegscXjF3i12rGmw5+G2n9+5F0RG1PSLDt8BER2+VzsA+TNG8e9rj5G2o
yUubGbW0Qbb0ng+WsS3w7HFYtmC6LapdF74fl9UKx6j1/e9/2aFU5p2VouqP
YPV/vK1bnR1wsk1dO6n7MSg1mdEGch3RVNTiRuT+Dhjy+VSkxEHFKBt1Hy+D
TlivRcsbsXTGp0c2ge/qbpim2W81qN2P86S711uZXijUsvJas84VqYk+1lc7
XsAnSU3X3S5uKKfgBnd8X8EdZvgn+XvuSPmW6rXLsB+SQ16k167wwAeGz4zr
uQdgW1jIupRSDxywrXcOHngDV8qNnNDZE41eTHqv/vQWLL+f+S3z1xMvdA5k
lb0bgg7mH5++ai9UU7pck7byAzTUHSsz9fDGTXxtVoGbR2CCj2E1xnkQO1Iq
x9jVRmHsUupt17qDuHE2//dHh4+grKEcx+lyCA+7hBzuD/gE79M6FX3/HMJQ
amHZmojPcEAlJy27wgfbaQpBd69+Adm+T+5ctr7YZ+DYNFv6FWprXb4Zcvnh
/BcbaZUHY3CmYNen62V+SJTXU+7fHYfnVIOqF3v9Uflb0Nd/xRPw3sST8vyv
P85+KbWNT5kEbcrv7b+uBeAJZXc2HuoUOIW2TS84BmLi0Lm/MqLTQNzjf9fg
HIhN31IW+sSnQW6V/dNw10AcGFI3jd8wDTMFo8VznoF4p9G776v0NJx98e/A
DC0QnTr6n6UqT0Ozhv6LrycDEXayxjJwGqRnKuv7KwNRueLKopv/NEzQMqNv
cdPwG9W95XXdNAgle+4w4aXhHg/r5IWGadCrUCJfrqIhUbbyi1jTNMRPN7t/
X0NDmVXHtW1bpkGePmKouYGGiX5qNnWPp8GDobRUpUbDtG/Cpdqvp6E/uPlo
OZWG82AXJv1zGh6EfwguKKOhHj/6VGmy4L7TY6Z/BQ0raIOjl7VYcE/3BkO9
moZbRtpbTumwoPnXkaCWOhr+LK7JsNNnQX2UoP/gfRpGfNQaHqKwoPw04SH0
moY3as6YFlmz4GJ6ttVJziAMXmv0mzOIBYfqqcperkGoVpefqJjPgsLA+98X
3YNQgf25SkYBCz5JKzaneAbhuYy7Z7kKWXAw8adlq08QVl7JjX5bzAIvj3S6
dHAQ3nnj7hFxgwUH+F7dHI4LwpVbOtIjG1jg7L5P16UqCF9ubq3P6GTBXm4z
U3sOOr614ntr/Z0FZcMC7O+56HhYQvEEfY4FPA19zf4r6chWVyyZ+IMFD3wP
aUXz03ErZ6ZO608W6Hacki0TpWPT/lFemSUWyCU9ZGdTpuMxG+1nVVwk/FpL
aSm3oyM3oVawWoQE6gRPhI4jHVeHeVrzi5JQ96BHu5VKR2t5Hz5eMRKYoR4V
/W505JKuLfwnTsLnV9HZ7H7L+78m40YkSejJaIlwiqSj/+vVGUflSCjeaLCD
s4iOxdequxc0SRisl9ZvK1nO087jPLWdBEHrFYZnyuhYFrlhaFiLhKMnu4xW
VdPRe2lq4L4OCRZfPazW3aHjnQ2ZDUf1SSCr4w7J9tJxxe8PLxopJOiadKcZ
/6FjwcGm6Jh9JNCGatNXsDHwGqf4KgdrEvLDM7PaORjox3n4hqINCXzXPXP3
8DDQPr9a67ktCUMCc2V26xjYpL86ZJUjCSdfiz/w3srAbHsTqpsrCc8CvGZi
HRg4f7Er2tWPBBx40ixKZaBIzF4+Xn8S6k3VEq7vZ2BS/In3t5ZdIL0k031g
+V7yBRpf4HKe/kt2EgEMDDOa2lwRRIKCUUd9dRQDb4rEJvWGkBCzXv34UAkD
+wSacy9HkjB/On03s4yBF3aP1GocJyFwbkmEs4KBG55ZKDxZtmN3R6ViDQMX
eEwUv0eRoBrn/SG0mYFpbio3KSeW+51JN+brZSBLM4baGkeC9pM/vDt+MdDg
T/m81bnl/x7nOSz6h4Hf7cNgdNmRmus+/PjHQI23e/rCzpPgaSXsMsjBRJFF
xcmMCySUNG7VyOJhotiD46/6UknYnmw/JCrMxKE3lUYaGSRY6pRpCykz0Zfe
nR6YS8LwBbXJEypMzNwSOTG+bMbkrbxvqkycSFlf4JtHQmrevVW96kzs+ToI
nvkkDPD1jZzXYWJzjqn53mskHHr/L1nAiIm9joQMb8lyH3pxxseNmehS+pEz
atnxF/kWp0yYqOa00mF22Td2ixzs3MVEvm6q6ZtSEmZrlfQT9zLx9aspRl4Z
CadWV5O/rJh4r8tmYE05CSL+2kUB1kyM32JyK2bZuptwjYUdE4vi93a43yDh
6dG2ttv2THSk5XM+X7bLS4tjWx2Z+OPQUq1+BQlTqj3qWU5M5A7/PViy7Kh4
hy88zkx0XbXzP+FKEv4HVrixXA==
         "]]}}}, {
     DisplayFunction -> Identity, AspectRatio -> GoldenRatio^(-1), 
      Axes -> {True, True}, AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
      DisplayFunction :> Identity, Frame -> {{True, False}, {True, False}}, 
      FrameLabel -> {{"Photon Fraction", None}, {"Time, sec", None}}, 
      FrameStyle -> GrayLevel[0], 
      FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
      GridLines -> {None, None}, GridLinesStyle -> Directive[
        GrayLevel[0.5, 0.4]], LabelStyle -> Directive[FontSize -> 10], 
      Method -> {
       "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None}, 
      PlotRange -> {{0, 261.56467812678335`}, {0., 0.9967020292051187}}, 
      PlotRangeClipping -> True, PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
    Placed[
     Unevaluated[
      LineLegend[{
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[0.922526, 0.385626, 0.209179]], 
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[0.368417, 0.506779, 0.709798]]}, {
        Style["0.1 \[Dash] 1 GeV", 
         RGBColor[0.922526, 0.385626, 0.209179], FontSize -> 10], 
        Style["1 \[Dash] 300 GeV", 
         RGBColor[0.368417, 0.506779, 0.709798], FontSize -> 10]}, LabelStyle -> 
       Directive[FontSize -> 10], LegendLayout -> "Column"]], {0.79, 0.2}, 
     Identity]]& ],
  AutoDelete->True,
  Editable->True,
  SelectWithContents->False,
  Selectable->True]], "Output",
 CellChangeTimes->{
  3.6096537130488367`*^9, 3.609653806801537*^9, 3.609653909518632*^9, 
   3.60965402591575*^9, 3.60965419190308*^9, 3.6096547652234497`*^9, 
   3.609657781744712*^9, 3.609911866677257*^9, 3.609911953501995*^9, 
   3.609912051800687*^9, 3.609912203724334*^9, {3.610876616430073*^9, 
   3.6108766310388393`*^9}, {3.610876686718038*^9, 3.6108766958343763`*^9}, {
   3.6108767471293097`*^9, 3.610876792452742*^9}, {3.618278208353677*^9, 
   3.618278220156267*^9}, 3.618354424794766*^9, 3.6183554803605223`*^9, 
   3.618355594907395*^9, 3.618356513346595*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Very High Energy Bursts Fraction", "Subsubsection",
 CellChangeTimes->{{3.609992307207403*^9, 3.6099923125679817`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"PrintTemporary", "[", 
   RowBox[{"Dynamic", "[", "z", "]"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"burstFraction", "[", 
  RowBox[{
   RowBox[{"defaultUniverse", "[", "]"}], ",", 
   RowBox[{"defaultPopulation", "[", "]"}], ",", 
   RowBox[{"defaultBurst", "[", "]"}], ",", 
   RowBox[{"defaultDetectorArea", "[", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.1", ",", "1.", ",", "\[Infinity]"}], "}"}]}], "]"}]}], "Input",\

 CellChangeTimes->{{3.6099923225781*^9, 3.609992324118848*^9}}],

Cell[BoxData["0.11561859364063046`"], "Output",
 CellChangeTimes->{3.609997525773616*^9}]
}, Open  ]]
}, Closed]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Extra", "Section",
 CellChangeTimes->{{3.6099224067232847`*^9, 3.609922407952365*^9}}],

Cell[CellGroupData[{

Cell["Plots for papers and posters", "Subsection",
 CellChangeTimes->{{3.6096619647232122`*^9, 3.609661967943828*^9}, {
  3.609662049336279*^9, 3.6096620542230167`*^9}}],

Cell[CellGroupData[{

Cell["Main paper", "Subsubsection",
 CellChangeTimes->{{3.6096621550554733`*^9, 3.609662156037018*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"lineWidth", "=", "469.75502"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fontSize", "=", "9"}], ";"}]}], "Input",
 CellChangeTimes->{{3.609663079181303*^9, 3.609663093027342*^9}, {
   3.6105851271520557`*^9, 3.610585129430784*^9}, 3.618275554924518*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{"\"\<Paper/modelOverview.pdf\>\"", ",", 
    RowBox[{"modelScheme", "[", 
     RowBox[{
      RowBox[{"centralEngineSize", "\[Rule]", ".03"}], ",", 
      RowBox[{"jetRadius", "\[Rule]", ".5"}], ",", 
      RowBox[{"lowAngle", "\[Rule]", ".43"}], ",", 
      RowBox[{"highAngle", "\[Rule]", ".043"}], ",", 
      RowBox[{"observerSize", "\[Rule]", ".03"}], ",", 
      RowBox[{"observerDistance", "\[Rule]", "1."}], ",", 
      RowBox[{"observerAngle", "\[Rule]", ".4"}], ",", 
      RowBox[{"centralEngineLabelQ", "\[Rule]", "True"}], ",", 
      RowBox[{"jetLabelQ", "\[Rule]", "True"}], ",", 
      RowBox[{"observerLabelQ", "\[Rule]", "True"}], ",", 
      RowBox[{"FontSize", "\[Rule]", "fontSize"}], ",", 
      RowBox[{"ImageSize", "\[Rule]", 
       RowBox[{".7", "lineWidth"}]}]}], "]"}]}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.6096619842397423`*^9, 3.6096620299951057`*^9}, 
   3.6096623854518433`*^9, {3.609662454570602*^9, 3.609662457473957*^9}, {
   3.609908042282702*^9, 3.609908042440434*^9}, {3.6099226533691177`*^9, 
   3.609922654222568*^9}, {3.609979802760303*^9, 3.609979802926271*^9}, {
   3.61058520636996*^9, 3.610585219533348*^9}, {3.610585254214028*^9, 
   3.6105852548775682`*^9}, {3.618438832961557*^9, 3.61843883444105*^9}, {
   3.618438943804254*^9, 3.618438962493683*^9}, {3.6184391017913647`*^9, 
   3.6184391097780647`*^9}, {3.618439210078299*^9, 3.618439210403713*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[Kappa]", "[", 
  RowBox[{
   RowBox[{"defaultUniverse", "[", "]"}], ",", 
   RowBox[{"defaultBurst", "[", "]"}], ",", 
   RowBox[{"defaultObserver", "[", 
    RowBox[{
     RowBox[{"z", "\[Rule]", "1.822"}], ",", 
     RowBox[{"\[Chi]", "\[Rule]", "0"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{".1", ",", "1", ",", "\[Infinity]"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.618353010509143*^9, 3.618353038395314*^9}}],

Cell[BoxData["0.8191497034714058`"], "Output",
 CellChangeTimes->{3.618353934063137*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[Kappa]", "[", 
  RowBox[{
   RowBox[{"defaultUniverse", "[", "]"}], ",", 
   RowBox[{"defaultBurst", "[", "]"}], ",", 
   RowBox[{"defaultObserver", "[", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{".1", ",", "1", ",", "\[Infinity]"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{3.618353094830974*^9}],

Cell[BoxData["2.429969122734925`"], "Output",
 CellChangeTimes->{3.618355299340081*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"PrintTemporary", "[", 
   RowBox[{"Dynamic", "[", "\[Tau]", "]"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{"\"\<Paper/sampleLightCurveLogNegative.pdf\>\"", ",", 
    RowBox[{"burstCDFPlot", "[", 
     RowBox[{
      RowBox[{"defaultUniverse", "[", "]"}], ",", 
      RowBox[{"defaultBurst", "[", "]"}], ",", 
      RowBox[{"defaultObserver", "[", 
       RowBox[{
        RowBox[{"z", "\[Rule]", "1.822"}], ",", 
        RowBox[{"\[Chi]", "\[Rule]", "0"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{".1", ",", "1", ",", "\[Infinity]"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.", ",", "1."}], "}"}], ",", 
      RowBox[{"ImageSize", "\[Rule]", 
       RowBox[{".45", "lineWidth"}]}], ",", 
      RowBox[{"FontSize", "\[Rule]", "fontSize"}]}], "]"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{"\"\<Paper/sampleLightCurveLogPositive.pdf\>\"", ",", 
    RowBox[{"burstCDFPlot", "[", 
     RowBox[{
      RowBox[{"defaultUniverse", "[", "]"}], ",", 
      RowBox[{"defaultBurst", "[", "]"}], ",", 
      RowBox[{"defaultObserver", "[", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{".1", ",", "1", ",", "\[Infinity]"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.", ",", "1."}], "}"}], ",", 
      RowBox[{"ImageSize", "\[Rule]", 
       RowBox[{".45", "lineWidth"}]}], ",", 
      RowBox[{"FontSize", "\[Rule]", "fontSize"}]}], "]"}]}], "]"}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.6096630954984903`*^9, 3.609663112819458*^9}, {
   3.609663156881756*^9, 3.609663206468858*^9}, {3.6096632485633717`*^9, 
   3.6096632714393167`*^9}, {3.6096683307308207`*^9, 3.609668330858817*^9}, {
   3.6105850273998613`*^9, 3.610585028494966*^9}, {3.610585061558156*^9, 
   3.6105850625800333`*^9}, {3.610585115492052*^9, 3.6105851455216923`*^9}, 
   3.618278187687077*^9, {3.618278231761176*^9, 3.618278232942601*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
  "dir080916C", "=", 
   "\"\<GRObservations/DerivedData/GRObservations/Build/Products/Release/\
080916C/\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
  "dir090510", "=", 
   "\"\<GRObservations/DerivedData/GRObservations/Build/Products/Release/\
090510/\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
  "dir090902B", "=", 
   "\"\<GRObservations/DerivedData/GRObservations/Build/Products/Release/\
090902B/\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
  "dir090926A", "=", 
   "\"\<GRObservations/DerivedData/GRObservations/Build/Products/Release/\
090926A/\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bursts", "=", 
   RowBox[{"{", 
    RowBox[{
    "dir080916C", ",", "dir090510", ",", "dir090902B", ",", "dir090926A"}], 
    "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"ranges", "=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "0.05"}], " ", "300"}], ",", "300"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "0.05"}], " ", "60"}], ",", "60"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "0.05"}], " ", "1000"}], ",", "1000"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "0.05"}], " ", "300"}], ",", "300"}], "}"}]}], 
    "\[IndentingNewLine]", "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"gevData", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Import", "[", 
      RowBox[{
       RowBox[{"burst", "<>", "\"\<gev\>\""}], ",", "\"\<Table\>\""}], "]"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"burst", ",", "bursts"}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"mevData", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Import", "[", 
      RowBox[{
       RowBox[{"burst", "<>", "\"\<mev\>\""}], ",", "\"\<Table\>\""}], "]"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"burst", ",", "bursts"}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"probData", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Import", "[", 
       RowBox[{
        RowBox[{"burst", "<>", "\"\<probs\>\""}], ",", "\"\<Table\>\""}], 
       "]"}], "/.", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\[Kappa]_", ",", "p_", ",", "a_", ",", "b_", ",", "c_"}], 
        "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\[Kappa]", ",", "p"}], "}"}]}]}], ",", 
     RowBox[{"{", 
      RowBox[{"burst", ",", "bursts"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Do", "[", 
   RowBox[{
    RowBox[{"Export", "[", 
     RowBox[{
      RowBox[{"\"\<Paper/lightCurve\>\"", "<>", 
       RowBox[{"ToString", "[", 
        RowBox[{
         RowBox[{"FileNameSplit", "[", 
          RowBox[{
          "bursts", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], 
          "]"}], "\[LeftDoubleBracket]", 
         RowBox[{"-", "1"}], "\[RightDoubleBracket]"}], "]"}], "<>", 
       "\"\<.pdf\>\""}], ",", 
      RowBox[{"ListLinePlot", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"mevData", "[", 
           RowBox[{"[", "i", "]"}], "]"}], ",", 
          RowBox[{"gevData", "[", 
           RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
        RowBox[{"PlotRange", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"ranges", "[", 
            RowBox[{"[", "i", "]"}], "]"}], ",", "All"}], "}"}]}], ",", 
        RowBox[{"PlotStyle", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"ColorData", "[", 
            RowBox[{"97", ",", "4"}], "]"}], ",", 
           RowBox[{"ColorData", "[", 
            RowBox[{"97", ",", "1"}], "]"}]}], "}"}]}], ",", 
        RowBox[{"Frame", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"True", ",", "False"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"True", ",", "False"}], "}"}]}], "}"}]}], ",", 
        RowBox[{"FrameLabel", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"\"\<Time, sec\>\"", ",", "\"\<Photon Fraction\>\""}], 
          "}"}]}], ",", 
        RowBox[{"PlotLegends", "\[Rule]", 
         RowBox[{"Placed", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Style", "[", 
              RowBox[{"\"\<0.1 \[Dash] 1 GeV\>\"", ",", 
               RowBox[{"FontSize", "\[Rule]", "fontSize"}]}], "]"}], ",", 
             RowBox[{"Style", "[", 
              RowBox[{"\"\<1 \[Dash] 300 GeV\>\"", ",", 
               RowBox[{"FontSize", "\[Rule]", "fontSize"}]}], "]"}]}], "}"}], 
           ",", 
           RowBox[{"{", 
            RowBox[{"0.74", ",", "0.20"}], "}"}]}], "]"}]}], ",", 
        RowBox[{"ImageSize", "\[Rule]", 
         RowBox[{".45", "lineWidth"}]}], ",", 
        RowBox[{"FrameStyle", "\[Rule]", 
         RowBox[{"Directive", "[", 
          RowBox[{"FontSize", "\[Rule]", "fontSize"}], "]"}]}]}], "]"}]}], 
     "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "1", ",", 
      RowBox[{"Length", "[", "mevData", "]"}]}], "}"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Do", "[", 
   RowBox[{
    RowBox[{"Export", "[", 
     RowBox[{
      RowBox[{"\"\<Paper/probabilities\>\"", "<>", 
       RowBox[{"ToString", "[", 
        RowBox[{
         RowBox[{"FileNameSplit", "[", 
          RowBox[{
          "bursts", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], 
          "]"}], "\[LeftDoubleBracket]", 
         RowBox[{"-", "1"}], "\[RightDoubleBracket]"}], "]"}], "<>", 
       "\"\<.pdf\>\""}], ",", "\[IndentingNewLine]", 
      RowBox[{"ListLogPlot", "[", 
       RowBox[{
        RowBox[{"probData", "[", 
         RowBox[{"[", "i", "]"}], "]"}], ",", 
        RowBox[{"Joined", "\[Rule]", "True"}], ",", 
        RowBox[{"PlotRange", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "10"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"1.*^-12", ",", "1."}], "}"}]}], "}"}]}], ",", 
        RowBox[{"PlotStyle", "\[Rule]", 
         RowBox[{"ColorData", "[", 
          RowBox[{"97", ",", "9"}], "]"}]}], ",", 
        RowBox[{"Frame", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"True", ",", "False"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"True", ",", "False"}], "}"}]}], "}"}]}], ",", 
        RowBox[{"FrameLabel", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
          "\"\<Stretching Factor\>\"", ",", "\"\<KS Probability\>\""}], 
          "}"}]}], ",", 
        RowBox[{"ImageSize", "\[Rule]", 
         RowBox[{".45", "lineWidth"}]}], ",", 
        RowBox[{"FrameStyle", "\[Rule]", 
         RowBox[{"Directive", "[", 
          RowBox[{"FontSize", "\[Rule]", "fontSize"}], "]"}]}]}], "]"}]}], 
     "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "1", ",", 
      RowBox[{"Length", "[", "mevData", "]"}]}], "}"}]}], "]"}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.596901417566943*^9, 3.5969014298703938`*^9}, {
   3.602215510963944*^9, 3.60221551175172*^9}, {3.609922488975033*^9, 
   3.609922738324974*^9}, {3.6099231653094187`*^9, 3.6099231675748253`*^9}, {
   3.609923340172803*^9, 3.60992337147126*^9}, {3.609923781629249*^9, 
   3.6099237894496937`*^9}, 3.609923913962141*^9, {3.6099239698719254`*^9, 
   3.6099239717357473`*^9}, {3.609924072949731*^9, 3.609924073086207*^9}, {
   3.609972079966633*^9, 3.609972141490472*^9}, {3.6099743242124968`*^9, 
   3.609974343050313*^9}, {3.6099797226523333`*^9, 3.609979722798706*^9}, {
   3.6105853168854103`*^9, 3.610585374267765*^9}, {3.610585420584169*^9, 
   3.610585630055912*^9}, {3.6105856833061333`*^9, 3.6105856859803953`*^9}, {
   3.61058578944057*^9, 3.6105857935310183`*^9}, {3.610585832736731*^9, 
   3.6105858961358967`*^9}, {3.618278511315357*^9, 3.618278531390286*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Kappa]Observed", "=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\"\<3\>\"", ",", 
       RowBox[{"{", 
        RowBox[{"0.350166", ",", "0.893155"}], "}"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"\"\<2\>\"", ",", 
       RowBox[{"{", 
        RowBox[{"0.42816", ",", "1.60589"}], "}"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"\"\<1\>\"", ",", 
       RowBox[{"{", 
        RowBox[{"0.665059", ",", "3.31859"}], "}"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"\"\<4\>\"", ",", 
       RowBox[{"{", 
        RowBox[{"1.98748", ",", "6.62006"}], "}"}]}], "}"}]}], 
    "\[IndentingNewLine]", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{"\"\<Paper/kappaDistributionHistogram.pdf\>\"", ",", 
    RowBox[{"\[Kappa]HistogramPlot", "[", 
     RowBox[{
      RowBox[{"sample4096", "\[LeftDoubleBracket]", 
       RowBox[{"All", ",", 
        RowBox[{"-", "1"}]}], "\[RightDoubleBracket]"}], ",", 
      "\[Kappa]Observed", ",", 
      RowBox[{"FontSize", "\[Rule]", "fontSize"}], ",", 
      RowBox[{"ImageSize", "\[Rule]", 
       RowBox[{".45", "lineWidth"}]}]}], "]"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{"\"\<Paper/kappaDistributionCDF.pdf\>\"", ",", 
    RowBox[{"\[Kappa]CDFPlot", "[", 
     RowBox[{
      RowBox[{"sample4096", "\[LeftDoubleBracket]", 
       RowBox[{"All", ",", 
        RowBox[{"-", "1"}]}], "\[RightDoubleBracket]"}], ",", 
      "\[Kappa]Observed", ",", 
      RowBox[{"PlotPoints", "\[Rule]", "4096"}], ",", 
      RowBox[{"FontSize", "\[Rule]", "fontSize"}], ",", 
      RowBox[{"ImageSize", "\[Rule]", 
       RowBox[{".45", "lineWidth"}]}]}], "]"}]}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.594342734190405*^9, 3.594342752715184*^9}, {
   3.59434286903363*^9, 3.594342900024119*^9}, {3.594343771437028*^9, 
   3.594343773132771*^9}, {3.594852329377499*^9, 3.594852332247513*^9}, {
   3.5966927652249002`*^9, 3.596692799285636*^9}, {3.596693274643531*^9, 
   3.596693288462693*^9}, {3.5966933274676723`*^9, 3.5966933546761417`*^9}, {
   3.603446939569559*^9, 3.603447017756761*^9}, {3.603447061587146*^9, 
   3.603447066057764*^9}, {3.6096359148737793`*^9, 3.6096359282070913`*^9}, {
   3.609664424011471*^9, 3.60966451296507*^9}, {3.60966459359473*^9, 
   3.609664596730783*^9}, {3.610588444213026*^9, 3.610588458518063*^9}, 
   3.6182737798201523`*^9, {3.618274245688026*^9, 3.618274247333022*^9}, 
   3.6182743759350777`*^9, {3.6182748028493357`*^9, 3.61827480471796*^9}, {
   3.618275002802552*^9, 3.618275017671934*^9}, {3.61827520060928*^9, 
   3.618275208255247*^9}, 3.618275858630692*^9, {3.618276082835178*^9, 
   3.6182760857921667`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"highFraction\[Kappa]Observed", "=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\"\<1\>\"", ",", 
       RowBox[{"0.0606088", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"1", "-", 
           RowBox[{"1", "/", 
            SqrtBox["17"]}]}], ",", 
          RowBox[{"1", "+", 
           RowBox[{"1", "/", 
            SqrtBox["17"]}]}]}], "}"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"0.665059", ",", "3.31859"}], "}"}], ",", "2"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"\"\<2\>\"", ",", 
       RowBox[{"0.124604", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"1", "-", 
           RowBox[{"1", "/", 
            SqrtBox["26"]}]}], ",", 
          RowBox[{"1", "+", 
           RowBox[{"1", "/", 
            SqrtBox["26"]}]}]}], "}"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"0.42816", ",", "1.60589"}], "}"}], ",", "2"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"\"\<3\>\"", ",", 
       RowBox[{"0.142558", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"1", "-", 
           RowBox[{"1", "/", 
            SqrtBox["51.1249"]}]}], ",", 
          RowBox[{"1", "+", 
           RowBox[{"1", "/", 
            SqrtBox["51.1249"]}]}]}], "}"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"0.350166", ",", "0.893155"}], "}"}], ",", "2"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"\"\<4\>\"", ",", 
       RowBox[{"0.0570003", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"1", "-", 
           RowBox[{"1", "/", 
            SqrtBox["27"]}]}], ",", 
          RowBox[{"1", "+", 
           RowBox[{"1", "/", 
            SqrtBox["27"]}]}]}], "}"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"1.98748", ",", "6.62006"}], "}"}], ",", "2"}], "}"}]}], 
    "\[IndentingNewLine]", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{"\"\<Paper/correlations.pdf\>\"", ",", 
    RowBox[{"GraphicsGrid", "[", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"ratio\[Chi]ListPlot", "[", 
          RowBox[{
           RowBox[{"sample4096", "\[LeftDoubleBracket]", 
            RowBox[{"All", ",", 
             RowBox[{"{", 
              RowBox[{"2", ",", "3", ",", "4"}], "}"}]}], 
            "\[RightDoubleBracket]"}], ",", 
           RowBox[{"{", "}"}], ",", 
           RowBox[{"ImagePadding", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"50", ",", "5"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"30", ",", "5"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"FontSize", "\[Rule]", "fontSize"}], ",", 
           RowBox[{"ImageSize", "\[Rule]", 
            RowBox[{".45", "lineWidth"}]}], ",", 
           RowBox[{"FrameTicks", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{"0.01", ",", "0.1"}], "}"}], "~", "Join", "~", 
               RowBox[{"Flatten", "[", 
                RowBox[{
                 RowBox[{"Table", "[", 
                  RowBox[{
                   RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"it", ",", "\"\<\>\""}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"it", ",", 
                    SuperscriptBox["10", "sc"], ",", 
                    SuperscriptBox["10", 
                    RowBox[{"sc", "+", "1"}]], ",", 
                    SuperscriptBox["10", "sc"]}], "}"}]}], "]"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"sc", ",", 
                    RowBox[{"-", "3"}], ",", 
                    RowBox[{"-", "1"}]}], "}"}]}], "]"}], ",", "1"}], "]"}]}],
               ",", "Automatic"}], "}"}]}], ",", 
           RowBox[{"PointSize", "\[Rule]", "Tiny"}]}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"\[Chi]\[Kappa]ListPlot", "[", 
          RowBox[{
           RowBox[{"sample4096", "\[LeftDoubleBracket]", 
            RowBox[{"All", ",", 
             RowBox[{"{", 
              RowBox[{"2", ",", 
               RowBox[{"-", "1"}]}], "}"}]}], "\[RightDoubleBracket]"}], ",", 
           
           RowBox[{"{", "}"}], ",", 
           RowBox[{"ImagePadding", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"50", ",", "5"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"30", ",", "5"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
           RowBox[{"FontSize", "\[Rule]", "fontSize"}], ",", 
           RowBox[{"ImageSize", "\[Rule]", 
            RowBox[{".45", "lineWidth"}]}], ",", 
           RowBox[{"PointSize", "\[Rule]", "Tiny"}]}], "]"}]}], "}"}], ",", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"ratio\[Kappa]ListPlot", "[", 
          RowBox[{
           RowBox[{"sample4096", "\[LeftDoubleBracket]", 
            RowBox[{"All", ",", 
             RowBox[{"{", 
              RowBox[{"3", ",", "4", ",", 
               RowBox[{"-", "1"}]}], "}"}]}], "\[RightDoubleBracket]"}], ",", 
           "highFraction\[Kappa]Observed", ",", 
           RowBox[{"ImagePadding", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"50", ",", "5"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"30", ",", "5"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"PlotRange", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"All", ",", 
              RowBox[{"{", 
               RowBox[{"0.42", ",", "6.7"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"FontSize", "\[Rule]", "fontSize"}], ",", 
           RowBox[{"ImageSize", "\[Rule]", 
            RowBox[{".45", "lineWidth"}]}], ",", 
           RowBox[{"FrameTicks", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{"0.01", ",", "0.1"}], "}"}], "~", "Join", "~", 
               RowBox[{"Flatten", "[", 
                RowBox[{
                 RowBox[{"Table", "[", 
                  RowBox[{
                   RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"it", ",", "\"\<\>\""}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"it", ",", 
                    SuperscriptBox["10", "sc"], ",", 
                    SuperscriptBox["10", 
                    RowBox[{"sc", "+", "1"}]], ",", 
                    SuperscriptBox["10", "sc"]}], "}"}]}], "]"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"sc", ",", 
                    RowBox[{"-", "3"}], ",", 
                    RowBox[{"-", "1"}]}], "}"}]}], "]"}], ",", "1"}], "]"}]}],
               ",", "Automatic"}], "}"}]}], ",", 
           RowBox[{"PointSize", "\[Rule]", "Tiny"}]}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Graphics", "[", "]"}]}], "}"}]}], "\[IndentingNewLine]", 
      "}"}], "]"}]}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.6096451014355288`*^9, 3.6096451374568987`*^9}, {
   3.609645222026988*^9, 3.609645227887209*^9}, {3.609645393051215*^9, 
   3.609645428989118*^9}, {3.609645463432189*^9, 3.609645477467903*^9}, {
   3.609645609781362*^9, 3.609645642394065*^9}, {3.609645674156782*^9, 
   3.609645706993593*^9}, {3.6096458067672873`*^9, 3.6096458371022587`*^9}, {
   3.609664946570684*^9, 3.609664966614698*^9}, {3.6096650112443666`*^9, 
   3.6096650505364847`*^9}, {3.610588553641007*^9, 3.6105885700351887`*^9}, {
   3.610588661684598*^9, 3.6105887177238083`*^9}, {3.610588898802246*^9, 
   3.610588907708644*^9}, {3.610588977633296*^9, 3.610588985470376*^9}, {
   3.610589208194084*^9, 3.610589209020136*^9}, {3.610589659275305*^9, 
   3.610589671300022*^9}, 3.618275097475562*^9, {3.618275164864891*^9, 
   3.618275173885165*^9}, {3.618275215993387*^9, 3.6182752285865593`*^9}, {
   3.618275752844428*^9, 3.618275754178556*^9}, 3.618275865374152*^9, {
   3.618276087395083*^9, 3.618276094153987*^9}, 3.618276954443928*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Main presentation", "Subsubsection",
 CellChangeTimes->{{3.610600479214024*^9, 3.6106004812611017`*^9}, {
  3.61060055607691*^9, 3.610600557490025*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"imageSize", "=", "225"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fontSize", "=", "10"}], ";"}]}], "Input",
 CellChangeTimes->{{3.609663079181303*^9, 3.609663093027342*^9}, {
  3.6105851271520557`*^9, 3.610585129430784*^9}, {3.610723345113246*^9, 
  3.610723398071932*^9}, {3.610723760164323*^9, 3.6107237621296387`*^9}, {
  3.61072389710588*^9, 3.610723897198683*^9}, {3.61072398859604*^9, 
  3.610723990699546*^9}, {3.610724037563147*^9, 3.610724037720209*^9}, {
  3.610724227766706*^9, 3.61072423900406*^9}, {3.610846985972015*^9, 
  3.6108470141876574`*^9}, {3.6108470675326567`*^9, 3.610847076198399*^9}, {
  3.610847116910941*^9, 3.610847117244248*^9}, {3.6108472329473963`*^9, 
  3.610847235232614*^9}, {3.6108473635583887`*^9, 3.6108473641312923`*^9}, {
  3.6108702400110407`*^9, 3.610870250528454*^9}, {3.610876257866946*^9, 
  3.610876278742895*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"plotRange", "=", 
   RowBox[{"PlotRange", "/.", 
    RowBox[{"AbsoluteOptions", "[", 
     RowBox[{"modelScheme", "[", 
      RowBox[{
       RowBox[{"centralEngineSize", "\[Rule]", "0.03"}], ",", 
       RowBox[{"jetRadius", "\[Rule]", "0.5"}], ",", 
       RowBox[{"lowAngle", "\[Rule]", "0.43"}], ",", 
       RowBox[{"highAngle", "\[Rule]", "0.043"}], ",", 
       RowBox[{"observerSize", "\[Rule]", "0.03"}], ",", 
       RowBox[{"observerDistance", "\[Rule]", "1"}], ",", 
       RowBox[{"observerAngle", "\[Rule]", "0.4"}], ",", 
       RowBox[{"centralEngineQ", "\[Rule]", "True"}], ",", 
       RowBox[{"jetQ", "\[Rule]", "True"}], ",", 
       RowBox[{"epQ", "\[Rule]", "True"}], ",", 
       RowBox[{"\[Gamma]Q", "\[Rule]", "True"}], ",", 
       RowBox[{"observerQ", "\[Rule]", "True"}], ",", 
       RowBox[{"jetLabelQ", "\[Rule]", "False"}], ",", 
       RowBox[{"ImageSize", "\[Rule]", "imageSize"}], ",", 
       RowBox[{"FontSize", "\[Rule]", "fontSize"}], ",", 
       RowBox[{"shockWaveThickness", "\[Rule]", "Large"}], ",", 
       RowBox[{"radiatorThickness", "\[Rule]", "Medium"}], ",", 
       RowBox[{"photonThickness", "\[Rule]", "Medium"}]}], "]"}], "]"}]}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.610723232398819*^9, 3.6107232593245163`*^9}, {
  3.610723403031991*^9, 3.610723433222994*^9}, {3.6108757061512938`*^9, 
  3.610875707195648*^9}, {3.6108760776267242`*^9, 3.610876104303146*^9}, {
  3.610876135895878*^9, 3.610876148021715*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"MapIndexed", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Export", "[", 
      RowBox[{
       RowBox[{"\"\<Presentation/modelOverview\>\"", "<>", 
        RowBox[{"ToString", "[", 
         RowBox[{"#2", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}],
          "]"}], "<>", "\"\<.pdf\>\""}], ",", "#1"}], "]"}], "&"}], ",", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"modelScheme", "[", 
       RowBox[{
        RowBox[{"centralEngineSize", "\[Rule]", "0.03"}], ",", 
        RowBox[{"jetRadius", "\[Rule]", "0.5"}], ",", 
        RowBox[{"lowAngle", "\[Rule]", "0.43"}], ",", 
        RowBox[{"highAngle", "\[Rule]", "0.043"}], ",", 
        RowBox[{"observerSize", "\[Rule]", "0.03"}], ",", 
        RowBox[{"observerDistance", "\[Rule]", "1"}], ",", 
        RowBox[{"observerAngle", "\[Rule]", "0.4"}], ",", 
        RowBox[{"centralEngineQ", "\[Rule]", "True"}], ",", 
        RowBox[{"jetQ", "\[Rule]", "False"}], ",", 
        RowBox[{"epQ", "\[Rule]", "False"}], ",", 
        RowBox[{"\[Gamma]Q", "\[Rule]", "False"}], ",", 
        RowBox[{"observerQ", "\[Rule]", "True"}], ",", 
        RowBox[{"jetLabelQ", "\[Rule]", "False"}], ",", 
        RowBox[{"PlotRange", "\[Rule]", "plotRange"}], ",", 
        RowBox[{"ImageSize", "\[Rule]", "imageSize"}], ",", 
        RowBox[{"FontSize", "\[Rule]", "fontSize"}], ",", 
        RowBox[{"shockWaveThickness", "\[Rule]", "Large"}], ",", 
        RowBox[{"radiatorThickness", "\[Rule]", "Medium"}], ",", 
        RowBox[{"photonThickness", "\[Rule]", "Medium"}]}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"modelScheme", "[", 
       RowBox[{
        RowBox[{"centralEngineSize", "\[Rule]", "0.03"}], ",", 
        RowBox[{"jetRadius", "\[Rule]", "0.1"}], ",", 
        RowBox[{"lowAngle", "\[Rule]", "0.43"}], ",", 
        RowBox[{"highAngle", "\[Rule]", "0."}], ",", 
        RowBox[{"observerSize", "\[Rule]", "0.03"}], ",", 
        RowBox[{"observerDistance", "\[Rule]", "1"}], ",", 
        RowBox[{"observerAngle", "\[Rule]", "0.4"}], ",", 
        RowBox[{"centralEngineQ", "\[Rule]", "True"}], ",", 
        RowBox[{"jetQ", "\[Rule]", "True"}], ",", 
        RowBox[{"epQ", "\[Rule]", "False"}], ",", 
        RowBox[{"\[Gamma]Q", "\[Rule]", "False"}], ",", 
        RowBox[{"observerQ", "\[Rule]", "True"}], ",", 
        RowBox[{"jetLabelQ", "\[Rule]", "False"}], ",", 
        RowBox[{"PlotRange", "\[Rule]", "plotRange"}], ",", 
        RowBox[{"ImageSize", "\[Rule]", "imageSize"}], ",", 
        RowBox[{"FontSize", "\[Rule]", "fontSize"}], ",", 
        RowBox[{"shockWaveThickness", "\[Rule]", "Large"}], ",", 
        RowBox[{"radiatorThickness", "\[Rule]", "Medium"}], ",", 
        RowBox[{"photonThickness", "\[Rule]", "Medium"}]}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"modelScheme", "[", 
       RowBox[{
        RowBox[{"centralEngineSize", "\[Rule]", "0.03"}], ",", 
        RowBox[{"jetRadius", "\[Rule]", "0.2"}], ",", 
        RowBox[{"lowAngle", "\[Rule]", "0.43"}], ",", 
        RowBox[{"highAngle", "\[Rule]", "0."}], ",", 
        RowBox[{"observerSize", "\[Rule]", "0.03"}], ",", 
        RowBox[{"observerDistance", "\[Rule]", "1"}], ",", 
        RowBox[{"observerAngle", "\[Rule]", "0.4"}], ",", 
        RowBox[{"centralEngineQ", "\[Rule]", "True"}], ",", 
        RowBox[{"jetQ", "\[Rule]", "True"}], ",", 
        RowBox[{"epQ", "\[Rule]", "False"}], ",", 
        RowBox[{"\[Gamma]Q", "\[Rule]", "False"}], ",", 
        RowBox[{"observerQ", "\[Rule]", "True"}], ",", 
        RowBox[{"jetLabelQ", "\[Rule]", "False"}], ",", 
        RowBox[{"PlotRange", "\[Rule]", "plotRange"}], ",", 
        RowBox[{"ImageSize", "\[Rule]", "imageSize"}], ",", 
        RowBox[{"FontSize", "\[Rule]", "fontSize"}], ",", 
        RowBox[{"shockWaveThickness", "\[Rule]", "Large"}], ",", 
        RowBox[{"radiatorThickness", "\[Rule]", "Medium"}], ",", 
        RowBox[{"photonThickness", "\[Rule]", "Medium"}]}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"modelScheme", "[", 
       RowBox[{
        RowBox[{"centralEngineSize", "\[Rule]", "0.03"}], ",", 
        RowBox[{"jetRadius", "\[Rule]", "0.3"}], ",", 
        RowBox[{"lowAngle", "\[Rule]", "0.43"}], ",", 
        RowBox[{"highAngle", "\[Rule]", "0."}], ",", 
        RowBox[{"observerSize", "\[Rule]", "0.03"}], ",", 
        RowBox[{"observerDistance", "\[Rule]", "1"}], ",", 
        RowBox[{"observerAngle", "\[Rule]", "0.4"}], ",", 
        RowBox[{"centralEngineQ", "\[Rule]", "True"}], ",", 
        RowBox[{"jetQ", "\[Rule]", "True"}], ",", 
        RowBox[{"epQ", "\[Rule]", "False"}], ",", 
        RowBox[{"\[Gamma]Q", "\[Rule]", "False"}], ",", 
        RowBox[{"observerQ", "\[Rule]", "True"}], ",", 
        RowBox[{"jetLabelQ", "\[Rule]", "False"}], ",", 
        RowBox[{"PlotRange", "\[Rule]", "plotRange"}], ",", 
        RowBox[{"ImageSize", "\[Rule]", "imageSize"}], ",", 
        RowBox[{"FontSize", "\[Rule]", "fontSize"}], ",", 
        RowBox[{"shockWaveThickness", "\[Rule]", "Large"}], ",", 
        RowBox[{"radiatorThickness", "\[Rule]", "Medium"}], ",", 
        RowBox[{"photonThickness", "\[Rule]", "Medium"}]}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"modelScheme", "[", 
       RowBox[{
        RowBox[{"centralEngineSize", "\[Rule]", "0.03"}], ",", 
        RowBox[{"jetRadius", "\[Rule]", "0.4"}], ",", 
        RowBox[{"lowAngle", "\[Rule]", "0.43"}], ",", 
        RowBox[{"highAngle", "\[Rule]", "0."}], ",", 
        RowBox[{"observerSize", "\[Rule]", "0.03"}], ",", 
        RowBox[{"observerDistance", "\[Rule]", "1"}], ",", 
        RowBox[{"observerAngle", "\[Rule]", "0.4"}], ",", 
        RowBox[{"centralEngineQ", "\[Rule]", "True"}], ",", 
        RowBox[{"jetQ", "\[Rule]", "True"}], ",", 
        RowBox[{"epQ", "\[Rule]", "False"}], ",", 
        RowBox[{"\[Gamma]Q", "\[Rule]", "False"}], ",", 
        RowBox[{"observerQ", "\[Rule]", "True"}], ",", 
        RowBox[{"jetLabelQ", "\[Rule]", "False"}], ",", 
        RowBox[{"PlotRange", "\[Rule]", "plotRange"}], ",", 
        RowBox[{"ImageSize", "\[Rule]", "imageSize"}], ",", 
        RowBox[{"FontSize", "\[Rule]", "fontSize"}], ",", 
        RowBox[{"shockWaveThickness", "\[Rule]", "Large"}], ",", 
        RowBox[{"radiatorThickness", "\[Rule]", "Medium"}], ",", 
        RowBox[{"photonThickness", "\[Rule]", "Medium"}]}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"modelScheme", "[", 
       RowBox[{
        RowBox[{"centralEngineSize", "\[Rule]", "0.03"}], ",", 
        RowBox[{"jetRadius", "\[Rule]", "0.5"}], ",", 
        RowBox[{"lowAngle", "\[Rule]", "0.43"}], ",", 
        RowBox[{"highAngle", "\[Rule]", "0."}], ",", 
        RowBox[{"observerSize", "\[Rule]", "0.03"}], ",", 
        RowBox[{"observerDistance", "\[Rule]", "1"}], ",", 
        RowBox[{"observerAngle", "\[Rule]", "0.4"}], ",", 
        RowBox[{"centralEngineQ", "\[Rule]", "True"}], ",", 
        RowBox[{"jetQ", "\[Rule]", "True"}], ",", 
        RowBox[{"epQ", "\[Rule]", "False"}], ",", 
        RowBox[{"\[Gamma]Q", "\[Rule]", "False"}], ",", 
        RowBox[{"observerQ", "\[Rule]", "True"}], ",", 
        RowBox[{"jetLabelQ", "\[Rule]", "False"}], ",", 
        RowBox[{"PlotRange", "\[Rule]", "plotRange"}], ",", 
        RowBox[{"ImageSize", "\[Rule]", "imageSize"}], ",", 
        RowBox[{"FontSize", "\[Rule]", "fontSize"}], ",", 
        RowBox[{"shockWaveThickness", "\[Rule]", "Large"}], ",", 
        RowBox[{"radiatorThickness", "\[Rule]", "Medium"}], ",", 
        RowBox[{"photonThickness", "\[Rule]", "Medium"}]}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"modelScheme", "[", 
       RowBox[{
        RowBox[{"centralEngineSize", "\[Rule]", "0.03"}], ",", 
        RowBox[{"jetRadius", "\[Rule]", "0.5"}], ",", 
        RowBox[{"lowAngle", "\[Rule]", "0.43"}], ",", 
        RowBox[{"highAngle", "\[Rule]", "0.043"}], ",", 
        RowBox[{"observerSize", "\[Rule]", "0.03"}], ",", 
        RowBox[{"observerDistance", "\[Rule]", "1"}], ",", 
        RowBox[{"observerAngle", "\[Rule]", "0.4"}], ",", 
        RowBox[{"centralEngineQ", "\[Rule]", "True"}], ",", 
        RowBox[{"jetQ", "\[Rule]", "True"}], ",", 
        RowBox[{"epQ", "\[Rule]", "False"}], ",", 
        RowBox[{"\[Gamma]Q", "\[Rule]", "False"}], ",", 
        RowBox[{"observerQ", "\[Rule]", "True"}], ",", 
        RowBox[{"jetLabelQ", "\[Rule]", "False"}], ",", 
        RowBox[{"PlotRange", "\[Rule]", "plotRange"}], ",", 
        RowBox[{"ImageSize", "\[Rule]", "imageSize"}], ",", 
        RowBox[{"FontSize", "\[Rule]", "fontSize"}], ",", 
        RowBox[{"shockWaveThickness", "\[Rule]", "Large"}], ",", 
        RowBox[{"radiatorThickness", "\[Rule]", "Medium"}], ",", 
        RowBox[{"photonThickness", "\[Rule]", "Medium"}]}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"modelScheme", "[", 
       RowBox[{
        RowBox[{"centralEngineSize", "\[Rule]", "0.03"}], ",", 
        RowBox[{"jetRadius", "\[Rule]", "0.5"}], ",", 
        RowBox[{"lowAngle", "\[Rule]", "0.43"}], ",", 
        RowBox[{"highAngle", "\[Rule]", "0.043"}], ",", 
        RowBox[{"observerSize", "\[Rule]", "0.03"}], ",", 
        RowBox[{"observerDistance", "\[Rule]", "1"}], ",", 
        RowBox[{"observerAngle", "\[Rule]", "0.4"}], ",", 
        RowBox[{"centralEngineQ", "\[Rule]", "True"}], ",", 
        RowBox[{"jetQ", "\[Rule]", "True"}], ",", 
        RowBox[{"epQ", "\[Rule]", "True"}], ",", 
        RowBox[{"\[Gamma]Q", "\[Rule]", "False"}], ",", 
        RowBox[{"observerQ", "\[Rule]", "True"}], ",", 
        RowBox[{"jetLabelQ", "\[Rule]", "False"}], ",", 
        RowBox[{"PlotRange", "\[Rule]", "plotRange"}], ",", 
        RowBox[{"ImageSize", "\[Rule]", "imageSize"}], ",", 
        RowBox[{"FontSize", "\[Rule]", "fontSize"}], ",", 
        RowBox[{"shockWaveThickness", "\[Rule]", "Large"}], ",", 
        RowBox[{"radiatorThickness", "\[Rule]", "Medium"}], ",", 
        RowBox[{"photonThickness", "\[Rule]", "Medium"}]}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"modelScheme", "[", 
       RowBox[{
        RowBox[{"centralEngineSize", "\[Rule]", "0.03"}], ",", 
        RowBox[{"jetRadius", "\[Rule]", "0.5"}], ",", 
        RowBox[{"lowAngle", "\[Rule]", "0.43"}], ",", 
        RowBox[{"highAngle", "\[Rule]", "0.043"}], ",", 
        RowBox[{"observerSize", "\[Rule]", "0.03"}], ",", 
        RowBox[{"observerDistance", "\[Rule]", "1"}], ",", 
        RowBox[{"observerAngle", "\[Rule]", "0.4"}], ",", 
        RowBox[{"centralEngineQ", "\[Rule]", "True"}], ",", 
        RowBox[{"jetQ", "\[Rule]", "True"}], ",", 
        RowBox[{"epQ", "\[Rule]", "True"}], ",", 
        RowBox[{"\[Gamma]Q", "\[Rule]", "True"}], ",", 
        RowBox[{"observerQ", "\[Rule]", "True"}], ",", 
        RowBox[{"jetLabelQ", "\[Rule]", "False"}], ",", 
        RowBox[{"PlotRange", "\[Rule]", "plotRange"}], ",", 
        RowBox[{"ImageSize", "\[Rule]", "imageSize"}], ",", 
        RowBox[{"FontSize", "\[Rule]", "fontSize"}], ",", 
        RowBox[{"shockWaveThickness", "\[Rule]", "Large"}], ",", 
        RowBox[{"radiatorThickness", "\[Rule]", "Medium"}], ",", 
        RowBox[{"photonThickness", "\[Rule]", "Medium"}]}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"modelScheme", "[", 
       RowBox[{
        RowBox[{"centralEngineSize", "\[Rule]", "0.03"}], ",", 
        RowBox[{"jetRadius", "\[Rule]", "0.5"}], ",", 
        RowBox[{"lowAngle", "\[Rule]", "0.43"}], ",", 
        RowBox[{"highAngle", "\[Rule]", "0.043"}], ",", 
        RowBox[{"observerSize", "\[Rule]", "0.03"}], ",", 
        RowBox[{"observerDistance", "\[Rule]", "1"}], ",", 
        RowBox[{"observerAngle", "\[Rule]", "0."}], ",", 
        RowBox[{"centralEngineQ", "\[Rule]", "True"}], ",", 
        RowBox[{"jetQ", "\[Rule]", "True"}], ",", 
        RowBox[{"epQ", "\[Rule]", "True"}], ",", 
        RowBox[{"\[Gamma]Q", "\[Rule]", "True"}], ",", 
        RowBox[{"observerQ", "\[Rule]", "True"}], ",", 
        RowBox[{"jetLabelQ", "\[Rule]", "False"}], ",", 
        RowBox[{"ImageSize", "\[Rule]", "imageSize"}], ",", 
        RowBox[{"FontSize", "\[Rule]", "fontSize"}], ",", 
        RowBox[{"shockWaveThickness", "\[Rule]", "Large"}], ",", 
        RowBox[{"radiatorThickness", "\[Rule]", "Medium"}], ",", 
        RowBox[{"photonThickness", "\[Rule]", "Medium"}]}], "]"}]}], 
     "\[IndentingNewLine]", "}"}]}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.6106064549679337`*^9, 3.6106064643027287`*^9}, {
   3.610606565619996*^9, 3.6106065790290956`*^9}, {3.610606640272019*^9, 
   3.6106066622100697`*^9}, {3.610606713358758*^9, 3.610606715492943*^9}, {
   3.610720279581924*^9, 3.610720284526478*^9}, 3.610723209658454*^9, {
   3.6107232643180027`*^9, 3.610723310024692*^9}, {3.610723937732457*^9, 
   3.610723959221477*^9}, {3.6108757098396*^9, 3.6108757190577307`*^9}, {
   3.610876154296465*^9, 3.610876216403064*^9}, {3.6109416187971163`*^9, 
   3.61094161918296*^9}, 3.6109416617052097`*^9, {3.610941729723734*^9, 
   3.610941729951686*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"PrintTemporary", "[", 
   RowBox[{"Dynamic", "[", "\[Tau]", "]"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{"\"\<Presentation/sampleLightCurveLogNegative.pdf\>\"", ",", 
    RowBox[{"burstCDFPlot", "[", 
     RowBox[{
      RowBox[{"defaultUniverse", "[", "]"}], ",", 
      RowBox[{"defaultBurst", "[", "]"}], ",", 
      RowBox[{"defaultObserver", "[", 
       RowBox[{
        RowBox[{"z", "\[Rule]", "1.822"}], ",", 
        RowBox[{"\[Chi]", "\[Rule]", "0."}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{".1", ",", "1.", ",", "\[Infinity]"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.", ",", "1."}], "}"}], ",", 
      RowBox[{"ImageSize", "\[Rule]", "imageSize"}], ",", 
      RowBox[{"FontSize", "\[Rule]", "fontSize"}], ",", 
      RowBox[{"frameColor", "\[Rule]", "Gray"}], ",", 
      RowBox[{"Thickness", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"Large", ",", "Large"}], "}"}]}]}], "]"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{"\"\<Presentation/sampleLightCurveLogPositive.pdf\>\"", ",", 
    RowBox[{"burstCDFPlot", "[", 
     RowBox[{
      RowBox[{"defaultUniverse", "[", "]"}], ",", 
      RowBox[{"defaultBurst", "[", "]"}], ",", 
      RowBox[{"defaultObserver", "[", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{".1", ",", "1.", ",", "\[Infinity]"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.", ",", "1."}], "}"}], ",", 
      RowBox[{"ImageSize", "\[Rule]", "imageSize"}], ",", 
      RowBox[{"FontSize", "\[Rule]", "fontSize"}], ",", 
      RowBox[{"frameColor", "\[Rule]", "Gray"}], ",", 
      RowBox[{"Thickness", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"Large", ",", "Large"}], "}"}]}]}], "]"}]}], "]"}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.6096630954984903`*^9, 3.609663112819458*^9}, {
  3.609663156881756*^9, 3.609663206468858*^9}, {3.6096632485633717`*^9, 
  3.6096632714393167`*^9}, {3.6096683307308207`*^9, 3.609668330858817*^9}, {
  3.6105850273998613`*^9, 3.610585028494966*^9}, {3.610585061558156*^9, 
  3.6105850625800333`*^9}, {3.610585115492052*^9, 3.6105851455216923`*^9}, {
  3.610763488702261*^9, 3.610763495197115*^9}, {3.6108701871043386`*^9, 
  3.610870216683406*^9}, {3.610870285078671*^9, 3.610870298543376*^9}, {
  3.610875451598813*^9, 3.610875486974951*^9}, {3.610875537580411*^9, 
  3.6108755377584133`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"gevData", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Import", "[", 
      RowBox[{
       RowBox[{"burst", "<>", "\"\<gev\>\""}], ",", "\"\<Table\>\""}], "]"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"burst", ",", "bursts"}], "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{3.612502712081915*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Import", "::", "nffil"}], "MessageName"], ":", 
  " ", "\<\"File not found during \[NoBreak]\\!\\(Import\\)\[NoBreak]. \\!\\(\
\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/Import/nffil\\\", \
ButtonNote -> \\\"Import::nffil\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.612502712733432*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Import", "::", "nffil"}], "MessageName"], ":", 
  " ", "\<\"File not found during \[NoBreak]\\!\\(Import\\)\[NoBreak]. \\!\\(\
\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/Import/nffil\\\", \
ButtonNote -> \\\"Import::nffil\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6125027127878523`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Import", "::", "nffil"}], "MessageName"], ":", 
  " ", "\<\"File not found during \[NoBreak]\\!\\(Import\\)\[NoBreak]. \\!\\(\
\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/Import/nffil\\\", \
ButtonNote -> \\\"Import::nffil\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.612502712870421*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], ":", 
  " ", "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(Import :: \
nffil\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.612502712872903*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
  "dir080916C", "=", 
   "\"\<GRObservations/DerivedData/GRObservations/Build/Products/Release/\
080916C/\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
  "dir090510", "=", 
   "\"\<GRObservations/DerivedData/GRObservations/Build/Products/Release/\
090510/\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
  "dir090902B", "=", 
   "\"\<GRObservations/DerivedData/GRObservations/Build/Products/Release/\
090902B/\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
  "dir090926A", "=", 
   "\"\<GRObservations/DerivedData/GRObservations/Build/Products/Release/\
090926A/\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bursts", "=", 
   RowBox[{"{", 
    RowBox[{
    "dir080916C", ",", "dir090510", ",", "dir090902B", ",", "dir090926A"}], 
    "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"ranges", "=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "0.05"}], " ", "300"}], ",", "300"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "0.05"}], " ", "60"}], ",", "60"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "0.05"}], " ", "1000"}], ",", "1000"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "0.05"}], " ", "300"}], ",", "300"}], "}"}]}], 
    "\[IndentingNewLine]", "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"gevData", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Import", "[", 
      RowBox[{
       RowBox[{"burst", "<>", "\"\<gev\>\""}], ",", "\"\<Table\>\""}], "]"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"burst", ",", "bursts"}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"mevData", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Import", "[", 
      RowBox[{
       RowBox[{"burst", "<>", "\"\<mev\>\""}], ",", "\"\<Table\>\""}], "]"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"burst", ",", "bursts"}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"probData", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Import", "[", 
      RowBox[{
       RowBox[{"burst", "<>", "\"\<probs\>\""}], ",", "\"\<Table\>\""}], 
      "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"burst", ",", "bursts"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"arrow", "[", 
    RowBox[{"time_", ",", "gev_", ",", "mev_", ",", "headSize_"}], "]"}], ":=", 
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Arrowheads", "[", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Abs", "[", 
            RowBox[{"gev", "-", "mev"}], "]"}], ">", 
           RowBox[{"4.5", "headSize"}]}], ",", 
          RowBox[{"+", "1"}], ",", 
          RowBox[{"-", "1"}]}], "]"}], 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "headSize"}], ",", "headSize"}], "}"}]}], "]"}], ",", 
      RowBox[{"Arrow", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"time", ",", "gev"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"time", ",", "mev"}], "}"}]}], "}"}], "]"}]}], "}"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ksLines", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"probData", "\[LeftDoubleBracket]", 
          RowBox[{"i", ",", "#", ",", "3"}], "\[RightDoubleBracket]"}], ",", 
         RowBox[{"probData", "\[LeftDoubleBracket]", 
          RowBox[{"i", ",", "#", ",", "4"}], "\[RightDoubleBracket]"}], ",", 
         RowBox[{"probData", "\[LeftDoubleBracket]", 
          RowBox[{"i", ",", "#", ",", "5"}], "\[RightDoubleBracket]"}]}], 
        "}"}], "&"}], "@", 
      RowBox[{
       RowBox[{"Position", "[", 
        RowBox[{
         RowBox[{"probData", "\[LeftDoubleBracket]", 
          RowBox[{"i", ",", "All", ",", "1"}], "\[RightDoubleBracket]"}], ",",
          "1"}], "]"}], "\[LeftDoubleBracket]", 
       RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "mevData", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ksLinesStretched", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"probData", "\[LeftDoubleBracket]", 
          RowBox[{"i", ",", "#", ",", "3"}], "\[RightDoubleBracket]"}], ",", 
         RowBox[{"probData", "\[LeftDoubleBracket]", 
          RowBox[{"i", ",", "#", ",", "4"}], "\[RightDoubleBracket]"}], ",", 
         RowBox[{"probData", "\[LeftDoubleBracket]", 
          RowBox[{"i", ",", "#", ",", "5"}], "\[RightDoubleBracket]"}]}], 
        "}"}], "&"}], "@", 
      RowBox[{
       RowBox[{"Ordering", "[", 
        RowBox[{
         RowBox[{"probData", "\[LeftDoubleBracket]", 
          RowBox[{"i", ",", "All", ",", "2"}], "\[RightDoubleBracket]"}], ",", 
         RowBox[{"-", "1"}]}], "]"}], "\[LeftDoubleBracket]", "1", 
       "\[RightDoubleBracket]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "mevData", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"stretchingFactors", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"probData", "\[LeftDoubleBracket]", 
      RowBox[{"i", ",", 
       RowBox[{
        RowBox[{"Ordering", "[", 
         RowBox[{
          RowBox[{"probData", "\[LeftDoubleBracket]", 
           RowBox[{"i", ",", "All", ",", "2"}], "\[RightDoubleBracket]"}], 
          ",", 
          RowBox[{"-", "1"}]}], "]"}], "\[LeftDoubleBracket]", "1", 
        "\[RightDoubleBracket]"}], ",", "1"}], "\[RightDoubleBracket]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "mevData", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Do", "[", 
   RowBox[{
    RowBox[{"Export", "[", 
     RowBox[{
      RowBox[{"\"\<Presentation/lightCurve\>\"", "<>", 
       RowBox[{"ToString", "[", 
        RowBox[{
         RowBox[{"FileNameSplit", "[", 
          RowBox[{
          "bursts", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], 
          "]"}], "\[LeftDoubleBracket]", 
         RowBox[{"-", "1"}], "\[RightDoubleBracket]"}], "]"}], "<>", 
       "\"\<.pdf\>\""}], ",", 
      RowBox[{"ListLinePlot", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"mevData", "[", 
           RowBox[{"[", "i", "]"}], "]"}], ",", 
          RowBox[{"gevData", "[", 
           RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
        RowBox[{"PlotRange", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"ranges", "[", 
            RowBox[{"[", "i", "]"}], "]"}], ",", "All"}], "}"}]}], ",", 
        RowBox[{"PlotStyle", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"Thick", ",", "Red"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"Thick", ",", "Blue"}], "}"}]}], "}"}]}], ",", 
        RowBox[{"Frame", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"True", ",", "False"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"True", ",", "False"}], "}"}]}], "}"}]}], ",", 
        RowBox[{"FrameLabel", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"\"\<Time, sec\>\"", ",", "\"\<Photon Fraction\>\""}], 
          "}"}]}], ",", 
        RowBox[{"PlotLegends", "\[Rule]", 
         RowBox[{"Placed", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Style", "[", 
              RowBox[{"\"\<0.1 \[Dash] 1 GeV\>\"", ",", "Red", ",", 
               RowBox[{"FontSize", "\[Rule]", "fontSize"}]}], "]"}], ",", 
             RowBox[{"Style", "[", 
              RowBox[{"\"\<1 \[Dash] 300 GeV\>\"", ",", "Blue", ",", 
               RowBox[{"FontSize", "\[Rule]", "fontSize"}]}], "]"}]}], "}"}], 
           ",", 
           RowBox[{"{", 
            RowBox[{"0.79", ",", "0.20"}], "}"}]}], "]"}]}], ",", 
        RowBox[{"ImageSize", "\[Rule]", "imageSize"}], ",", 
        RowBox[{"FrameStyle", "\[Rule]", 
         RowBox[{"Directive", "[", 
          RowBox[{"Gray", ",", 
           RowBox[{"FontSize", "\[Rule]", "fontSize"}]}], "]"}]}], ",", 
        RowBox[{"LabelStyle", "\[Rule]", 
         RowBox[{"Directive", "[", 
          RowBox[{"FontSize", "\[Rule]", 
           RowBox[{"OptionValue", "[", "FontSize", "]"}]}], "]"}]}]}], 
       "]"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "1", ",", 
      RowBox[{"Length", "[", "mevData", "]"}]}], "}"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Do", "[", 
   RowBox[{
    RowBox[{"Export", "[", 
     RowBox[{
      RowBox[{"\"\<Presentation/lightCurveMeV\>\"", "<>", 
       RowBox[{"ToString", "[", 
        RowBox[{
         RowBox[{"FileNameSplit", "[", 
          RowBox[{
          "bursts", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], 
          "]"}], "\[LeftDoubleBracket]", 
         RowBox[{"-", "1"}], "\[RightDoubleBracket]"}], "]"}], "<>", 
       "\"\<.pdf\>\""}], ",", 
      RowBox[{"ListLinePlot", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"mevData", "[", 
           RowBox[{"[", "i", "]"}], "]"}], ",", 
          RowBox[{"gevData", "[", 
           RowBox[{"[", "i", "]"}], "]"}], ",", 
          RowBox[{"mevData", "[", 
           RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
        RowBox[{"PlotRange", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"ranges", "[", 
            RowBox[{"[", "i", "]"}], "]"}], ",", "All"}], "}"}]}], ",", 
        RowBox[{"PlotStyle", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"Thick", ",", "Red"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"Thick", ",", 
             RowBox[{"RGBColor", "[", 
              RowBox[{"0", ",", "0", ",", "1", ",", ".3"}], "]"}]}], "}"}], 
           ",", 
           RowBox[{"{", 
            RowBox[{"Thick", ",", "Red"}], "}"}]}], "}"}]}], ",", 
        RowBox[{"Frame", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"True", ",", "False"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"True", ",", "False"}], "}"}]}], "}"}]}], ",", 
        RowBox[{"FrameLabel", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"\"\<Time, sec\>\"", ",", "\"\<Photon Fraction\>\""}], 
          "}"}]}], ",", 
        RowBox[{"PlotLegends", "\[Rule]", 
         RowBox[{"Placed", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Style", "[", 
              RowBox[{"\"\<0.1 \[Dash] 1 GeV\>\"", ",", "Red", ",", 
               RowBox[{"FontSize", "\[Rule]", "fontSize"}]}], "]"}], ",", 
             RowBox[{"Style", "[", 
              RowBox[{"\"\<1 \[Dash] 300 GeV\>\"", ",", 
               RowBox[{"RGBColor", "[", 
                RowBox[{"0", ",", "0", ",", "1", ",", ".3"}], "]"}], ",", 
               RowBox[{"FontSize", "\[Rule]", "fontSize"}]}], "]"}], ",", 
             "None"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0.79", ",", "0.20"}], "}"}]}], "]"}]}], ",", 
        RowBox[{"ImageSize", "\[Rule]", "imageSize"}], ",", 
        RowBox[{"FrameStyle", "\[Rule]", 
         RowBox[{"Directive", "[", 
          RowBox[{"Gray", ",", 
           RowBox[{"FontSize", "\[Rule]", "fontSize"}]}], "]"}]}], ",", 
        RowBox[{"LabelStyle", "\[Rule]", 
         RowBox[{"Directive", "[", 
          RowBox[{"FontSize", "\[Rule]", 
           RowBox[{"OptionValue", "[", "FontSize", "]"}]}], "]"}]}]}], 
       "]"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "1", ",", 
      RowBox[{"Length", "[", "mevData", "]"}]}], "}"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Do", "[", 
   RowBox[{
    RowBox[{"Export", "[", 
     RowBox[{
      RowBox[{"\"\<Presentation/lightCurveGeV\>\"", "<>", 
       RowBox[{"ToString", "[", 
        RowBox[{
         RowBox[{"FileNameSplit", "[", 
          RowBox[{
          "bursts", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], 
          "]"}], "\[LeftDoubleBracket]", 
         RowBox[{"-", "1"}], "\[RightDoubleBracket]"}], "]"}], "<>", 
       "\"\<.pdf\>\""}], ",", 
      RowBox[{"ListLinePlot", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"mevData", "[", 
           RowBox[{"[", "i", "]"}], "]"}], ",", 
          RowBox[{"gevData", "[", 
           RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
        RowBox[{"PlotRange", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"ranges", "[", 
            RowBox[{"[", "i", "]"}], "]"}], ",", "All"}], "}"}]}], ",", 
        RowBox[{"PlotStyle", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"Thick", ",", 
             RowBox[{"RGBColor", "[", 
              RowBox[{"1", ",", "0", ",", "0", ",", ".3"}], "]"}]}], "}"}], 
           ",", 
           RowBox[{"{", 
            RowBox[{"Thick", ",", "Blue"}], "}"}]}], "}"}]}], ",", 
        RowBox[{"Frame", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"True", ",", "False"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"True", ",", "False"}], "}"}]}], "}"}]}], ",", 
        RowBox[{"FrameLabel", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"\"\<Time, sec\>\"", ",", "\"\<Photon Fraction\>\""}], 
          "}"}]}], ",", 
        RowBox[{"PlotLegends", "\[Rule]", 
         RowBox[{"Placed", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Style", "[", 
              RowBox[{"\"\<0.1 \[Dash] 1 GeV\>\"", ",", 
               RowBox[{"RGBColor", "[", 
                RowBox[{"1", ",", "0", ",", "0", ",", ".3"}], "]"}], ",", 
               RowBox[{"FontSize", "\[Rule]", "fontSize"}]}], "]"}], ",", 
             RowBox[{"Style", "[", 
              RowBox[{"\"\<1 \[Dash] 300 GeV\>\"", ",", "Blue", ",", 
               RowBox[{"FontSize", "\[Rule]", "fontSize"}]}], "]"}]}], "}"}], 
           ",", 
           RowBox[{"{", 
            RowBox[{"0.79", ",", "0.20"}], "}"}]}], "]"}]}], ",", 
        RowBox[{"ImageSize", "\[Rule]", "imageSize"}], ",", 
        RowBox[{"FrameStyle", "\[Rule]", 
         RowBox[{"Directive", "[", 
          RowBox[{"Gray", ",", 
           RowBox[{"FontSize", "\[Rule]", "fontSize"}]}], "]"}]}], ",", 
        RowBox[{"LabelStyle", "\[Rule]", 
         RowBox[{"Directive", "[", 
          RowBox[{"FontSize", "\[Rule]", 
           RowBox[{"OptionValue", "[", "FontSize", "]"}]}], "]"}]}]}], 
       "]"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "1", ",", 
      RowBox[{"Length", "[", "mevData", "]"}]}], "}"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Do", "[", 
   RowBox[{
    RowBox[{"Export", "[", 
     RowBox[{
      RowBox[{"\"\<Presentation/lightCurveArrow\>\"", "<>", 
       RowBox[{"ToString", "[", 
        RowBox[{
         RowBox[{"FileNameSplit", "[", 
          RowBox[{
          "bursts", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], 
          "]"}], "\[LeftDoubleBracket]", 
         RowBox[{"-", "1"}], "\[RightDoubleBracket]"}], "]"}], "<>", 
       "\"\<.pdf\>\""}], ",", 
      RowBox[{"Show", "[", 
       RowBox[{
        RowBox[{"ListLinePlot", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"mevData", "[", 
             RowBox[{"[", "i", "]"}], "]"}], ",", 
            RowBox[{"gevData", "[", 
             RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
          RowBox[{"PlotRange", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"ranges", "[", 
              RowBox[{"[", "i", "]"}], "]"}], ",", "All"}], "}"}]}], ",", 
          RowBox[{"PlotStyle", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"Thick", ",", "Red"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"Thick", ",", "Blue"}], "}"}]}], "}"}]}], ",", 
          RowBox[{"Frame", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"True", ",", "False"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"True", ",", "False"}], "}"}]}], "}"}]}], ",", 
          RowBox[{"FrameLabel", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"\"\<Time, sec\>\"", ",", "\"\<Photon Fraction\>\""}], 
            "}"}]}], ",", 
          RowBox[{"PlotLegends", "\[Rule]", 
           RowBox[{"Placed", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Style", "[", 
                RowBox[{"\"\<0.1 \[Dash] 1 GeV\>\"", ",", "Red", ",", 
                 RowBox[{"FontSize", "\[Rule]", "fontSize"}]}], "]"}], ",", 
               RowBox[{"Style", "[", 
                RowBox[{"\"\<1 \[Dash] 300 GeV\>\"", ",", "Blue", ",", 
                 RowBox[{"FontSize", "\[Rule]", "fontSize"}]}], "]"}]}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0.79", ",", "0.20"}], "}"}]}], "]"}]}], ",", 
          RowBox[{"ImageSize", "\[Rule]", "imageSize"}], ",", 
          RowBox[{"FrameStyle", "\[Rule]", 
           RowBox[{"Directive", "[", 
            RowBox[{"Gray", ",", 
             RowBox[{"FontSize", "\[Rule]", "fontSize"}]}], "]"}]}], ",", 
          RowBox[{"LabelStyle", "\[Rule]", 
           RowBox[{"Directive", "[", 
            RowBox[{"FontSize", "\[Rule]", 
             RowBox[{"OptionValue", "[", "FontSize", "]"}]}], "]"}]}]}], 
         "]"}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"arrow", "[", 
           RowBox[{
            RowBox[{"probData", "\[LeftDoubleBracket]", 
             RowBox[{"i", ",", "#", ",", "3"}], "\[RightDoubleBracket]"}], 
            ",", 
            RowBox[{"probData", "\[LeftDoubleBracket]", 
             RowBox[{"i", ",", "#", ",", "4"}], "\[RightDoubleBracket]"}], 
            ",", 
            RowBox[{"probData", "\[LeftDoubleBracket]", 
             RowBox[{"i", ",", "#", ",", "5"}], "\[RightDoubleBracket]"}], 
            ",", "0.08"}], "]"}], "&"}], "@", 
         RowBox[{
          RowBox[{"Position", "[", 
           RowBox[{
            RowBox[{"probData", "\[LeftDoubleBracket]", 
             RowBox[{"i", ",", "All", ",", "1"}], "\[RightDoubleBracket]"}], 
            ",", "1"}], "]"}], "\[LeftDoubleBracket]", 
          RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}]}]}], "]"}]}], 
     "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "1", ",", 
      RowBox[{"Length", "[", "mevData", "]"}]}], "}"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Do", "[", 
  RowBox[{
   RowBox[{"Export", "[", 
    RowBox[{
     RowBox[{"\"\<Presentation/lightCurveStretched\>\"", "<>", 
      RowBox[{"ToString", "[", 
       RowBox[{
        RowBox[{"FileNameSplit", "[", 
         RowBox[{
         "bursts", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], 
         "]"}], "\[LeftDoubleBracket]", 
        RowBox[{"-", "1"}], "\[RightDoubleBracket]"}], "]"}], "<>", 
      "\"\<.pdf\>\""}], ",", 
     RowBox[{"ListLinePlot", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
         "mevData", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], 
         ",", 
         RowBox[{
          RowBox[{
          "mevData", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], "/.", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"t_", ",", "c_"}], "}"}], "\[RuleDelayed]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{
              "stretchingFactors", "\[LeftDoubleBracket]", "i", 
               "\[RightDoubleBracket]"}], "t"}], ",", "c"}], "}"}]}]}], ",", 
         RowBox[{
         "gevData", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}]}], 
        "}"}], ",", 
       RowBox[{"PlotRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"ranges", "[", 
           RowBox[{"[", "i", "]"}], "]"}], ",", "All"}], "}"}]}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"Thick", ",", 
            RowBox[{"RGBColor", "[", 
             RowBox[{"1", ",", "0", ",", "0", ",", ".2"}], "]"}]}], "}"}], 
          ",", 
          RowBox[{"{", 
           RowBox[{"Thick", ",", "Red"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"Thick", ",", "Blue"}], "}"}]}], "}"}]}], ",", 
       RowBox[{"Frame", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"True", ",", "False"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"True", ",", "False"}], "}"}]}], "}"}]}], ",", 
       RowBox[{"FrameLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"\"\<Time, sec\>\"", ",", "\"\<Photon Fraction\>\""}], 
         "}"}]}], ",", 
       RowBox[{"PlotLegends", "\[Rule]", 
        RowBox[{"Placed", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"None", ",", 
            RowBox[{"Style", "[", 
             RowBox[{"\"\<0.1 \[Dash] 1 GeV\>\"", ",", "Red", ",", 
              RowBox[{"FontSize", "\[Rule]", "fontSize"}]}], "]"}], ",", 
            RowBox[{"Style", "[", 
             RowBox[{"\"\<1 \[Dash] 300 GeV\>\"", ",", "Blue", ",", 
              RowBox[{"FontSize", "\[Rule]", "fontSize"}]}], "]"}]}], "}"}], 
          ",", 
          RowBox[{"{", 
           RowBox[{"0.79", ",", "0.20"}], "}"}]}], "]"}]}], ",", 
       RowBox[{"ImageSize", "\[Rule]", "imageSize"}], ",", 
       RowBox[{"FrameStyle", "\[Rule]", 
        RowBox[{"Directive", "[", 
         RowBox[{"Gray", ",", 
          RowBox[{"FontSize", "\[Rule]", "fontSize"}]}], "]"}]}], ",", 
       RowBox[{"LabelStyle", "\[Rule]", 
        RowBox[{"Directive", "[", 
         RowBox[{"FontSize", "\[Rule]", 
          RowBox[{"OptionValue", "[", "FontSize", "]"}]}], "]"}]}]}], "]"}]}],
     "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "1", ",", 
     RowBox[{"Length", "[", "mevData", "]"}]}], "}"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Do", "[", 
   RowBox[{
    RowBox[{"Export", "[", 
     RowBox[{
      RowBox[{"\"\<Presentation/lightCurveStretchedArrow\>\"", "<>", 
       RowBox[{"ToString", "[", 
        RowBox[{
         RowBox[{"FileNameSplit", "[", 
          RowBox[{
          "bursts", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], 
          "]"}], "\[LeftDoubleBracket]", 
         RowBox[{"-", "1"}], "\[RightDoubleBracket]"}], "]"}], "<>", 
       "\"\<.pdf\>\""}], ",", 
      RowBox[{"Show", "[", 
       RowBox[{
        RowBox[{"ListLinePlot", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{
            "mevData", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}],
             ",", 
            RowBox[{
             RowBox[{
             "mevData", "\[LeftDoubleBracket]", "i", 
              "\[RightDoubleBracket]"}], "/.", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"t_", ",", "c_"}], "}"}], "\[RuleDelayed]", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{
                 RowBox[{
                 "stretchingFactors", "\[LeftDoubleBracket]", "i", 
                  "\[RightDoubleBracket]"}], "t"}], ",", "c"}], "}"}]}]}], 
            ",", 
            RowBox[{
            "gevData", "\[LeftDoubleBracket]", "i", 
             "\[RightDoubleBracket]"}]}], "}"}], ",", 
          RowBox[{"PlotRange", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"ranges", "[", 
              RowBox[{"[", "i", "]"}], "]"}], ",", "All"}], "}"}]}], ",", 
          RowBox[{"PlotStyle", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"Thick", ",", 
               RowBox[{"RGBColor", "[", 
                RowBox[{"1", ",", "0", ",", "0", ",", ".2"}], "]"}]}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"Thick", ",", "Red"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"Thick", ",", "Blue"}], "}"}]}], "}"}]}], ",", 
          RowBox[{"Frame", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"True", ",", "False"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"True", ",", "False"}], "}"}]}], "}"}]}], ",", 
          RowBox[{"FrameLabel", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"\"\<Time, sec\>\"", ",", "\"\<Photon Fraction\>\""}], 
            "}"}]}], ",", 
          RowBox[{"PlotLegends", "\[Rule]", 
           RowBox[{"Placed", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"None", ",", 
               RowBox[{"Style", "[", 
                RowBox[{"\"\<0.1 \[Dash] 1 GeV\>\"", ",", "Red", ",", 
                 RowBox[{"FontSize", "\[Rule]", "fontSize"}]}], "]"}], ",", 
               RowBox[{"Style", "[", 
                RowBox[{"\"\<1 \[Dash] 300 GeV\>\"", ",", "Blue", ",", 
                 RowBox[{"FontSize", "\[Rule]", "fontSize"}]}], "]"}]}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0.79", ",", "0.20"}], "}"}]}], "]"}]}], ",", 
          RowBox[{"ImageSize", "\[Rule]", "imageSize"}], ",", 
          RowBox[{"FrameStyle", "\[Rule]", 
           RowBox[{"Directive", "[", 
            RowBox[{"Gray", ",", 
             RowBox[{"FontSize", "\[Rule]", "fontSize"}]}], "]"}]}], ",", 
          RowBox[{"LabelStyle", "\[Rule]", 
           RowBox[{"Directive", "[", 
            RowBox[{"FontSize", "\[Rule]", 
             RowBox[{"OptionValue", "[", "FontSize", "]"}]}], "]"}]}]}], 
         "]"}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"arrow", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
             "stretchingFactors", "\[LeftDoubleBracket]", "i", 
              "\[RightDoubleBracket]"}], 
             RowBox[{"probData", "\[LeftDoubleBracket]", 
              RowBox[{"i", ",", "#", ",", "3"}], "\[RightDoubleBracket]"}]}], 
            ",", 
            RowBox[{"probData", "\[LeftDoubleBracket]", 
             RowBox[{"i", ",", "#", ",", "4"}], "\[RightDoubleBracket]"}], 
            ",", 
            RowBox[{"probData", "\[LeftDoubleBracket]", 
             RowBox[{"i", ",", "#", ",", "5"}], "\[RightDoubleBracket]"}], 
            ",", "0.08"}], "]"}], "&"}], "@", 
         RowBox[{
          RowBox[{"Ordering", "[", 
           RowBox[{
            RowBox[{"probData", "\[LeftDoubleBracket]", 
             RowBox[{"i", ",", "All", ",", "2"}], "\[RightDoubleBracket]"}], 
            ",", 
            RowBox[{"-", "1"}]}], "]"}], "\[LeftDoubleBracket]", "1", 
          "\[RightDoubleBracket]"}]}]}], "]"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "1", ",", 
      RowBox[{"Length", "[", "mevData", "]"}]}], "}"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Do", "[", 
   RowBox[{
    RowBox[{"Export", "[", 
     RowBox[{
      RowBox[{"\"\<Presentation/probabilities\>\"", "<>", 
       RowBox[{"ToString", "[", 
        RowBox[{
         RowBox[{"FileNameSplit", "[", 
          RowBox[{
          "bursts", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], 
          "]"}], "\[LeftDoubleBracket]", 
         RowBox[{"-", "1"}], "\[RightDoubleBracket]"}], "]"}], "<>", 
       "\"\<.pdf\>\""}], ",", "\[IndentingNewLine]", 
      RowBox[{"ListLogPlot", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
         "probData", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], "/.", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"\[Kappa]_", ",", "p_", ",", "a_", ",", "b_", ",", "c_"}], 
           "}"}], "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"\[Kappa]", ",", "p"}], "}"}]}]}], ",", 
        RowBox[{"Joined", "\[Rule]", "True"}], ",", 
        RowBox[{"PlotRange", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "10"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"1.*^-12", ",", "1."}], "}"}]}], "}"}]}], ",", 
        RowBox[{"PlotStyle", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"Thick", ",", 
           RowBox[{"RGBColor", "[", 
            RowBox[{"0.5", ",", "0", ",", "0.5"}], "]"}]}], "}"}]}], ",", 
        RowBox[{"Frame", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"True", ",", "False"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"True", ",", "False"}], "}"}]}], "}"}]}], ",", 
        RowBox[{"FrameLabel", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
          "\"\<Stretching Factor\>\"", ",", "\"\<KS Probability\>\""}], 
          "}"}]}], ",", 
        RowBox[{"ImageSize", "\[Rule]", "imageSize"}], ",", 
        RowBox[{"FrameStyle", "\[Rule]", 
         RowBox[{"Directive", "[", 
          RowBox[{"Gray", ",", 
           RowBox[{"FontSize", "\[Rule]", "fontSize"}]}], "]"}]}], ",", 
        RowBox[{"LabelStyle", "\[Rule]", 
         RowBox[{"Directive", "[", 
          RowBox[{"FontSize", "\[Rule]", 
           RowBox[{"OptionValue", "[", "FontSize", "]"}]}], "]"}]}]}], 
       "]"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "1", ",", 
      RowBox[{"Length", "[", "mevData", "]"}]}], "}"}]}], "]"}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.596901417566943*^9, 3.5969014298703938`*^9}, {
   3.602215510963944*^9, 3.60221551175172*^9}, {3.609922488975033*^9, 
   3.609922738324974*^9}, {3.6099231653094187`*^9, 3.6099231675748253`*^9}, {
   3.609923340172803*^9, 3.60992337147126*^9}, {3.609923781629249*^9, 
   3.6099237894496937`*^9}, 3.609923913962141*^9, {3.6099239698719254`*^9, 
   3.6099239717357473`*^9}, {3.609924072949731*^9, 3.609924073086207*^9}, {
   3.609972079966633*^9, 3.609972141490472*^9}, {3.6099743242124968`*^9, 
   3.609974343050313*^9}, {3.6099797226523333`*^9, 3.609979722798706*^9}, {
   3.6105853168854103`*^9, 3.610585374267765*^9}, {3.610585420584169*^9, 
   3.610585630055912*^9}, {3.6105856833061333`*^9, 3.6105856859803953`*^9}, {
   3.61058578944057*^9, 3.6105857935310183`*^9}, {3.610585832736731*^9, 
   3.6105858961358967`*^9}, {3.6108763898385963`*^9, 3.610876396219652*^9}, {
   3.6108765816618*^9, 3.610876581741659*^9}, {3.610877742985663*^9, 
   3.61087775082073*^9}, {3.610877814411359*^9, 3.6108778333829107`*^9}, {
   3.610877901092267*^9, 3.61087790546931*^9}, {3.610877949288672*^9, 
   3.610877968253372*^9}, {3.610880367986475*^9, 3.6108803708050203`*^9}, {
   3.610881041704081*^9, 3.610881058477166*^9}, {3.6108812338421097`*^9, 
   3.610881261505311*^9}, {3.610881321362818*^9, 3.6108813378124943`*^9}, {
   3.6108814220101337`*^9, 3.610881444987808*^9}, 3.610888790013906*^9, {
   3.610894290403256*^9, 3.610894322057729*^9}, {3.610894771639104*^9, 
   3.610894776636917*^9}, {3.6108950757158413`*^9, 3.610895088692451*^9}, {
   3.610932263763562*^9, 3.610932375982188*^9}, {3.610932450969349*^9, 
   3.610932452078947*^9}, {3.6109325471983624`*^9, 3.610932547328372*^9}, {
   3.610932616113578*^9, 3.6109326162447243`*^9}, {3.610932690437449*^9, 
   3.610932800611597*^9}, {3.610932899635867*^9, 3.610932901432639*^9}, {
   3.610933079230461*^9, 3.610933098275571*^9}, {3.61093313785247*^9, 
   3.6109331628718853`*^9}, {3.610933219324635*^9, 3.610933255175129*^9}, {
   3.610933407975793*^9, 3.6109334128836718`*^9}, {3.610933483728244*^9, 
   3.610933483868659*^9}, {3.6109336213610764`*^9, 3.610933629416643*^9}, {
   3.610933778595759*^9, 3.610933804969139*^9}, {3.610933857563305*^9, 
   3.6109338630116262`*^9}, {3.6109339094020433`*^9, 3.610933918807749*^9}, {
   3.610933976050831*^9, 3.610934007093012*^9}, {3.610934071054606*^9, 
   3.6109340956533957`*^9}, {3.610934230200841*^9, 3.6109342409478073`*^9}, {
   3.610934342650633*^9, 3.610934352273933*^9}, {3.610934609426957*^9, 
   3.6109346316140347`*^9}, {3.610940236655019*^9, 3.6109402556536207`*^9}, {
   3.6109407621544456`*^9, 3.6109407710158367`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Import", "::", "nffil"}], "MessageName"], ":", 
  " ", "\<\"File not found during \[NoBreak]\\!\\(Import\\)\[NoBreak]. \\!\\(\
\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/Import/nffil\\\", \
ButtonNote -> \\\"Import::nffil\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.612502626517663*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Import", "::", "nffil"}], "MessageName"], ":", 
  " ", "\<\"File not found during \[NoBreak]\\!\\(Import\\)\[NoBreak]. \\!\\(\
\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/Import/nffil\\\", \
ButtonNote -> \\\"Import::nffil\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.612502626597177*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Import", "::", "nffil"}], "MessageName"], ":", 
  " ", "\<\"File not found during \[NoBreak]\\!\\(Import\\)\[NoBreak]. \\!\\(\
\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/Import/nffil\\\", \
ButtonNote -> \\\"Import::nffil\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.612502626599032*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], ":", 
  " ", "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(Import :: \
nffil\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.612502626670677*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Import", "::", "nffil"}], "MessageName"], ":", 
  " ", "\<\"File not found during \[NoBreak]\\!\\(Import\\)\[NoBreak]. \\!\\(\
\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/Import/nffil\\\", \
ButtonNote -> \\\"Import::nffil\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6125026267268972`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Import", "::", "nffil"}], "MessageName"], ":", 
  " ", "\<\"File not found during \[NoBreak]\\!\\(Import\\)\[NoBreak]. \\!\\(\
\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/Import/nffil\\\", \
ButtonNote -> \\\"Import::nffil\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.612502626729109*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Import", "::", "nffil"}], "MessageName"], ":", 
  " ", "\<\"File not found during \[NoBreak]\\!\\(Import\\)\[NoBreak]. \\!\\(\
\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/Import/nffil\\\", \
ButtonNote -> \\\"Import::nffil\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.612502626792541*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], ":", 
  " ", "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(Import :: \
nffil\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.61250262685944*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Import", "::", "nffil"}], "MessageName"], ":", 
  " ", "\<\"File not found during \[NoBreak]\\!\\(Import\\)\[NoBreak]. \\!\\(\
\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/Import/nffil\\\", \
ButtonNote -> \\\"Import::nffil\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.612502626861608*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Import", "::", "nffil"}], "MessageName"], ":", 
  " ", "\<\"File not found during \[NoBreak]\\!\\(Import\\)\[NoBreak]. \\!\\(\
\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/Import/nffil\\\", \
ButtonNote -> \\\"Import::nffil\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.612502626925448*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Import", "::", "nffil"}], "MessageName"], ":", 
  " ", "\<\"File not found during \[NoBreak]\\!\\(Import\\)\[NoBreak]. \\!\\(\
\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/Import/nffil\\\", \
ButtonNote -> \\\"Import::nffil\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.612502626927759*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], ":", 
  " ", "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(Import :: \
nffil\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.612502626992963*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Symbol", "::", "argx"}], "MessageName"], ":", 
  " ", "\<\"\[NoBreak]\\!\\(Symbol\\)\[NoBreak] called with \[NoBreak]\\!\\(0\
\\)\[NoBreak] arguments; 1 argument is expected. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/argx\\\", ButtonNote -> \
\\\"Symbol::argx\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.612502627061617*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Part", "::", "partw"}], "MessageName"], ":", 
  " ", "\<\"Part \[NoBreak]\\!\\(1\\)\[NoBreak] of \[NoBreak]\\!\\({}\\)\
\[NoBreak] does not exist. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/partw\\\", ButtonNote -> \
\\\"Part::partw\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6125026271279173`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Part", "::", "pspec"}], "MessageName"], ":", 
  " ", "\<\"Part specification \[NoBreak]\\!\\(\\(\\({}\\)\\) \
\[LeftDoubleBracket] \\(\\(1, 1\\)\\) \[RightDoubleBracket]\\)\[NoBreak] is \
neither a machine-sized integer nor a list of machine-sized integers. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/pspec\\\", \
ButtonNote -> \\\"Part::pspec\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6125026271953707`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Part", "::", "partw"}], "MessageName"], ":", 
  " ", "\<\"Part \[NoBreak]\\!\\(1\\)\[NoBreak] of \[NoBreak]\\!\\({}\\)\
\[NoBreak] does not exist. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/partw\\\", ButtonNote -> \
\\\"Part::partw\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.612502627257897*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Part", "::", "pspec"}], "MessageName"], ":", 
  " ", "\<\"Part specification \[NoBreak]\\!\\(\\(\\({}\\)\\) \
\[LeftDoubleBracket] \\(\\(1, 1\\)\\) \[RightDoubleBracket]\\)\[NoBreak] is \
neither a machine-sized integer nor a list of machine-sized integers. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/pspec\\\", \
ButtonNote -> \\\"Part::pspec\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6125026273304167`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Part", "::", "pspec"}], "MessageName"], ":", 
  " ", "\<\"Part specification \[NoBreak]\\!\\(\\(\\({}\\)\\) \
\[LeftDoubleBracket] \\(\\(1, 1\\)\\) \[RightDoubleBracket]\\)\[NoBreak] is \
neither a machine-sized integer nor a list of machine-sized integers. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/pspec\\\", \
ButtonNote -> \\\"Part::pspec\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6125026273911057`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], ":", 
  " ", "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(Part :: \
pspec\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.612502627441942*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Symbol", "::", "argx"}], "MessageName"], ":", 
  " ", "\<\"\[NoBreak]\\!\\(Symbol\\)\[NoBreak] called with \[NoBreak]\\!\\(0\
\\)\[NoBreak] arguments; 1 argument is expected. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/argx\\\", ButtonNote -> \
\\\"Symbol::argx\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.612502627510592*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Part", "::", "partw"}], "MessageName"], ":", 
  " ", "\<\"Part \[NoBreak]\\!\\(1\\)\[NoBreak] of \[NoBreak]\\!\\({}\\)\
\[NoBreak] does not exist. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/partw\\\", ButtonNote -> \
\\\"Part::partw\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6125026275742807`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], ":", 
  " ", "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(Part :: \
partw\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.612502627645432*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Symbol", "::", "argx"}], "MessageName"], ":", 
  " ", "\<\"\[NoBreak]\\!\\(Symbol\\)\[NoBreak] called with \[NoBreak]\\!\\(0\
\\)\[NoBreak] arguments; 1 argument is expected. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/argx\\\", ButtonNote -> \
\\\"Symbol::argx\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6125026277166452`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], ":", 
  " ", "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(Symbol :: \
argx\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.612502627777763*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Symbol", "::", "argx"}], "MessageName"], ":", 
  " ", "\<\"\[NoBreak]\\!\\(Symbol\\)\[NoBreak] called with \[NoBreak]\\!\\(0\
\\)\[NoBreak] arguments; 1 argument is expected. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/argx\\\", ButtonNote -> \
\\\"Symbol::argx\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.612502627842227*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Take", "::", "take"}], "MessageName"], ":", 
  " ", "\<\"Cannot take positions \[NoBreak]\\!\\(-1\\)\[NoBreak] through \
\[NoBreak]\\!\\(-1\\)\[NoBreak] in \[NoBreak]\\!\\({}\\)\[NoBreak]. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/Take/take\\\", \
ButtonNote -> \\\"Take::take\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.612502627912889*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Part", "::", "pspec"}], "MessageName"], ":", 
  " ", "\<\"Part specification \[NoBreak]\\!\\(Symbol[]\\)\[NoBreak] is \
neither a machine-sized integer nor a list of machine-sized integers. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/pspec\\\", \
ButtonNote -> \\\"Part::pspec\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.612502627980723*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Part", "::", "pspec"}], "MessageName"], ":", 
  " ", "\<\"Part specification \[NoBreak]\\!\\(Symbol[]\\)\[NoBreak] is \
neither a machine-sized integer nor a list of machine-sized integers. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/pspec\\\", \
ButtonNote -> \\\"Part::pspec\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6125026280376873`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Part", "::", "pspec"}], "MessageName"], ":", 
  " ", "\<\"Part specification \[NoBreak]\\!\\(Symbol[]\\)\[NoBreak] is \
neither a machine-sized integer nor a list of machine-sized integers. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/pspec\\\", \
ButtonNote -> \\\"Part::pspec\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.612502628108283*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], ":", 
  " ", "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(Part :: \
pspec\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.612502628110366*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Symbol", "::", "argx"}], "MessageName"], ":", 
  " ", "\<\"\[NoBreak]\\!\\(Symbol\\)\[NoBreak] called with \[NoBreak]\\!\\(0\
\\)\[NoBreak] arguments; 1 argument is expected. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/argx\\\", ButtonNote -> \
\\\"Symbol::argx\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.612502628174858*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Take", "::", "take"}], "MessageName"], ":", 
  " ", "\<\"Cannot take positions \[NoBreak]\\!\\(-1\\)\[NoBreak] through \
\[NoBreak]\\!\\(-1\\)\[NoBreak] in \[NoBreak]\\!\\({}\\)\[NoBreak]. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/Take/take\\\", \
ButtonNote -> \\\"Take::take\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6125026282364273`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Symbol", "::", "argx"}], "MessageName"], ":", 
  " ", "\<\"\[NoBreak]\\!\\(Symbol\\)\[NoBreak] called with \[NoBreak]\\!\\(0\
\\)\[NoBreak] arguments; 1 argument is expected. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/argx\\\", ButtonNote -> \
\\\"Symbol::argx\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6125026282870903`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], ":", 
  " ", "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(Symbol :: \
argx\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.612502628352893*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Take", "::", "take"}], "MessageName"], ":", 
  " ", "\<\"Cannot take positions \[NoBreak]\\!\\(-1\\)\[NoBreak] through \
\[NoBreak]\\!\\(-1\\)\[NoBreak] in \[NoBreak]\\!\\({}\\)\[NoBreak]. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/Take/take\\\", \
ButtonNote -> \\\"Take::take\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.612502628406234*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], ":", 
  " ", "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(Take :: take\\), \
\\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.612502628408103*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Symbol", "::", "argx"}], "MessageName"], ":", 
  " ", "\<\"\[NoBreak]\\!\\(Symbol\\)\[NoBreak] called with \[NoBreak]\\!\\(0\
\\)\[NoBreak] arguments; 1 argument is expected. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/argx\\\", ButtonNote -> \
\\\"Symbol::argx\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.61250262847288*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Take", "::", "take"}], "MessageName"], ":", 
  " ", "\<\"Cannot take positions \[NoBreak]\\!\\(-1\\)\[NoBreak] through \
\[NoBreak]\\!\\(-1\\)\[NoBreak] in \[NoBreak]\\!\\({}\\)\[NoBreak]. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/Take/take\\\", \
ButtonNote -> \\\"Take::take\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.612502628536306*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Part", "::", "pspec"}], "MessageName"], ":", 
  " ", "\<\"Part specification \[NoBreak]\\!\\(Symbol[]\\)\[NoBreak] is \
neither a machine-sized integer nor a list of machine-sized integers. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/pspec\\\", \
ButtonNote -> \\\"Part::pspec\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.612502628601384*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Symbol", "::", "argx"}], "MessageName"], ":", 
  " ", "\<\"\[NoBreak]\\!\\(Symbol\\)\[NoBreak] called with \[NoBreak]\\!\\(0\
\\)\[NoBreak] arguments; 1 argument is expected. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/argx\\\", ButtonNote -> \
\\\"Symbol::argx\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.612502628670837*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Take", "::", "take"}], "MessageName"], ":", 
  " ", "\<\"Cannot take positions \[NoBreak]\\!\\(-1\\)\[NoBreak] through \
\[NoBreak]\\!\\(-1\\)\[NoBreak] in \[NoBreak]\\!\\({}\\)\[NoBreak]. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/Take/take\\\", \
ButtonNote -> \\\"Take::take\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.612502628722443*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Part", "::", "pspec"}], "MessageName"], ":", 
  " ", "\<\"Part specification \[NoBreak]\\!\\(Symbol[]\\)\[NoBreak] is \
neither a machine-sized integer nor a list of machine-sized integers. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/pspec\\\", \
ButtonNote -> \\\"Part::pspec\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.612502628789158*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Symbol", "::", "argx"}], "MessageName"], ":", 
  " ", "\<\"\[NoBreak]\\!\\(Symbol\\)\[NoBreak] called with \[NoBreak]\\!\\(0\
\\)\[NoBreak] arguments; 1 argument is expected. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/argx\\\", ButtonNote -> \
\\\"Symbol::argx\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.612502628855433*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], ":", 
  " ", "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(Symbol :: \
argx\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.612502628925006*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Take", "::", "take"}], "MessageName"], ":", 
  " ", "\<\"Cannot take positions \[NoBreak]\\!\\(-1\\)\[NoBreak] through \
\[NoBreak]\\!\\(-1\\)\[NoBreak] in \[NoBreak]\\!\\({}\\)\[NoBreak]. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/Take/take\\\", \
ButtonNote -> \\\"Take::take\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.61250262892691*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], ":", 
  " ", "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(Take :: take\\), \
\\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.612502628935087*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Part", "::", "pspec"}], "MessageName"], ":", 
  " ", "\<\"Part specification \[NoBreak]\\!\\(Symbol[]\\)\[NoBreak] is \
neither a machine-sized integer nor a list of machine-sized integers. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/pspec\\\", \
ButtonNote -> \\\"Part::pspec\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.612502629007598*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], ":", 
  " ", "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(Part :: \
pspec\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.612502629055175*^9}],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{3.612502635310981*^9}],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{3.6125026442982397`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Symbol", "::", "argx"}], "MessageName"], ":", 
  " ", "\<\"\[NoBreak]\\!\\(Symbol\\)\[NoBreak] called with \[NoBreak]\\!\\(0\
\\)\[NoBreak] arguments; 1 argument is expected. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/argx\\\", ButtonNote -> \
\\\"Symbol::argx\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.612502661929936*^9}],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{3.612502661984086*^9}],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{3.612502662097954*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Symbol", "::", "argx"}], "MessageName"], ":", 
  " ", "\<\"\[NoBreak]\\!\\(Symbol\\)\[NoBreak] called with \[NoBreak]\\!\\(0\
\\)\[NoBreak] arguments; 1 argument is expected. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/argx\\\", ButtonNote -> \
\\\"Symbol::argx\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.61250266216864*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Take", "::", "take"}], "MessageName"], ":", 
  " ", "\<\"Cannot take positions \[NoBreak]\\!\\(-1\\)\[NoBreak] through \
\[NoBreak]\\!\\(-1\\)\[NoBreak] in \[NoBreak]\\!\\({}\\)\[NoBreak]. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/Take/take\\\", \
ButtonNote -> \\\"Take::take\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.612502662229501*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Part", "::", "pspec"}], "MessageName"], ":", 
  " ", "\<\"Part specification \[NoBreak]\\!\\(Symbol[]\\)\[NoBreak] is \
neither a machine-sized integer nor a list of machine-sized integers. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/pspec\\\", \
ButtonNote -> \\\"Part::pspec\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.612502662280485*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Part", "::", "pspec"}], "MessageName"], ":", 
  " ", "\<\"Part specification \[NoBreak]\\!\\(Symbol[]\\)\[NoBreak] is \
neither a machine-sized integer nor a list of machine-sized integers. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/pspec\\\", \
ButtonNote -> \\\"Part::pspec\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.612502662383717*^9}],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{3.6125026624517097`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ListLogPlot", "::", "lpn"}], "MessageName"], ":", 
  " ", "\<\"\[NoBreak]\\!\\($Failed\\)\[NoBreak] is not a list of numbers or \
pairs of numbers. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/ListLogPlot\\\", ButtonNote -> \
\\\"ListLogPlot::lpn\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.612502662523164*^9}],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{3.612502662593512*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"probData", "\[LeftDoubleBracket]", 
  RowBox[{"3", ",", 
   RowBox[{
    RowBox[{"Position", "[", 
     RowBox[{
      RowBox[{"probData", "\[LeftDoubleBracket]", 
       RowBox[{"3", ",", "All", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
      "1"}], "]"}], "\[LeftDoubleBracket]", 
    RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}]}], 
  "\[RightDoubleBracket]"}]], "Input",
 CellChangeTimes->{{3.610943586654998*^9, 3.610943640320805*^9}, {
  3.610944068395627*^9, 3.610944070961995*^9}, {3.610945511163062*^9, 
  3.610945513070942*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "0.0290648`", ",", "58.0864`", ",", "0.825067`", ",", 
   "0.598324`"}], "}"}]], "Output",
 CellChangeTimes->{{3.610943604936904*^9, 3.610943640623645*^9}, 
   3.610944071309271*^9, 3.6109455134748383`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"probData", "\[LeftDoubleBracket]", 
  RowBox[{"2", ",", 
   RowBox[{
    RowBox[{"Ordering", "[", 
     RowBox[{
      RowBox[{"probData", "\[LeftDoubleBracket]", 
       RowBox[{"2", ",", "All", ",", "2"}], "\[RightDoubleBracket]"}], ",", 
      RowBox[{"-", "1"}]}], "]"}], "\[LeftDoubleBracket]", "1", 
    "\[RightDoubleBracket]"}]}], "\[RightDoubleBracket]"}]], "Input",
 CellChangeTimes->{{3.610943871272645*^9, 3.6109438780389853`*^9}, {
  3.610944372757894*^9, 3.610944388476804*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.795178`", ",", "0.999862`", ",", "0.290114`", ",", "0.307692`", ",", 
   "0.236752`"}], "}"}]], "Output",
 CellChangeTimes->{
  3.610943878269075*^9, {3.6109443734009457`*^9, 3.610944388879507*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ksLines", "/.", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"a_", ",", "b_", ",", "c_"}], "}"}], "\[RuleDelayed]", 
   RowBox[{"c", "-", "b"}]}]}]], "Input",
 CellChangeTimes->{{3.610941995799758*^9, 3.6109420135141363`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.242193`", ",", 
   RowBox[{"-", "0.16232200000000002`"}], ",", 
   RowBox[{"-", "0.22674300000000003`"}], ",", "0.39847899999999997`"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.6109419980308247`*^9, 3.6109420139484367`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ksLinesStretched", "/.", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"a_", ",", "b_", ",", "c_"}], "}"}], "\[RuleDelayed]", 
   RowBox[{"c", "-", "b"}]}]}]], "Input",
 CellChangeTimes->{{3.610942251195323*^9, 3.61094225998282*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.16413899999999998`", ",", 
   RowBox[{"-", "0.07094000000000003`"}], ",", "0.148524`", ",", 
   "0.17355700000000002`"}], "}"}]], "Output",
 CellChangeTimes->{3.610942264277656*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["stretchingFactors"], "Input",
 CellChangeTimes->{{3.610942161285275*^9, 3.610942162113171*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1.44872`", ",", "0.795178`", ",", "0.634652`", ",", "2.89026`"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.610942162297702*^9, 3.610944192368224*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Kappa]Observed", "=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\"\<090902B\>\"", ",", 
       RowBox[{"{", 
        RowBox[{"0.363408", ",", "0.893437"}], "}"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"\"\<090510\>\"", ",", 
       RowBox[{"{", 
        RowBox[{"0.428137", ",", "1.60485"}], "}"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"\"\<080916C\>\"", ",", 
       RowBox[{"{", 
        RowBox[{"0.66529", ",", "3.31569"}], "}"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"\"\<090926A\>\"", ",", 
       RowBox[{"{", 
        RowBox[{"1.98759", ",", "6.61486"}], "}"}]}], "}"}]}], 
    "\[IndentingNewLine]", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{"\"\<Presentation/kappaDistributionHistogram.pdf\>\"", ",", 
    RowBox[{"\[Kappa]HistogramPlot", "[", 
     RowBox[{
      RowBox[{"sample4096", "\[LeftDoubleBracket]", 
       RowBox[{"All", ",", 
        RowBox[{"-", "1"}]}], "\[RightDoubleBracket]"}], ",", 
      RowBox[{"{", "}"}], ",", 
      RowBox[{"ImageSize", "\[Rule]", "imageSize"}], ",", 
      RowBox[{"FrameStyle", "\[Rule]", "Gray"}]}], "]"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
   "\"\<Presentation/kappaDistributionHistogramObservations.pdf\>\"", ",", 
    RowBox[{"\[Kappa]HistogramPlot", "[", 
     RowBox[{
      RowBox[{"sample4096", "\[LeftDoubleBracket]", 
       RowBox[{"All", ",", 
        RowBox[{"-", "1"}]}], "\[RightDoubleBracket]"}], ",", 
      "\[Kappa]Observed", ",", 
      RowBox[{"ImageSize", "\[Rule]", "imageSize"}], ",", 
      RowBox[{"FrameStyle", "\[Rule]", "Gray"}]}], "]"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{"\"\<Presentation/kappaDistributionCDF.pdf\>\"", ",", 
    RowBox[{"\[Kappa]CDFPlot", "[", 
     RowBox[{
      RowBox[{"sample4096", "\[LeftDoubleBracket]", 
       RowBox[{"All", ",", 
        RowBox[{"-", "1"}]}], "\[RightDoubleBracket]"}], ",", 
      "\[Kappa]Observed", ",", 
      RowBox[{"PlotPoints", "\[Rule]", "4096"}], ",", 
      RowBox[{"ImageSize", "\[Rule]", "imageSize"}], ",", 
      RowBox[{"FrameStyle", "\[Rule]", "Gray"}]}], "]"}]}], "]"}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.594342734190405*^9, 3.594342752715184*^9}, {
  3.59434286903363*^9, 3.594342900024119*^9}, {3.594343771437028*^9, 
  3.594343773132771*^9}, {3.594852329377499*^9, 3.594852332247513*^9}, {
  3.5966927652249002`*^9, 3.596692799285636*^9}, {3.596693274643531*^9, 
  3.596693288462693*^9}, {3.5966933274676723`*^9, 3.5966933546761417`*^9}, {
  3.603446939569559*^9, 3.603447017756761*^9}, {3.603447061587146*^9, 
  3.603447066057764*^9}, {3.6096359148737793`*^9, 3.6096359282070913`*^9}, {
  3.609664424011471*^9, 3.60966451296507*^9}, {3.60966459359473*^9, 
  3.609664596730783*^9}, {3.610588444213026*^9, 3.610588458518063*^9}, {
  3.610847579777289*^9, 3.610847612761159*^9}, {3.610847904135222*^9, 
  3.610847913972609*^9}, {3.611106933778818*^9, 3.61110695190068*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"highFraction\[Kappa]Observed", "=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"0.0643747", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"1", "-", 
           RowBox[{"1", "/", 
            SqrtBox["17"]}]}], ",", 
          RowBox[{"1", "+", 
           RowBox[{"1", "/", 
            SqrtBox["17"]}]}]}], "}"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"0.665059", ",", "3.31859"}], "}"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"0.141928", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"1", "-", 
           RowBox[{"1", "/", 
            SqrtBox["26"]}]}], ",", 
          RowBox[{"1", "+", 
           RowBox[{"1", "/", 
            SqrtBox["26"]}]}]}], "}"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"0.42816", ",", "1.60589"}], "}"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"0.165373", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"1", "-", 
           RowBox[{"1", "/", 
            SqrtBox["51.1454"]}]}], ",", 
          RowBox[{"1", "+", 
           RowBox[{"1", "/", 
            SqrtBox["51.1454"]}]}]}], "}"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"0.363328", ",", "0.893781"}], "}"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"0.0606777", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"1", "-", 
           RowBox[{"1", "/", 
            SqrtBox["27"]}]}], ",", 
          RowBox[{"1", "+", 
           RowBox[{"1", "/", 
            SqrtBox["27"]}]}]}], "}"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"1.98748", ",", "6.62006"}], "}"}]}], "}"}]}], 
    "\[IndentingNewLine]", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{"\"\<Presentation/ratioChiPlot.pdf\>\"", ",", 
    RowBox[{"ratio\[Chi]ListPlot", "[", 
     RowBox[{
      RowBox[{"sample4096", "\[LeftDoubleBracket]", 
       RowBox[{"All", ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "3", ",", "4"}], "}"}]}], 
       "\[RightDoubleBracket]"}], ",", 
      RowBox[{"{", "}"}], ",", 
      RowBox[{"FontSize", "\[Rule]", "fontSize"}], ",", 
      RowBox[{"ImageSize", "\[Rule]", "imageSize"}], ",", 
      RowBox[{"FrameTicks", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0.01", ",", "0.1"}], "}"}], "~", "Join", "~", 
          RowBox[{"Flatten", "[", 
           RowBox[{
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"Table", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"it", ",", "\"\<\>\""}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"it", ",", 
                  SuperscriptBox["10", "sc"], ",", 
                  SuperscriptBox["10", 
                   RowBox[{"sc", "+", "1"}]], ",", 
                  SuperscriptBox["10", "sc"]}], "}"}]}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"sc", ",", 
                RowBox[{"-", "3"}], ",", 
                RowBox[{"-", "1"}]}], "}"}]}], "]"}], ",", "1"}], "]"}]}], 
         ",", "Automatic"}], "}"}]}], ",", 
      RowBox[{"PointSize", "\[Rule]", "Tiny"}], ",", 
      RowBox[{"frameColor", "\[Rule]", "Gray"}]}], "]"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{"\"\<Presentation/chiKappaPlot.pdf\>\"", ",", 
    RowBox[{"\[Chi]\[Kappa]ListPlot", "[", 
     RowBox[{
      RowBox[{"sample4096", "\[LeftDoubleBracket]", 
       RowBox[{"All", ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", 
          RowBox[{"-", "1"}]}], "}"}]}], "\[RightDoubleBracket]"}], ",", 
      RowBox[{"{", "}"}], ",", 
      RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
      RowBox[{"FontSize", "\[Rule]", "fontSize"}], ",", 
      RowBox[{"ImageSize", "\[Rule]", "imageSize"}], ",", 
      RowBox[{"PointSize", "\[Rule]", "Tiny"}], ",", 
      RowBox[{"frameColor", "\[Rule]", "Gray"}]}], "]"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{"\"\<Presentation/ratioKappaPlot.pdf\>\"", ",", 
    RowBox[{"ratio\[Kappa]ListPlot", "[", 
     RowBox[{
      RowBox[{"sample4096", "\[LeftDoubleBracket]", 
       RowBox[{"All", ",", 
        RowBox[{"{", 
         RowBox[{"3", ",", "4", ",", 
          RowBox[{"-", "1"}]}], "}"}]}], "\[RightDoubleBracket]"}], ",", 
      RowBox[{"{", "}"}], ",", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"All", ",", 
         RowBox[{"{", 
          RowBox[{"0.35", ",", "6.7"}], "}"}]}], "}"}]}], ",", 
      RowBox[{"FontSize", "\[Rule]", "10"}], ",", 
      RowBox[{"ImageSize", "\[Rule]", "imageSize"}], ",", 
      RowBox[{"FrameTicks", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0.01", ",", "0.1"}], "}"}], "~", "Join", "~", 
          RowBox[{"Flatten", "[", 
           RowBox[{
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"Table", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"it", ",", "\"\<\>\""}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"it", ",", 
                  SuperscriptBox["10", "sc"], ",", 
                  SuperscriptBox["10", 
                   RowBox[{"sc", "+", "1"}]], ",", 
                  SuperscriptBox["10", "sc"]}], "}"}]}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"sc", ",", 
                RowBox[{"-", "3"}], ",", 
                RowBox[{"-", "1"}]}], "}"}]}], "]"}], ",", "1"}], "]"}]}], 
         ",", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0.5", ",", "1", ",", "2", ",", "3", ",", "5"}], "}"}], 
          "~", "Join", "~", 
          RowBox[{"Flatten", "[", 
           RowBox[{
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"Table", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"it", ",", "\"\<\>\""}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"it", ",", 
                  SuperscriptBox["10", "sc"], ",", 
                  SuperscriptBox["10", 
                   RowBox[{"sc", "+", "1"}]], ",", 
                  SuperscriptBox["10", "sc"]}], "}"}]}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"sc", ",", 
                RowBox[{"-", "1"}], ",", "2"}], "}"}]}], "]"}], ",", "1"}], 
           "]"}]}]}], "}"}]}], ",", 
      RowBox[{"PointSize", "\[Rule]", "Tiny"}], ",", 
      RowBox[{"frameColor", "\[Rule]", "Gray"}]}], "]"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{"\"\<Presentation/ratioKappaPlotObservations.pdf\>\"", ",", 
    RowBox[{"ratio\[Kappa]ListPlot", "[", 
     RowBox[{
      RowBox[{"sample4096", "\[LeftDoubleBracket]", 
       RowBox[{"All", ",", 
        RowBox[{"{", 
         RowBox[{"3", ",", "4", ",", 
          RowBox[{"-", "1"}]}], "}"}]}], "\[RightDoubleBracket]"}], ",", 
      "highFraction\[Kappa]Observed", ",", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"All", ",", 
         RowBox[{"{", 
          RowBox[{"0.35", ",", "6.7"}], "}"}]}], "}"}]}], ",", 
      RowBox[{"FontSize", "\[Rule]", "10"}], ",", 
      RowBox[{"ImageSize", "\[Rule]", "imageSize"}], ",", 
      RowBox[{"FrameTicks", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0.01", ",", "0.1"}], "}"}], "~", "Join", "~", 
          RowBox[{"Flatten", "[", 
           RowBox[{
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"Table", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"it", ",", "\"\<\>\""}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"it", ",", 
                  SuperscriptBox["10", "sc"], ",", 
                  SuperscriptBox["10", 
                   RowBox[{"sc", "+", "1"}]], ",", 
                  SuperscriptBox["10", "sc"]}], "}"}]}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"sc", ",", 
                RowBox[{"-", "3"}], ",", 
                RowBox[{"-", "1"}]}], "}"}]}], "]"}], ",", "1"}], "]"}]}], 
         ",", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0.5", ",", "1", ",", "2", ",", "3", ",", "5"}], "}"}], 
          "~", "Join", "~", 
          RowBox[{"Flatten", "[", 
           RowBox[{
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"Table", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"it", ",", "\"\<\>\""}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"it", ",", 
                  SuperscriptBox["10", "sc"], ",", 
                  SuperscriptBox["10", 
                   RowBox[{"sc", "+", "1"}]], ",", 
                  SuperscriptBox["10", "sc"]}], "}"}]}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"sc", ",", 
                RowBox[{"-", "1"}], ",", "2"}], "}"}]}], "]"}], ",", "1"}], 
           "]"}]}]}], "}"}]}], ",", 
      RowBox[{"PointSize", "\[Rule]", "Tiny"}], ",", 
      RowBox[{"frameColor", "\[Rule]", "Gray"}]}], "]"}]}], "]"}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.6096451014355288`*^9, 3.6096451374568987`*^9}, {
   3.609645222026988*^9, 3.609645227887209*^9}, {3.609645393051215*^9, 
   3.609645428989118*^9}, {3.609645463432189*^9, 3.609645477467903*^9}, {
   3.609645609781362*^9, 3.609645642394065*^9}, {3.609645674156782*^9, 
   3.609645706993593*^9}, {3.6096458067672873`*^9, 3.6096458371022587`*^9}, {
   3.609664946570684*^9, 3.609664966614698*^9}, {3.6096650112443666`*^9, 
   3.6096650505364847`*^9}, {3.610588553641007*^9, 3.6105885700351887`*^9}, {
   3.610588661684598*^9, 3.6105887177238083`*^9}, {3.610588898802246*^9, 
   3.610588907708644*^9}, {3.610588977633296*^9, 3.610588985470376*^9}, {
   3.610589208194084*^9, 3.610589209020136*^9}, {3.610589659275305*^9, 
   3.610589671300022*^9}, {3.61093782155132*^9, 3.61093787114927*^9}, {
   3.610938096025599*^9, 3.610938106653803*^9}, {3.6109382411140327`*^9, 
   3.610938271320953*^9}, {3.6109383182511272`*^9, 3.610938337637157*^9}, {
   3.610938394118843*^9, 3.610938405949794*^9}, {3.6109384396480713`*^9, 
   3.610938503046324*^9}, 3.6109392350193243`*^9, {3.610941252233182*^9, 
   3.610941264059757*^9}, {3.610941399792973*^9, 3.610941404621204*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["ITEP Proceedings", "Subsubsection",
 CellChangeTimes->{{3.609662157494125*^9, 3.6096621597834682`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"itepLineWidth", "=", "469.47046"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"itepFontSize", "=", "10"}], ";"}]}], "Input",
 CellChangeTimes->{{3.6096624423015423`*^9, 3.609662451498352*^9}, {
  3.609922646052809*^9, 3.6099226483246*^9}, {3.610002669031781*^9, 
  3.610002669132723*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
  "dir090902B", "=", 
   "\"\<GRObservations/DerivedData/GRObservations/Build/Products/Release/\
090902B/\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
  "dir090926A", "=", 
   "\"\<GRObservations/DerivedData/GRObservations/Build/Products/Release/\
090926A/\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{"bursts", "=", 
   RowBox[{"{", 
    RowBox[{"dir090902B", ",", "dir090926A"}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"ranges", "=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "0.05"}], " ", "1000"}], ",", "1000"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "0.05"}], " ", "300"}], ",", "300"}], "}"}]}], 
    "\[IndentingNewLine]", "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"gevData", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Import", "[", 
      RowBox[{
       RowBox[{"burst", "<>", "\"\<gev\>\""}], ",", "\"\<Table\>\""}], "]"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"burst", ",", "bursts"}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"mevData", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Import", "[", 
      RowBox[{
       RowBox[{"burst", "<>", "\"\<mev\>\""}], ",", "\"\<Table\>\""}], "]"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"burst", ",", "bursts"}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"probData", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Import", "[", 
       RowBox[{
        RowBox[{"burst", "<>", "\"\<probs\>\""}], ",", "\"\<Table\>\""}], 
       "]"}], "/.", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\[Kappa]_", ",", "p_", ",", "a_", ",", "b_", ",", "c_"}], 
        "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\[Kappa]", ",", "p"}], "}"}]}]}], ",", 
     RowBox[{"{", 
      RowBox[{"burst", ",", "bursts"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Do", "[", 
   RowBox[{
    RowBox[{"Export", "[", 
     RowBox[{
      RowBox[{"\"\<ITEPProceedings/p\>\"", "<>", 
       RowBox[{"ToString", "[", "i", "]"}], "<>", "\"\<.pdf\>\""}], ",", 
      RowBox[{"GraphicsGrid", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"ListLinePlot", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"mevData", "[", 
                RowBox[{"[", "i", "]"}], "]"}], ",", 
               RowBox[{"gevData", "[", 
                RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"PlotRange", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"ranges", "[", 
                 RowBox[{"[", "i", "]"}], "]"}], ",", "All"}], "}"}]}], ",", 
             RowBox[{"PlotStyle", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{"Red", ",", "Blue"}], "}"}]}], ",", 
             RowBox[{"Frame", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"True", ",", "False"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"True", ",", "False"}], "}"}]}], "}"}]}], ",", 
             RowBox[{"FrameLabel", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{"\"\<Time, sec\>\"", ",", "\"\<Photon Fraction\>\""}], 
               "}"}]}], ",", 
             RowBox[{"PlotLegends", "\[Rule]", 
              RowBox[{"Placed", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Style", "[", 
                   RowBox[{"\"\<0.1 \[Dash] 1 GeV\>\"", ",", 
                    RowBox[{"FontSize", "\[Rule]", "itepFontSize"}]}], "]"}], 
                  ",", 
                  RowBox[{"Style", "[", 
                   RowBox[{"\"\<1 \[Dash] 300 GeV\>\"", ",", 
                    RowBox[{"FontSize", "\[Rule]", "itepFontSize"}]}], 
                   "]"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"0.74", ",", "0.20"}], "}"}]}], "]"}]}], ",", 
             RowBox[{"ImageSize", "\[Rule]", 
              RowBox[{".45", "itepLineWidth"}]}], ",", 
             RowBox[{"FrameStyle", "\[Rule]", 
              RowBox[{"Directive", "[", 
               RowBox[{"FontSize", "\[Rule]", "itepFontSize"}], "]"}]}]}], 
            "]"}], ",", "\[IndentingNewLine]", 
           RowBox[{"ListLogPlot", "[", 
            RowBox[{
             RowBox[{"probData", "[", 
              RowBox[{"[", "i", "]"}], "]"}], ",", 
             RowBox[{"Joined", "\[Rule]", "True"}], ",", 
             RowBox[{"PlotRange", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"0", ",", "10"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"1.*^-12", ",", "1."}], "}"}]}], "}"}]}], ",", 
             RowBox[{"PlotStyle", "\[Rule]", 
              RowBox[{"RGBColor", "[", 
               RowBox[{"0.5", ",", "0", ",", "0.5"}], "]"}]}], ",", 
             RowBox[{"Frame", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"True", ",", "False"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"True", ",", "False"}], "}"}]}], "}"}]}], ",", 
             RowBox[{"FrameLabel", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{
               "\"\<Stretching Factor\>\"", ",", "\"\<KS Probability\>\""}], 
               "}"}]}], ",", 
             RowBox[{"ImageSize", "\[Rule]", 
              RowBox[{".45", "itepLineWidth"}]}], ",", 
             RowBox[{"FrameStyle", "\[Rule]", 
              RowBox[{"Directive", "[", 
               RowBox[{"FontSize", "\[Rule]", "itepFontSize"}], "]"}]}]}], 
            "]"}]}], "\[IndentingNewLine]", "}"}], "}"}], ",", 
        RowBox[{"ImageSize", "\[Rule]", "itepLineWidth"}]}], "]"}]}], "]"}], 
    ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "1", ",", 
      RowBox[{"Length", "[", "mevData", "]"}]}], "}"}]}], "]"}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.596901417566943*^9, 3.5969014298703938`*^9}, {
   3.602215510963944*^9, 3.60221551175172*^9}, {3.609922488975033*^9, 
   3.609922738324974*^9}, {3.6099231653094187`*^9, 3.6099231675748253`*^9}, {
   3.609923340172803*^9, 3.60992337147126*^9}, {3.609923781629249*^9, 
   3.6099237894496937`*^9}, 3.609923913962141*^9, {3.6099239698719254`*^9, 
   3.6099239717357473`*^9}, {3.609924072949731*^9, 3.609924073086207*^9}, {
   3.609972079966633*^9, 3.609972141490472*^9}, {3.6099743242124968`*^9, 
   3.609974343050313*^9}, {3.6099797226523333`*^9, 3.609979722798706*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{"\"\<ITEPProceedings/p3.pdf\>\"", ",", 
    RowBox[{"modelScheme", "[", 
     RowBox[{
      RowBox[{"centralEngineSize", "\[Rule]", ".03"}], ",", 
      RowBox[{"jetRadius", "\[Rule]", ".5"}], ",", 
      RowBox[{"lowAngle", "\[Rule]", ".43"}], ",", 
      RowBox[{"highAngle", "\[Rule]", ".043"}], ",", 
      RowBox[{"observerSize", "\[Rule]", ".03"}], ",", 
      RowBox[{"observerDistance", "\[Rule]", "1."}], ",", 
      RowBox[{"observerAngle", "\[Rule]", ".4"}], ",", 
      RowBox[{"centralEngineLabelQ", "\[Rule]", "True"}], ",", 
      RowBox[{"jetLabelQ", "\[Rule]", "True"}], ",", 
      RowBox[{"observerLabelQ", "\[Rule]", "True"}], ",", 
      RowBox[{"FontSize", "\[Rule]", "itepFontSize"}], ",", 
      RowBox[{"ImageSize", "\[Rule]", 
       RowBox[{".7", "itepLineWidth"}]}]}], "]"}]}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.6096619842397423`*^9, 3.6096620299951057`*^9}, 
   3.6096623854518433`*^9, {3.609662454570602*^9, 3.609662457473957*^9}, {
   3.609908042282702*^9, 3.609908042440434*^9}, {3.6099226533691177`*^9, 
   3.609922654222568*^9}, {3.609979802760303*^9, 3.609979802926271*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"PrintTemporary", "[", 
   RowBox[{"Dynamic", "[", "\[Tau]", "]"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{"\"\<ITEPProceedings/p4.pdf\>\"", ",", 
    RowBox[{"GraphicsGrid", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"burstCDFPlot", "[", 
          RowBox[{
           RowBox[{"defaultUniverse", "[", "]"}], ",", 
           RowBox[{"defaultBurst", "[", "]"}], ",", 
           RowBox[{"defaultObserver", "[", 
            RowBox[{
             RowBox[{"z", "\[Rule]", "1.822"}], ",", 
             RowBox[{"\[Chi]", "\[Rule]", "0."}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{".1", ",", "1.", ",", "\[Infinity]"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"1.", ",", "1."}], "}"}], ",", 
           RowBox[{"ImageSize", "\[Rule]", 
            RowBox[{".45", "itepLineWidth"}]}], ",", 
           RowBox[{"FontSize", "\[Rule]", "itepFontSize"}]}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"burstCDFPlot", "[", 
          RowBox[{
           RowBox[{"defaultUniverse", "[", "]"}], ",", 
           RowBox[{"defaultBurst", "[", "]"}], ",", 
           RowBox[{"defaultObserver", "[", "]"}], ",", 
           RowBox[{"{", 
            RowBox[{".1", ",", "1.", ",", "\[Infinity]"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"1.", ",", "1."}], "}"}], ",", 
           RowBox[{"ImageSize", "\[Rule]", 
            RowBox[{".45", "itepLineWidth"}]}], ",", 
           RowBox[{"FontSize", "\[Rule]", "itepFontSize"}]}], "]"}]}], 
        "\[IndentingNewLine]", "}"}], "}"}], ",", 
      RowBox[{"ImageSize", "\[Rule]", "itepLineWidth"}]}], "]"}]}], "]"}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.609668325783885*^9, 3.609668362271452*^9}, {
   3.6099080931970167`*^9, 3.609908095810851*^9}, {3.609908139344901*^9, 
   3.6099081405427322`*^9}, {3.609922657555933*^9, 3.609922661754251*^9}, 
   3.60993429657563*^9, 3.609938266266621*^9, {3.60993842408923*^9, 
   3.6099384508994503`*^9}, {3.609938891646867*^9, 3.609938895025696*^9}, {
   3.609940016385295*^9, 3.609940070244252*^9}, {3.609940344376224*^9, 
   3.6099403499424458`*^9}, {3.609940538950287*^9, 3.6099405392756577`*^9}, {
   3.609943108856577*^9, 3.6099431156773252`*^9}, {3.6099747256392*^9, 
   3.6099747257453957`*^9}, {3.6099798162093678`*^9, 3.609979816283203*^9}, {
   3.609988727767652*^9, 3.6099887484838142`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Kappa]Observed", "=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\"\<090902B\>\"", ",", 
       RowBox[{"{", 
        RowBox[{"0.363408", ",", "0.893437"}], "}"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"\"\<090510\>\"", ",", 
       RowBox[{"{", 
        RowBox[{"0.428137", ",", "1.60485"}], "}"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"\"\<080916C\>\"", ",", 
       RowBox[{"{", 
        RowBox[{"0.66529", ",", "3.31569"}], "}"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"\"\<090926A\>\"", ",", 
       RowBox[{"{", 
        RowBox[{"1.98759", ",", "6.61486"}], "}"}]}], "}"}]}], 
    "\[IndentingNewLine]", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{"\"\<ITEPProceedings/p5.pdf\>\"", ",", 
    RowBox[{"GraphicsGrid", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"\[Kappa]HistogramPlot", "[", 
          RowBox[{
           RowBox[{"sample4096", "\[LeftDoubleBracket]", 
            RowBox[{"All", ",", 
             RowBox[{"-", "1"}]}], "\[RightDoubleBracket]"}], ",", 
           "\[Kappa]Observed", ",", 
           RowBox[{"FontSize", "\[Rule]", "itepFontSize"}], ",", 
           RowBox[{"ImageSize", "\[Rule]", 
            RowBox[{".45", "itepLineWidth"}]}]}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"\[Kappa]CDFPlot", "[", 
          RowBox[{
           RowBox[{"sample4096", "\[LeftDoubleBracket]", 
            RowBox[{"All", ",", 
             RowBox[{"-", "1"}]}], "\[RightDoubleBracket]"}], ",", 
           "\[Kappa]Observed", ",", 
           RowBox[{"PlotPoints", "\[Rule]", "4096"}], ",", 
           RowBox[{"FontSize", "\[Rule]", "itepFontSize"}], ",", 
           RowBox[{"ImageSize", "\[Rule]", 
            RowBox[{".45", "itepLineWidth"}]}]}], "]"}]}], 
        "\[IndentingNewLine]", "}"}], "}"}], ",", 
      RowBox[{"ImageSize", "\[Rule]", "itepLineWidth"}]}], "]"}]}], "]"}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.594342734190405*^9, 3.594342752715184*^9}, {
  3.59434286903363*^9, 3.594342900024119*^9}, {3.594343771437028*^9, 
  3.594343773132771*^9}, {3.594852329377499*^9, 3.594852332247513*^9}, {
  3.5966927652249002`*^9, 3.596692799285636*^9}, {3.596693274643531*^9, 
  3.596693288462693*^9}, {3.5966933274676723`*^9, 3.5966933546761417`*^9}, {
  3.603446939569559*^9, 3.603447017756761*^9}, {3.603447061587146*^9, 
  3.603447066057764*^9}, {3.6096359148737793`*^9, 3.6096359282070913`*^9}, {
  3.609664424011471*^9, 3.60966451296507*^9}, {3.60966459359473*^9, 
  3.609664596730783*^9}, {3.609925177516726*^9, 3.6099252151767683`*^9}, {
  3.609972398494524*^9, 3.609972441953117*^9}, {3.60997304262988*^9, 
  3.609973047418325*^9}, {3.609974412667426*^9, 3.609974412777885*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"highFraction\[Kappa]Observed", "=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"0.0604813", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"1", "-", 
           RowBox[{"1", "/", 
            SqrtBox["17"]}]}], ",", 
          RowBox[{"1", "+", 
           RowBox[{"1", "/", 
            SqrtBox["17"]}]}]}], "}"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"0.665059", ",", "3.31859"}], "}"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"0.124288", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"1", "-", 
           RowBox[{"1", "/", 
            SqrtBox["26"]}]}], ",", 
          RowBox[{"1", "+", 
           RowBox[{"1", "/", 
            SqrtBox["26"]}]}]}], "}"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"0.42816", ",", "1.60589"}], "}"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"0.141906", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"1", "-", 
           RowBox[{"1", "/", 
            SqrtBox["51.1454"]}]}], ",", 
          RowBox[{"1", "+", 
           RowBox[{"1", "/", 
            SqrtBox["51.1454"]}]}]}], "}"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"0.363328", ",", "0.893781"}], "}"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"0.0572066", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"1", "-", 
           RowBox[{"1", "/", 
            SqrtBox["27"]}]}], ",", 
          RowBox[{"1", "+", 
           RowBox[{"1", "/", 
            SqrtBox["27"]}]}]}], "}"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"1.98748", ",", "6.62006"}], "}"}]}], "}"}]}], 
    "\[IndentingNewLine]", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{"\"\<ITEPProceedings/p6.pdf\>\"", ",", 
    RowBox[{"GraphicsGrid", "[", 
     RowBox[{"{", 
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"ratio\[Kappa]ListPlot", "[", 
         RowBox[{
          RowBox[{"sample4096", "\[LeftDoubleBracket]", 
           RowBox[{"All", ",", 
            RowBox[{"{", 
             RowBox[{"3", ",", "4", ",", 
              RowBox[{"-", "1"}]}], "}"}]}], "\[RightDoubleBracket]"}], ",", 
          "highFraction\[Kappa]Observed", ",", 
          RowBox[{"PlotRange", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"All", ",", 
             RowBox[{"{", 
              RowBox[{"0.42", ",", "6.7"}], "}"}]}], "}"}]}], ",", 
          RowBox[{"FontSize", "\[Rule]", "itepFontSize"}], ",", 
          RowBox[{"ImageSize", "\[Rule]", 
           RowBox[{".45", "itepLineWidth"}]}], ",", 
          RowBox[{"FrameTicks", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"{", 
               RowBox[{"0.01", ",", "0.1"}], "}"}], "~", "Join", "~", 
              RowBox[{"Flatten", "[", 
               RowBox[{
                RowBox[{"Table", "[", 
                 RowBox[{
                  RowBox[{"Table", "[", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"it", ",", "\"\<\>\""}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"it", ",", 
                    SuperscriptBox["10", "sc"], ",", 
                    SuperscriptBox["10", 
                    RowBox[{"sc", "+", "1"}]], ",", 
                    SuperscriptBox["10", "sc"]}], "}"}]}], "]"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"sc", ",", 
                    RowBox[{"-", "3"}], ",", 
                    RowBox[{"-", "1"}]}], "}"}]}], "]"}], ",", "1"}], "]"}]}],
              ",", "Automatic"}], "}"}]}]}], "]"}], ",", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"ratio\[Chi]ListPlot", "[", 
         RowBox[{
          RowBox[{"sample4096", "\[LeftDoubleBracket]", 
           RowBox[{"All", ",", 
            RowBox[{"{", 
             RowBox[{"2", ",", "3", ",", "4"}], "}"}]}], 
           "\[RightDoubleBracket]"}], ",", 
          RowBox[{"FontSize", "\[Rule]", "itepFontSize"}], ",", 
          RowBox[{"ImageSize", "\[Rule]", 
           RowBox[{".45", "itepLineWidth"}]}], ",", 
          RowBox[{"FrameTicks", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"{", 
               RowBox[{"0.01", ",", "0.1"}], "}"}], "~", "Join", "~", 
              RowBox[{"Flatten", "[", 
               RowBox[{
                RowBox[{"Table", "[", 
                 RowBox[{
                  RowBox[{"Table", "[", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"it", ",", "\"\<\>\""}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"it", ",", 
                    SuperscriptBox["10", "sc"], ",", 
                    SuperscriptBox["10", 
                    RowBox[{"sc", "+", "1"}]], ",", 
                    SuperscriptBox["10", "sc"]}], "}"}]}], "]"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"sc", ",", 
                    RowBox[{"-", "3"}], ",", 
                    RowBox[{"-", "1"}]}], "}"}]}], "]"}], ",", "1"}], "]"}]}],
              ",", "Automatic"}], "}"}]}]}], "]"}]}], "\[IndentingNewLine]", 
       "}"}], "}"}], "]"}]}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.6096451014355288`*^9, 3.6096451374568987`*^9}, {
   3.609645222026988*^9, 3.609645227887209*^9}, {3.609645393051215*^9, 
   3.609645428989118*^9}, {3.609645463432189*^9, 3.609645477467903*^9}, {
   3.609645609781362*^9, 3.609645642394065*^9}, {3.609645674156782*^9, 
   3.609645706993593*^9}, {3.6096458067672873`*^9, 3.6096458371022587`*^9}, {
   3.609664946570684*^9, 3.609664966614698*^9}, {3.6096650112443666`*^9, 
   3.6096650505364847`*^9}, {3.60997252369475*^9, 3.609972560134062*^9}, {
   3.609973053671878*^9, 3.609973064713709*^9}, {3.609973186282545*^9, 
   3.6099732343871737`*^9}, {3.609974415094208*^9, 3.609974415214184*^9}, {
   3.610000628864314*^9, 3.610000629056776*^9}, 3.610000682897563*^9, {
   3.6100007265932827`*^9, 3.610000773448345*^9}, 3.610002480686101*^9, {
   3.61000284913381*^9, 3.610002876947711*^9}, {3.610009515297762*^9, 
   3.610009523735882*^9}, {3.610009588314065*^9, 3.6100095922860126`*^9}}]
}, Closed]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Playground", "Section",
 CellChangeTimes->{{3.615290156329236*^9, 3.615290158320746*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Prepend", "[", 
   RowBox[{"sample16", ",", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Redshift\>\"", ",", "\"\<Off-axis angle\>\"", ",", 
      "\"\<Below GeV count\>\"", ",", "\"\<Above GeV count\>\"", ",", 
      "\"\<Duration\>\"", ",", "\"\<Stretching factor\>\""}], "}"}]}], "]"}], 
  "//", "Grid"}]], "Input",
 CellChangeTimes->{{3.61529026902039*^9, 3.615290274445383*^9}, {
  3.615290439516774*^9, 3.61529048497689*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"Redshift\"\>", "\<\"Off-axis angle\"\>", "\<\"Below GeV count\"\>", \
"\<\"Above GeV count\"\>", "\<\"Duration\"\>", "\<\"Stretching factor\"\>"},
    {"4.577676114922525`", "0.002146172294505203`", "198.4196620066235`", 
     "34.228215884194334`", "222.73035829370284`", "1.0280094289841748`"},
    {"0.38242879878225633`", "0.007303018195367234`", "2510.4548818606413`", 
     "20.978799047458836`", "123.38630837565341`", "2.529581957694992`"},
    {"1.790678523643586`", "0.004771211764882174`", "291.8119917380803`", 
     "10.070010357458859`", "178.00778096254146`", "1.784271416531604`"},
    {"0.6679554361909841`", "0.004633224927380444`", "1634.8277140318862`", 
     "125.2194399101692`", "107.40664116322054`", "1.355228067650187`"},
    {"6.7438565048704895`", "0.0025153880238022266`", "114.41219610878554`", 
     "12.708560050890373`", "313.05858759493555`", "1.1251344561349428`"},
    {"1.5334501903844784`", "0.004552168302441222`", "402.761616478708`", 
     "18.983240726070672`", "156.94967793679683`", "1.6188869008349682`"},
    {"0.6730575558627483`", "0.0033384774004186746`", "2098.3853992699323`", 
     "434.73441714374775`", "92.48671063445956`", "1.085830862969823`"},
    {"1.0880990456375839`", "0.001605553355172647`", "1254.8786426044062`", 
     "578.4999909315469`", "94.50973498739872`", "0.8908846736633591`"},
    {"1.61092789076918`", "0.0026727127210554205`", "612.3130849666738`", 
     "131.45761966748594`", "125.400307231681`", "1.040915010748597`"},
    {"1.9742563479671753`", "0.004326147803631458`", "290.25136432853395`", 
     "14.21984824761055`", "176.44515329447125`", "1.5781588059941152`"},
    {"1.0632763208205827`", "0.0023948982757103594`", "1172.1006546668993`", 
     "364.8701470277157`", "100.1140576033533`", "0.9741210674073871`"},
    {"4.167417372575645`", "0.0026216289538748623`", "189.43015298651406`", 
     "24.758770352965122`", "223.3218204554101`", "1.1155870882542687`"},
    {"4.933123699945455`", "0.0027710318657595307`", "147.57157347627398`", 
     "15.814107790469503`", "258.1278608438802`", "1.1647305773040832`"},
    {"1.7903411064295107`", "0.003648417441486108`", "414.66398652831725`", 
     "39.646577434687785`", "150.48002884878116`", "1.2902775201409398`"},
    {"1.992142656294731`", "0.003909920015542307`", "327.6715685897391`", 
     "23.267096125592506`", "166.52120225427376`", "1.402220940409194`"},
    {"3.5285337214482917`", "0.0025702052670398905`", "233.50363687266716`", 
     "34.735738615875306`", "197.74570791748386`", "1.0900992319715985`"}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{{3.615290270964035*^9, 3.615290274722785*^9}, {
  3.615290452185185*^9, 3.615290485212028*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLogLogPlot", "[", 
  RowBox[{
   RowBox[{"sample4096", "\[LeftDoubleBracket]", 
    RowBox[{"All", ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "6"}], "}"}]}], "\[RightDoubleBracket]"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Off-axis angle\>\"", ",", "\"\<Stretching factor\>\""}], 
     "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6152901627181463`*^9, 3.615290177583363*^9}, {
  3.6152902313556557`*^9, 3.615290244933425*^9}, {3.615290323875537*^9, 
  3.615290423308736*^9}, {3.6152905099370317`*^9, 3.6152905108791227`*^9}, {
  3.615290547650494*^9, 3.615290556590959*^9}, {3.615290590203401*^9, 
  3.6152906101881332`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.005555555555555556], 
     AbsoluteThickness[1.6], PointBox[CompressedData["
1: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
En2C5xgTd+/cfd/ILJq4bPa4om81DUVyxV1piwPwYifzvSaZx/YHicSr6JI8
eHUHX8VvOm4KLZ3KepIHihpJ18TIfFwt/8vq1JkUcDLbZBJsRkVuUYcikw1v
QKHm8Sb9U3S8Ch+PWuuWQuJl4Zef1Ule/Lu935qjEmpes5WmGtHRtvPhcOm5
JChwMmi1uEdF55w7jGvKg5AufeboSicqmsnUdb9dGgboPaqwZ+6/is47nMr/
jeN920LWOc85ZiFUSlRE66aFRMgIJaVCQouskGRla0myMiJ7z+e2996JzBCV
ikqJ3/P703W5XOfcn/vzfr9el+uch8BPdZV+xY/LQN7YpqWVer2qBv9OD66s
hSGJ16sqvRiopdIeN3CoHDZONbq9XaBhnaz38CmLIZAJHpmTa6Tj/c2vVJSh
G5ZqyggZVV5MO8Nx5uH1ItLmvWsouwYv6ozELdSfKyAlve3Zg2MJtOCPGrc9
2gF3Z4aTFNqpechJeGTtzAU7IzHz51W82KPQ6Tw1T5Lniw+2eNwj8FtU6KEc
ar+MauYWKCPEtPBajT1pxRBcFaP3hsrj0b8eWc4fi8DaSNIisYmJknObP1yx
iSeNgleY1hpRPPE7bMOiYQ9khi3N87Dz4ri+z+79bulku7qk94mXDPwmHhmV
3fQMhlVNPg4q0vHerPGdQZ13sIJ/q09DJYEPq+dcnOpaoHxqt852ZybWvg+U
1DLNJBe1fRN9pyj+vPJCZTG2CVax3rIVpuZ3NvudCbP/HZQmfM+YPUag51qN
dXUT7WApazq+6gMDFTtDq+feZgMv+CuJU/57fy/XxUf8JODdNyJ7nhK47UC2
56G0PMje7eF78QsNjb8dk/4U1gp1UveNWh7QUa4x/rlHWSeU3Lj50dqIhtWS
py8GvZoGKzZuh+0kHX/dDzV669MApw3f/1luZ6BJLyffnqtlICId2pJ+job2
bpyP/h6egFmHgWcnenlQ+Wqg55dvH2H6Vqiwvg2BpM3ZjQ1KtfDMRkX/pAYd
t2smb2yk9iUgsNZubzeBJz60O/wdq4JNg9515wb+///X0fVGLxNhvxFHrj0Q
6HHuupLQ827YNKqh62TIwG7hUoUUqxLwvWgsf4WDge2jlzrzxwpAM+pO1oY3
DGRETly7XhoB1xQidaZJyje1g856nLcmK04lV/E9ZKIOzWkHh3oCuTrnzYoN
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
ahDw42dNCxwX5j15zY0H3/AsDA5d/gbzDx/9iEqk4a5Nc/L2HX1gL8S6LDDI
wDPeEp+ybqTDQZUP9lpjdGyypd09Y9kPt5dHh69p8aC20kWHy5enYUXu9MQW
yo86xTribMlqODk49WldMQONucZUa9tzwGmHcOqGGCYGtQU6CRMppIUj97kI
TzoGbVJqqfk8BOdYdiTrfabjmSu5N7GoE8LYlq+/o/hz7ruD4uBwAwipTZ/+
FUHH87TYAnP9D6BZqHPAbYiOznOlX9k1OqBbNSyEdoAXN+AY/yHJTNKKheNE
I5UfA4p+3g4NdbDCem/AhQwGrrlQs4pULgJWiUNP+ltpmOBZ1C10bwCuDFaz
XNaho2TqrWMXD/ZC31YWejuTicPB2d0/zoSD39u/x6Qeb0KXipyMBo1qkn1k
6NAfAQLfXl224n7TC0qBWSEC0tR9yf1YJrI6itzjvLiUbkXgO8GLi5ZFHbAo
lmFrfoKOA7Ls0RbD/bC033a19kkC8z2ElZvm2yGg7fj+aTs65omsvLrt7zuw
jHNv1HxEoG/C73vDy00gG1nA8q2NGxN2fMFGxZ/wcvUHo/1l/Gi5+vZnlb3V
JA9xbLc0xTcLhRL9jDMN8HIiXlaAhQcvc/JJ/Rv/AU/mDeaGqfm19nhKnA5/
D6ucZYSXdfjRhUd3R7hLKdkc+l1LyofAz335LVqvOuGiV3vAl3h+fKygle/y
qZi8ofUw2VCQiSkLPa4xoQmQ2Df8agvVp3JZFW9aEjvhg388ofWHyuv0kK0n
I8rhdUqjL+8UA/efCTDXfpgLOqFDt6so/9luqNj5Ta4QpOz/DY7n8+Lpj3XL
799FkMKRHj6P2flx+4/GI//MisilexW/67YxUJrYrqkmXghbohU9cqk+FLC5
o3yb1gxI2zHvcJ4P1122jGAUZpPdYledYs4TaK9mpJHl0wzh65l9PU+ZmNWe
m2BTFQP7ZssvE710bFC88mPj2SbI4h1Kc6Ex8Im1tdU37zrgdxCYnLIjUP++
3v0muS54m2l+TvUXHQkl+5Yo0R4YaelXvMVL+cAdxyui/N0Q7NVVVEXxgJak
DO9OZhskx/BJxlxgYteJmrXfdwSTY2yFagvX6eh6JkmP5vIBtKfoOUcWGXin
WFHbaU8m7HSA9psX6divG5CYrj8CXOvChaQ46Li/089T+ekYlO6Q9RWi/Px3
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
T5XlYM0+/MDfjY5xUp5utxM/AHtl6lbJQCb+YvsE1pfiSQ+fg+mfB+lYzcpi
s+DRB9bOjBXml5mYNtjWUKmTQHJWfD7FdoQXCdn5R7V3k8mvATezjlN9GlZ5
5oB1QAbcqHCQed7Ph45PlzlOJhWROaeV9z0dIvDg/mH/w6JNIC95a3TBlo5K
pdXqrosUH0ymu7wwYGLGxVvqaqcyYY/mw5xZyhcqlT+nH0zuhOkOnwgB6vUn
3arVChqrgzk2v4OvEhmYvhwZq8tmQaZEddD5KJ8Yjvtp+m2mCUIuu19v9aaj
n+S4b3rCIKiwaZa2lzLxyMPE2PCYN6RwzWLpuSpePJVxv/pqgzMpxnvNZLsv
Hat4uF6+SO+EMbnj5oppTPTubJVXnIuF0ZYfJlnCBNLL3dw+HOqEHtFKun4O
HUOt/fuvinyAm7Fma14FE7jzQkVwj0kzHDZwq/5WRWB7xa201i954Fe+eyki
hIab/XwnjtZOwOGfVvcaeSk+Lnnz4hRXJ8iKyOxsWcfAs/YsBapQAkoz/RHB
FL9+fcZuPvnaDFJukALsjQSi2G1G3YdS0FVa+VHvJIHEQknheHUb5J5zwa2H
+TCWS7fDNySfHKpN4d5D7ctx0WF5k7EmKK1n/8EdJ4CvZpN+L96uJl9+fb7d
4x8N5yIT5aU5P0LYAS6+Nmr/tOP3PcxeovzgjP1Qhi0PPpe22237eAb4/6V/
ublaEHPXruYTrqkixS8/cXai8vo9D22L17pO8BBSLqOLCeIg25p3BQsl5ONg
SaNzRZTP2MX4Ne1qAIO5FMfX//888LUCGBtoA/Oryo+yJikeblNV0nzZA+yR
CvfC/jHQ9+2276XhuVDWMqpxzZdAK+A6pTZeC73f/W98MSKwer965PW2Tri2
avIBazMNu8/NGa59PApSmp7lzVl0fH505/CFuUGQuBGS/tOOjp3N2lcKQvsh
32btnbVdDLyRFZFyf0UuPG5vuDnxho7MezKrFawHQDmxdMgrWAD7roxaVzbV
kjvlJOr0bjLQ8cNs2lkCIbatvP2yA+UnWQPK2pZN8Ej+Nqv4cQZy3XQ0N8vM
ggCdrt1N+gQ+6nJcr7W9DVitHB2/J1PzqFHgL/tURTarO3Kr7GHiyk97fz3i
9SW5XYx2qz5jIGehRZTCniRoK/zIJWVD+WjhS1fNvx9hn8F0m1IhHa+FL7/k
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
      "]]}, {}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"Off-axis angle\"", TraditionalForm], 
    FormBox["\"Stretching factor\"", TraditionalForm]},
  AxesOrigin->{-10.243582592360537`, -0.35869624240525305`},
  CoordinatesToolOptions:>{"DisplayFunction" -> ({
      Exp[
       Part[#, 1]], 
      Exp[
       Part[#, 2]]}& ), "CopiedValueFunction" -> ({
      Exp[
       Part[#, 1]], 
      Exp[
       Part[#, 2]]}& )},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{
     Charting`ScaledTicks[{Log, Exp}], 
     Charting`ScaledFrameTicks[{Log, Exp}]}, {
     Charting`ScaledTicks[{Log, Exp}], 
     Charting`ScaledFrameTicks[{Log, Exp}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->{422.69921875, Automatic},
  Method->{},
  PlotRange->{{-10.157039957098064`, -4.618311300299697}, \
{-0.32504884959886576`, 1.7610895043971402`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->FrontEndValueCache[{
     Charting`ScaledTicks[{Log, Exp}], 
     Charting`ScaledTicks[{Log, Exp}]}, {{{-9.210340371976182, 
       FormBox[
        TemplateBox[{"\[Times]", "\"\[Times]\"", "1.`", 
          TemplateBox[{"10", 
            RowBox[{"-", "4"}]}, "Superscript", SyntaxForm -> 
           SuperscriptBox]}, "RowWithSeparators"], TraditionalForm], {0.01, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-7.600902459542082, 
       FormBox[
        TemplateBox[{"\[Times]", "\"\[Times]\"", "5.`", 
          TemplateBox[{"10", 
            RowBox[{"-", "4"}]}, "Superscript", SyntaxForm -> 
           SuperscriptBox]}, "RowWithSeparators"], TraditionalForm], {0.01, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-6.907755278982137, 
       FormBox[
        TemplateBox[{"\[Times]", "\"\[Times]\"", "1.`", 
          TemplateBox[{"10", 
            RowBox[{"-", "3"}]}, "Superscript", SyntaxForm -> 
           SuperscriptBox]}, "RowWithSeparators"], TraditionalForm], {0.01, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-5.298317366548036, 
       FormBox[
        TemplateBox[{"\[Times]", "\"\[Times]\"", "5.`", 
          TemplateBox[{"10", 
            RowBox[{"-", "3"}]}, "Superscript", SyntaxForm -> 
           SuperscriptBox]}, "RowWithSeparators"], TraditionalForm], {0.01, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-4.605170185988091, 
       FormBox[
        TemplateBox[{"\[Times]", "\"\[Times]\"", "1.`", 
          TemplateBox[{"10", 
            RowBox[{"-", "2"}]}, "Superscript", SyntaxForm -> 
           SuperscriptBox]}, "RowWithSeparators"], TraditionalForm], {0.01, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-11.512925464970229`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-10.819778284410283`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-10.41431317630212, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-10.126631103850338`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-9.903487552536127, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-9.721165995742174, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-9.567015315914915, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-9.433483923290392, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-9.315700887634009, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-8.517193191416238, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-8.111728083308073, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-7.824046010856292, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-7.418580902748128, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-7.264430222920869, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-7.1308988302963465`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-7.013115794639964, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-6.214608098422191, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-5.809142990314028, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-5.521460917862246, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-5.115995809754082, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-4.961845129926823, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-4.8283137373023015`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-4.710530701645918, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}}, {{0., 
       FormBox["1", TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {0.6931471805599453, 
       FormBox["2", TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {1.6094379124341003`, 
       FormBox["5", TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {-0.6931471805599453, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-0.5108256237659907, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-0.35667494393873245`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-0.2231435513142097, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-0.10536051565782628`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {1.0986122886681098`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {1.3862943611198906`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {1.791759469228055, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {1.9459101490553132`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {2.0794415416798357`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {2.1972245773362196`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {2.302585092994046, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}}}]]], "Output",
 CellChangeTimes->{{3.61529016969977*^9, 3.615290177798979*^9}, {
   3.615290229451652*^9, 3.615290245228467*^9}, {3.615290318324782*^9, 
   3.615290423699608*^9}, {3.615290489302238*^9, 3.615290511280678*^9}, {
   3.615290548287374*^9, 3.61529055697873*^9}, 3.6152906105964203`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLogLogPlot", "[", 
  RowBox[{
   RowBox[{"sample4096", "\[LeftDoubleBracket]", 
    RowBox[{"All", ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "5"}], "}"}]}], "\[RightDoubleBracket]"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Below GeV count\>\"", ",", "\"\<Duration\>\""}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.6152901627181463`*^9, 3.615290177583363*^9}, {
  3.6152902313556557`*^9, 3.615290244933425*^9}, {3.615290323875537*^9, 
  3.615290423308736*^9}, {3.6152905099370317`*^9, 3.6152905108791227`*^9}, {
  3.615290547650494*^9, 3.615290556590959*^9}, {3.615290590203401*^9, 
  3.615290670562769*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.005555555555555556], 
     AbsoluteThickness[1.6], PointBox[CompressedData["
1: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
uZWxK0cZk09qjjcTyEMtf9lbDfKcUUZVVurhLGz9rzV51PCgorlr5hVyXrVs
79vrPBF+Jdi/9Ewnffahb4h/WYwPZzTzv5L7tRgO/3G5jvDfmkyzlWRPndv2
u6jt4OFtR3/iPz0Guet/+Q3mifH5are9UaE8FhgmeJXXEZ6eMO/sfj6Dn98c
9qgF89AQOsM4qIbGmuqq2c7SPBgu+vLrF+lTqw+Kwbf3CUGVmBddaqWQmuG/
dUawAkoDRtJXkbw7vmON3+6nHNh8TbdKimHwlY3Rm0K8cPnZ4JXq5BzrJvl6
eWqQeVwf8/TZRwYzxsxksn0J3zYEhkb40riQyIksOsdB64Kfez7eI376+nT4
kX/EE43OxLVs4uB9cMxc8zAe2JaWTYcJj3Um3cmffooDkYexVwPhyqdfwmbc
yhWhaN7OkGItGufr7Rzv/uHiUYfVqCCWwZv+obMbPvGxbS+PbSugYf3sr8Rd
CUW0VY86aDssj1aVnFvDOiIMtXp5SiZTeLAw8KpgDMktkwh3xR8M1i43sTGs
52BJy1HBNLLPs//+3tZJONb08Ji1AwosIn3LAsvTlTF1orcce5FCpWtemVG+
ALPFKhZDh4g/LlDaFD9GCbqO06kVmfJIMfg1zWkCi+snvZQehbF4m+F585+q
Anbf3Wt4TJrCFiPnybVFHBTnL2z1zWAwZOfTOtmSg2nTLB62tjCIPlnwrK5M
GUYOno5KcvLYXG/9Kticj2lmKy2Okflo4p34MHKIxZrmuitHZrGY1M/JV/cT
QHee9UMVwqNWVl9ctY7yEZ17/0EDef8ew8n7LcqFOFlboxKyl/ifbODGfeT3
vy4tO7D2KNnnRAXpN8pCLBLoLJpxl8KVqlnf9pH5kLPOq9m/mMFMmcDj4lcc
6CpcDvRJY/B2WdvboqUcbEbI6iuEV9esbQ218eRilqHH9EnE347tWhv4fgUP
v0asfeb/oPHmn/mok7eJL8raWZedJf37pelJ52wRimdN/BuwhcK5fTupqIlc
mOgcOX/oGIO5YzxXTapgwAkvv3RbkYNc5+yaslVc7NJ90cKzYxA5c8jAQlqA
OceMHl63JP5mPmOnzFUFHA2JcNT5R+HUtoVvb8xm8fDy1LJNgSz8xlF9RYGK
uPH4+5qdQgq6u0d4Xdk0+n08iOVxYP+2QvLXTy50PH8t+39fx6/Ynz2P5Pik
8IA5xh84iB9ul5j9iAvFo//WjBcxCOvYHHyKcDX70N3jgwQHLlFDqY8LBTC8
a/ioVYOG+VHDfaISGibz3qxpOMjBn/p6C3dNMYw7DTWSX1J4q+x06KUTH590
TO/23KdR+SvQVcuWg4XuxTIuLxhUDaUryV4XwXWcPseCnFeZtZ5P2xM+jLeW
y2WTfnvkfyShiPTNnden8ut+00hLO3RiTIQIBmcmLpYi/DA85lf7VPJ9u9bt
H1g4isXJ9ZvmOFkr4e5/w45rj8nD9dX9Py37FaFzr/CH73YKQXY392ZtFqHi
lfHmJ27Ez/Qn3lgezcPQ9B3V8x7TaGjIzJtorISQh3aXxpJ8uWqdJ6H3lPig
+6EriwsJ73NGl0t2cXDNfonEkZMMPAOthttixODaLg9fcpXsm5LaoQN3efCU
T36whMMg4P37dzYvRPjTWmZwSJ/4+Mh4HX1fMU6bjcrZWyUPzrsqP6sNQhzL
cDKQfUjh+Qs3W+VaBbyRC303bhyFVboxy2618KBVUxgUnUn8g4lwPJbPQ9fF
iKu9SYR/4kveyL7hY4fR9pB7X2ns0nO0XbiIhzCvrJwK8veJL3g64pdi/Kus
tBq5QPKu98T9fGUuJkYoOSn5kHyf62wUOFGIyMXuP36fJud11+bGrQQeNtVN
XGTZROPwgWceC4e4OK7+o9iD8Pu+vCFaqol4ld9N066zDNzXLpMvfcPFp8yy
JlsyR5qNj2z/axSiT+L1n1RfCuJTKtt1lRWh4Oj7bxTp5/Sq03EmH+VxI6j4
bvw2HuZuvWr+6qkSxOnlWqonSF58Sx7xleXB9diNw+ZDNKQPBfUmruTgxOWb
TmPI/vXg30yzl3y49S2rn/qQRvOMQvUNyWK4v2p/V7GVQmJDsW3EERaPrsUe
EfizKGnyjLrXqIRUb7flipsoHKyznr5wMTn/ytW67REUDH58TcrtFuP7P0Ho
tDB5NDhP+eVuy0UplV41yYHB6KxpMgnGYvyN2mVekEehPLqubYT07b55fP2i
0aQP08sOVCzi4/7FLefPEn4ZN/ri/sY0FklpY1TvrCfe/9+N37ZXuJivY9fX
o8ngSHZ0XmspF09ij2m9X8pgSapa8hHShwO20x+KQmgYX9j15L2BELJVp9KC
n1GQyhwMSrsvxMGYPJXwsTTKWswKnGV4kN3glipBvOPTi9aUWTk86O96t9OE
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
KNlsIbOAS+F6WsT4+G0Byj7btBl7knxqWrplebsA7DuxRTWzGbjJvzPDlCJ+
rN7v4ribgrlkoY9KjwJ8k4blTl1gwFPlQBeH3GfvyOK3S2ezEPb+yZEbeVz0
PtzxPJfkk1B2KOgeORfGUbEDo+tY2LBbO3MqybNv1abtCpbE7/mt1+W1OZgo
UXzXo4XMf9DrvKF7bKjVPxXZp0KjONyWb9fIhOsLZZFtEuT8reR0X61lIfEI
q7nkOfFIg0kX2d9J352qlL5C+OnMbNfxC5EsHBXV+KOQT+Z/aZd/uBML7i96
bbxbaVwMPFseuJEH4Uf6qH8dhXiqWKk1m+TF/dbcKrJfKlGeVdsIz/8Ye1j3
co48Vj6WXOSZRbhvzG2qZgUTHg5uFx6sZGNM6uJhj100rL7u139owURYI9/l
HZmT2qitW1+s5GPB1/1nfz9hoM3z2+H0nmlgeKVAYjIDpYUmGn6lJG/ZclH2
RhSubZxt+/YaHwc3TPioBwou+rYRlzunQX9bro0jOf85dqKsvbu4kL3a4ZdJ
eO/6WA3zK+kvhZg70jOlaVydGX/mn8o0WGU4HNEl+dltWbHfMJPGw0qBagXx
CJ3umui1WwifaQRqJpM8j4qU/7J1owKG1qx9+T6Ywummy1tPSPBga3t800ry
+c8mXrm5/wYP/WFOhTOPUtil+v2VLk8BtwVXGfvIvJ1Yxmkq/sNBx72Vu7oJ
b3pZjHX/z4OLDWSlmeQ89+ydYGsewUH1lS561U0Kg5Y/xvofClBhy+md0iOP
rCl/i1IHFaD9r8y3OZT4Ws8Lne9lXIjlWwQvuE949s1c7x//74+B9J/BhTTs
7gTXP71E+CHp4C+N74SXXnPjtInvq97tKrgUykC5Wt/OLdtomJ8JzrCuZSLm
y826TZeUcKRz4a3fxG8W7m76bk783ETxklL9AAN/mAqnphzmovOvg13LQgpn
+W37j4uxYO+kZG1MvM6+WHnB8SNcWNiY1kzpovDjccSmJWQ/DaaudI+QYuJi
pJvl8BMFsBX0T9UYUDATJr8MPMnFvASZVUmviO+4f56xcgIbkvHN49vJvsW9
tFZaKs+DxBeD/RkJFP5VzFoS5s+DjLvWidX5FNaMBTbYkn0/Gad6z7KD8IXS
nhGjJAEarwWWTnEi/p1uUBtC/PHkUbrWj/R/pww/VL6BgzijlxdqiY/7dor1
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
VZ3/x8GGBabY9l3O04nnuj219Sbn6vMSEWkHmaicO09GyoqJ4qa+4p+1JJ9b
nmntSaKxx+LB9cP1LGwJeOXx+hqNUN2cjj21XFgEmPdlzaXw+UdIFcdZGX5l
+eI3lsvj0bODn7beIPyj/mv24ggKXMOnn+tfE//8MrPsIk04f4zfvECZRkCr
V8a/IhbMZfzMbK8w4b6wVjVVnYmzDp13nhPufPbH5YhoAJn3u/YSt/uY0BPs
8LUhvGAyKu9kQ/Zml1pfQscRFoaL5OzP7OfjvImK4PsZCqUmsxOdyPMP3ZBu
rEt89SKXMW3/RA4mXRo4bzlCoUr0/oUNOUpwbjLxKyP5obsv27vqDxO7dlV5
3P9L496fId+/mkJMTK4o29kvD+9Ejw9rGmm8KN4yKeQlE4stlrt5pfLRIu68
0XsqhROZp5uK9yvgpJXcUGcjA4eXx7ocbuVhVEllgyjpx70ReWZh5Vy4DPQm
/iX+Fj7//kjdBzZKHQVtl1VoXNptajMIDranqVv19VCQmmp+ZKCHj4BMGyXV
xRROv7Jf4XlFCas/noo6Wi6P1szK1RN12HgZ7Kj2kPi8hs+Rcec/HDx9eolf
T/qrf8T8xzDFgcmlVcYnuTSu7byYMm+Ujdd3+LU2hM/M1jn+9jvAxqKFL+qf
mNCgdr3ecIvw9QrerxuinjQ0gxsDdy1SwJwN31JXdjBg8rNl18osLtyL3p88
U0bBc0FLnkMuC6ULdmSUX6ex1FlvtsoOJrgfgqWyDMi8aWdpo0UBXTX7C2PO
U1DPWton1OWjVF7zd1o1hVRuZK/6cg7mSNYGlBLvu9UzQL24SKPhjYhyRg8T
UYvGFBdd4uBj8+K/j94Q/t3JqdTcwcLXflOvOSR/oqdOSDDJptGXJ2qV8pWJ
D6e6rH07SL9HzdzsfpfC9xlzrnpVEr9cMl83byWFV7W7o+wsOeAov3RPIXOj
OWtUJf8J6YP6Mv0mku/1Gd89Wr5zMaGid3b5PgoDWi67pInP1eU6GL7woeFz
xbNPJ46N2pqZA+v1abR/eLO5PYp8/5dhtVc1TAw93UYH8gn/GH5Z30fmtTqz
IztojOQLnavTcIsBjbsDj1YRv3xeVPJ3GXmeJY8Xf64g/L7fLUfR+g/hxcq0
bcbDPHQG5R7YTfrRscnP9U0UF5q5d4Kt3CgE/trx54U5C5U7nrEliE8Gnxh6
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
SmiUtbb3RN5RgnDNDoVtHvK40jTM+mbKgosqpjE/0Bhq+he6egEHgcOd3U+I
z/pvPHTdcQ8P7x6NHNDQpeDgusb+qRkPoe9/Xl4fT3zTa+ctNXI9JqOP82JD
mLiaaez/UZkD/xGhga4lDe9pfkZ1j1jIlM2+ty2LhvSieZfvE68s4e76+ob8
+ztl5cFn67mYainVe2k+hT+8mz+mG7PhZz/nsKMb4Xs7xbgc+2kw/WhwLDVC
Hrf8tArFRRXxkrouW/CSAda3W4a5n4QwT5JduLxfDlXi3aezOwW4dvDIQr8j
DASukp4TRvK4SKRg8eQ2GkpBz+Uu7uZAc966SUZ/KPAD1orrCjgw5XsVC79S
qNH6vlk/VRHnzp1rXE18Uxb6bg6LuTgS7x999DbxV5GC2f3+TFifkZEOMGOi
9+LKsy3nuWgTO/Co0YVCvtkh6y1m0zB77o/GT+3y2F1fPGuEYqN5vXBzegAN
RcaxZds6ucg9d0wnXIrC88ubzi2ex0GfQtS5kYU0QjmvFs4JZSC5Z376LTMO
FKOcx/3auUhQEtXKE6PQ8zU0NFeSg648Q9es/9//tuRwomsBDxf8XBw3v2Og
V06Y9XIqGzKm3GeSxI+m3v5zQOviNIQ2KEcFPZHDor2Dy48Fs/BhttG194U0
TIr6hxIjBRDatFU+rWBASvm+yNbPAkiynxZsL2bApqHaJseFg52NDx24AxSU
etff/bVcgNXDt46tP8RAW6aT3qJqAXLOLng+9QYDFbUT9lrZczGxsfX73y3E
h3Z67V7+jgmentZmJykmNGIlAkIJB24I3LFzxQfS441y/BVBHLR/jktsaCQ8
lKj1/NsWPrSN2TO6ohmIl94mMxzBxe+lkR+aKgjv79rno6XNxqjI9J93tpHz
rFly9fJHknfGA7IrSd5zzDjfjuZzETdj/UcT8jylVm/Tl24mfeTd8EOT7Mf9
2oNhPYSL/skfOyLBZkN//9p0o04hRPKtW26S84v793twlxYPS4Ybsu0eUQhx
Fz/9jnCCFf+N2ijxqS8hqlRaMxPrUl2768SZ+B6+MX+0i4X468uchDGk746J
aLj3chCpEbZc8zgFjt1S8UsnlKA17NMXq8bAQ28/hbcxHLSWbd/ZKUnjl/e8
xwe92BjP7CxzsiEedW3Xj9o5PKw2S3v7nUVBMDHnAzWZgxqPoCsa8jTuhkhl
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
vLTW3eIPMyhPnDn4XJz8u2Pics/HXLhEjR5UOk32+9ksrdM8Ggc5pa9ulLCx
xKi+MzCYg7zvd09aLaLxtr1+7OEMBuKXQp/m72Mgq8XEFXWooOvDFjE+mWth
gtsfMIkLVfuOjquk/9yn4v7FZypYV51utvE2C8+kv27f7CEALsXOYC2kIO+V
M7D4CwPnDB257eoM/pze5mn6ko/DOpbPbj2nIDLa8sRsTIjqouTHryky35ar
OK4hfm/937un2p9ZqJtq63NwNh8LlnY+W0j4vbu+sShOVIjZM3OPdP1h4VFF
WtHUH2T+aq3nJk0nvim+oSuRnK+z5Oc3v1Ip1Gyw7Vn5no9UCSl18e8sNOfZ
1Fls4GBsm/vIShsanqHJXqWr1dB6Y/KBuBIlXHvnbn7jDRtR5U1tfcdp2GQX
ve5SZUM3SD7/F6nXU+X9ssYP2bjy8+NuQS7hEUuOwZkN6njs/MOn6jzJkyLh
rcXn2PiS4xByooKG5IHfFTseMfhyb/jL19UMMGtDrFaMBvJsVFQXTCD1+7Zv
p+M+Dmq3XAyYT/o1fpvS1soRZSw9WFwkr8PC6afbsnfbEx/cu8Hv5RyS5xbZ
PR9usGFhc35LYgaNmTmfVlZkMBgnfjk9XY/UMaNmdfOnAA4Sml3iKf8+X6dU
33WLRuzgRelXZQxWiu4rlx1isCisp/TvKI3GcYbbM8j5rfP8PMrRZ3Bpd0at
SpAA9wKTPex2UugY9J2j3MLDz/iI3u2fKOx3Vm+58JDMve62acYjbHwVsW98
SubB1pCheQnfiW8rj/5mZIgPRxT/3q9A5s/vt+2sJXyMuo/OVn3JIjmmfr2R
cH1qqvDMcpqDxV9yoy+RvB930l+igfBkF/Ph4q5ukq+NRjHxAyycOXCa59mn
DG3zLcbDYiyE90q63zHj4cTVHKcu4if2JqGVF6LI+jV4/vllTiPjO+u1C+Ep
vWvfDpWSPDx0ROGQ/zUGTxsmhDqS3BNUCY/MJPx1O/ZH1bkKBp0548t/KPHw
fm5X3cFKCmpTwlsWp6lAIT7XhVtOznNH9MPAuRxccjp0cUkojfw5il6naoVo
UVcKbyT+aXIoaVgzi41bSZVnu0poJIworq3ZzcOcHMGzN8kUHDft/rQ5RQDW
U5Fn43IId8ZIlJ7wJ/vxstmq6g6DtSuXL5z0jkHMs6O1KyQYJJ/M9BCNJJwn
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
      "]]}, {}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"Below GeV count\"", TraditionalForm], 
    FormBox["\"Duration\"", TraditionalForm]},
  AxesOrigin->{4.139954023546697, 3.86860354694581},
  CoordinatesToolOptions:>{"DisplayFunction" -> ({
      Exp[
       Part[#, 1]], 
      Exp[
       Part[#, 2]]}& ), "CopiedValueFunction" -> ({
      Exp[
       Part[#, 1]], 
      Exp[
       Part[#, 2]]}& )},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{
     Charting`ScaledTicks[{Log, Exp}], 
     Charting`ScaledFrameTicks[{Log, Exp}]}, {
     Charting`ScaledTicks[{Log, Exp}], 
     Charting`ScaledFrameTicks[{Log, Exp}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->{435.4140625, Automatic},
  Method->{},
  PlotRange->{{4.250399280363447, 11.318895716635467`}, {3.9040877723113763`, 
   6.104109744976474}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->FrontEndValueCache[{
     Charting`ScaledTicks[{Log, Exp}], 
     Charting`ScaledTicks[{Log, Exp}]}, {{{4.605170185988092, 
       FormBox["100", TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {6.214608098422191, 
       FormBox["500", TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {6.907755278982137, 
       FormBox["1000", TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {8.517193191416238, 
       FormBox["5000", TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {9.210340371976184, 
       FormBox[
        TemplateBox[{"\[Times]", "\"\[Times]\"", "1", 
          
          TemplateBox[{"10", "4"}, "Superscript", SyntaxForm -> 
           SuperscriptBox]}, "RowWithSeparators"], TraditionalForm], {0.01, 
       0.}, {
        AbsoluteThickness[0.1]}}, {10.819778284410283`, 
       FormBox[
        TemplateBox[{"\[Times]", "\"\[Times]\"", "5", 
          
          TemplateBox[{"10", "4"}, "Superscript", SyntaxForm -> 
           SuperscriptBox]}, "RowWithSeparators"], TraditionalForm], {0.01, 
       0.}, {
        AbsoluteThickness[0.1]}}, {3.912023005428146, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {4.0943445622221, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {4.248495242049359, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {4.382026634673881, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {4.499809670330265, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {5.298317366548036, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {5.703782474656201, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {5.991464547107982, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {6.396929655216146, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {6.551080335043404, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {6.684611727667927, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {6.802394763324311, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {7.600902459542082, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {8.006367567650246, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {8.294049640102028, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {8.699514748210191, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {8.85366542803745, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {8.987196820661973, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {9.104979856318357, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {9.903487552536127, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {10.308952660644293`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {10.596634733096073`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {11.002099841204238`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {11.156250521031495`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {11.289781913656018`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {11.407564949312402`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {11.512925464970229`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}}, {{3.912023005428146, 
       FormBox["50", TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {4.605170185988092, 
       FormBox["100", TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {5.298317366548036, 
       FormBox["200", TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {6.214608098422191, 
       FormBox["500", TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {4.0943445622221, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {4.248495242049359, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {4.382026634673881, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {4.499809670330265, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {5.703782474656201, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {5.991464547107982, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}}}]]], "Output",
 CellChangeTimes->{{3.615290627538961*^9, 3.6152906338337383`*^9}, 
   3.615290671047217*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLogLogPlot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"#", "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}], 
        "/", 
        RowBox[{"#", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}]}],
        ",", 
       RowBox[{"#", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
      "}"}], "&"}], "/@", "sample4096"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<High / low ratio\>\"", ",", "\"\<Off-axis angle\>\""}], 
     "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6152901627181463`*^9, 3.615290177583363*^9}, {
  3.6152902313556557`*^9, 3.615290244933425*^9}, {3.615290323875537*^9, 
  3.615290423308736*^9}, {3.6152905099370317`*^9, 3.6152905108791227`*^9}, {
  3.615290547650494*^9, 3.615290556590959*^9}, {3.615290590203401*^9, 
  3.6152906101881332`*^9}, {3.6152906876642847`*^9, 3.615290802328095*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.005555555555555556], 
     AbsoluteThickness[1.6], PointBox[CompressedData["
1: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
      "]]}, {}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"High / low ratio\"", TraditionalForm], 
    FormBox["\"Off-axis angle\"", TraditionalForm]},
  AxesOrigin->{-6.865203489352704, -10.437805004216875`},
  CoordinatesToolOptions:>{"DisplayFunction" -> ({
      Exp[
       Part[#, 1]], 
      Exp[
       Part[#, 2]]}& ), "CopiedValueFunction" -> ({
      Exp[
       Part[#, 1]], 
      Exp[
       Part[#, 2]]}& )},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{
     Charting`ScaledTicks[{Log, Exp}], 
     Charting`ScaledFrameTicks[{Log, Exp}]}, {
     Charting`ScaledTicks[{Log, Exp}], 
     Charting`ScaledFrameTicks[{Log, Exp}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->{399.765625, Automatic},
  Method->{},
  PlotRange->{{-6.762468919466086, -0.1874564467225946}, \
{-10.345432088281681`, -4.618311300299697}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->FrontEndValueCache[{
     Charting`ScaledTicks[{Log, Exp}], 
     Charting`ScaledTicks[{Log, Exp}]}, {{{-5.298317366548036, 
       FormBox[
        TemplateBox[{"\[Times]", "\"\[Times]\"", "5.`", 
          TemplateBox[{"10", 
            RowBox[{"-", "3"}]}, "Superscript", SyntaxForm -> 
           SuperscriptBox]}, "RowWithSeparators"], TraditionalForm], {0.01, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-4.605170185988091, 
       FormBox[
        TemplateBox[{"\[Times]", "\"\[Times]\"", "1.`", 
          TemplateBox[{"10", 
            RowBox[{"-", "2"}]}, "Superscript", SyntaxForm -> 
           SuperscriptBox]}, "RowWithSeparators"], TraditionalForm], {0.01, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-2.995732273553991, 
       FormBox[
        TagBox[
         InterpretationBox["\"0.05\"", 0.05, AutoDelete -> True], 
         NumberForm[#, {
           DirectedInfinity[1], 2.}]& ], TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {-2.3025850929940455`, 
       FormBox[
        TagBox[
         InterpretationBox["\"0.10\"", 0.1, AutoDelete -> True], 
         NumberForm[#, {
           DirectedInfinity[1], 2.}]& ], TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {-0.6931471805599453, 
       FormBox[
        TagBox[
         InterpretationBox["\"0.50\"", 0.5, AutoDelete -> True], 
         NumberForm[#, {
           DirectedInfinity[1], 2.}]& ], TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {-7.600902459542082, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-7.418580902748128, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-7.264430222920869, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-7.1308988302963465`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-7.013115794639964, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-6.907755278982137, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-6.214608098422191, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-5.809142990314028, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-5.521460917862246, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-5.115995809754082, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-4.961845129926823, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-4.8283137373023015`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-4.710530701645918, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-3.912023005428146, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-3.506557897319982, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-3.2188758248682006`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-2.8134107167600364`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-2.659260036932778, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-2.5257286443082556`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-2.4079456086518722`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-1.6094379124341003`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-1.2039728043259361`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-0.916290731874155, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-0.5108256237659907, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-0.35667494393873245`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-0.2231435513142097, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-0.10536051565782628`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {0., 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}}, {{-9.210340371976182, 
       FormBox[
        TemplateBox[{"\[Times]", "\"\[Times]\"", "1.`", 
          TemplateBox[{"10", 
            RowBox[{"-", "4"}]}, "Superscript", SyntaxForm -> 
           SuperscriptBox]}, "RowWithSeparators"], TraditionalForm], {0.01, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-7.600902459542082, 
       FormBox[
        TemplateBox[{"\[Times]", "\"\[Times]\"", "5.`", 
          TemplateBox[{"10", 
            RowBox[{"-", "4"}]}, "Superscript", SyntaxForm -> 
           SuperscriptBox]}, "RowWithSeparators"], TraditionalForm], {0.01, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-6.907755278982137, 
       FormBox[
        TemplateBox[{"\[Times]", "\"\[Times]\"", "1.`", 
          TemplateBox[{"10", 
            RowBox[{"-", "3"}]}, "Superscript", SyntaxForm -> 
           SuperscriptBox]}, "RowWithSeparators"], TraditionalForm], {0.01, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-5.298317366548036, 
       FormBox[
        TemplateBox[{"\[Times]", "\"\[Times]\"", "5.`", 
          TemplateBox[{"10", 
            RowBox[{"-", "3"}]}, "Superscript", SyntaxForm -> 
           SuperscriptBox]}, "RowWithSeparators"], TraditionalForm], {0.01, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-4.605170185988091, 
       FormBox[
        TemplateBox[{"\[Times]", "\"\[Times]\"", "1.`", 
          TemplateBox[{"10", 
            RowBox[{"-", "2"}]}, "Superscript", SyntaxForm -> 
           SuperscriptBox]}, "RowWithSeparators"], TraditionalForm], {0.01, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-11.512925464970229`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-10.819778284410283`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-10.41431317630212, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-10.126631103850338`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-9.903487552536127, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-9.721165995742174, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-9.567015315914915, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-9.433483923290392, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-9.315700887634009, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-8.517193191416238, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-8.111728083308073, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-7.824046010856292, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-7.418580902748128, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-7.264430222920869, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-7.1308988302963465`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-7.013115794639964, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-6.214608098422191, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-5.809142990314028, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-5.521460917862246, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-5.115995809754082, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-4.961845129926823, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-4.8283137373023015`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-4.710530701645918, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-3.912023005428146, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-3.506557897319982, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-3.2188758248682006`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-2.995732273553991, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}}}]]], "Output",
 CellChangeTimes->{{3.6152906896876917`*^9, 3.615290704899158*^9}, {
  3.615290760688965*^9, 3.615290803107484*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLogLogPlot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"#", "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}], 
        "/", 
        RowBox[{"#", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}]}],
        ",", 
       RowBox[{"#", "\[LeftDoubleBracket]", "6", "\[RightDoubleBracket]"}]}], 
      "}"}], "&"}], "/@", "sample4096"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<High / low ratio\>\"", ",", "\"\<Stretching factor\>\""}], 
     "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6152901627181463`*^9, 3.615290177583363*^9}, {
  3.6152902313556557`*^9, 3.615290244933425*^9}, {3.615290323875537*^9, 
  3.615290423308736*^9}, {3.6152905099370317`*^9, 3.6152905108791227`*^9}, {
  3.615290547650494*^9, 3.615290556590959*^9}, {3.615290590203401*^9, 
  3.6152906101881332`*^9}, {3.6152906876642847`*^9, 3.615290817997138*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.005555555555555556], 
     AbsoluteThickness[1.6], PointBox[CompressedData["
1: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
ZSlOsaTBmVOr3sSzJHjpY7vu0FcMIH6Us3bf3/tZTOKVjTG4Ccs+ibGkwhvn
7Gq4h/7CpbUNVnbKbST93jp+cSQFep+Ech5N2EE4yc7UzSoTtuduvH0dRsAM
RiFmd+KqwWKY0fn4c1a8S7TVSFqYg9piw4T8iU10/UCA2eZEGkjQ/ttK/UKJ
TYMCg3X0euCLsIfC/eNEvCksS7B61QzU5ze7cjkWkJH07o+gIzHIQIZU24ST
gIP+Wv6TESiB6c+fn77rpcfjCh+P2l8Yg4EERrkF0TWkXCsYdbEjGuwK2t0e
yTNjMgqmD/wPJoHTXTm5xG/fX5wXti9kNUDbyY9qGvtIWF9OqOHpLULMPzJT
i9sI2DoqpDr0QxncWHMIG9w4iG0vrpSGrK7A0uNzpSOtC+jO5bcCZzefoyeq
XDc0w9eQCs2t+qzxVHRY+o2A+vC+nzhHn9+QqIPKu8G3GeJZcNAdYr0J9Ty0
qKzxPdvqRXHX/yW7vK5CGaUvGTaoaHC+hnj+V4du8LFNmo+9Q4orVdXXhJfr
oVyCxSXg9R56+88l6KVRIYz7vG52PEqJFas03jrOd4I5E9lBskYSPMZurXs8
BENy1BeHX/wrKHBmSfxhjhfUkTm0fDpGidlO7VGU8vSAodmDh3ferSEPUTt7
txPxUHveY5DHgASr0v81pudIB+kVQhohchuJptfHC9rlQK9wT6rqSwKmIpR0
GP6thR2Hae4Dtw7iOIXXua8ql6Gutv/tjdeTKO+okObKh1w02hSUyza4iQwK
LjrZ9qfB47pKfn7DQfTqVZH+f+ZlSPnPU6kCdRp8xu/t8rfydpjJ5LLV5B9F
g4+6k7PLi9EtN5WYc+lEfI+5iT/HtA2MnH4eHe0kx/6n71FkxbeB9oa31xlv
IuYLvxIpp94EXOaXUz9ozyBbKWm33U/FKChiZuHcLg22rhRXZtsagqogrXZ/
Lzr89Y3bIa0To5B/6bm/guEh3GXKH+0StARvEr4tkcvNoXXHeC39gFzEyLpI
oi27iJb/if6mCUlH2ZoEpfh4Ktxtf4I192wfXJnvss3an0fNQ/18sWY1QPE6
7Lnsf+T47GhDhEhJK4jxSxOvfSfgMKof4WEvEBDtlM4Tgg5ipXu6U3Y3VuCE
K50Pix8jvpGle1LbaxwUdRZusyYwYKW7AUY7ZiOw9BRf0NQi4F8JX87lTtRC
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
      "]]}, {}}, {}},
  
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"High / low ratio\"", TraditionalForm], 
    FormBox["\"Stretching factor\"", TraditionalForm]},
  AxesOrigin->{-6.865203489352704, -0.35869624240525305`},
  CoordinatesToolOptions:>{"DisplayFunction" -> ({
      Exp[
       Part[#, 1]], 
      Exp[
       Part[#, 2]]}& ), "CopiedValueFunction" -> ({
      Exp[
       Part[#, 1]], 
      Exp[
       Part[#, 2]]}& )},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{
     Charting`ScaledTicks[{Log, Exp}], 
     Charting`ScaledFrameTicks[{Log, Exp}]}, {
     Charting`ScaledTicks[{Log, Exp}], 
     Charting`ScaledFrameTicks[{Log, Exp}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->{399.765625, Automatic},
  Method->{},
  PlotRange->{{-6.762468919466086, -0.1874564467225946}, \
{-0.32504884959886576`, 1.7610895043971402`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->FrontEndValueCache[{
     Charting`ScaledTicks[{Log, Exp}], 
     Charting`ScaledTicks[{Log, Exp}]}, {{{-5.298317366548036, 
       FormBox[
        TemplateBox[{"\[Times]", "\"\[Times]\"", "5.`", 
          TemplateBox[{"10", 
            RowBox[{"-", "3"}]}, "Superscript", SyntaxForm -> 
           SuperscriptBox]}, "RowWithSeparators"], TraditionalForm], {0.01, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-4.605170185988091, 
       FormBox[
        TemplateBox[{"\[Times]", "\"\[Times]\"", "1.`", 
          TemplateBox[{"10", 
            RowBox[{"-", "2"}]}, "Superscript", SyntaxForm -> 
           SuperscriptBox]}, "RowWithSeparators"], TraditionalForm], {0.01, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-2.995732273553991, 
       FormBox[
        TagBox[
         InterpretationBox["\"0.05\"", 0.05, AutoDelete -> True], 
         NumberForm[#, {
           DirectedInfinity[1], 2.}]& ], TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {-2.3025850929940455`, 
       FormBox[
        TagBox[
         InterpretationBox["\"0.10\"", 0.1, AutoDelete -> True], 
         NumberForm[#, {
           DirectedInfinity[1], 2.}]& ], TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {-0.6931471805599453, 
       FormBox[
        TagBox[
         InterpretationBox["\"0.50\"", 0.5, AutoDelete -> True], 
         NumberForm[#, {
           DirectedInfinity[1], 2.}]& ], TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {-7.600902459542082, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-7.418580902748128, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-7.264430222920869, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-7.1308988302963465`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-7.013115794639964, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-6.907755278982137, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-6.214608098422191, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-5.809142990314028, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-5.521460917862246, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-5.115995809754082, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-4.961845129926823, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-4.8283137373023015`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-4.710530701645918, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-3.912023005428146, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-3.506557897319982, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-3.2188758248682006`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-2.8134107167600364`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-2.659260036932778, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-2.5257286443082556`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-2.4079456086518722`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-1.6094379124341003`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-1.2039728043259361`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-0.916290731874155, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-0.5108256237659907, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-0.35667494393873245`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-0.2231435513142097, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-0.10536051565782628`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {0., 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}}, {{0., 
       FormBox["1", TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {0.6931471805599453, 
       FormBox["2", TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {1.6094379124341003`, 
       FormBox["5", TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {-0.6931471805599453, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-0.5108256237659907, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-0.35667494393873245`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-0.2231435513142097, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-0.10536051565782628`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {1.0986122886681098`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {1.3862943611198906`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {1.791759469228055, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {1.9459101490553132`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {2.0794415416798357`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {2.1972245773362196`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {2.302585092994046, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}}}]]], "Output",
 CellChangeTimes->{{3.6152906896876917`*^9, 3.615290704899158*^9}, {
  3.615290760688965*^9, 3.615290818338928*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"p", "[", 
  RowBox[{
   RowBox[{"defaultUniverse", "[", "]"}], ",", 
   RowBox[{"defaultBurst", "[", "]"}], ",", 
   RowBox[{"defaultObserver", "[", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "\[Infinity]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{".1", ",", "\[Infinity]"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6152908491783743`*^9, 3.615290876092207*^9}}],

Cell[BoxData["179.98900000000015`"], "Output",
 CellChangeTimes->{{3.615290858754692*^9, 3.615290878256122*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1221, 756},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
Visible->True,
ShowSelection->True,
FrontEndVersion->"10.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (June 27, \
2014)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[422, 15, 184, 2, 92, "Title"],
Cell[CellGroupData[{
Cell[631, 21, 126, 2, 64, "Section",
 InitializationGroup->True],
Cell[760, 25, 207, 5, 28, "Input",
 InitializationGroup->True],
Cell[970, 32, 151, 2, 28, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1158, 39, 153, 2, 64, "Section"],
Cell[CellGroupData[{
Cell[1336, 45, 124, 2, 44, "Subsection",
 InitializationGroup->True],
Cell[1463, 49, 201, 5, 30, "Text",
 InitializationGroup->True],
Cell[1667, 56, 2087, 55, 216, "Input",
 InitializationGroup->True]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[3803, 117, 92, 1, 50, "Section"],
Cell[CellGroupData[{
Cell[3920, 122, 126, 2, 44, "Subsection",
 InitializationGroup->True],
Cell[4049, 126, 211, 5, 28, "Input"],
Cell[4263, 133, 756, 21, 46, "Input",
 InitializationGroup->True],
Cell[5022, 156, 220, 6, 28, "Input"],
Cell[5245, 164, 840, 21, 46, "Input",
 InitializationGroup->True],
Cell[6088, 187, 305, 8, 28, "Input"],
Cell[6396, 197, 2617, 49, 80, "Input",
 InitializationGroup->True],
Cell[9016, 248, 316, 8, 28, "Input",
 InitializationGroup->True],
Cell[9335, 258, 221, 6, 28, "Input"],
Cell[9559, 266, 1119, 27, 46, "Input",
 InitializationGroup->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[10715, 298, 126, 2, 44, "Subsection",
 InitializationGroup->True],
Cell[10844, 302, 345, 10, 70, "Input",
 InitializationGroup->True]
}, Closed]],
Cell[CellGroupData[{
Cell[11226, 317, 129, 2, 36, "Subsection",
 InitializationGroup->True],
Cell[11358, 321, 282, 7, 28, "Input",
 InitializationGroup->True],
Cell[11643, 330, 1889, 49, 70, "Input",
 InitializationGroup->True],
Cell[13535, 381, 1106, 20, 32, "Input",
 InitializationGroup->True],
Cell[14644, 403, 526, 15, 54, "Input",
 InitializationGroup->True],
Cell[15173, 420, 961, 30, 63, "Input",
 InitializationGroup->True]
}, Closed]],
Cell[CellGroupData[{
Cell[16171, 455, 129, 2, 36, "Subsection",
 InitializationGroup->True],
Cell[16303, 459, 2149, 56, 148, "Input",
 InitializationGroup->True],
Cell[18455, 517, 2275, 62, 215, "Input",
 InitializationGroup->True],
Cell[20733, 581, 3362, 79, 174, "Input",
 InitializationGroup->True],
Cell[24098, 662, 5478, 115, 199, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[29613, 782, 143, 2, 44, "Subsection",
 InitializationGroup->True],
Cell[29759, 786, 1382, 35, 180, "Input",
 InitializationGroup->True],
Cell[31144, 823, 2061, 54, 157, "Input",
 InitializationGroup->True],
Cell[33208, 879, 3123, 74, 148, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[36368, 958, 124, 2, 36, "Subsection",
 InitializationGroup->True],
Cell[36495, 962, 3400, 78, 194, "Input",
 InitializationGroup->True]
}, Closed]],
Cell[CellGroupData[{
Cell[39932, 1045, 133, 2, 36, "Subsection",
 InitializationGroup->True],
Cell[40068, 1049, 14015, 273, 658, "Input",
 InitializationGroup->True],
Cell[54086, 1324, 3038, 68, 148, "Input",
 InitializationGroup->True],
Cell[57127, 1394, 295, 8, 28, "Input",
 InitializationGroup->True],
Cell[57425, 1404, 396, 10, 28, "Input",
 InitializationGroup->True]
}, Closed]],
Cell[CellGroupData[{
Cell[57858, 1419, 130, 2, 36, "Subsection",
 InitializationGroup->True],
Cell[57991, 1423, 1286, 41, 60, "Input",
 InitializationGroup->True]
}, Closed]],
Cell[CellGroupData[{
Cell[59314, 1469, 176, 3, 36, "Subsection",
 InitializationGroup->True],
Cell[59493, 1474, 5118, 96, 165, "Input",
 InitializationGroup->True],
Cell[64614, 1572, 3007, 71, 265, "Input",
 InitializationGroup->True],
Cell[67624, 1645, 1017, 21, 46, "Input",
 InitializationGroup->True],
Cell[68644, 1668, 1166, 26, 46, "Input",
 InitializationGroup->True],
Cell[69813, 1696, 1405, 37, 97, "Input",
 InitializationGroup->True],
Cell[71221, 1735, 490, 14, 41, "Input",
 InitializationGroup->True],
Cell[71714, 1751, 1516, 39, 114, "Input",
 InitializationGroup->True],
Cell[73233, 1792, 4147, 102, 301, "Input",
 InitializationGroup->True],
Cell[77383, 1896, 3950, 93, 165, "Input",
 InitializationGroup->True],
Cell[81336, 1991, 19560, 372, 1100, "Input",
 InitializationGroup->True]
}, Closed]],
Cell[CellGroupData[{
Cell[100933, 2368, 150, 2, 36, "Subsection",
 InitializationGroup->True],
Cell[101086, 2372, 3202, 81, 196, "Input",
 InitializationGroup->True]
}, Closed]],
Cell[CellGroupData[{
Cell[104325, 2458, 129, 2, 36, "Subsection",
 InitializationGroup->True],
Cell[CellGroupData[{
Cell[104479, 2464, 130, 2, 35, "Subsubsection",
 InitializationGroup->True],
Cell[CellGroupData[{
Cell[104634, 2470, 415, 10, 28, "Input",
 InitializationGroup->True],
Cell[105052, 2482, 1916, 28, 70, "Output",
 InitializationGroup->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[107005, 2515, 531, 11, 48, "Input",
 InitializationGroup->True],
Cell[107539, 2528, 2008, 29, 70, "Output",
 InitializationGroup->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[109584, 2562, 428, 7, 28, "Input",
 InitializationGroup->True],
Cell[110015, 2571, 1955, 28, 70, "Output",
 InitializationGroup->True]
}, Open  ]],
Cell[111985, 2602, 290, 6, 28, "Input",
 InitializationGroup->True],
Cell[112278, 2610, 227, 5, 28, "Input",
 InitializationGroup->True]
}, Closed]],
Cell[CellGroupData[{
Cell[112542, 2620, 181, 3, 29, "Subsubsection",
 InitializationGroup->True],
Cell[CellGroupData[{
Cell[112748, 2627, 367, 9, 28, "Input",
 InitializationGroup->True],
Cell[113118, 2638, 1707, 26, 70, "Output",
 InitializationGroup->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[114862, 2669, 333, 8, 48, "Input",
 InitializationGroup->True],
Cell[115198, 2679, 1696, 25, 70, "Output",
 InitializationGroup->True]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[116943, 2710, 185, 3, 29, "Subsubsection",
 InitializationGroup->True],
Cell[117131, 2715, 1152, 29, 142, "Input",
 InitializationGroup->True],
Cell[118286, 2746, 1223, 31, 143, "Input",
 InitializationGroup->True],
Cell[119512, 2779, 827, 20, 46, "Input",
 InitializationGroup->True],
Cell[120342, 2801, 11479, 242, 641, "Input",
 InitializationGroup->True],
Cell[131824, 3045, 9134, 185, 441, "Input",
 InitializationGroup->True]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[141007, 3236, 131, 2, 36, "Subsection",
 InitializationGroup->True],
Cell[CellGroupData[{
Cell[141163, 3242, 103, 1, 35, "Subsubsection"],
Cell[141269, 3245, 23788, 502, 1059, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[165094, 3752, 127, 2, 29, "Subsubsection"],
Cell[165224, 3756, 2175, 62, 63, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[167436, 3823, 160, 2, 29, "Subsubsection"],
Cell[167599, 3827, 8860, 189, 279, "Input",
 InitializationGroup->True],
Cell[176462, 4018, 2794, 69, 205, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[179293, 4092, 120, 1, 29, "Subsubsection"],
Cell[179416, 4095, 6263, 134, 287, "Input"],
Cell[185682, 4231, 5178, 122, 301, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[190897, 4358, 110, 1, 29, "Subsubsection"],
Cell[191010, 4361, 262, 5, 28, "Input"],
Cell[191275, 4368, 3871, 78, 131, "Input"],
Cell[195149, 4448, 9351, 196, 412, "Input"],
Cell[204503, 4646, 4303, 86, 166, "Input"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[208855, 4738, 99, 1, 36, "Subsection"],
Cell[CellGroupData[{
Cell[208979, 4743, 102, 1, 35, "Subsubsection"],
Cell[CellGroupData[{
Cell[209106, 4748, 7711, 147, 216, "Input"],
Cell[CellGroupData[{
Cell[216842, 4899, 694, 15, 26, "Print"],
Cell[217539, 4916, 843, 19, 26, "Print"],
Cell[218385, 4937, 668, 15, 26, "Print"]
}, Open  ]],
Cell[219068, 4955, 99, 1, 28, "Output"]
}, Open  ]],
Cell[219182, 4959, 90, 1, 30, "Text"],
Cell[219275, 4962, 232, 4, 32, "Text"],
Cell[219510, 4968, 567, 13, 46, "Input"],
Cell[220080, 4983, 235, 5, 32, "Text"],
Cell[220318, 4990, 350, 9, 46, "Input"],
Cell[220671, 5001, 413, 11, 32, "Text"],
Cell[221087, 5014, 443, 10, 28, "Input"],
Cell[221533, 5026, 269, 7, 32, "Text"],
Cell[221805, 5035, 619, 14, 63, "Input"],
Cell[222427, 5051, 200, 6, 32, "Text"],
Cell[222630, 5059, 695, 19, 56, "Input"],
Cell[223328, 5080, 199, 6, 32, "Text"],
Cell[223530, 5088, 658, 16, 63, "Input"],
Cell[224191, 5106, 176, 2, 30, "Text"],
Cell[224370, 5110, 744, 20, 56, "Input"],
Cell[225117, 5132, 335, 9, 32, "Text"],
Cell[225455, 5143, 693, 19, 56, "Input"],
Cell[226151, 5164, 294, 9, 35, "Text"],
Cell[226448, 5175, 695, 19, 56, "Input"],
Cell[227146, 5196, 251, 7, 32, "Text"],
Cell[227400, 5205, 697, 19, 56, "Input"],
Cell[228100, 5226, 249, 8, 32, "Text"],
Cell[228352, 5236, 1162, 33, 73, "Input"],
Cell[229517, 5271, 112, 1, 30, "Text"],
Cell[229632, 5274, 1161, 33, 73, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[230830, 5312, 102, 1, 29, "Subsubsection"],
Cell[230935, 5315, 5646, 124, 233, "Input"],
Cell[236584, 5441, 2728, 64, 131, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[239349, 5510, 105, 1, 29, "Subsubsection"],
Cell[CellGroupData[{
Cell[239479, 5515, 600, 15, 46, "Input"],
Cell[240082, 5532, 182, 2, 28, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[240313, 5540, 109, 1, 35, "Subsubsection"],
Cell[CellGroupData[{
Cell[240447, 5545, 1160, 24, 165, "Input"],
Cell[241610, 5571, 445, 10, 24, "Message"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[242104, 5587, 161, 2, 35, "Subsubsection"],
Cell[242268, 5591, 1452, 33, 114, "Input"],
Cell[CellGroupData[{
Cell[243745, 5628, 785, 14, 28, "Input"],
Cell[244533, 5644, 14124, 234, 244, 4483, 77, "CachedBoxData", "BoxData", \
"Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[258694, 5883, 696, 13, 28, "Input"],
Cell[259393, 5898, 211377, 3481, 257, 201613, 3320, "CachedBoxData", \
"BoxData", "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[470819, 9385, 108, 1, 35, "Subsubsection"],
Cell[470930, 9388, 2601, 69, 184, "Input"],
Cell[CellGroupData[{
Cell[473556, 9461, 2279, 48, 63, "Input"],
Cell[475838, 9511, 124377, 2338, 249, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[600252, 11854, 469, 10, 28, "Input"],
Cell[600724, 11866, 95472, 1662, 244, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[696233, 13533, 620, 13, 28, "Input"],
Cell[696856, 13548, 117215, 2120, 243, 107899, 1966, "CachedBoxData", \
"BoxData", "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[814120, 15674, 108, 1, 35, "Subsubsection"],
Cell[CellGroupData[{
Cell[814253, 15679, 1075, 23, 46, "Input"],
Cell[815331, 15704, 45979, 823, 251, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[861347, 16532, 1291, 24, 46, "Input"],
Cell[862641, 16558, 38954, 706, 251, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[901644, 17270, 125, 1, 35, "Subsubsection"],
Cell[CellGroupData[{
Cell[901794, 17275, 535, 13, 46, "Input"],
Cell[902332, 17290, 89, 1, 28, "Output"]
}, Open  ]]
}, Closed]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[902494, 17299, 92, 1, 64, "Section"],
Cell[CellGroupData[{
Cell[902611, 17304, 169, 2, 44, "Subsection"],
Cell[CellGroupData[{
Cell[902805, 17310, 103, 1, 35, "Subsubsection"],
Cell[902911, 17313, 300, 6, 46, "Input"],
Cell[903214, 17321, 1472, 26, 63, "Input"],
Cell[CellGroupData[{
Cell[904711, 17351, 454, 11, 28, "Input"],
Cell[905168, 17364, 88, 1, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[905293, 17370, 327, 8, 28, "Input"],
Cell[905623, 17380, 87, 1, 28, "Output"]
}, Open  ]],
Cell[905725, 17384, 1966, 45, 114, "Input"],
Cell[907694, 17431, 8064, 220, 403, "Input"],
Cell[915761, 17653, 2875, 64, 182, "Input"],
Cell[918639, 17719, 8405, 203, 407, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[927081, 17927, 158, 2, 35, "Subsubsection"],
Cell[927242, 17931, 908, 15, 46, "Input"],
Cell[928153, 17948, 1506, 29, 97, "Input"],
Cell[929662, 17979, 13076, 240, 726, "Input"],
Cell[942741, 18221, 2445, 54, 131, "Input"],
Cell[CellGroupData[{
Cell[945211, 18279, 359, 11, 28, "Input"],
Cell[945573, 18292, 425, 8, 24, "Message"],
Cell[946001, 18302, 427, 8, 24, "Message"],
Cell[946431, 18312, 425, 8, 24, "Message"],
Cell[946859, 18322, 517, 10, 24, "Message"]
}, Open  ]],
Cell[CellGroupData[{
Cell[947413, 18337, 32618, 820, 1151, "Input"],
Cell[980034, 19159, 425, 8, 24, "Message"],
Cell[980462, 19169, 425, 8, 24, "Message"],
Cell[980890, 19179, 425, 8, 24, "Message"],
Cell[981318, 19189, 517, 10, 24, "Message"],
Cell[981838, 19201, 427, 8, 24, "Message"],
Cell[982268, 19211, 425, 8, 24, "Message"],
Cell[982696, 19221, 425, 8, 24, "Message"],
Cell[983124, 19231, 516, 10, 24, "Message"],
Cell[983643, 19243, 425, 8, 24, "Message"],
Cell[984071, 19253, 425, 8, 24, "Message"],
Cell[984499, 19263, 425, 8, 24, "Message"],
Cell[984927, 19273, 517, 10, 24, "Message"],
Cell[985447, 19285, 480, 9, 24, "Message"],
Cell[985930, 19296, 454, 9, 24, "Message"],
Cell[986387, 19307, 565, 10, 24, "Message"],
Cell[986955, 19319, 452, 9, 24, "Message"],
Cell[987410, 19330, 565, 10, 24, "Message"],
Cell[987978, 19342, 565, 10, 24, "Message"],
Cell[988546, 19354, 515, 10, 24, "Message"],
Cell[989064, 19366, 480, 9, 24, "Message"],
Cell[989547, 19377, 454, 9, 24, "Message"],
Cell[990004, 19388, 515, 10, 24, "Message"],
Cell[990522, 19400, 482, 9, 24, "Message"],
Cell[991007, 19411, 516, 10, 24, "Message"],
Cell[991526, 19423, 480, 9, 24, "Message"],
Cell[992009, 19434, 489, 9, 24, "Message"],
Cell[992501, 19445, 495, 9, 24, "Message"],
Cell[992999, 19456, 497, 9, 24, "Message"],
Cell[993499, 19467, 495, 9, 24, "Message"],
Cell[993997, 19478, 515, 10, 24, "Message"],
Cell[994515, 19490, 480, 9, 24, "Message"],
Cell[994998, 19501, 491, 9, 24, "Message"],
Cell[995492, 19512, 482, 9, 24, "Message"],
Cell[995977, 19523, 516, 10, 24, "Message"],
Cell[996496, 19535, 489, 9, 24, "Message"],
Cell[996988, 19546, 512, 9, 24, "Message"],
Cell[997503, 19557, 479, 9, 24, "Message"],
Cell[997985, 19568, 489, 9, 24, "Message"],
Cell[998477, 19579, 495, 9, 24, "Message"],
Cell[998975, 19590, 480, 9, 24, "Message"],
Cell[999458, 19601, 489, 9, 24, "Message"],
Cell[999950, 19612, 495, 9, 24, "Message"],
Cell[1000448, 19623, 480, 9, 24, "Message"],
Cell[1000931, 19634, 516, 10, 24, "Message"],
Cell[1001450, 19646, 488, 9, 24, "Message"],
Cell[1001941, 19657, 512, 9, 24, "Message"],
Cell[1002456, 19668, 495, 9, 24, "Message"],
Cell[1002954, 19679, 515, 10, 24, "Message"],
Cell[1003472, 19691, 77, 1, 28, "Output"],
Cell[1003552, 19694, 79, 1, 28, "Output"],
Cell[1003634, 19697, 480, 9, 24, "Message"],
Cell[1004117, 19708, 77, 1, 28, "Output"],
Cell[1004197, 19711, 77, 1, 28, "Output"],
Cell[1004277, 19714, 479, 9, 24, "Message"],
Cell[1004759, 19725, 489, 9, 24, "Message"],
Cell[1005251, 19736, 495, 9, 24, "Message"],
Cell[1005749, 19747, 495, 9, 24, "Message"],
Cell[1006247, 19758, 79, 1, 28, "Output"],
Cell[1006329, 19761, 448, 9, 24, "Message"],
Cell[1006780, 19772, 77, 1, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1006894, 19778, 571, 13, 28, "Input"],
Cell[1007468, 19793, 258, 6, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1007763, 19804, 516, 11, 28, "Input"],
Cell[1008282, 19817, 243, 6, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1008562, 19828, 246, 6, 28, "Input"],
Cell[1008811, 19836, 269, 6, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1009117, 19847, 252, 6, 28, "Input"],
Cell[1009372, 19855, 223, 5, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1009632, 19865, 109, 1, 28, "Input"],
Cell[1009744, 19868, 190, 4, 28, "Output"]
}, Open  ]],
Cell[1009949, 19875, 3191, 73, 199, "Input"],
Cell[1013143, 19950, 10661, 270, 468, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[1023841, 20225, 109, 1, 29, "Subsubsection"],
Cell[1023953, 20228, 333, 7, 46, "Input"],
Cell[1024289, 20237, 6788, 173, 454, "Input"],
Cell[1031080, 20412, 1183, 22, 97, "Input"],
Cell[1032266, 20436, 2516, 53, 131, "Input"],
Cell[1034785, 20491, 2963, 66, 216, "Input"],
Cell[1037751, 20559, 6408, 158, 456, "Input"]
}, Closed]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1044220, 20724, 95, 1, 64, "Section"],
Cell[CellGroupData[{
Cell[1044340, 20729, 464, 11, 46, "Input"],
Cell[1044807, 20742, 2838, 41, 301, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1047682, 20788, 755, 16, 28, "Input"],
Cell[1048440, 20806, 99658, 1764, 247, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1148135, 22575, 742, 16, 28, "Input"],
Cell[1148880, 22593, 96119, 1698, 259, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1245036, 24296, 1022, 23, 28, "Input"],
Cell[1246061, 24321, 106094, 1937, 230, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1352192, 26263, 1025, 23, 28, "Input"],
Cell[1353220, 26288, 101543, 1811, 233, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1454800, 28104, 405, 10, 28, "Input"],
Cell[1455208, 28116, 112, 1, 28, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

