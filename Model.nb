(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[         0,          0]
NotebookDataLength[   1433951,      27545]
NotebookOptionsPosition[   1417467,      27043]
NotebookOutlinePosition[   1417876,      27062]
CellTagsIndexPosition[   1417833,      27059]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Spectral Lags in Very High Energy Emission of GRBs", "Title",
 CellChangeTimes->{{3.589934697031559*^9, 3.5899347180121403`*^9}, {
  3.592131457104278*^9, 3.592131457862741*^9}}],

Cell[CellGroupData[{

Cell["Configuration", "Section",
 InitializationGroup->True,
 CellChangeTimes->{{3.609662325460408*^9, 3.609662331887999*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"SetDirectory", "[", "\"\<~/Projects/GammaRays/\>\"", "]"}], 
  ";"}]], "Input",
 InitializationGroup->True,
 CellChangeTimes->{{3.609662333760296*^9, 3.60966235475375*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Numerical functions", "Section",
 CellChangeTimes->{{3.606445343533203*^9, 3.606445367918765*^9}, {
  3.606457995606667*^9, 3.606457996103257*^9}}],

Cell[CellGroupData[{

Cell["findRoot", "Subsection",
 InitializationGroup->True,
 CellChangeTimes->{{3.606458023159586*^9, 3.606458025877161*^9}}],

Cell["\<\
Only works for monotonously increasing functions, which have a root for var > \
0\
\>", "Text",
 InitializationGroup->True,
 CellChangeTimes->{{3.6064453716360407`*^9, 3.606445404298212*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"findRoot", "[", 
   RowBox[{"func_", ",", 
    RowBox[{"{", 
     RowBox[{"var_", ",", 
      RowBox[{"start_", "?", "NumericQ"}]}], "}"}]}], "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"left", ",", "right"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"func", "/.", 
          RowBox[{"var", "\[Rule]", "start"}]}], ")"}], "<", "0"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"left", "=", "start"}], ";", "\[IndentingNewLine]", 
        RowBox[{"right", "=", 
         RowBox[{"2.", "start"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"While", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"func", "/.", 
             RowBox[{"var", "\[Rule]", "right"}]}], ")"}], "<", "0"}], ",", 
          RowBox[{
           RowBox[{"right", "*=", "2"}], ";", 
           RowBox[{"left", "*=", "2"}]}]}], "]"}], ";"}], 
       "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"right", "=", "start"}], ";", "\[IndentingNewLine]", 
        RowBox[{"left", "=", 
         RowBox[{".5", "start"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"While", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"func", "/.", 
             RowBox[{"var", "\[Rule]", "left"}]}], ")"}], ">", "0"}], ",", 
          RowBox[{
           RowBox[{"left", "*=", ".5"}], ";", 
           RowBox[{"right", "*=", ".5"}]}]}], "]"}], ";"}]}], 
      "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"FindRoot", "[", 
      RowBox[{"func", ",", 
       RowBox[{"{", 
        RowBox[{"var", ",", "left", ",", "right"}], "}"}]}], "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 InitializationGroup->True,
 CellChangeTimes->{{3.6064448763059072`*^9, 3.606445133934628*^9}, {
  3.606445178184031*^9, 3.606445190695405*^9}, {3.606445229942441*^9, 
  3.606445307175786*^9}}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Model", "Section",
 CellChangeTimes->{{3.5899347262060547`*^9, 3.589934726570508*^9}}],

Cell[CellGroupData[{

Cell["Parameters", "Subsection",
 InitializationGroup->True,
 CellChangeTimes->{{3.592131230779949*^9, 3.592131235512723*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"universe", "=", 
   RowBox[{"{", 
    RowBox[{"Hobs_", ",", "\[CapitalOmega]m_"}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.6075142187755423`*^9, 3.607514225727565*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "defaultUniverse", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Hobs", "\[Rule]", "2.*^-18"}], ",", 
     RowBox[{"\[CapitalOmega]m", "\[Rule]", "0.317"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"defaultUniverse", "[", 
    RowBox[{"OptionsPattern", "[", "]"}], "]"}], ":=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"OptionValue", "[", "Hobs", "]"}], ",", 
     RowBox[{"OptionValue", "[", "\[CapitalOmega]m", "]"}]}], "}"}]}], 
  ";"}]}], "Input",
 InitializationGroup->True,
 CellChangeTimes->{{3.592183431358851*^9, 3.592183460249783*^9}, {
  3.607501060289913*^9, 3.607501063087578*^9}, {3.607501312303144*^9, 
  3.607501314223002*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"population", "=", 
   RowBox[{"{", 
    RowBox[{"density0_", ",", "index_", ",", "zc_"}], "}"}]}], ";"}]], "Input",\

 CellChangeTimes->{{3.607514236934307*^9, 3.6075142465544567`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "defaultPopulation", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"density0", "\[Rule]", "0.655427*^-50"}], ",", 
     RowBox[{"index", "\[Rule]", "3"}], ",", 
     RowBox[{"zc", "\[Rule]", "3."}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"defaultPopulation", "[", 
    RowBox[{"OptionsPattern", "[", "]"}], "]"}], ":=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"OptionValue", "[", "density0", "]"}], ",", 
     RowBox[{"OptionValue", "[", "index", "]"}], ",", 
     RowBox[{"OptionValue", "[", "zc", "]"}]}], "}"}]}], ";"}]}], "Input",
 InitializationGroup->True,
 CellChangeTimes->{{3.592196285224616*^9, 3.592196414912092*^9}, {
  3.607501148274686*^9, 3.607501151743243*^9}, {3.6075013157513323`*^9, 
  3.607501317798958*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"burst", "=", 
   RowBox[{"{", 
    RowBox[{
    "\[Gamma]_", ",", "\[Eta]0_", ",", "r0_", ",", "n_", ",", "\[Omega]0_", 
     ",", "\[Theta]0_", ",", "k_", ",", "\[Alpha]_"}], "}"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.607514248391285*^9, 3.607514265172646*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "defaultBurst", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Gamma]", "\[Rule]", "300"}], ",", 
     RowBox[{"\[Eta]0", "\[Rule]", "8.14796255480381`*^34"}], ",", 
     RowBox[{"r0", "\[Rule]", "3.357930930824906`*^6"}], ",", 
     RowBox[{"n", "\[Rule]", "22.5269`"}], ",", 
     RowBox[{"\[Omega]0", "\[Rule]", "1."}], ",", 
     RowBox[{"\[Theta]0", "\[Rule]", "0.0000502035`"}], ",", 
     RowBox[{"k", "\[Rule]", 
      RowBox[{"-", "0.699813`"}]}], ",", 
     RowBox[{"\[Alpha]", "\[Rule]", 
      RowBox[{"-", "0.626944`"}]}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"defaultBurst", "[", 
    RowBox[{"OptionsPattern", "[", "]"}], "]"}], ":=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"OptionValue", "[", "\[Gamma]", "]"}], ",", 
     RowBox[{"OptionValue", "[", "\[Eta]0", "]"}], ",", 
     RowBox[{"OptionValue", "[", "r0", "]"}], ",", 
     RowBox[{"OptionValue", "[", "n", "]"}], ",", 
     RowBox[{"OptionValue", "[", "\[Omega]0", "]"}], ",", 
     RowBox[{"OptionValue", "[", "\[Theta]0", "]"}], ",", 
     RowBox[{"OptionValue", "[", "k", "]"}], ",", 
     RowBox[{"OptionValue", "[", "\[Alpha]", "]"}]}], "}"}]}], 
  ";"}]}], "Input",
 InitializationGroup->True,
 CellChangeTimes->{{3.592183471082691*^9, 3.592183527567327*^9}, {
   3.592185444675672*^9, 3.592185456046914*^9}, 3.592185591584156*^9, {
   3.5921856928131227`*^9, 3.592185694458848*^9}, {3.592577850303637*^9, 
   3.592577874748348*^9}, {3.604711185723784*^9, 3.604711190969351*^9}, {
   3.604711384994788*^9, 3.604711418079825*^9}, {3.6047116192661457`*^9, 
   3.6047116639859743`*^9}, {3.604711695775197*^9, 3.6047117510336103`*^9}, {
   3.6047138632422543`*^9, 3.60471395452982*^9}, {3.606457745661145*^9, 
   3.606457767529891*^9}, {3.606457839921405*^9, 3.606457845301832*^9}, {
   3.6064587315163107`*^9, 3.606458735947057*^9}, {3.6064588604332933`*^9, 
   3.6064588605668383`*^9}, {3.6064591390869102`*^9, 3.606459141413015*^9}, {
   3.606459329963553*^9, 3.6064593302284203`*^9}, {3.606459765539213*^9, 
   3.606459845826887*^9}, {3.606459974138461*^9, 3.606460013762233*^9}, {
   3.606460102508107*^9, 3.6064601034888*^9}, {3.606460307688303*^9, 
   3.60646032127286*^9}, {3.606460454248855*^9, 3.606460454392315*^9}, {
   3.6074712469223833`*^9, 3.607471266425153*^9}, {3.607501162169427*^9, 
   3.607501165359828*^9}, {3.607501319976783*^9, 3.607501321608468*^9}, {
   3.609629201001553*^9, 3.6096292232489634`*^9}, {3.609987004071226*^9, 
   3.609987004773662*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"defaultDetectorArea", "[", "]"}], ":=", "5.563*^-18"}], 
  ";"}]], "Input",
 InitializationGroup->True,
 CellChangeTimes->{{3.592183544436002*^9, 3.592183552917884*^9}, {
  3.607501169158555*^9, 3.6075011694143047`*^9}, {3.607501323422181*^9, 
  3.607501324462035*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"observer", "=", 
   RowBox[{"{", 
    RowBox[{"detectorArea_", ",", "z_", ",", "\[Chi]_"}], "}"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.607514271954241*^9, 3.607514280908846*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "defaultObserver", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"detectorArea", "\[Rule]", 
      RowBox[{"defaultDetectorArea", "[", "]"}]}], ",", 
     RowBox[{"z", "\[Rule]", "2.1062"}], ",", 
     RowBox[{"\[Chi]", "\[Rule]", "0.00541037"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"defaultObserver", "[", 
    RowBox[{"OptionsPattern", "[", "]"}], "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"OptionValue", "[", "detectorArea", "]"}], ",", 
     RowBox[{"OptionValue", "[", "z", "]"}], ",", 
     RowBox[{"OptionValue", "[", "\[Chi]", "]"}]}], "}"}]}], ";"}]}], "Input",\

 InitializationGroup->True,
 CellChangeTimes->{{3.5921835325126457`*^9, 3.592183542805168*^9}, {
   3.5921836390243387`*^9, 3.592183678941724*^9}, {3.606457785113456*^9, 
   3.6064577891692677`*^9}, 3.606458743105884*^9, 3.6074712757679043`*^9, {
   3.6075011812318573`*^9, 3.6075011909677143`*^9}, {3.6075013266393433`*^9, 
   3.607501330382638*^9}, 3.609629257215876*^9}]
}, Closed]],

Cell[CellGroupData[{

Cell["Relativity", "Subsection",
 InitializationGroup->True,
 CellChangeTimes->{{3.589934837712495*^9, 3.589934839766659*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"v", "[", "\[Gamma]_", "]"}], ":=", 
   SqrtBox[
    RowBox[{"1", "-", 
     FractionBox["1", 
      SuperscriptBox["\[Gamma]", "2"]]}]]}], ";"}]], "Input",
 InitializationGroup->True,
 CellChangeTimes->{{3.589934850463387*^9, 3.589934856887154*^9}, {
  3.589935711872209*^9, 3.589935711942636*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Cosmology", "Subsection",
 InitializationGroup->True,
 CellChangeTimes->{{3.5899347427477713`*^9, 3.5899347438265457`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"\[CapitalOmega]\[CapitalLambda]", "[", "\[CapitalOmega]m_", "]"}],
    ":=", 
   RowBox[{"1", "-", "\[CapitalOmega]m"}]}], ";"}]], "Input",
 InitializationGroup->True,
 CellChangeTimes->{{3.5899349782326403`*^9, 3.589935000464473*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"distance", "[", 
    RowBox[{"universe", ",", "z_"}], "]"}], ":=", 
   RowBox[{
    FractionBox["1", "Hobs"], 
    SqrtBox[
     FractionBox["1", 
      RowBox[{
      "\[CapitalOmega]\[CapitalLambda]", "[", "\[CapitalOmega]m", "]"}]]], 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "+", "z"}], ")"}], 
       RowBox[{"Hypergeometric2F1", "[", 
        RowBox[{
         FractionBox["1", "3"], ",", 
         FractionBox["1", "2"], ",", 
         FractionBox["4", "3"], ",", 
         RowBox[{
          RowBox[{"-", 
           FractionBox["\[CapitalOmega]m", 
            RowBox[{
            "\[CapitalOmega]\[CapitalLambda]", "[", "\[CapitalOmega]m", 
             "]"}]]}], 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "+", "z"}], ")"}], "3"]}]}], "]"}]}], "-", 
      RowBox[{"Hypergeometric2F1", "[", 
       RowBox[{
        FractionBox["1", "3"], ",", 
        FractionBox["1", "2"], ",", 
        FractionBox["4", "3"], ",", 
        RowBox[{"-", 
         FractionBox["\[CapitalOmega]m", 
          RowBox[{
          "\[CapitalOmega]\[CapitalLambda]", "[", "\[CapitalOmega]m", 
           "]"}]]}]}], "]"}]}], ")"}]}]}], ";"}]], "Input",
 InitializationGroup->True,
 CellChangeTimes->{{3.589934874380446*^9, 3.589934886285137*^9}, {
   3.5899349693113194`*^9, 3.589934972465304*^9}, {3.589935054177115*^9, 
   3.589935073915997*^9}, 3.589935110006753*^9, {3.589935151236059*^9, 
   3.5899351579007053`*^9}, {3.5921315009060917`*^9, 
   3.5921315207960997`*^9}, {3.592131935717617*^9, 3.592131979444818*^9}, {
   3.592132180555418*^9, 3.5921322199675827`*^9}, {3.5921322609963913`*^9, 
   3.592132261150456*^9}, {3.59218328690254*^9, 3.592183308931731*^9}, {
   3.607501210921533*^9, 3.607501212458063*^9}, {3.60750133808078*^9, 
   3.60750133840483*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"photonSphereArea", "[", 
    RowBox[{"universe_", ",", "z_"}], "]"}], ":=", 
   RowBox[{"4", "\[Pi]", " ", 
    SuperscriptBox[
     RowBox[{"distance", "[", 
      RowBox[{"universe", ",", "z"}], "]"}], "2"]}]}], ";"}]], "Input",
 InitializationGroup->True,
 CellChangeTimes->{{3.589935078530493*^9, 3.589935107355896*^9}, {
   3.589935149961955*^9, 3.589935159393393*^9}, {3.5901499169203653`*^9, 
   3.590149919694723*^9}, {3.592132276651806*^9, 3.59213231399308*^9}, 
   3.5921324338850183`*^9, {3.592132479674905*^9, 3.592132528442235*^9}, {
   3.59213259355765*^9, 3.592132602476036*^9}, 3.592132636578137*^9, {
   3.592132678985426*^9, 3.592132700320488*^9}, {3.5921328703605547`*^9, 
   3.592132878583001*^9}, {3.592134577303495*^9, 3.592134611119673*^9}, {
   3.59213464199679*^9, 3.5921346874769783`*^9}, {3.592134784446424*^9, 
   3.59213481159022*^9}, {3.592135038603594*^9, 3.592135057500444*^9}, {
   3.5921350909931173`*^9, 3.592135194454236*^9}, {3.59218331212173*^9, 
   3.592183333104171*^9}, {3.5921856212934513`*^9, 3.592185621370853*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"burstsSphereArea", "[", 
    RowBox[{"universe_", ",", "z_"}], "]"}], ":=", 
   FractionBox[
    RowBox[{"4", "\[Pi]", " ", 
     SuperscriptBox[
      RowBox[{"distance", "[", 
       RowBox[{"universe", ",", "z"}], "]"}], "2"]}], 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", "z"}], ")"}], "2"]]}], ";"}]], "Input",
 InitializationGroup->True,
 CellChangeTimes->{{3.589935120126265*^9, 3.58993516044965*^9}, {
  3.5901499204550657`*^9, 3.590149922334618*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"shellVolumePerRedshift", "[", 
    RowBox[{"universe", ",", "z_"}], "]"}], ":=", 
   RowBox[{
    FractionBox[
     RowBox[{"4", "\[Pi]", " ", 
      SuperscriptBox[
       RowBox[{"distance", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"Hobs", ",", "\[CapitalOmega]m"}], "}"}], ",", "z"}], "]"}],
        "2"]}], 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", "+", "z"}], ")"}], "3"]], 
    FractionBox["1", 
     RowBox[{"Hobs", 
      SqrtBox[
       RowBox[{
        RowBox[{"\[CapitalOmega]m", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"1", "+", "z"}], ")"}], "3"]}], "+", 
        RowBox[{
        "\[CapitalOmega]\[CapitalLambda]", "[", "\[CapitalOmega]m", 
         "]"}]}]]}]]}]}], ";"}]], "Input",
 InitializationGroup->True,
 CellChangeTimes->{{3.589935175967778*^9, 3.589935290257773*^9}, {
  3.5918412554035797`*^9, 3.591841257099522*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Light curve", "Subsection",
 InitializationGroup->True,
 CellChangeTimes->{{3.589935318987741*^9, 3.5899353237047043`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"i", "[", 
    RowBox[{
    "burst", ",", "z_", ",", "\[Chi]_", ",", "\[Omega]_", ",", "\[Theta]_", 
     ",", "\[Phi]_"}], "]"}], ":=", "\[IndentingNewLine]", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"\[Omega]", "\[Equal]", "\[Infinity]"}], ",", 
     "\[IndentingNewLine]", "0", ",", "\[IndentingNewLine]", 
     RowBox[{
      FractionBox["1", 
       RowBox[{"2", "k"}]], "\[Omega]", 
      SuperscriptBox[
       RowBox[{"(", 
        FractionBox["\[Omega]", "\[Omega]0"], ")"}], "\[Alpha]"], 
      RowBox[{"ExpIntegralE", "[", 
       RowBox[{
        RowBox[{
         FractionBox[
          RowBox[{"\[Alpha]", "+", "1"}], 
          RowBox[{"2", "k"}]], "+", "1"}], ",", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           FractionBox["\[Theta]", "\[Theta]0"], ")"}], "2"], 
         SuperscriptBox[
          RowBox[{"(", 
           FractionBox["\[Omega]", "\[Omega]0"], ")"}], 
          RowBox[{
           RowBox[{"-", "2"}], "k"}]], 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"v", "[", "\[Gamma]", "]"}], "\[Gamma]", 
            RowBox[{"(", 
             RowBox[{"1", "+", "z"}], ")"}], 
            RowBox[{"(", 
             RowBox[{
              FractionBox["1", 
               RowBox[{"v", "[", "\[Gamma]", "]"}]], "-", "1", "+", 
              FractionBox[
               SuperscriptBox["\[Theta]", "2"], "2"], "+", 
              FractionBox[
               SuperscriptBox["\[Chi]", "2"], "2"], "-", 
              RowBox[{"\[Theta]", " ", "\[Chi]", " ", 
               RowBox[{"Cos", "[", "\[Phi]", "]"}]}]}], ")"}]}], ")"}], 
          RowBox[{
           RowBox[{"-", "2"}], "k"}]]}]}], "]"}]}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}]], "Input",
 InitializationGroup->True,
 CellChangeTimes->{{3.589935483422423*^9, 3.5899356080330048`*^9}, {
  3.5899356967025957`*^9, 3.589935781512787*^9}, {3.589935933237218*^9, 
  3.589935964665523*^9}, {3.5899360834375477`*^9, 3.58993610489809*^9}, {
  3.5922732610821*^9, 3.592273261937419*^9}, {3.5922737181109123`*^9, 
  3.59227371911088*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"j", "[", 
    RowBox[{
    "burst", ",", "z_", ",", "\[Chi]_", ",", "\[Tau]_", ",", "\[Theta]_", ",",
      "\[Phi]_"}], "]"}], ":=", "\[IndentingNewLine]", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"\[Tau]", "\[Equal]", "\[Infinity]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"r0", 
         RowBox[{"(", 
          RowBox[{
           FractionBox["1", 
            RowBox[{"v", "[", "\[Gamma]", "]"}]], "-", "1", "+", 
           FractionBox[
            SuperscriptBox["\[Theta]", "2"], "2"], "+", 
           FractionBox[
            SuperscriptBox["\[Chi]", "2"], "2"], "-", 
           RowBox[{"\[Theta]", " ", "\[Chi]", " ", 
            RowBox[{"Cos", "[", "\[Phi]", "]"}]}]}], ")"}], 
         RowBox[{"(", 
          RowBox[{"1", "+", "z"}], ")"}]}], ")"}], "3"], 
      FractionBox["\[Pi]", 
       RowBox[{"n", " ", 
        RowBox[{"Sin", "[", 
         FractionBox[
          RowBox[{"3", "\[Pi]"}], "n"], "]"}]}]]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      FractionBox[
       SuperscriptBox["\[Tau]", "3"], "3"], 
      RowBox[{"Hypergeometric2F1", "[", 
       RowBox[{"1", ",", 
        FractionBox["3", "n"], ",", 
        FractionBox[
         RowBox[{"n", "+", "3"}], "n"], ",", 
        RowBox[{"-", 
         SuperscriptBox[
          RowBox[{"(", 
           FractionBox["\[Tau]", 
            RowBox[{"r0", 
             RowBox[{"(", 
              RowBox[{
               FractionBox["1", 
                RowBox[{"v", "[", "\[Gamma]", "]"}]], "-", "1", "+", 
               FractionBox[
                SuperscriptBox["\[Theta]", "2"], "2"], "+", 
               FractionBox[
                SuperscriptBox["\[Chi]", "2"], "2"], "-", 
               RowBox[{"\[Theta]", " ", "\[Chi]", " ", 
                RowBox[{"Cos", "[", "\[Phi]", "]"}]}]}], ")"}], 
             RowBox[{"(", 
              RowBox[{"1", "+", "z"}], ")"}]}]], ")"}], "n"]}]}], "]"}]}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 InitializationGroup->True,
 CellChangeTimes->{{3.5899357885882673`*^9, 3.5899358888161497`*^9}, {
  3.589935971703033*^9, 3.589936024047285*^9}, {3.589936089476865*^9, 
  3.589936099247167*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"p", "[", 
    RowBox[{"universe_", ",", "burst", ",", "observer", ",", 
     RowBox[{"{", 
      RowBox[{"\[Theta]_", ",", "\[Phi]_"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Tau]1_", ",", "\[Tau]2_"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Omega]1_", ",", "\[Omega]2_"}], "}"}]}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", "burstValues", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"burstValues", "=", 
       RowBox[{"{", 
        RowBox[{
        "\[Gamma]", ",", "\[Eta]0", ",", "r0", ",", "n", ",", "\[Omega]0", 
         ",", "\[Theta]0", ",", "k", ",", "\[Alpha]"}], "}"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Re", "[", 
       RowBox[{
        FractionBox["detectorArea", 
         RowBox[{"photonSphereArea", "[", 
          RowBox[{"universe", ",", "z"}], "]"}]], 
        FractionBox["\[Eta]0", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"v", "[", "\[Gamma]", "]"}], "\[Gamma]", 
            RowBox[{"(", 
             RowBox[{"1", "+", "z"}], ")"}]}], ")"}], 
          RowBox[{"2", "-", "\[Alpha]"}]]], 
        FractionBox["1", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            FractionBox["1", 
             RowBox[{"v", "[", "\[Gamma]", "]"}]], "-", "1", "+", 
            FractionBox[
             SuperscriptBox["\[Theta]", "2"], "2"], "+", 
            FractionBox[
             SuperscriptBox["\[Chi]", "2"], "2"], "-", 
            RowBox[{"\[Theta]", " ", "\[Chi]", " ", 
             RowBox[{"Cos", "[", "\[Phi]", "]"}]}]}], ")"}], 
          RowBox[{"5", "-", "\[Alpha]"}]]], 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"i", "[", 
           RowBox[{
           "burstValues", ",", "z", ",", "\[Chi]", ",", "\[Omega]2", ",", 
            "\[Theta]", ",", "\[Phi]"}], "]"}], "-", 
          RowBox[{"i", "[", 
           RowBox[{
           "burstValues", ",", "z", ",", "\[Chi]", ",", "\[Omega]1", ",", 
            "\[Theta]", ",", "\[Phi]"}], "]"}]}], ")"}], 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"j", "[", 
           RowBox[{
           "burstValues", ",", "z", ",", "\[Chi]", ",", "\[Tau]2", ",", 
            "\[Theta]", ",", "\[Phi]"}], "]"}], "-", 
          RowBox[{"j", "[", 
           RowBox[{
           "burstValues", ",", "z", ",", "\[Chi]", ",", "\[Tau]1", ",", 
            "\[Theta]", ",", "\[Phi]"}], "]"}]}], ")"}]}], "]"}]}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 InitializationGroup->True,
 CellChangeTimes->{{3.605264146248972*^9, 3.605264229210731*^9}, {
   3.6052643504121227`*^9, 3.605264350585134*^9}, 3.60617835086559*^9, 
   3.606301399784334*^9, {3.6063014926244287`*^9, 3.606301504314597*^9}, {
   3.606301540800703*^9, 3.606301597528256*^9}, {3.606301712479704*^9, 
   3.606301768928443*^9}, {3.606301818831545*^9, 3.606301825567028*^9}, {
   3.6064540549508457`*^9, 3.606454059126418*^9}, {3.6068189163794518`*^9, 
   3.606818917499014*^9}, {3.606820438217452*^9, 3.606820441676106*^9}, {
   3.6068206443702803`*^9, 3.606820644512549*^9}, {3.6068207819847507`*^9, 
   3.606820798168706*^9}, {3.606821776624867*^9, 3.606821776758939*^9}, {
   3.606828001434215*^9, 3.606828005164133*^9}, {3.606828049032346*^9, 
   3.606828077526512*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"p", "[", 
   RowBox[{"universe_", ",", "burst", ",", 
    RowBox[{"{", 
     RowBox[{"detectorArea_", ",", "z_", ",", 
      RowBox[{"\[Chi]_", "?", "NumericQ"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"\[Tau]1_", ",", "\[Tau]2_"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"\[Omega]1_", ",", "\[Omega]2_"}], "}"}]}], "]"}], ":=", 
  RowBox[{
   RowBox[{"p", "[", 
    RowBox[{"universe", ",", 
     RowBox[{"{", 
      RowBox[{
      "\[Gamma]", ",", "\[Eta]0", ",", "r0", ",", "n", ",", "\[Omega]0", ",", 
       "\[Theta]0", ",", "k", ",", "\[Alpha]"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"detectorArea", ",", "z", ",", "\[Chi]"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Tau]1", ",", "\[Tau]2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Omega]1", ",", "\[Omega]2"}], "}"}]}], "]"}], "=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"burstValues", ",", "\[Theta]Points", ",", "result"}], "}"}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"burstValues", "=", 
       RowBox[{"{", 
        RowBox[{
        "\[Gamma]", ",", "\[Eta]0", ",", "r0", ",", "n", ",", "\[Omega]0", 
         ",", "\[Theta]0", ",", "k", ",", "\[Alpha]"}], "}"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"\[Theta]Points", "=", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\[Theta]", ",", "0"}], "}"}], "~", "Join", "~", 
        RowBox[{"Sort", "[", 
         RowBox[{"Select", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"\[Theta]0", "/", "10."}], ",", "\[Theta]0", ",", 
             RowBox[{"10.", "\[Theta]0"}], ",", 
             RowBox[{"100.", "\[Theta]0"}], ",", 
             RowBox[{"1.", "/", "\[Gamma]"}], ",", 
             RowBox[{"10.", "/", "\[Gamma]"}], ",", 
             RowBox[{"100.", "/", "\[Gamma]"}], ",", 
             RowBox[{"\[Chi]", "-", 
              RowBox[{"1.", "/", "\[Gamma]"}]}], ",", 
             RowBox[{"\[Chi]", "-", 
              RowBox[{"10.", "/", "\[Gamma]"}]}], ",", 
             RowBox[{"\[Chi]", "-", 
              RowBox[{"100.", "/", "\[Gamma]"}]}], ",", 
             RowBox[{"\[Chi]", "+", 
              RowBox[{"1.", "/", "\[Gamma]"}]}], ",", 
             RowBox[{"\[Chi]", "+", 
              RowBox[{"10.", "/", "\[Gamma]"}]}], ",", 
             RowBox[{"\[Chi]", "+", 
              RowBox[{"100.", "/", "\[Gamma]"}]}]}], "}"}], ",", 
           RowBox[{
            RowBox[{"#", ">", "0"}], "&"}]}], "]"}], "]"}], "~", "Join", "~", 
        
        RowBox[{"{", "\[Infinity]", "}"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"result", "=", 
       RowBox[{"NIntegrate", "[", 
        RowBox[{
         RowBox[{"2", "\[Theta]", " ", 
          RowBox[{"p", "[", 
           RowBox[{"universe", ",", "burstValues", ",", 
            RowBox[{"{", 
             RowBox[{"detectorArea", ",", "z", ",", "\[Chi]"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"\[Theta]", ",", "\[Phi]"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"\[Tau]1", ",", "\[Tau]2"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"\[Omega]1", ",", "\[Omega]2"}], "}"}]}], "]"}]}], ",", 
         RowBox[{"Evaluate", "@", "\[Theta]Points"}], ",", 
         RowBox[{"{", 
          RowBox[{"\[Phi]", ",", "0", ",", "\[Pi]"}], "}"}], ",", 
         RowBox[{"MinRecursion", "\[Rule]", "3"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"result", ">", "0"}], ",", "result", ",", 
        RowBox[{"Abort", "[", "]"}]}], "]"}]}]}], "\[IndentingNewLine]", 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.609552985410853*^9, 3.60955302888662*^9}, {
   3.609553152212681*^9, 3.609553162313032*^9}, {3.609553225795508*^9, 
   3.609553238291142*^9}, {3.609553296033367*^9, 3.609553307639937*^9}, {
   3.609553424760442*^9, 3.609553442751478*^9}, {3.609553552345468*^9, 
   3.609553568901787*^9}, {3.609553669844857*^9, 3.609553672505118*^9}, {
   3.6095537154275293`*^9, 3.6095537773603477`*^9}, {3.6095543075210867`*^9, 
   3.609554412842857*^9}, {3.6095544536441183`*^9, 3.6095545537427673`*^9}, {
   3.609554605615917*^9, 3.609554645323929*^9}, {3.609554986781806*^9, 
   3.609555008996572*^9}, {3.609555680250008*^9, 3.6095556826793137`*^9}, {
   3.6095560020758266`*^9, 3.609556031840561*^9}, {3.609556479734377*^9, 
   3.609556505466941*^9}, {3.6095579359006853`*^9, 3.6095579460525703`*^9}, {
   3.609558059473399*^9, 3.609558088072796*^9}, {3.609558192419702*^9, 
   3.609558192735241*^9}, {3.6095583689241323`*^9, 3.6095583740684643`*^9}, {
   3.609558428526751*^9, 3.6095584996244097`*^9}, {3.609558624143918*^9, 
   3.6095586564258213`*^9}, {3.609563152876815*^9, 3.609563176403639*^9}, {
   3.609563333940825*^9, 3.609563334044628*^9}, {3.609563455711883*^9, 
   3.6095634811589317`*^9}, {3.609563686500836*^9, 3.609563750594817*^9}, {
   3.6095639812970867`*^9, 3.609563983279386*^9}, {3.609571618557543*^9, 
   3.609571621059228*^9}, {3.609571657786426*^9, 3.609571658945373*^9}, {
   3.609572401610347*^9, 3.6095724150046577`*^9}, 3.609572487742721*^9, {
   3.610590131303626*^9, 3.610590191700941*^9}, {3.610590299506352*^9, 
   3.610590300445772*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Light curve time derivative", "Subsection",
 InitializationGroup->True,
 CellChangeTimes->{{3.607754326028933*^9, 3.607754329898782*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"j\[Tau]", "[", 
    RowBox[{
    "burst", ",", "z_", ",", "\[Chi]_", ",", "\[Tau]_", ",", "\[Theta]_", ",",
      "\[Phi]_"}], "]"}], ":=", "\[IndentingNewLine]", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"\[Tau]", "\[Equal]", "\[Infinity]"}], ",", 
     "\[IndentingNewLine]", "0", ",", "\[IndentingNewLine]", 
     RowBox[{"Re", "[", 
      FractionBox[
       SuperscriptBox["\[Tau]", "2"], 
       RowBox[{"1", "+", 
        SuperscriptBox[
         RowBox[{"(", 
          FractionBox[
           RowBox[{"2", "\[Tau]"}], 
           RowBox[{"r0", " ", 
            RowBox[{"(", 
             RowBox[{"1", "+", "z"}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "2"}], "+", 
              FractionBox["2", 
               RowBox[{"v", "[", "\[Gamma]", "]"}]], "+", 
              SuperscriptBox["\[Theta]", "2"], "+", 
              SuperscriptBox["\[Chi]", "2"], "-", 
              RowBox[{"2", " ", "\[Theta]", " ", "\[Chi]", " ", 
               RowBox[{"Cos", "[", "\[Phi]", "]"}]}]}], ")"}]}]], ")"}], 
         "n"]}]], "]"}]}], "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 InitializationGroup->True,
 CellChangeTimes->{{3.590028599043091*^9, 3.5900287132878847`*^9}, {
  3.591866391902088*^9, 3.591866402347027*^9}, {3.606455087086586*^9, 
  3.606455089382328*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"p\[Tau]", "[", 
   RowBox[{"universe_", ",", "burst", ",", "observer", ",", 
    RowBox[{"{", 
     RowBox[{"\[Theta]_", ",", "\[Phi]_"}], "}"}], ",", "\[Tau]_", ",", 
    RowBox[{"{", 
     RowBox[{"\[Omega]1_", ",", "\[Omega]2_"}], "}"}]}], "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", "burstValues", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"Re", "[", 
     RowBox[{
      FractionBox["detectorArea", 
       RowBox[{"photonSphereArea", "[", 
        RowBox[{"universe", ",", "z"}], "]"}]], 
      FractionBox["\[Eta]0", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"v", "[", "\[Gamma]", "]"}], "\[Gamma]", 
          RowBox[{"(", 
           RowBox[{"1", "+", "z"}], ")"}]}], ")"}], 
        RowBox[{"2", "-", "\[Alpha]"}]]], 
      FractionBox["1", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          FractionBox["1", 
           RowBox[{"v", "[", "\[Gamma]", "]"}]], "-", "1", "+", 
          FractionBox[
           SuperscriptBox["\[Theta]", "2"], "2"], "+", 
          FractionBox[
           SuperscriptBox["\[Chi]", "2"], "2"], "-", 
          RowBox[{"\[Theta]", " ", "\[Chi]", " ", 
           RowBox[{"Cos", "[", "\[Phi]", "]"}]}]}], ")"}], 
        RowBox[{"5", "-", "\[Alpha]"}]]], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"i", "[", 
         RowBox[{
         "burstValues", ",", "z", ",", "\[Chi]", ",", "\[Omega]2", ",", 
          "\[Theta]", ",", "\[Phi]"}], "]"}], "-", 
        RowBox[{"i", "[", 
         RowBox[{
         "burstValues", ",", "z", ",", "\[Chi]", ",", "\[Omega]1", ",", 
          "\[Theta]", ",", "\[Phi]"}], "]"}]}], ")"}], 
      RowBox[{"j\[Tau]", "[", 
       RowBox[{
       "burstValues", ",", "z", ",", "\[Chi]", ",", "\[Tau]", ",", "\[Theta]",
         ",", "\[Phi]"}], "]"}]}], "]"}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 InitializationGroup->True,
 CellChangeTimes->{{3.606872718144367*^9, 3.606872765882361*^9}, {
  3.606872814970764*^9, 3.606872822377987*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"p\[Tau]", "[", 
   RowBox[{"universe_", ",", "burst", ",", 
    RowBox[{"{", 
     RowBox[{"detectorArea_", ",", "z_", ",", 
      RowBox[{"\[Chi]_", "?", "NumericQ"}]}], "}"}], ",", "\[Tau]_", ",", 
    RowBox[{"{", 
     RowBox[{"\[Omega]1_", ",", "\[Omega]2_"}], "}"}]}], "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"burstValues", ",", "\[Theta]Points", ",", "result"}], "}"}], 
    ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"burstValues", "=", 
      RowBox[{"{", 
       RowBox[{
       "\[Gamma]", ",", "\[Eta]0", ",", "r0", ",", "n", ",", "\[Omega]0", ",",
         "\[Theta]0", ",", "k", ",", "\[Alpha]"}], "}"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"\[Theta]Points", "=", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\[Theta]", ",", "0"}], "}"}], "~", "Join", "~", 
       RowBox[{"Sort", "[", 
        RowBox[{"Select", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[Theta]0", "/", "10."}], ",", "\[Theta]0", ",", 
            RowBox[{"10.", "\[Theta]0"}], ",", 
            RowBox[{"100.", "\[Theta]0"}], ",", 
            RowBox[{"1.", "/", "\[Gamma]"}], ",", 
            RowBox[{"10.", "/", "\[Gamma]"}], ",", 
            RowBox[{"100.", "/", "\[Gamma]"}], ",", 
            RowBox[{"\[Chi]", "-", 
             RowBox[{"1.", "/", "\[Gamma]"}]}], ",", 
            RowBox[{"\[Chi]", "-", 
             RowBox[{"10.", "/", "\[Gamma]"}]}], ",", 
            RowBox[{"\[Chi]", "-", 
             RowBox[{"100.", "/", "\[Gamma]"}]}], ",", 
            RowBox[{"\[Chi]", "+", 
             RowBox[{"1.", "/", "\[Gamma]"}]}], ",", 
            RowBox[{"\[Chi]", "+", 
             RowBox[{"10.", "/", "\[Gamma]"}]}], ",", 
            RowBox[{"\[Chi]", "+", 
             RowBox[{"100.", "/", "\[Gamma]"}]}]}], "}"}], ",", 
          RowBox[{
           RowBox[{"#", ">", "0"}], "&"}]}], "]"}], "]"}], "~", "Join", "~", 
       RowBox[{"{", "\[Infinity]", "}"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"result", "=", 
      RowBox[{"NIntegrate", "[", 
       RowBox[{
        RowBox[{"2", "\[Theta]", " ", 
         RowBox[{"p\[Tau]", "[", 
          RowBox[{"universe", ",", "burstValues", ",", 
           RowBox[{"{", 
            RowBox[{"detectorArea", ",", "z", ",", "\[Chi]"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\[Theta]", ",", "\[Phi]"}], "}"}], ",", "\[Tau]", ",", 
           RowBox[{"{", 
            RowBox[{"\[Omega]1", ",", "\[Omega]2"}], "}"}]}], "]"}]}], ",", 
        RowBox[{"Evaluate", "@", "\[Theta]Points"}], ",", 
        RowBox[{"{", 
         RowBox[{"\[Phi]", ",", "0", ",", "\[Pi]"}], "}"}], ",", 
        RowBox[{"MinRecursion", "\[Rule]", "3"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"result", ">", "0"}], ",", "result", ",", 
       RowBox[{"Abort", "[", "]"}]}], "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.609571631475333*^9, 3.6095716637080317`*^9}, {
  3.609572435618432*^9, 3.609572444394807*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Duration", "Subsection",
 InitializationGroup->True,
 CellChangeTimes->{{3.590061518520788*^9, 3.590061520245708*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "duration", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{"part", "\[Rule]", "0.99"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"duration", "[", 
    RowBox[{"universe_", ",", "burst", ",", "observer", ",", 
     RowBox[{"{", 
      RowBox[{"\[Omega]1_", ",", "\[Omega]2_"}], "}"}], ",", 
     RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "burstValues", ",", "observerValues", ",", "p\[Infinity]", ",", 
       "precision", ",", "pi"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"burstValues", "=", 
       RowBox[{"{", 
        RowBox[{
        "\[Gamma]", ",", "\[Eta]0", ",", "r0", ",", "n", ",", "\[Omega]0", 
         ",", "\[Theta]0", ",", "k", ",", "\[Alpha]"}], "}"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"observerValues", "=", 
       RowBox[{"{", 
        RowBox[{"detectorArea", ",", "z", ",", "\[Chi]"}], "}"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"p\[Infinity]", "=", 
       RowBox[{"p", "[", 
        RowBox[{"universe", ",", "burstValues", ",", "observerValues", ",", 
         RowBox[{"{", 
          RowBox[{"0.", ",", "\[Infinity]"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"\[Omega]1", ",", "\[Omega]2"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"pi", "[", 
        RowBox[{"\[Tau]_", "?", "NumericQ"}], "]"}], ":=", 
       RowBox[{"p", "[", 
        RowBox[{"universe", ",", "burstValues", ",", "observerValues", ",", 
         RowBox[{"{", 
          RowBox[{"0.", ",", "\[Tau]"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"\[Omega]1", ",", "\[Omega]2"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"\[Tau]", "/.", 
       RowBox[{"findRoot", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"pi", "[", "\[Tau]", "]"}], "-", 
          RowBox[{
           RowBox[{"OptionValue", "[", "part", "]"}], "p\[Infinity]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"\[Tau]", ",", 
           RowBox[{
            FractionBox["r0", 
             SuperscriptBox["\[Gamma]", "2"]], 
            RowBox[{"(", 
             RowBox[{"1.", "+", "z"}], ")"}]}]}], "}"}]}], "]"}]}]}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]}], "Input",
 InitializationGroup->True,
 CellChangeTimes->{{3.5903178050646343`*^9, 3.590317829891816*^9}, {
   3.590325149911132*^9, 3.5903252239269533`*^9}, {3.590325262389987*^9, 
   3.5903252825737123`*^9}, {3.59032532930599*^9, 3.590325335424121*^9}, {
   3.590325462525869*^9, 3.590325478694022*^9}, {3.590325518676382*^9, 
   3.590325519188765*^9}, {3.590361415786047*^9, 3.590361488999978*^9}, 
   3.590365687436039*^9, {3.590373135594748*^9, 3.590373148844438*^9}, 
   3.5903762546660767`*^9, {3.590376451567272*^9, 3.59037645210378*^9}, {
   3.59037673199723*^9, 3.590376732180722*^9}, 3.590377306536478*^9, {
   3.590377574242556*^9, 3.59037759171872*^9}, {3.5903779197300177`*^9, 
   3.5903779352168922`*^9}, {3.590657083045203*^9, 3.590657088028907*^9}, {
   3.590657227680119*^9, 3.590657311788023*^9}, {3.591859728415344*^9, 
   3.591859736190181*^9}, {3.592131053761468*^9, 3.592131054093618*^9}, {
   3.606445448338492*^9, 3.606445475071904*^9}, {3.606872396132824*^9, 
   3.606872401165753*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Stretching factor", "Subsection",
 InitializationGroup->True,
 CellChangeTimes->{{3.590042619518958*^9, 3.590042624004355*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "\[Kappa]", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"pointCount", "\[Rule]", "20"}], ",", 
     RowBox[{"accurateQ", "\[Rule]", "True"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Kappa]", "[", 
    RowBox[{"universe_", ",", "burst_", ",", "observer_", ",", 
     RowBox[{"{", 
      RowBox[{"\[Omega]1_", ",", "\[Omega]2_", ",", "\[Omega]3_"}], "}"}], 
     ",", 
     RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "p12\[Infinity]", ",", "p23\[Infinity]", ",", "diff", ",", "diff\[Tau]",
        ",", "\[Tau]middle", ",", "\[Tau]end", ",", "diffDifference", ",", 
       "n", ",", "accQ"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"p12\[Infinity]", "=", 
       RowBox[{"p", "[", 
        RowBox[{"universe", ",", "burst", ",", "observer", ",", 
         RowBox[{"{", 
          RowBox[{"0.", ",", "\[Infinity]"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"\[Omega]1", ",", "\[Omega]2"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"p23\[Infinity]", "=", 
       RowBox[{"p", "[", 
        RowBox[{"universe", ",", "burst", ",", "observer", ",", 
         RowBox[{"{", 
          RowBox[{"0.", ",", "\[Infinity]"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"\[Omega]2", ",", "\[Omega]3"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"diff", "[", 
        RowBox[{
         RowBox[{"\[Tau]_", "?", "NumericQ"}], ",", 
         RowBox[{"\[Kappa]_", "?", "NumericQ"}]}], "]"}], ":=", 
       RowBox[{
        FractionBox[
         RowBox[{"p", "[", 
          RowBox[{"universe", ",", "burst", ",", "observer", ",", 
           RowBox[{"{", 
            RowBox[{"0.", ",", "\[Tau]"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\[Omega]1", ",", "\[Omega]2"}], "}"}]}], "]"}], 
         "p12\[Infinity]"], "-", 
        FractionBox[
         RowBox[{"p", "[", 
          RowBox[{"universe", ",", "burst", ",", "observer", ",", 
           RowBox[{"{", 
            RowBox[{"0.", ",", 
             RowBox[{"\[Kappa]", " ", "\[Tau]"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\[Omega]2", ",", "\[Omega]3"}], "}"}]}], "]"}], 
         "p23\[Infinity]"]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"diff\[Tau]", "[", 
        RowBox[{
         RowBox[{"\[Tau]_", "?", "NumericQ"}], ",", 
         RowBox[{"\[Kappa]_", "?", "NumericQ"}]}], "]"}], ":=", 
       RowBox[{
        FractionBox[
         RowBox[{"p\[Tau]", "[", 
          RowBox[{
          "universe", ",", "burst", ",", "observer", ",", "\[Tau]", ",", 
           RowBox[{"{", 
            RowBox[{"\[Omega]1", ",", "\[Omega]2"}], "}"}]}], "]"}], 
         "p12\[Infinity]"], "-", 
        RowBox[{"\[Kappa]", 
         FractionBox[
          RowBox[{"p\[Tau]", "[", 
           RowBox[{"universe", ",", "burst", ",", "observer", ",", 
            RowBox[{"\[Kappa]", " ", "\[Tau]"}], ",", 
            RowBox[{"{", 
             RowBox[{"\[Omega]2", ",", "\[Omega]3"}], "}"}]}], "]"}], 
          "p23\[Infinity]"]}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"accQ", "=", 
       RowBox[{"OptionValue", "[", "accurateQ", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"n", "=", 
       RowBox[{"OptionValue", "[", "pointCount", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"TrueQ", "[", "accQ", "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"\[Tau]end", "=", 
          RowBox[{"duration", "[", 
           RowBox[{"universe", ",", "burst", ",", "observer", ",", 
            RowBox[{"{", 
             RowBox[{"\[Omega]1", ",", "\[Omega]3"}], "}"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"diffDifference", "[", 
           RowBox[{"\[Kappa]_", "?", "NumericQ"}], "]"}], ":=", 
          RowBox[{"Block", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
             "it", ",", "diff\[Tau]Values", ",", "maxDifference", ",", 
              "minDifference", ",", "currentDifference"}], "}"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"diff\[Tau]Values", "=", 
              RowBox[{"Table", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"\[Tau]", ",", 
                  RowBox[{"diff\[Tau]", "[", 
                   RowBox[{"\[Tau]", ",", "\[Kappa]"}], "]"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"\[Tau]", ",", 
                  FractionBox["\[Tau]end", "n"], ",", "\[Tau]end", ",", 
                  FractionBox["\[Tau]end", "n"]}], "}"}]}], "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"maxDifference", "=", "0."}], ";", "\[IndentingNewLine]", 
             RowBox[{"minDifference", "=", "0."}], ";", "\[IndentingNewLine]", 
             RowBox[{"For", "[", 
              RowBox[{
               RowBox[{"it", "=", "1"}], ",", 
               RowBox[{"it", "<", 
                RowBox[{"Length", "[", "diff\[Tau]Values", "]"}]}], ",", 
               RowBox[{"it", "++"}], ",", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Sign", "[", 
                    RowBox[{"diff\[Tau]Values", "\[LeftDoubleBracket]", 
                    RowBox[{"it", ",", "2"}], "\[RightDoubleBracket]"}], 
                    "]"}], "\[NotEqual]", 
                   RowBox[{"Sign", "[", 
                    RowBox[{"diff\[Tau]Values", "\[LeftDoubleBracket]", 
                    RowBox[{
                    RowBox[{"it", "+", "1"}], ",", "2"}], 
                    "\[RightDoubleBracket]"}], "]"}]}], ",", 
                  "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{"currentDifference", "=", 
                    RowBox[{"diff", "[", 
                    RowBox[{
                    RowBox[{"\[Tau]", "/.", 
                    RowBox[{"FindRoot", "[", 
                    RowBox[{
                    RowBox[{"diff\[Tau]", "[", 
                    RowBox[{"\[Tau]", ",", "\[Kappa]"}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\[Tau]", ",", 
                    RowBox[{"diff\[Tau]Values", "\[LeftDoubleBracket]", 
                    RowBox[{"it", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
                    
                    RowBox[{"diff\[Tau]Values", "\[LeftDoubleBracket]", 
                    RowBox[{
                    RowBox[{"it", "+", "1"}], ",", "1"}], 
                    "\[RightDoubleBracket]"}]}], "}"}]}], "]"}]}], ",", 
                    "\[Kappa]"}], "]"}]}], ";", "\[IndentingNewLine]", 
                   RowBox[{"maxDifference", "=", 
                    RowBox[{"Max", "[", 
                    RowBox[{"maxDifference", ",", "currentDifference"}], 
                    "]"}]}], ";", "\[IndentingNewLine]", 
                   RowBox[{"minDifference", "=", 
                    RowBox[{"Min", "[", 
                    RowBox[{"minDifference", ",", "currentDifference"}], 
                    "]"}]}], ";"}]}], "\[IndentingNewLine]", "]"}], ";"}]}], 
              "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
             RowBox[{"maxDifference", "+", "minDifference"}]}]}], 
           "\[IndentingNewLine]", "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"\[Kappa]i", "/.", 
          RowBox[{"findRoot", "[", 
           RowBox[{
            RowBox[{"-", 
             RowBox[{"diffDifference", "[", "\[Kappa]i", "]"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"\[Kappa]i", ",", "1."}], "}"}]}], "]"}]}]}], 
        "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"\[Tau]middle", "=", 
          RowBox[{"duration", "[", 
           RowBox[{"universe", ",", "burst", ",", "observer", ",", 
            RowBox[{"{", 
             RowBox[{"\[Omega]1", ",", "\[Omega]3"}], "}"}], ",", 
            RowBox[{"part", "\[Rule]", "0.5"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"\[Kappa]i", "/.", 
          RowBox[{"findRoot", "[", 
           RowBox[{
            RowBox[{"-", 
             RowBox[{"diff", "[", 
              RowBox[{"\[Tau]middle", ",", "\[Kappa]i"}], "]"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"\[Kappa]i", ",", "1."}], "}"}]}], "]"}]}]}]}], 
       "\[IndentingNewLine]", "]"}]}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}]}], "Input",
 InitializationGroup->True,
 CellChangeTimes->{{3.5903265796208687`*^9, 3.590326833677573*^9}, {
   3.5903269327331257`*^9, 3.5903269503094893`*^9}, {3.590326987903431*^9, 
   3.5903271369707203`*^9}, {3.590327176239778*^9, 3.590327185314533*^9}, {
   3.5903272680607367`*^9, 3.590327271219748*^9}, {3.590327312586216*^9, 
   3.590327315351831*^9}, {3.590327388496572*^9, 3.590327480915551*^9}, {
   3.59032751419615*^9, 3.5903275248632917`*^9}, {3.590327561137848*^9, 
   3.590327564923519*^9}, {3.590327640238681*^9, 3.590327677067874*^9}, {
   3.590327813182415*^9, 3.590327828205284*^9}, {3.590328354366934*^9, 
   3.590328555755969*^9}, {3.5903286431336727`*^9, 3.590328659784225*^9}, 
   3.59032872295754*^9, {3.590329189043144*^9, 3.590329189722125*^9}, {
   3.5903650237753553`*^9, 3.5903651970818777`*^9}, {3.590365259406893*^9, 
   3.590365267195998*^9}, {3.5903654226609497`*^9, 3.590365456892521*^9}, {
   3.590365501664783*^9, 3.590365503984386*^9}, {3.590365568175743*^9, 
   3.590365573478949*^9}, {3.590365618227973*^9, 3.590365621461379*^9}, {
   3.5903657229232492`*^9, 3.59036572479393*^9}, {3.59036577981052*^9, 
   3.590365782180976*^9}, {3.5903659951005793`*^9, 3.590366003108227*^9}, {
   3.590366051467641*^9, 3.590366283475524*^9}, {3.590366406272266*^9, 
   3.5903664222486973`*^9}, {3.590366532280233*^9, 3.590366560568139*^9}, 
   3.590366612775997*^9, {3.5903666531368933`*^9, 3.5903666533696127`*^9}, {
   3.5903704326686993`*^9, 3.590370533346634*^9}, {3.5903705920432377`*^9, 
   3.590370715562079*^9}, {3.590370746441658*^9, 3.590371170661167*^9}, 
   3.590371248583733*^9, {3.590371412755732*^9, 3.590371549940089*^9}, {
   3.590371605026496*^9, 3.590371622782262*^9}, {3.590371724324032*^9, 
   3.590371738661891*^9}, {3.590372125774158*^9, 3.5903721789825907`*^9}, {
   3.590372659458366*^9, 3.590372660732067*^9}, {3.590372841198977*^9, 
   3.590372848830831*^9}, {3.590372949274189*^9, 3.590372954958375*^9}, {
   3.5903730718440933`*^9, 3.590373074450584*^9}, {3.590373162138679*^9, 
   3.590373164754616*^9}, {3.5903732574823713`*^9, 3.590373257613722*^9}, {
   3.590373332784211*^9, 3.5903733329269667`*^9}, {3.59037341674111*^9, 
   3.5903734194048243`*^9}, {3.590375379521632*^9, 3.590375382490905*^9}, {
   3.590375428952099*^9, 3.5903755736247063`*^9}, {3.590375724661763*^9, 
   3.590375782583375*^9}, {3.5903759191691513`*^9, 3.590375927059924*^9}, {
   3.5903760199509783`*^9, 3.590376024215468*^9}, {3.5903762774287863`*^9, 
   3.590376313791407*^9}, {3.590376464702487*^9, 3.590376489807502*^9}, {
   3.5903767460743427`*^9, 3.590376773731325*^9}, {3.590377131337274*^9, 
   3.59037721201258*^9}, {3.590377415812442*^9, 3.5903774737943296`*^9}, {
   3.590377527059918*^9, 3.590377533724476*^9}, {3.5903776145091867`*^9, 
   3.590377672534587*^9}, {3.5903778454072237`*^9, 3.590377882622674*^9}, {
   3.590381758973577*^9, 3.590381812886834*^9}, {3.5903873864196987`*^9, 
   3.590387458002425*^9}, {3.590387510659731*^9, 3.590387543611752*^9}, {
   3.59038758612471*^9, 3.590387621217507*^9}, {3.590388552680749*^9, 
   3.5903885528275633`*^9}, {3.59065748233827*^9, 3.590657557181745*^9}, {
   3.590657618614839*^9, 3.590657683718027*^9}, {3.590716042223925*^9, 
   3.59071604340497*^9}, {3.5907163929288683`*^9, 3.590716396686603*^9}, {
   3.590716711520685*^9, 3.590716712288282*^9}, {3.591859766023552*^9, 
   3.591859821493609*^9}, {3.59213105995527*^9, 3.592131060311899*^9}, {
   3.5939055257237873`*^9, 3.593905551360847*^9}, {3.606437972654207*^9, 
   3.606437973245549*^9}, {3.6064380872801723`*^9, 3.6064380874078217`*^9}, {
   3.6064385906674147`*^9, 3.606438592847204*^9}, {3.606439596575625*^9, 
   3.606439614796866*^9}, {3.606439755019751*^9, 3.606439755171906*^9}, {
   3.606445554997858*^9, 3.606445555170183*^9}, {3.606445600714435*^9, 
   3.606445600898086*^9}, {3.6064456329461813`*^9, 3.606445633113682*^9}, {
   3.606445677209525*^9, 3.6064457057853327`*^9}, {3.6064503455284863`*^9, 
   3.606450347101955*^9}, {3.60645046983005*^9, 3.6064504703757257`*^9}, {
   3.606450576569796*^9, 3.60645061578759*^9}, 3.606450671391876*^9, {
   3.606450776792655*^9, 3.606450796675383*^9}, {3.607503550920438*^9, 
   3.607503569452129*^9}, {3.607504657940392*^9, 3.607504666351533*^9}, {
   3.607504813869372*^9, 3.607504814972559*^9}, {3.6075048481988373`*^9, 
   3.607504888113874*^9}, {3.6075049256864347`*^9, 3.607505050051395*^9}, {
   3.607505186140037*^9, 3.607505235569965*^9}, {3.607505487509815*^9, 
   3.6075054976927423`*^9}, {3.6075055474912863`*^9, 3.607505553546584*^9}, {
   3.607506506506734*^9, 3.60750651425399*^9}, {3.607506867346436*^9, 
   3.6075070816969843`*^9}, {3.607507140475012*^9, 3.607507165457365*^9}, {
   3.607507263179788*^9, 3.6075072841504593`*^9}, {3.607507438883451*^9, 
   3.607507621265781*^9}, {3.607507657314548*^9, 3.607507840454307*^9}, {
   3.60750803603577*^9, 3.607508058155015*^9}, {3.607508115556563*^9, 
   3.6075081261505737`*^9}, {3.607508265361066*^9, 3.6075082696406603`*^9}, {
   3.607508456756721*^9, 3.607508461893629*^9}, {3.6075085464181232`*^9, 
   3.6075085542808247`*^9}, {3.6075087633462677`*^9, 
   3.6075087687691917`*^9}, {3.6075088886118*^9, 3.607508893038492*^9}, {
   3.607509101086595*^9, 3.607509101782463*^9}, 3.607509309556765*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"SetSharedFunction", "[", "\[Kappa]StoredValues", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "\[Kappa]Cache", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"pointCount", "\[Rule]", "20"}], ",", 
     RowBox[{"accurateQ", "\[Rule]", "True"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Kappa]Cache", "[", 
    RowBox[{"universe_", ",", "burst_", ",", "observer_", ",", 
     RowBox[{"{", 
      RowBox[{"\[Omega]1_", ",", "\[Omega]2_", ",", "\[Omega]3_"}], "}"}], 
     ",", 
     RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"Not", "[", 
         RowBox[{"NumberQ", "[", 
          RowBox[{"\[Kappa]StoredValues", "[", 
           RowBox[{"universe", ",", "burst", ",", "observer", ",", 
            RowBox[{"{", 
             RowBox[{"\[Omega]1", ",", "\[Omega]2", ",", "\[Omega]3"}], "}"}],
             ",", 
            RowBox[{"OptionValue", "[", "pointCount", "]"}], ",", 
            RowBox[{"OptionValue", "[", "accurateQ", "]"}]}], "]"}], "]"}], 
         "]"}], ",", 
        RowBox[{
         RowBox[{"\[Kappa]StoredValues", "[", 
          RowBox[{"universe", ",", "burst", ",", "observer", ",", 
           RowBox[{"{", 
            RowBox[{"\[Omega]1", ",", "\[Omega]2", ",", "\[Omega]3"}], "}"}], 
           ",", 
           RowBox[{"OptionValue", "[", "pointCount", "]"}], ",", 
           RowBox[{"OptionValue", "[", "accurateQ", "]"}]}], "]"}], "=", 
         RowBox[{"\[Kappa]", "[", 
          RowBox[{"universe", ",", "burst", ",", "observer", ",", 
           RowBox[{"{", 
            RowBox[{"\[Omega]1", ",", "\[Omega]2", ",", "\[Omega]3"}], "}"}], 
           ",", 
           RowBox[{"pointCount", "\[Rule]", 
            RowBox[{"OptionValue", "[", "pointCount", "]"}]}], ",", 
           RowBox[{"accurateQ", "\[Rule]", 
            RowBox[{"OptionValue", "[", "accurateQ", "]"}]}]}], "]"}]}]}], 
       "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"\[Kappa]StoredValues", "[", 
       RowBox[{"universe", ",", "burst", ",", "observer", ",", 
        RowBox[{"{", 
         RowBox[{"\[Omega]1", ",", "\[Omega]2", ",", "\[Omega]3"}], "}"}], 
        ",", 
        RowBox[{"OptionValue", "[", "pointCount", "]"}], ",", 
        RowBox[{"OptionValue", "[", "accurateQ", "]"}]}], "]"}]}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]}], "Input",
 InitializationGroup->True,
 CellChangeTimes->{{3.592528888258531*^9, 3.592528925623564*^9}, {
   3.592528988974207*^9, 3.5925290002608213`*^9}, {3.592529049108858*^9, 
   3.592529120243537*^9}, {3.5925291986387*^9, 3.592529265749548*^9}, {
   3.592529563339875*^9, 3.592529584373616*^9}, {3.593873234597978*^9, 
   3.593873237272119*^9}, {3.593905698912496*^9, 3.593905700841269*^9}, 
   3.6075135646626997`*^9, {3.607513598571061*^9, 3.607513615666121*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"\[Kappa]Save", "[", "]"}], ":=", 
   RowBox[{"DumpSave", "[", 
    RowBox[{"\"\<kappa.mx\>\"", ",", "\[Kappa]StoredValues"}], "]"}]}], 
  ";"}]], "Input",
 InitializationGroup->True,
 CellChangeTimes->{{3.592529329018914*^9, 3.592529388830374*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"\[Kappa]Load", "[", "]"}], ":=", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"FileExistsQ", "[", "\"\<kappa.mx\>\"", "]"}], ",", 
     RowBox[{"<<", "\"\<kappa.mx\>\""}]}], "]"}]}], ";"}]], "Input",
 InitializationGroup->True,
 CellChangeTimes->{{3.5925294093082523`*^9, 3.592529422202147*^9}, {
  3.592529859852643*^9, 3.592529879288867*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Total Energy", "Subsection",
 InitializationGroup->True,
 CellChangeTimes->{{3.591179569287243*^9, 3.5911795710461187`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"energy", "[", 
    RowBox[{"burst", ",", "\[Omega]1_"}], "]"}], ":=", 
   RowBox[{
    FractionBox[
     RowBox[{"16", 
      SuperscriptBox["\[Pi]", "3"]}], 
     RowBox[{"3", "n", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "2"}], "k"}], "-", "\[Alpha]", "-", "2"}], ")"}], 
      RowBox[{"Sin", "[", 
       FractionBox[
        RowBox[{"3", "\[Pi]"}], "n"], "]"}]}]], 
    SuperscriptBox["\[Gamma]", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "2"}], "k"}], "-", "\[Alpha]"}]], 
    RowBox[{"(", 
     RowBox[{"1", "-", 
      FractionBox["1", 
       RowBox[{"4", 
        SuperscriptBox["\[Gamma]", "2"]}]]}], ")"}], "\[Eta]0", " ", 
    SuperscriptBox["r0", "3"], 
    SuperscriptBox["\[Theta]0", "2"], 
    FractionBox[
     SuperscriptBox["\[Omega]0", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "2"}], "k"}], "-", "\[Alpha]"}]], 
     SuperscriptBox["\[Omega]1", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "2"}], "k"}], "-", "\[Alpha]", "-", "2"}]]]}]}], 
  ";"}]], "Input",
 InitializationGroup->True,
 CellChangeTimes->{{3.591267384750402*^9, 3.591267391974464*^9}, {
  3.591267431626403*^9, 3.5912674907454443`*^9}, {3.6093865119041452`*^9, 
  3.6093865406947403`*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Distribution of stretching factors", "Subsection",
 InitializationGroup->True,
 CellChangeTimes->{{3.592129665485837*^9, 3.592129667602376*^9}, 
   3.594161701643839*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "zmax", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{"minParticles", "\[Rule]", "10"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"zmax", "[", 
    RowBox[{
    "universe_", ",", "burst_", ",", "detectorArea_", ",", "\[Chi]_", ",", 
     RowBox[{"{", 
      RowBox[{"\[Omega]1_", ",", "\[Omega]2_"}], "}"}], ",", 
     RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"int", ",", "z1", ",", "z2"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"int", "[", 
        RowBox[{"z_", "?", "NumericQ"}], "]"}], ":=", 
       RowBox[{
        RowBox[{"p", "[", 
         RowBox[{"universe", ",", "burst", ",", 
          RowBox[{"{", 
           RowBox[{"detectorArea", ",", "z", ",", "\[Chi]"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "\[Infinity]"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"\[Omega]1", ",", "\[Omega]2"}], "}"}]}], "]"}], "-", 
        RowBox[{"OptionValue", "[", "minParticles", "]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"z1", "=", "1"}], ";", "\[IndentingNewLine]", 
      RowBox[{"While", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"int", "[", "z1", "]"}], "<", "0"}], ",", 
        RowBox[{"z1", "/=", "2."}]}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"z2", "=", "1"}], ";", "\[IndentingNewLine]", 
      RowBox[{"While", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"int", "[", "z2", "]"}], ">", "0"}], ",", 
        RowBox[{"z2", "*=", "2."}]}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"z", "/.", 
       RowBox[{"FindRoot", "[", 
        RowBox[{
         RowBox[{"int", "[", "z", "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"z", ",", "z1", ",", "z2"}], "}"}]}], "]"}]}]}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]}], "Input",
 InitializationGroup->True,
 CellChangeTimes->{{3.5921304966002817`*^9, 3.592130552109898*^9}, {
   3.592130602992848*^9, 3.592130674463716*^9}, {3.5921308289039383`*^9, 
   3.592130919923584*^9}, {3.592130993209762*^9, 3.592131036607246*^9}, {
   3.592131068302374*^9, 3.592131114338842*^9}, {3.592187459284543*^9, 
   3.592187463651868*^9}, {3.5921894029246273`*^9, 3.592189416673624*^9}, {
   3.592189472174855*^9, 3.592189474840663*^9}, {3.592189512887924*^9, 
   3.5921895587398148`*^9}, {3.5921896539432096`*^9, 3.592189655743219*^9}, {
   3.5921897207067432`*^9, 3.592189792248406*^9}, {3.592523268807684*^9, 
   3.592523277638463*^9}, 3.606815128791231*^9, {3.6068152085590754`*^9, 
   3.606815210021928*^9}, {3.606815622679956*^9, 3.6068156276949053`*^9}, {
   3.6068159049666843`*^9, 3.6068159073170843`*^9}, {3.60681623824056*^9, 
   3.6068162487898893`*^9}, {3.606816376043518*^9, 3.606816388477725*^9}, {
   3.606816544945525*^9, 3.6068165545847673`*^9}, {3.606816719311705*^9, 
   3.6068167196296587`*^9}, {3.60681723366352*^9, 3.606817240660446*^9}, {
   3.606818893631176*^9, 3.606818899873103*^9}, {3.60682613150592*^9, 
   3.60682614286456*^9}, {3.606826266444846*^9, 3.60682627088619*^9}, {
   3.6068263646979713`*^9, 3.6068263666198997`*^9}, {3.60682650735952*^9, 
   3.606826511599983*^9}, {3.606826656058393*^9, 3.606826760422106*^9}, {
   3.60682713208892*^9, 3.606827132470594*^9}, {3.606827205671575*^9, 
   3.606827217790888*^9}, {3.606827321916052*^9, 3.6068273291430264`*^9}, {
   3.6068273995988503`*^9, 3.606827409335085*^9}, {3.6068274561915903`*^9, 
   3.606827507734075*^9}, {3.606827549946529*^9, 3.606827602197398*^9}, {
   3.606827833976885*^9, 3.6068278516944113`*^9}, {3.6068282810076427`*^9, 
   3.606828325022163*^9}, {3.60682841606775*^9, 3.6068284257457943`*^9}, {
   3.606828461931662*^9, 3.606828503739636*^9}, {3.606828536192287*^9, 
   3.606828540809628*^9}, 3.606828590204176*^9, {3.6068286342582693`*^9, 
   3.606828746462647*^9}, {3.6068288348045177`*^9, 3.606828848091008*^9}, {
   3.606828908429923*^9, 3.606828946154499*^9}, {3.606828981149033*^9, 
   3.606829034075048*^9}, {3.606829094702834*^9, 3.6068293391323338`*^9}, {
   3.606829376436284*^9, 3.606829538750834*^9}, {3.6068295839424667`*^9, 
   3.606829631900313*^9}, {3.606829681665605*^9, 3.606829686025303*^9}, {
   3.606829716822998*^9, 3.6068298313245*^9}, {3.606829862654848*^9, 
   3.6068299178258667`*^9}, {3.6068299572074423`*^9, 3.606829976555254*^9}, {
   3.606830024955415*^9, 3.606830029496543*^9}, {3.606830131253484*^9, 
   3.6068301423308783`*^9}, {3.606864873824407*^9, 3.6068648741748037`*^9}, {
   3.606865645126073*^9, 3.60686566135109*^9}, {3.606865703967572*^9, 
   3.60686570666934*^9}, 3.6068657381610203`*^9, {3.606865839391551*^9, 
   3.606865882471078*^9}, {3.60686592805552*^9, 3.606865970413701*^9}, {
   3.6068662181763897`*^9, 3.606866229749421*^9}, {3.6068665067745743`*^9, 
   3.6068665547421913`*^9}, {3.606866684054366*^9, 3.6068666905750637`*^9}, {
   3.606867352030822*^9, 3.606867375349222*^9}, {3.606868124516469*^9, 
   3.606868169147903*^9}, {3.606871880583579*^9, 3.6068718808937473`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "\[Chi]max", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{"minParticles", "\[Rule]", "10"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Chi]max", "[", 
    RowBox[{"universe_", ",", "burst", ",", "detectorArea_", ",", "z_", ",", 
     RowBox[{"{", 
      RowBox[{"\[Omega]1_", ",", "\[Omega]2_"}], "}"}], ",", 
     RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"burstValues", ",", "int", ",", "\[Chi]0"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"burstValues", "=", 
       RowBox[{"{", 
        RowBox[{
        "\[Gamma]", ",", "\[Eta]0", ",", "r0", ",", "n", ",", "\[Omega]0", 
         ",", "\[Theta]0", ",", "k", ",", "\[Alpha]"}], "}"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"int", "[", 
        RowBox[{"\[Chi]_", "?", "NumberQ"}], "]"}], ":=", 
       RowBox[{
        RowBox[{"p", "[", 
         RowBox[{"universe", ",", "burstValues", ",", 
          RowBox[{"{", 
           RowBox[{"detectorArea", ",", "z", ",", "\[Chi]"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0.", ",", "\[Infinity]"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"\[Omega]1", ",", "\[Omega]2"}], "}"}]}], "]"}], "-", 
        RowBox[{"OptionValue", "[", "minParticles", "]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"int", "[", "0", "]"}], "<", "0"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"Return", "[", "0", "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"\[Chi]0", "=", 
          FractionBox["1", "\[Gamma]"]}], ";", "\[IndentingNewLine]", 
         RowBox[{"While", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"int", "[", "\[Chi]0", "]"}], ">", "0"}], ",", 
           RowBox[{
            RowBox[{"\[Chi]0", "*=", "2."}], ";"}]}], "]"}], ";"}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"\[Chi]", "/.", 
       RowBox[{"FindRoot", "[", 
        RowBox[{
         RowBox[{"int", "[", "\[Chi]", "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"\[Chi]", ",", "0", ",", "\[Chi]0"}], "}"}]}], "]"}]}]}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]}], "Input",
 InitializationGroup->True,
 CellChangeTimes->{{3.5921857052057743`*^9, 3.592185803579471*^9}, {
   3.59218608379284*^9, 3.592186084456647*^9}, {3.592186118768695*^9, 
   3.5921861369850273`*^9}, {3.592186279322113*^9, 3.592186283263797*^9}, {
   3.592186408819564*^9, 3.592186409833569*^9}, {3.592186514998681*^9, 
   3.5921865161561813`*^9}, {3.592186549874604*^9, 3.592186550490327*^9}, {
   3.592186845398295*^9, 3.592186871706634*^9}, {3.592186905081287*^9, 
   3.592186988885932*^9}, {3.592187058690855*^9, 3.5921870590983143`*^9}, 
   3.592189794467548*^9, {3.592523272494398*^9, 3.592523283652163*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"burstDensity", "[", 
    RowBox[{"population", ",", "z_"}], "]"}], ":=", 
   RowBox[{"density0", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", "z"}], ")"}], "index"], 
    RowBox[{"Exp", "[", 
     RowBox[{"-", 
      FractionBox["z", "zc"]}], "]"}]}]}], ";"}]], "Input",
 InitializationGroup->True,
 CellChangeTimes->{{3.5856137215181513`*^9, 3.585613732106592*^9}, {
  3.5856139108435183`*^9, 3.585613914751878*^9}, {3.585613970434301*^9, 
  3.585613975955866*^9}, {3.585614006163372*^9, 3.585614030084044*^9}, {
  3.586064013498889*^9, 3.586064020618878*^9}, {3.5860640700328197`*^9, 
  3.586064086192721*^9}, {3.5860641284860764`*^9, 3.586064134581768*^9}, {
  3.586067617826783*^9, 3.5860676238822393`*^9}, {3.586084016960991*^9, 
  3.586084058159371*^9}, {3.5860841349582148`*^9, 3.586084154055051*^9}, {
  3.592195778970891*^9, 3.59219584478927*^9}, {3.592200474175756*^9, 
  3.592200496437546*^9}, {3.592532263911756*^9, 3.592532264849284*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"phaseVolume", "[", 
    RowBox[{"universe_", ",", "population_", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"z1_", "?", "NumberQ"}], ",", 
       RowBox[{"z2_", "?", "NumberQ"}]}], "}"}]}], "]"}], ":=", 
   RowBox[{"NIntegrate", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"shellVolumePerRedshift", "[", 
       RowBox[{"universe", ",", "z"}], "]"}], 
      RowBox[{"burstDensity", "[", 
       RowBox[{"population", ",", "z"}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"z", ",", "z1", ",", "z2"}], "}"}]}], "]"}]}], ";"}]], "Input",
 InitializationGroup->True,
 CellChangeTimes->{{3.5925456326017933`*^9, 3.592545732196768*^9}, {
   3.592545783538019*^9, 3.592545786773512*^9}, {3.592546012556716*^9, 
   3.592546018044792*^9}, {3.593840399592741*^9, 3.593840416703673*^9}, {
   3.5938404598645267`*^9, 3.593840516220233*^9}, {3.593840547309245*^9, 
   3.593840557819276*^9}, {3.593840595878455*^9, 3.593840629211656*^9}, 
   3.593848457587241*^9, {3.593848504424852*^9, 3.593848527916236*^9}, {
   3.593848570125452*^9, 3.593848578108759*^9}, {3.6068654537948847`*^9, 
   3.606865477794442*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"randomRedshift", "[", 
    RowBox[{"universe_", ",", "population_", ",", 
     RowBox[{"{", 
      RowBox[{"z1_", ",", "z2_"}], "}"}]}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"total", ",", "chosenVolume"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"total", "=", 
       RowBox[{"phaseVolume", "[", 
        RowBox[{"universe", ",", "population", ",", 
         RowBox[{"{", 
          RowBox[{"z1", ",", "z2"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"chosenVolume", "=", 
       RowBox[{"RandomReal", "[", "total", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"z", "/.", 
       RowBox[{"FindRoot", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"phaseVolume", "[", 
           RowBox[{"universe", ",", "population", ",", 
            RowBox[{"{", 
             RowBox[{"z1", ",", "z"}], "}"}]}], "]"}], "-", "chosenVolume"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{"z", ",", "z1", ",", "z2"}], "}"}]}], "]"}]}]}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 InitializationGroup->True,
 CellChangeTimes->{{3.59383960775867*^9, 3.593839708028894*^9}, {
  3.593839760856065*^9, 3.59383978528448*^9}, {3.593839919312972*^9, 
  3.593839927982379*^9}, {3.5938399605789957`*^9, 3.59383998061572*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"randomAngle", "[", 
    RowBox[{"{", 
     RowBox[{"\[Chi]1_", ",", "\[Chi]2_"}], "}"}], "]"}], ":=", 
   SqrtBox[
    RowBox[{"RandomReal", "[", 
     RowBox[{"{", 
      RowBox[{
       SuperscriptBox["\[Chi]1", "2"], ",", 
       SuperscriptBox["\[Chi]2", "2"]}], "}"}], "]"}]]}], ";"}]], "Input",
 InitializationGroup->True,
 CellChangeTimes->{{3.593839870415963*^9, 3.593839884885872*^9}, {
  3.593839988050838*^9, 3.593840005353404*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"inRegionQ", "[", 
    RowBox[{"region_", ",", "point_"}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", "i", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"i", "=", "1"}], ",", 
        RowBox[{"i", "\[LessEqual]", 
         RowBox[{"Length", "[", "region", "]"}]}], ",", 
        RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"region", "[", 
               RowBox[{"[", "i", "]"}], "]"}], "[", 
              RowBox[{"[", "1", "]"}], "]"}], "\[LessEqual]", 
             RowBox[{"point", "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], "&&", 
            RowBox[{
             RowBox[{
              RowBox[{"region", "[", 
               RowBox[{"[", "i", "]"}], "]"}], "[", 
              RowBox[{"[", "2", "]"}], "]"}], "\[LessEqual]", 
             RowBox[{"point", "[", 
              RowBox[{"[", "2", "]"}], "]"}]}]}], ",", 
           RowBox[{"Return", "[", "True", "]"}]}], "]"}], ";"}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"Return", "[", "False", "]"}], ";"}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}]], "Input",
 InitializationGroup->True,
 CellChangeTimes->{{3.5940765388467484`*^9, 3.5940765483433647`*^9}, {
  3.594076622776572*^9, 3.594076714616952*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"addToRegion", "[", 
    RowBox[{"region_", ",", "point_"}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"i", ",", "j"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"i", "=", "1"}], ",", 
        RowBox[{"i", "\[LessEqual]", 
         RowBox[{"Length", "[", "region", "]"}]}], ",", 
        RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"region", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "[", 
             RowBox[{"[", "1", "]"}], "]"}], ">", 
            RowBox[{"point", "[", 
             RowBox[{"[", "1", "]"}], "]"}]}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"i", "\[Equal]", "1"}], "||", 
               RowBox[{
                RowBox[{
                 RowBox[{"region", "[", 
                  RowBox[{"[", 
                   RowBox[{"i", "-", "1"}], "]"}], "]"}], "[", 
                 RowBox[{"[", "2", "]"}], "]"}], ">", 
                RowBox[{"point", "[", 
                 RowBox[{"[", "2", "]"}], "]"}]}]}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"For", "[", 
                RowBox[{
                 RowBox[{"j", "=", "i"}], ",", 
                 RowBox[{
                  RowBox[{"j", "\[LessEqual]", 
                   RowBox[{"Length", "[", "region", "]"}]}], "&&", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"region", "[", 
                    RowBox[{"[", "j", "]"}], "]"}], "[", 
                    RowBox[{"[", "2", "]"}], "]"}], ">", 
                   RowBox[{"point", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}]}], ",", 
                 RowBox[{"j", "++"}]}], "]"}], ";", "\[IndentingNewLine]", 
               RowBox[{"Return", "[", 
                RowBox[{"Insert", "[", 
                 RowBox[{
                  RowBox[{"Drop", "[", 
                   RowBox[{"region", ",", 
                    RowBox[{"{", 
                    RowBox[{"i", ",", 
                    RowBox[{"j", "-", "1"}]}], "}"}]}], "]"}], ",", "point", 
                  ",", "i"}], "]"}], "]"}], ";"}], "\[IndentingNewLine]", ",",
               "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"Return", "[", "region", "]"}], ";"}]}], 
             "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", 
          "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"Length", "[", "region", "]"}], "\[Equal]", "0"}], "||", 
         RowBox[{
          RowBox[{
           RowBox[{"region", "[", 
            RowBox[{"[", 
             RowBox[{"Length", "[", "region", "]"}], "]"}], "]"}], "[", 
           RowBox[{"[", "2", "]"}], "]"}], ">", 
          RowBox[{"point", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}]}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Return", "[", 
          RowBox[{"Insert", "[", 
           RowBox[{"region", ",", "point", ",", 
            RowBox[{
             RowBox[{"Length", "[", "region", "]"}], "+", "1"}]}], "]"}], 
          "]"}], ";"}], "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Return", "[", "region", "]"}], ";"}]}], 
       "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}]], "Input",
 InitializationGroup->True,
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQBWIQXSGmb6hx/JVjsOIXMN2TymEGokXWTwLTSbZ1NSD6
T9cVML2ryq1OE0jPDctvANFd2RWzQHTE7BVgWq6Sbw2IXrZqxn4Qvan/4mEQ
/SDlBZjmfLD9IojW+tx3DUQ/Myi8C6LvXbO4B6JNPG0+g+hbVuvA9I/N6exa
QFp1YxIniO5P/MULonebcvKB6e1W/iDa0iwITNfdsI8G0XL3doDpvbyxKSB6
2qIEMP3u55YMED3rZkMBiL5zWbUURL+5faQRRE+4LtwOou26vTpA9LXiqb0g
mv3gPzDdwmPArA2kN4iIsYLohV8W8YPoZc9WgWkAgsCucw==
  "]],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "plotRegion", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{"axesOrigin", "\[Rule]", "Automatic"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"plotRegion", "[", 
    RowBox[{"region_", ",", "range_", ",", 
     RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", "plotPoints", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Length", "[", "region", "]"}], "\[Equal]", "0"}], ",", 
        RowBox[{"Return", "[", 
         RowBox[{"ListPlot", "[", 
          RowBox[{
           RowBox[{"{", "Missing", "}"}], ",", 
           RowBox[{"PlotRange", "\[Rule]", "range"}]}], "]"}], "]"}]}], "]"}],
       ";", "\[IndentingNewLine]", 
      RowBox[{"plotPoints", "=", 
       RowBox[{"Flatten", "[", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"region", "[", 
              RowBox[{"[", "i", "]"}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{"region", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", 
               RowBox[{
                RowBox[{"region", "[", 
                 RowBox[{"[", "i", "]"}], "]"}], "[", 
                RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", 
             RowBox[{
              RowBox[{"Length", "[", "region", "]"}], "-", "1"}]}], "}"}]}], 
          "]"}], ",", "1"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"plotPoints", ",", 
        RowBox[{"region", "[", 
         RowBox[{"[", 
          RowBox[{"Length", "[", "region", "]"}], "]"}], "]"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"plotPoints", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"range", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "[", 
           RowBox[{"[", "2", "]"}], "]"}], ",", 
          RowBox[{
           RowBox[{"region", "[", 
            RowBox[{"[", 
             RowBox[{"Length", "[", "region", "]"}], "]"}], "]"}], "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"ListPlot", "[", 
       RowBox[{"plotPoints", ",", 
        RowBox[{"PlotStyle", "\[Rule]", "LightRed"}], ",", 
        RowBox[{"Joined", "\[Rule]", "True"}], ",", 
        RowBox[{"PlotRange", "\[Rule]", "range"}], ",", 
        RowBox[{"Filling", "\[Rule]", "Top"}], ",", 
        RowBox[{"FillingStyle", "\[Rule]", "LightRed"}], ",", 
        RowBox[{"AxesOrigin", "\[Rule]", 
         RowBox[{"OptionValue", "[", "axesOrigin", "]"}]}]}], "]"}]}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]}], "Input",
 InitializationGroup->True,
 CellChangeTimes->{{3.594076740666135*^9, 3.594076753708782*^9}, {
  3.594076887144764*^9, 3.5940769296014957`*^9}, {3.594076973234046*^9, 
  3.59407713802288*^9}, {3.594077211024296*^9, 3.594077213670301*^9}, {
  3.594079066328897*^9, 3.5940791448582373`*^9}, {3.594081529151717*^9, 
  3.594081574465996*^9}, {3.594081645589141*^9, 3.594081719987425*^9}, {
  3.594081802583469*^9, 3.5940818109649057`*^9}, {3.594081844567368*^9, 
  3.594081846344102*^9}, {3.594081979894787*^9, 3.594082001094616*^9}, {
  3.594082516730349*^9, 3.594082520156005*^9}, {3.59408255227765*^9, 
  3.594082665151011*^9}, {3.5940829266367292`*^9, 3.594082939493443*^9}, {
  3.5940844131326103`*^9, 3.594084500888402*^9}, {3.594084539984497*^9, 
  3.594084551296248*^9}, {3.5940846618329763`*^9, 3.594084702122776*^9}, {
  3.594112518061047*^9, 3.594112579084134*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"burstSample", "::", "usage"}], "=", 
   "\"\<burstSample computes a sample of properties of uniformly distributed \
GRBs. Possible values for computedValues are {z, \[Chi], pTotal, pLow, pHigh, \
duration, \[Kappa]}\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "burstSample", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"randomSeed", "\[Rule]", "\"\<Gamma Rays\>\""}], ",", 
     RowBox[{"zmin", "\[Rule]", "0.1"}], ",", 
     RowBox[{"computedValues", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<z\>\"", ",", "\"\<\[Chi]\>\"", ",", "\"\<pLow\>\"", ",", 
        "\"\<pHigh\>\"", ",", "\"\<duration\>\"", ",", "\"\<\[Kappa]\>\""}], 
       "}"}]}], ",", 
     RowBox[{"minParticles", "\[Rule]", "10"}], ",", 
     RowBox[{"monitorQ", "\[Rule]", "False"}], ",", 
     RowBox[{"logQ", "\[Rule]", "False"}], ",", 
     RowBox[{"accurateQ", "\[Rule]", "True"}], ",", 
     RowBox[{"pointCount", "\[Rule]", "20"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"burstSample", "[", 
    RowBox[{
    "universe_", ",", "population_", ",", "burst_", ",", "detectorArea_", ",", 
     RowBox[{"{", 
      RowBox[{"\[Omega]1_", ",", "\[Omega]2_", ",", "\[Omega]3_"}], "}"}], 
     ",", "n_", ",", 
     RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
      "z2", ",", "\[Chi]2", ",", "it", ",", "zc", ",", "\[Chi]c", ",", 
       "pointsChosen", ",", "startedCount", ",", "completedCount", ",", 
       "result", ",", "pointResult", ",", "region", ",", "print"}], 
      "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"OptionValue", "[", "logQ", "]"}], ",", 
        RowBox[{"Print", "[", "\"\<initializing\>\"", "]"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"SeedRandom", "[", 
       RowBox[{"OptionValue", "[", "randomSeed", "]"}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"pointsChosen", "=", 
       RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"startedCount", "=", "0"}], ";", "\[IndentingNewLine]", 
      RowBox[{"completedCount", "=", "0"}], ";", "\[IndentingNewLine]", 
      RowBox[{"SetSharedVariable", "[", "completedCount", "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"SetSharedVariable", "[", "startedCount", "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"region", "=", 
       RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"it", "=", "0"}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"OptionValue", "[", "monitorQ", "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"print", "=", 
         RowBox[{"PrintTemporary", "[", 
          RowBox[{"Dynamic", "[", "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"it", "\[Equal]", "0"}], ",", "\"\<initializing\>\"", 
             ",", "\[IndentingNewLine]", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"startedCount", ">", "0"}], ",", 
               RowBox[{
                RowBox[{"ToString", "[", "completedCount", "]"}], "<>", 
                "\"\</\>\"", "<>", 
                RowBox[{"ToString", "[", "n", "]"}], "<>", 
                "\"\< bursts computed\>\""}], ",", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"ToString", "[", 
                 RowBox[{"Length", "[", "pointsChosen", "]"}], "]"}], "<>", 
                "\"\</\>\"", "<>", 
                RowBox[{"ToString", "[", "n", "]"}], "<>", 
                "\"\< bursts chosen\>\""}]}], "\[IndentingNewLine]", "]"}]}], 
            "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", "]"}], 
          "]"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"z2", "=", 
       RowBox[{"zmax", "[", 
        RowBox[{
        "universe", ",", "burst", ",", "detectorArea", ",", "0", ",", 
         RowBox[{"{", 
          RowBox[{"\[Omega]2", ",", "\[Omega]3"}], "}"}], ",", 
         RowBox[{"minParticles", "\[Rule]", 
          RowBox[{"OptionValue", "[", "minParticles", "]"}]}]}], "]"}]}], ";",
       "\[IndentingNewLine]", 
      RowBox[{"\[Chi]2", "=", 
       RowBox[{"\[Chi]max", "[", 
        RowBox[{"universe", ",", "burst", ",", "detectorArea", ",", 
         RowBox[{"OptionValue", "[", "zmin", "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"\[Omega]2", ",", "\[Omega]3"}], "}"}], ",", 
         RowBox[{"minParticles", "\[Rule]", 
          RowBox[{"OptionValue", "[", "minParticles", "]"}]}]}], "]"}]}], ";",
       "\[IndentingNewLine]", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"it", "=", "1"}], ",", 
        RowBox[{"it", "\[LessEqual]", "n"}], ",", 
        RowBox[{"it", "++"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"zc", "=", 
          RowBox[{"randomRedshift", "[", 
           RowBox[{"universe", ",", "population", ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"OptionValue", "[", "zmin", "]"}], ",", "z2"}], "}"}]}],
            "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"\[Chi]c", "=", 
          RowBox[{"randomAngle", "[", 
           RowBox[{"{", 
            RowBox[{"0", ",", "\[Chi]2"}], "}"}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"inRegionQ", "[", 
            RowBox[{"region", ",", 
             RowBox[{"{", 
              RowBox[{"zc", ",", "\[Chi]c"}], "}"}]}], "]"}], ",", 
           RowBox[{"it", "--"}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"p", "[", 
                RowBox[{"universe", ",", "burst", ",", 
                 RowBox[{"{", 
                  RowBox[{"detectorArea", ",", "zc", ",", "\[Chi]c"}], "}"}], 
                 ",", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "\[Infinity]"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"\[Omega]2", ",", "\[Omega]3"}], "}"}]}], "]"}], 
               "\[GreaterEqual]", "10."}], ",", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"AppendTo", "[", 
                RowBox[{"pointsChosen", ",", 
                 RowBox[{"{", 
                  RowBox[{"zc", ",", "\[Chi]c"}], "}"}]}], "]"}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"OptionValue", "[", "logQ", "]"}], ",", 
                 RowBox[{"Print", "[", 
                  RowBox[{
                   RowBox[{"ToString", "[", 
                    RowBox[{"Length", "[", "pointsChosen", "]"}], "]"}], 
                   "<>", "\"\</\>\"", "<>", 
                   RowBox[{"ToString", "[", "n", "]"}], "<>", 
                   "\"\< values chosen\>\""}], "]"}]}], "]"}], ";"}], 
              "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"region", "=", 
                RowBox[{"addToRegion", "[", 
                 RowBox[{"region", ",", 
                  RowBox[{"{", 
                   RowBox[{"zc", ",", "\[Chi]c"}], "}"}]}], "]"}]}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"it", "--"}], ";"}]}], "\[IndentingNewLine]", "]"}], 
            ";"}]}], "\[IndentingNewLine]", "]"}], ";"}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"\[Kappa]Load", "[", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"result", "=", 
       RowBox[{"ParallelTable", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"startedCount", "++"}], ";", "\[IndentingNewLine]", 
          RowBox[{"pointResult", "=", 
           RowBox[{"ReleaseHold", "[", 
            RowBox[{
             RowBox[{"OptionValue", "[", "computedValues", "]"}], "/.", 
             RowBox[{"{", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"\"\<z\>\"", "\[Rule]", 
                RowBox[{"Hold", "[", 
                 RowBox[{"point", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], "]"}]}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{"\"\<\[Chi]\>\"", "\[Rule]", 
                RowBox[{"Hold", "[", 
                 RowBox[{"point", "[", 
                  RowBox[{"[", "2", "]"}], "]"}], "]"}]}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{"\"\<pTotal\>\"", "\[Rule]", 
                RowBox[{"Hold", "[", 
                 RowBox[{"p", "[", 
                  RowBox[{"universe", ",", "burst", ",", 
                   RowBox[{"Flatten", "[", 
                    RowBox[{"{", 
                    RowBox[{"detectorArea", ",", "point"}], "}"}], "]"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"0", ",", "\[Infinity]"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"\[Omega]1", ",", "\[Omega]3"}], "}"}]}], "]"}], 
                 "]"}]}], ",", "\[IndentingNewLine]", 
               RowBox[{"\"\<pLow\>\"", "\[Rule]", 
                RowBox[{"Hold", "[", 
                 RowBox[{"p", "[", 
                  RowBox[{"universe", ",", "burst", ",", 
                   RowBox[{"Flatten", "[", 
                    RowBox[{"{", 
                    RowBox[{"detectorArea", ",", "point"}], "}"}], "]"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"0", ",", "\[Infinity]"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"\[Omega]1", ",", "\[Omega]2"}], "}"}]}], "]"}], 
                 "]"}]}], ",", "\[IndentingNewLine]", 
               RowBox[{"\"\<pHigh\>\"", "\[Rule]", 
                RowBox[{"Hold", "[", 
                 RowBox[{"p", "[", 
                  RowBox[{"universe", ",", "burst", ",", 
                   RowBox[{"Flatten", "[", 
                    RowBox[{"{", 
                    RowBox[{"detectorArea", ",", "point"}], "}"}], "]"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"0", ",", "\[Infinity]"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"\[Omega]2", ",", "\[Omega]3"}], "}"}]}], "]"}], 
                 "]"}]}], ",", "\[IndentingNewLine]", 
               RowBox[{"\"\<duration\>\"", "\[Rule]", 
                RowBox[{"Hold", "[", 
                 RowBox[{"duration", "[", 
                  RowBox[{"universe", ",", "burst", ",", 
                   RowBox[{"Flatten", "[", 
                    RowBox[{"{", 
                    RowBox[{"detectorArea", ",", "point"}], "}"}], "]"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"\[Omega]1", ",", "\[Omega]3"}], "}"}]}], "]"}], 
                 "]"}]}], ",", "\[IndentingNewLine]", 
               RowBox[{"\"\<\[Kappa]\>\"", "\[Rule]", 
                RowBox[{"Hold", "[", 
                 RowBox[{"\[Kappa]Cache", "[", 
                  RowBox[{"universe", ",", "burst", ",", 
                   RowBox[{"Flatten", "[", 
                    RowBox[{"{", 
                    RowBox[{"detectorArea", ",", "point"}], "}"}], "]"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"\[Omega]1", ",", "\[Omega]2", ",", "\[Omega]3"}],
                     "}"}], ",", 
                   RowBox[{"accurateQ", "\[Rule]", 
                    RowBox[{"OptionValue", "[", "accurateQ", "]"}]}], ",", 
                   RowBox[{"pointCount", "\[Rule]", 
                    RowBox[{"OptionValue", "[", "pointCount", "]"}]}]}], 
                  "]"}], "]"}]}]}], "\[IndentingNewLine]", "}"}]}], "]"}]}], 
          ";", "\[IndentingNewLine]", 
          RowBox[{"completedCount", "++"}], ";", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"OptionValue", "[", "logQ", "]"}], ",", 
            RowBox[{"Print", "[", 
             RowBox[{
              RowBox[{"ToString", "[", "completedCount", "]"}], "<>", 
              "\"\</\>\"", "<>", 
              RowBox[{"ToString", "[", "n", "]"}], "<>", 
              "\"\< bursts computed\>\""}], "]"}]}], "]"}], ";", 
          "\[IndentingNewLine]", "pointResult"}], ",", 
         RowBox[{"{", 
          RowBox[{"point", ",", "pointsChosen"}], "}"}], ",", 
         RowBox[{"Method", "\[Rule]", "\"\<FinestGrained\>\""}]}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"\[Kappa]Save", "[", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"OptionValue", "[", "monitorQ", "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"NotebookDelete", "[", "print", "]"}], ";"}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"UnsetShared", "[", "completedCount", "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"UnsetShared", "[", "startedCount", "]"}], ";", 
      "\[IndentingNewLine]", "result"}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}]}], "Input",
 InitializationGroup->True,
 CellChangeTimes->{{3.593829498556116*^9, 3.59382957225982*^9}, {
   3.5938296333935223`*^9, 3.593829650765555*^9}, {3.593829729257169*^9, 
   3.593829863830003*^9}, {3.593829948353723*^9, 3.593829985930216*^9}, {
   3.593830314555534*^9, 3.593830316568328*^9}, {3.5938303955295*^9, 
   3.593830399255043*^9}, {3.593830452558757*^9, 3.593830479748863*^9}, {
   3.5938305606191387`*^9, 3.5938305701919413`*^9}, {3.593830632818996*^9, 
   3.59383063481174*^9}, {3.593830687683269*^9, 3.593830688337278*^9}, {
   3.593840096425436*^9, 3.593840294326721*^9}, {3.593848682486663*^9, 
   3.593849078274324*^9}, {3.59384921744659*^9, 3.5938492199572487`*^9}, {
   3.593849480530299*^9, 3.5938494812775173`*^9}, {3.593849994974738*^9, 
   3.5938499988794203`*^9}, {3.593850079391433*^9, 3.5938501227850237`*^9}, {
   3.593850166907522*^9, 3.593850205496826*^9}, {3.593850267425778*^9, 
   3.59385026855984*^9}, {3.59385038777316*^9, 3.593850400141574*^9}, {
   3.593850674796912*^9, 3.5938507684263363`*^9}, {3.5938508324764757`*^9, 
   3.5938508378329277`*^9}, {3.593851094453013*^9, 3.593851163360837*^9}, {
   3.5938512097529707`*^9, 3.593851230453968*^9}, {3.593851260561194*^9, 
   3.5938513794818287`*^9}, {3.59385141893301*^9, 3.593851437851431*^9}, {
   3.593851490277545*^9, 3.593851504700981*^9}, {3.593851627426011*^9, 
   3.5938516293756237`*^9}, {3.593851667865361*^9, 3.5938517376806107`*^9}, {
   3.593851781761018*^9, 3.593851888733378*^9}, {3.593852616644332*^9, 
   3.593852617341557*^9}, {3.593852672820776*^9, 3.593852673697074*^9}, {
   3.593852708643248*^9, 3.593852820131774*^9}, {3.5938528589407587`*^9, 
   3.5938528736718283`*^9}, {3.593852903771212*^9, 3.593852906251026*^9}, {
   3.593852942052574*^9, 3.593852946865549*^9}, {3.593853026757545*^9, 
   3.59385313091962*^9}, {3.593853278451165*^9, 3.593853280586754*^9}, {
   3.593853667365419*^9, 3.593853669087388*^9}, {3.5938538857049637`*^9, 
   3.5938538873035994`*^9}, {3.593853938550721*^9, 3.593854041746407*^9}, {
   3.5938540875196657`*^9, 3.593854165869815*^9}, {3.593854195921035*^9, 
   3.5938541990335493`*^9}, {3.593854361548442*^9, 3.593854364134231*^9}, {
   3.593854408187831*^9, 3.5938544125677643`*^9}, {3.5938549516104097`*^9, 
   3.593855176998748*^9}, {3.593855275949841*^9, 3.5938556801370163`*^9}, {
   3.5938557759104443`*^9, 3.5938557792154713`*^9}, {3.593855856547268*^9, 
   3.593855863202734*^9}, {3.593855962358906*^9, 3.593855978342469*^9}, {
   3.593856142902267*^9, 3.593856168329731*^9}, {3.593856344608197*^9, 
   3.593856598244113*^9}, {3.5938567970207977`*^9, 3.593856798435618*^9}, {
   3.593857031649642*^9, 3.593857036411066*^9}, {3.593857507823163*^9, 
   3.5938576089383163`*^9}, {3.59385774283605*^9, 3.59385777425835*^9}, {
   3.593857846063458*^9, 3.593857881334984*^9}, {3.593858053047345*^9, 
   3.593858053673588*^9}, {3.593858278536469*^9, 3.593858288350581*^9}, {
   3.593858452577668*^9, 3.5938585083963346`*^9}, {3.593858854559525*^9, 
   3.5938588554624653`*^9}, {3.593859279347118*^9, 3.5938593385557127`*^9}, {
   3.5938593914195547`*^9, 3.5938594430331*^9}, {3.59385950945266*^9, 
   3.593859567259824*^9}, {3.593859602970642*^9, 3.5938596883596077`*^9}, {
   3.5938597287427473`*^9, 3.593859728986142*^9}, {3.593859766702186*^9, 
   3.593859866714752*^9}, {3.593859964886874*^9, 3.593859996293497*^9}, {
   3.593860101255541*^9, 3.59386010637991*^9}, {3.593860350639338*^9, 
   3.593860515294915*^9}, {3.593860582282308*^9, 3.593860635507045*^9}, 
   3.593860673784154*^9, 3.593860704901205*^9, {3.593860747327465*^9, 
   3.593860808162122*^9}, {3.593860846071422*^9, 3.593860848420909*^9}, {
   3.593861089471142*^9, 3.59386122742484*^9}, {3.593861367306939*^9, 
   3.593861515*^9}, {3.593861555385614*^9, 3.5938615767901173`*^9}, {
   3.593861679387744*^9, 3.5938618316938353`*^9}, {3.593861882455223*^9, 
   3.593862076897107*^9}, {3.593862112771475*^9, 3.5938621474337683`*^9}, {
   3.593862485061495*^9, 3.593862488326621*^9}, {3.59386277888704*^9, 
   3.593862783850854*^9}, {3.593869705876305*^9, 3.593869707234949*^9}, {
   3.59390536864774*^9, 3.593905371038904*^9}, {3.593905570502734*^9, 
   3.593905571028948*^9}, {3.5939057263620462`*^9, 3.5939057346045837`*^9}, {
   3.593905792263921*^9, 3.593905792800541*^9}, {3.5939070313855658`*^9, 
   3.5939070448661118`*^9}, {3.5939072078331327`*^9, 
   3.5939072088202677`*^9}, {3.59390790867693*^9, 3.593907909299418*^9}, {
   3.594080485554811*^9, 3.594080488112934*^9}, {3.5940845672121363`*^9, 
   3.5940846246693783`*^9}, {3.5940847490611277`*^9, 3.594084749770842*^9}, {
   3.604712336106201*^9, 3.6047125169729443`*^9}, {3.604712625537526*^9, 
   3.6047128833618183`*^9}, {3.604714482643263*^9, 3.604714511858768*^9}, {
   3.604717622865744*^9, 3.604717799588838*^9}, {3.6047187500966*^9, 
   3.604718752532406*^9}, {3.604982394883004*^9, 3.6049823992950172`*^9}, {
   3.606461290240944*^9, 3.606461330463808*^9}, {3.606461390191225*^9, 
   3.60646140964923*^9}, 3.6064614478805027`*^9, {3.606461536445318*^9, 
   3.6064615376592503`*^9}, {3.606461578506742*^9, 3.606461584188156*^9}, {
   3.606462410983151*^9, 3.606462426530785*^9}, {3.606704535575382*^9, 
   3.606704536174556*^9}, {3.606779427199641*^9, 3.606779451456203*^9}, {
   3.60677957695441*^9, 3.606779593345935*^9}, {3.606779657990761*^9, 
   3.6067796882598352`*^9}, {3.6067797801841908`*^9, 3.606779806824257*^9}, {
   3.60677987494427*^9, 3.606779883006649*^9}, {3.606779922062834*^9, 
   3.606779980642207*^9}, {3.606780031413405*^9, 3.606780148376567*^9}, {
   3.606780190645553*^9, 3.606780192429162*^9}, {3.606780523410804*^9, 
   3.6067805257242727`*^9}, {3.606780806970799*^9, 3.606780893262601*^9}, {
   3.606780953727921*^9, 3.606781121169072*^9}, {3.606781158065321*^9, 
   3.6067811969454403`*^9}, {3.60678124819809*^9, 3.606781248510901*^9}, {
   3.6067813983969584`*^9, 3.6067814449666367`*^9}, {3.6068141413222837`*^9, 
   3.606814170040009*^9}, {3.6068143925445843`*^9, 3.6068144291904287`*^9}, {
   3.606815069477256*^9, 3.606815080365407*^9}, {3.607151883115275*^9, 
   3.607152008873273*^9}, {3.607258731945478*^9, 3.607258919825045*^9}, {
   3.6075138295368958`*^9, 3.6075139627481403`*^9}, {3.607756320646049*^9, 
   3.607756335564898*^9}, {3.607756381982438*^9, 3.607756397690493*^9}, {
   3.6077564956353703`*^9, 3.6077564957554903`*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Very high energy bursts fraction", "Subsection",
 InitializationGroup->True,
 CellChangeTimes->{{3.594161718309668*^9, 3.5941617195413513`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "burstFraction", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{"minParticles", "\[Rule]", "10"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"burstFraction", "[", 
    RowBox[{
    "universe_", ",", "population_", ",", "burst_", ",", "detectorArea_", ",", 
     RowBox[{"{", 
      RowBox[{"\[Omega]1_", ",", "\[Omega]2_", ",", "\[Omega]3_"}], "}"}], 
     ",", 
     RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"z1", ",", "z2", ",", "int"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"z1", "=", 
       RowBox[{"zmax", "[", 
        RowBox[{
        "universe", ",", "burst", ",", "detectorArea", ",", "0", ",", 
         RowBox[{"{", 
          RowBox[{"\[Omega]1", ",", "\[Omega]3"}], "}"}], ",", 
         RowBox[{"minParticles", "\[Rule]", 
          RowBox[{"OptionValue", "[", "minParticles", "]"}]}]}], "]"}]}], ";",
       "\[IndentingNewLine]", 
      RowBox[{"z2", "=", 
       RowBox[{"zmax", "[", 
        RowBox[{
        "universe", ",", "burst", ",", "detectorArea", ",", "0", ",", 
         RowBox[{"{", 
          RowBox[{"\[Omega]2", ",", "\[Omega]3"}], "}"}], ",", 
         RowBox[{"minParticles", "\[Rule]", 
          RowBox[{"OptionValue", "[", "minParticles", "]"}]}]}], "]"}]}], ";",
       "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"int", "[", 
        RowBox[{
         RowBox[{"z_", "?", "NumberQ"}], ",", 
         RowBox[{"{", 
          RowBox[{"\[Omega]l_", ",", "\[Omega]r_"}], "}"}]}], "]"}], ":=", 
       RowBox[{
        RowBox[{"burstDensity", "[", 
         RowBox[{"population", ",", "z"}], "]"}], 
        RowBox[{"shellVolumePerRedshift", "[", 
         RowBox[{"universe", ",", "z"}], "]"}], 
        SuperscriptBox[
         RowBox[{"\[Chi]max", "[", 
          RowBox[{
          "universe", ",", "burst", ",", "detectorArea", ",", "z", ",", 
           RowBox[{"{", 
            RowBox[{"\[Omega]l", ",", "\[Omega]r"}], "}"}]}], "]"}], "2"]}]}],
       ";", "\[IndentingNewLine]", 
      FractionBox[
       RowBox[{"NIntegrate", "[", 
        RowBox[{
         RowBox[{"int", "[", 
          RowBox[{"z", ",", 
           RowBox[{"{", 
            RowBox[{"\[Omega]2", ",", "\[Omega]3"}], "}"}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"z", ",", "0", ",", "z2"}], "}"}]}], "]"}], 
       RowBox[{"NIntegrate", "[", 
        RowBox[{
         RowBox[{"int", "[", 
          RowBox[{"z", ",", 
           RowBox[{"{", 
            RowBox[{"\[Omega]1", ",", "\[Omega]3"}], "}"}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"z", ",", "0", ",", "z1"}], "}"}]}], "]"}]]}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]}], "Input",
 InitializationGroup->True,
 CellChangeTimes->{{3.594161733080324*^9, 3.5941619943200397`*^9}, {
  3.5941620342003813`*^9, 3.594162081043578*^9}, {3.5941621278489513`*^9, 
  3.594162131443465*^9}, {3.594162167336042*^9, 3.594162251879923*^9}, {
  3.594162336570313*^9, 3.594162437170651*^9}, {3.59416267147491*^9, 
  3.594162671569606*^9}, {3.5941630580726967`*^9, 3.594163081727412*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Parameter fit", "Subsection",
 InitializationGroup->True,
 CellChangeTimes->{{3.606178973702729*^9, 3.606178975788898*^9}}],

Cell[CellGroupData[{

Cell["GRB 090926A", "Subsubsection",
 InitializationGroup->True,
 CellChangeTimes->{{3.607257768944193*^9, 3.607257771183319*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[Kappa]LogTarget090926A", "=", 
  RowBox[{"Mean", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Log", "[", "1.99", "]"}], ",", 
     RowBox[{"Log", "[", "6.62", "]"}]}], "}"}], "]"}]}]], "Input",
 InitializationGroup->True,
 CellChangeTimes->{{3.606180352362957*^9, 3.606180368217112*^9}, {
  3.60626074209877*^9, 3.606260744162861*^9}, {3.606301953903648*^9, 
  3.606301955327684*^9}}],

Cell[BoxData["1.289115004342659`"], "Output",
 InitializationGroup->True,
 CellChangeTimes->{
  3.606180416297801*^9, 3.6061880497160997`*^9, 3.606260637076878*^9, {
   3.60626074456896*^9, 3.606260757722821*^9}, 3.6062613817863293`*^9, 
   3.60629787289771*^9, {3.6063019557172832`*^9, 3.606301986518484*^9}, 
   3.606451006982376*^9, 3.6064597341386433`*^9, 3.6067824425190477`*^9, 
   3.606784048728424*^9, 3.606810690892744*^9, 3.606813149691449*^9, 
   3.606813706626029*^9, 3.606864907038952*^9, 3.606871942110055*^9, 
   3.606872636458856*^9, 3.6069155057826843`*^9, 3.606979140895178*^9, 
   3.6069814795657797`*^9, 3.6069869574513273`*^9, 3.607067816610353*^9, 
   3.607150083260132*^9, 3.607151359007592*^9, 3.6072579393147583`*^9, 
   3.6073401751979437`*^9, 3.607383873849971*^9, 3.607387241891794*^9, 
   3.607471017128848*^9, 3.607514153414453*^9, 3.607514296034974*^9, 
   3.60756112561919*^9, 3.607608808759405*^9, 3.6076088527227917`*^9, 
   3.607644540850947*^9, 3.607671857108952*^9, 3.607732066755419*^9, 
   3.60774351209783*^9, 3.6077597022488327`*^9, 3.607760044421145*^9, 
   3.607849897456949*^9, 3.609385697278998*^9, 3.609398989071094*^9, 
   3.609415223429325*^9, 3.609552944183731*^9, 3.609581695770032*^9, 
   3.609584501258358*^9, 3.609629005055215*^9, 3.609640322342766*^9, 
   3.609644879896455*^9, 3.6097581100682993`*^9, 3.609903047389071*^9, 
   3.609989220486473*^9, 3.610000587721759*^9, 3.610002649891004*^9, 
   3.610584794173833*^9, 3.6107199955535*^9, 3.610722858839808*^9, 
   3.610763565321711*^9, 3.6108469811443043`*^9, 3.610847597832241*^9, 
   3.610888202877263*^9, 3.611106914707658*^9, 3.612502624604056*^9, 
   3.613212093771162*^9, 3.615290130249345*^9, 3.617601513556355*^9, 
   3.617602392495511*^9, 3.61771564225793*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[Kappa]LogError090926A", "=", 
  FractionBox[
   RowBox[{
    RowBox[{"Log", "[", "6.62", "]"}], "-", 
    RowBox[{"Log", "[", "1.99", "]"}]}], "2"]}]], "Input",
 InitializationGroup->True,
 CellChangeTimes->{{3.606180376141008*^9, 3.6061804075415154`*^9}, {
  3.606181238485654*^9, 3.60618123855354*^9}, {3.606260632608694*^9, 
  3.6062606330276737`*^9}, {3.6062607394834146`*^9, 3.606260749232637*^9}, {
  3.6063019575197144`*^9, 3.6063019594379997`*^9}, {3.606784049359919*^9, 
  3.606784050799662*^9}}],

Cell[BoxData["0.600980365606258`"], "Output",
 InitializationGroup->True,
 CellChangeTimes->{
  3.6061804188101387`*^9, 3.606180503558421*^9, 3.6061812389957647`*^9, 
   3.6061880497685347`*^9, {3.6062606341109657`*^9, 3.606260654859331*^9}, {
   3.6062607399019623`*^9, 3.606260758109076*^9}, 3.6062613820826683`*^9, 
   3.60629787302879*^9, {3.6063019598690567`*^9, 3.606301986932371*^9}, 
   3.606451007051566*^9, 3.606459734187868*^9, 3.606782442963893*^9, 
   3.606784051540592*^9, 3.606810691501073*^9, 3.606813149823848*^9, 
   3.606813706675551*^9, 3.606864907120152*^9, 3.606871942176117*^9, 
   3.6068726365595293`*^9, 3.606915505867221*^9, 3.6069791409701*^9, 
   3.6069814796299334`*^9, 3.606986957501967*^9, 3.607067816696703*^9, 
   3.607150083352479*^9, 3.607151359070916*^9, 3.6072579393957233`*^9, 
   3.6073401752847013`*^9, 3.607383873899127*^9, 3.6073872419726353`*^9, 
   3.6074710172164288`*^9, 3.607514153674634*^9, 3.6075142961054897`*^9, 
   3.607561125664962*^9, 3.607608808815371*^9, 3.607608852775065*^9, 
   3.607644540897785*^9, 3.607671857166246*^9, 3.60773206680579*^9, 
   3.6077435121476507`*^9, 3.6077597023665667`*^9, 3.6077600444670973`*^9, 
   3.607849897560746*^9, 3.609385697329673*^9, 3.609398989122035*^9, 
   3.609415223484714*^9, 3.609552944225087*^9, 3.609581695820207*^9, 
   3.609584501306345*^9, 3.60962900509853*^9, 3.609640322444121*^9, 
   3.609644879994669*^9, 3.609758110106*^9, 3.609903047453915*^9, 
   3.609989220532011*^9, 3.6100005877768993`*^9, 3.610002649994079*^9, 
   3.610584794207831*^9, 3.610719995608137*^9, 3.610722858924159*^9, 
   3.6107635653994226`*^9, 3.610846981213848*^9, 3.6108475979013863`*^9, 
   3.6108882029542828`*^9, 3.611106914809622*^9, 3.612502624653235*^9, 
   3.613212093829341*^9, 3.6152901304007673`*^9, 3.617601513753664*^9, 
   3.617602392558329*^9, 3.6177156423237963`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"photonRatioLogTarget090926A", "=", 
  RowBox[{"Log", "[", "0.0570003", "]"}]}]], "Input",
 InitializationGroup->True,
 CellChangeTimes->{{3.6061809217029467`*^9, 3.606180954718638*^9}, {
   3.606181017422922*^9, 3.606181020333383*^9}, {3.6061812976806707`*^9, 
   3.606181314813086*^9}, {3.60618160742089*^9, 3.6061816158127823`*^9}, 
   3.606784059993985*^9, 3.617601433597855*^9, 3.617715575831212*^9}],

Cell[BoxData[
 RowBox[{"-", "2.8646987480035424`"}]], "Output",
 InitializationGroup->True,
 CellChangeTimes->{{3.606180947985483*^9, 3.606180975973802*^9}, 
   3.6061810209968367`*^9, 3.6061812417548027`*^9, 3.6061813543874817`*^9, {
   3.606181587018992*^9, 3.606181616386333*^9}, 3.6061880498643093`*^9, 
   3.606297873161878*^9, 3.606451007160858*^9, 3.606459734270423*^9, 
   3.6067840656517363`*^9, 3.606810695157156*^9, 3.606813150257962*^9, 
   3.6068137070412292`*^9, 3.6068649073084707`*^9, 3.6068719423739643`*^9, 
   3.606872636855194*^9, 3.6069155060534067`*^9, 3.6069791411575003`*^9, 
   3.6069814798289013`*^9, 3.606986957896832*^9, 3.607067816911079*^9, 
   3.607150083522316*^9, 3.607151359305081*^9, 3.60725793944724*^9, 
   3.607340175348632*^9, 3.607383873949205*^9, 3.6073872420245647`*^9, 
   3.607471017265929*^9, 3.607514153729521*^9, 3.6075142961689873`*^9, 
   3.6075611257142267`*^9, 3.607608808896236*^9, 3.607608852839635*^9, 
   3.607644540947682*^9, 3.607671857228724*^9, 3.607732066871545*^9, 
   3.607743512213749*^9, 3.607759702446114*^9, 3.6077600445167103`*^9, 
   3.607849897708963*^9, 3.609385697446891*^9, 3.609398989165126*^9, 
   3.60941522355273*^9, 3.6095529442750797`*^9, 3.609581695870371*^9, 
   3.6095845013571177`*^9, 3.609629005147818*^9, 3.6096403225070267`*^9, 
   3.60964488004885*^9, 3.6097581101572123`*^9, 3.609903047508329*^9, 
   3.609989220582333*^9, 3.6100005878375273`*^9, 3.610002650060519*^9, 
   3.610584794234253*^9, 3.610719995701285*^9, 3.610722858974206*^9, 
   3.610763565448584*^9, 3.610846981269308*^9, 3.610847597968759*^9, 
   3.6108882030000763`*^9, 3.6111069148657503`*^9, 3.612502624703986*^9, 
   3.613212093876215*^9, 3.615290130512012*^9, 3.6176015138103447`*^9, 
   3.6176023926427603`*^9, 3.617715576946925*^9, 3.6177156423873787`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"totalPhotonCount090926A", "=", "179.996"}], ";"}]], "Input",
 InitializationGroup->True,
 CellChangeTimes->{{3.6069697973832073`*^9, 3.606969801750536*^9}, {
   3.606969868091188*^9, 3.60696986851854*^9}, 3.6176014540853662`*^9, 
   3.617715595214025*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"duration090926A", "=", "219.5"}], ";"}]], "Input",
 InitializationGroup->True,
 CellChangeTimes->{{3.607257807363455*^9, 3.607257811609767*^9}, {
  3.60725785703913*^9, 3.607257857403326*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["GRB 090902B", "Subsubsection",
 InitializationGroup->True,
 CellChangeTimes->{{3.606782719863573*^9, 3.6067827324717197`*^9}, {
  3.607257802010275*^9, 3.607257802841473*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[Kappa]LogTarget090902B", "=", 
  RowBox[{"Mean", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Log", "[", "0.35", "]"}], ",", 
     RowBox[{"Log", "[", "0.89", "]"}]}], "}"}], "]"}]}]], "Input",
 InitializationGroup->True,
 CellChangeTimes->{{3.606782742441513*^9, 3.606782759852291*^9}, {
  3.617715614100998*^9, 3.617715616418325*^9}}],

Cell[BoxData[
 RowBox[{"-", "0.5831779703773147`"}]], "Output",
 InitializationGroup->True,
 CellChangeTimes->{
  3.606782760450143*^9, 3.606784052702538*^9, 3.606810692364193*^9, 
   3.606813150137762*^9, 3.606813706940485*^9, 3.6068649071744623`*^9, 
   3.606871942241465*^9, 3.606872636706183*^9, 3.6069155059186687`*^9, 
   3.606979141022647*^9, 3.606981479695462*^9, 3.606986957615883*^9, 
   3.607067816770409*^9, 3.607150083403623*^9, 3.60715135914456*^9, 
   3.6072579396162148`*^9, 3.607340175707185*^9, 3.6073838741136007`*^9, 
   3.6073872424615307`*^9, 3.6074710173824387`*^9, 3.607514153839959*^9, 
   3.6075142963011723`*^9, 3.6075611258496*^9, 3.607608809075963*^9, 
   3.607608852989204*^9, 3.6076445411013737`*^9, 3.607671857409779*^9, 
   3.607732067050828*^9, 3.607743512345718*^9, 3.6077597025904083`*^9, 
   3.6077600446906548`*^9, 3.607849897871962*^9, 3.609385697662386*^9, 
   3.6093989892889967`*^9, 3.609415223733163*^9, 3.609552944390628*^9, 
   3.6095816961014833`*^9, 3.609584501467889*^9, 3.60962900531487*^9, 
   3.609640322670535*^9, 3.6096448801932077`*^9, 3.60975811030657*^9, 
   3.6099030475894337`*^9, 3.609989220698369*^9, 3.610000587998432*^9, 
   3.61000265024992*^9, 3.6105847942760887`*^9, 3.61071999609564*^9, 
   3.6107228590912333`*^9, 3.6107635655630608`*^9, 3.6108469813663*^9, 
   3.610847598103818*^9, 3.610888203203802*^9, 3.611106914982212*^9, 
   3.612502624833407*^9, 3.613212093964305*^9, 3.615290130622211*^9, 
   3.617601513916724*^9, 3.6176023929923697`*^9, {3.6177156220945463`*^9, 
   3.617715642505413*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[Kappa]LogError090902B", "=", 
  FractionBox[
   RowBox[{
    RowBox[{"Log", "[", "0.89", "]"}], "-", 
    RowBox[{"Log", "[", "0.35", "]"}]}], "2"]}]], "Input",
 InitializationGroup->True,
 CellChangeTimes->{{3.606782762736133*^9, 3.606782776969884*^9}, {
  3.6177156270113077`*^9, 3.6177156270951357`*^9}}],

Cell[BoxData["0.4666441541213632`"], "Output",
 InitializationGroup->True,
 CellChangeTimes->{
  3.606782777317568*^9, 3.6067840534146357`*^9, 3.6068106926463823`*^9, 
   3.606813150188115*^9, 3.606813706990017*^9, 3.606864907241691*^9, 
   3.606871942307354*^9, 3.60687263680593*^9, 3.6069155059870033`*^9, 
   3.6069791410909443`*^9, 3.606981479766555*^9, 3.606986957780545*^9, 
   3.607067816830618*^9, 3.607150083454678*^9, 3.607151359239306*^9, 
   3.6072579396699467`*^9, 3.607340175785521*^9, 3.607383874166408*^9, 
   3.607387242510261*^9, 3.6074710174337597`*^9, 3.6075141538960323`*^9, 
   3.6075142963698053`*^9, 3.6075611258974247`*^9, 3.6076088091450872`*^9, 
   3.607608853043557*^9, 3.607644541145804*^9, 3.607671857476369*^9, 
   3.6077320671005917`*^9, 3.6077435124130173`*^9, 3.607759702658401*^9, 
   3.6077600447436438`*^9, 3.6078498979071817`*^9, 3.609385697708331*^9, 
   3.609398989328483*^9, 3.60941522378918*^9, 3.609552944442518*^9, 
   3.609581696154101*^9, 3.609584501521385*^9, 3.609629005362397*^9, 
   3.6096403227013273`*^9, 3.609644880245429*^9, 3.6097581103630743`*^9, 
   3.609903047645534*^9, 3.6099892207480993`*^9, 3.610000588050111*^9, 
   3.610002650465197*^9, 3.610584794299087*^9, 3.61071999614955*^9, 
   3.610722859141488*^9, 3.6107635655975227`*^9, 3.610846981417246*^9, 
   3.610847598167513*^9, 3.610888203442204*^9, 3.611106915131778*^9, 
   3.612502624885817*^9, 3.613212094008737*^9, 3.615290130682562*^9, 
   3.6176015139969893`*^9, 3.617602393074868*^9, {3.617715627687532*^9, 
   3.61771564257053*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Combined test", "Subsubsection",
 InitializationGroup->True,
 CellChangeTimes->{{3.6061816638925343`*^9, 3.606181667861302*^9}, {
  3.6062978758065147`*^9, 3.606297878572287*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"durationNormalize", "[", 
   RowBox[{
   "universe_", ",", "burst", ",", "observer_", ",", "targetDuration_", ",", 
    RowBox[{"{", 
     RowBox[{"\[Omega]1_", ",", "\[Omega]2_"}], "}"}]}], "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", "burstValues", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"burstValues", "=", 
      RowBox[{"{", 
       RowBox[{
       "\[Gamma]", ",", "\[Eta]0", ",", "r0", ",", "n", ",", "\[Omega]0", ",",
         "\[Theta]0", ",", "k", ",", "\[Alpha]"}], "}"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"burstValues", "[", 
       RowBox[{"[", "3", "]"}], "]"}], "=", 
      RowBox[{"targetDuration", 
       FractionBox["r0", 
        RowBox[{"duration", "[", 
         RowBox[{"universe", ",", "burstValues", ",", "observer", ",", 
          RowBox[{"{", 
           RowBox[{"\[Omega]1", ",", "\[Omega]2"}], "}"}]}], "]"}]]}]}], ";", 
     "\[IndentingNewLine]", "burstValues"}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 InitializationGroup->True,
 CellChangeTimes->{{3.607256503410254*^9, 3.6072565947495947`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"energyNormalize", "[", 
   RowBox[{
   "universe_", ",", "burst", ",", "observer_", ",", "photonCount_", ",", 
    RowBox[{"{", 
     RowBox[{"\[Omega]1_", ",", "\[Omega]2_"}], "}"}]}], "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", "burstValues", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"burstValues", "=", 
      RowBox[{"{", 
       RowBox[{
       "\[Gamma]", ",", "\[Eta]0", ",", "r0", ",", "n", ",", "\[Omega]0", ",",
         "\[Theta]0", ",", "k", ",", "\[Alpha]"}], "}"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"burstValues", "[", 
       RowBox[{"[", "2", "]"}], "]"}], "=", 
      RowBox[{"photonCount", 
       FractionBox["\[Eta]0", 
        RowBox[{"p", "[", 
         RowBox[{"universe", ",", "burstValues", ",", "observer", ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "\[Infinity]"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"\[Omega]1", ",", "\[Omega]2"}], "}"}]}], "]"}]]}]}], ";", 
     "\[IndentingNewLine]", "burstValues"}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 InitializationGroup->True,
 CellChangeTimes->{{3.607164411342263*^9, 3.607164535753788*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"normalizedBurst", "[", 
   RowBox[{
   "universe_", ",", "burst_", ",", "observer_", ",", "targetDuration_", ",", 
    "photonCount_", ",", 
    RowBox[{"{", 
     RowBox[{"\[Omega]1_", ",", "\[Omega]2_"}], "}"}]}], "]"}], ":=", 
  RowBox[{"energyNormalize", "[", 
   RowBox[{"universe", ",", 
    RowBox[{"durationNormalize", "[", 
     RowBox[{
     "universe", ",", "burst", ",", "observer", ",", "targetDuration", ",", 
      RowBox[{"{", 
       RowBox[{"\[Omega]1", ",", "\[Omega]2"}], "}"}]}], "]"}], ",", 
    "observer", ",", "photonCount", ",", 
    RowBox[{"{", 
     RowBox[{"\[Omega]1", ",", "\[Omega]2"}], "}"}]}], "]"}]}]], "Input",
 InitializationGroup->True,
 CellChangeTimes->{{3.6072565979777822`*^9, 3.607256667060999*^9}, {
  3.607257984212576*^9, 3.607258008317346*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "fitTestSingleBurst", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"sampleSize", "\[Rule]", "10"}], ",", 
     RowBox[{"penalizationFactor", "\[Rule]", "400"}], ",", 
     RowBox[{"maxEnergy", "\[Rule]", "6*^53"}], ",", 
     RowBox[{"accurateQ", "\[Rule]", "True"}], ",", 
     RowBox[{"logQ", "\[Rule]", "False"}], ",", 
     RowBox[{"testWeights", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"1", ",", "1", ",", "1", ",", "1"}], "}"}]}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fitTestSingleBurst", "[", 
   RowBox[{
   "universe_", ",", "population_", ",", "burst", ",", "observer", ",", 
    RowBox[{"{", 
     RowBox[{"\[Omega]1_", ",", "\[Omega]2_", ",", "\[Omega]3_"}], "}"}], ",",
     "totalPhotonCount_", ",", 
    RowBox[{"{", 
     RowBox[{"\[Kappa]LogTarget_", ",", "\[Kappa]LogError_"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"\[Kappa]MinLogTarget_", ",", "\[Kappa]MinLogError_"}], "}"}], 
    ",", 
    RowBox[{"{", 
     RowBox[{"photonRatioLogTarget_", ",", "photonRatioLogError_"}], "}"}], 
    ",", 
    RowBox[{"{", 
     RowBox[{
     "photonRatioMedianLogTarget_", ",", "photonRatioMedianLogError_"}], 
     "}"}], ",", 
    RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "result", ",", "sample", ",", "pLow", ",", "pHigh", ",", "\[Kappa]0", 
      ",", "\[Kappa]Test", ",", "\[Kappa]MinTest", ",", "photonRatioTest", 
      ",", "photonRatioMedianTest", ",", "burstValues"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"OptionValue", "[", "logQ", "]"}], ",", 
       RowBox[{"Print", "[", 
        RowBox[{"Row", "[", 
         RowBox[{"{", 
          RowBox[{"\"\<trying \>\"", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
              "\[Gamma]", ",", "\[Eta]0", ",", "r0", ",", "n", ",", 
               "\[Omega]0", ",", "\[Theta]0", ",", "k", ",", "\[Alpha]"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"z", ",", "\[Chi]"}], "}"}]}], "}"}]}], "}"}], "]"}], 
        "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"result", "=", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"k", "+", 
          FractionBox["\[Alpha]", "2"], "+", "1"}], "\[GreaterEqual]", "0"}], 
        ",", 
        RowBox[{"OptionValue", "[", "penalizationFactor", "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"burstValues", "=", 
          RowBox[{"energyNormalize", "[", 
           RowBox[{"universe", ",", 
            RowBox[{"{", 
             RowBox[{
             "\[Gamma]", ",", "\[Eta]0", ",", "r0", ",", "n", ",", 
              "\[Omega]0", ",", "\[Theta]0", ",", "k", ",", "\[Alpha]"}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"detectorArea", ",", "z", ",", "\[Chi]"}], "}"}], ",", 
            "totalPhotonCount", ",", 
            RowBox[{"{", 
             RowBox[{"\[Omega]1", ",", "\[Omega]3"}], "}"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"energy", "[", 
             RowBox[{"burstValues", ",", "\[Omega]1"}], "]"}], ">", 
            RowBox[{"OptionValue", "[", "maxEnergy", "]"}]}], ",", 
           RowBox[{"OptionValue", "[", "penalizationFactor", "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"sample", "=", 
             RowBox[{"burstSample", "[", 
              RowBox[{
              "universe", ",", "population", ",", "burstValues", ",", 
               "detectorArea", ",", 
               RowBox[{"{", 
                RowBox[{"\[Omega]1", ",", "\[Omega]2", ",", "\[Omega]3"}], 
                "}"}], ",", 
               RowBox[{"OptionValue", "[", "sampleSize", "]"}], ",", 
               RowBox[{"computedValues", "\[Rule]", 
                RowBox[{"{", 
                 RowBox[{"\"\<pTotal\>\"", ",", "\"\<\[Kappa]\>\""}], "}"}]}],
                ",", 
               RowBox[{"accurateQ", "\[Rule]", 
                RowBox[{"OptionValue", "[", "accurateQ", "]"}]}]}], "]"}]}], 
            ";", "\[IndentingNewLine]", 
            RowBox[{"pLow", "=", 
             RowBox[{"p", "[", 
              RowBox[{"universe", ",", "burstValues", ",", 
               RowBox[{"{", 
                RowBox[{"detectorArea", ",", "z", ",", "\[Chi]"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"0", ",", "\[Infinity]"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"\[Omega]1", ",", "\[Omega]2"}], "}"}]}], "]"}]}], 
            ";", "\[IndentingNewLine]", 
            RowBox[{"pHigh", "=", 
             RowBox[{"p", "[", 
              RowBox[{"universe", ",", "burstValues", ",", 
               RowBox[{"{", 
                RowBox[{"detectorArea", ",", "z", ",", "\[Chi]"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"0", ",", "\[Infinity]"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"\[Omega]2", ",", "\[Omega]3"}], "}"}]}], "]"}]}], 
            ";", "\[IndentingNewLine]", 
            RowBox[{"\[Kappa]0", "=", 
             RowBox[{"\[Kappa]Cache", "[", 
              RowBox[{"universe", ",", "burstValues", ",", 
               RowBox[{"{", 
                RowBox[{"detectorArea", ",", "z", ",", "\[Chi]"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"\[Omega]1", ",", "\[Omega]2", ",", "\[Omega]3"}], 
                "}"}], ",", 
               RowBox[{"accurateQ", "\[Rule]", 
                RowBox[{"OptionValue", "[", "accurateQ", "]"}]}]}], "]"}]}], 
            ";", "\[IndentingNewLine]", 
            RowBox[{"\[Kappa]Test", "=", 
             FractionBox[
              RowBox[{
               RowBox[{"Log", "[", "\[Kappa]0", "]"}], "-", 
               "\[Kappa]LogTarget"}], "\[Kappa]LogError"]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"\[Kappa]MinTest", "=", 
             RowBox[{"Max", "[", 
              RowBox[{"0", ",", 
               FractionBox[
                RowBox[{
                 RowBox[{"Log", "@", 
                  RowBox[{"Min", "@", 
                   RowBox[{"sample", "[", 
                    RowBox[{"[", 
                    RowBox[{"All", ",", "2"}], "]"}], "]"}]}]}], "-", 
                 "\[Kappa]MinLogTarget"}], "\[Kappa]MinLogError"]}], "]"}]}], 
            ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
            RowBox[{"photonRatioTest", "=", 
             FractionBox[
              RowBox[{
               RowBox[{"Log", "[", 
                FractionBox["pHigh", "pLow"], "]"}], "-", 
               "photonRatioLogTarget"}], "photonRatioLogError"]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"photonRatioMedianTest", "=", 
             FractionBox[
              RowBox[{
               RowBox[{"Log", "[", 
                FractionBox[
                 RowBox[{"pLow", "+", "pHigh"}], 
                 RowBox[{"Median", "@", 
                  RowBox[{"sample", "[", 
                   RowBox[{"[", 
                    RowBox[{"All", ",", "1"}], "]"}], "]"}]}]], "]"}], "-", 
               "photonRatioMedianLogTarget"}], "photonRatioMedianLogError"]}],
             ";", "\[IndentingNewLine]", 
            RowBox[{"Total", "[", 
             RowBox[{
              RowBox[{"OptionValue", "[", "testWeights", "]"}], 
              RowBox[{"{", 
               RowBox[{
                SuperscriptBox["\[Kappa]Test", "2"], ",", 
                SuperscriptBox["\[Kappa]MinTest", "2"], ",", 
                SuperscriptBox["photonRatioTest", "2"], ",", 
                SuperscriptBox["photonRatioMedianTest", "2"]}], "}"}]}], 
             "]"}]}]}], "\[IndentingNewLine]", "]"}]}]}], 
       "\[IndentingNewLine]", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"OptionValue", "[", "logQ", "]"}], ",", 
       RowBox[{"Print", "[", 
        RowBox[{"{", 
         RowBox[{"result", ",", 
          RowBox[{"{", 
           RowBox[{
           "\[Kappa]Test", ",", "\[Kappa]MinTest", ",", "photonRatioTest", 
            ",", "photonRatioMedianTest"}], "}"}], ",", "burstValues", ",", 
          RowBox[{"{", 
           RowBox[{"z", ",", "\[Chi]"}], "}"}]}], "}"}], "]"}]}], "]"}], ";", 
     "\[IndentingNewLine]", "result"}]}], "\[IndentingNewLine]", 
   "]"}]}]}], "Input",
 InitializationGroup->True,
 CellChangeTimes->{{3.6067841304853563`*^9, 3.6067843330023823`*^9}, {
   3.606784418849988*^9, 3.606784530144672*^9}, {3.606784746649373*^9, 
   3.606784816278531*^9}, {3.606784887254499*^9, 3.606785129475871*^9}, {
   3.6067851646876383`*^9, 3.606785209472348*^9}, {3.606785271986596*^9, 
   3.6067853353692007`*^9}, {3.60678553041534*^9, 3.606785563772859*^9}, {
   3.606786039073058*^9, 3.6067860622807837`*^9}, {3.606786430847364*^9, 
   3.6067866005965*^9}, {3.606786665888916*^9, 3.606786703344331*^9}, {
   3.606786739497644*^9, 3.606786780597384*^9}, {3.606786970867032*^9, 
   3.60678706403421*^9}, {3.606787924466777*^9, 3.606787964648798*^9}, {
   3.606788115161808*^9, 3.606788115366991*^9}, {3.6067887080212383`*^9, 
   3.606788708535561*^9}, {3.606793743979444*^9, 3.6067937529441957`*^9}, {
   3.60679384130014*^9, 3.606793843387294*^9}, {3.606793914830934*^9, 
   3.606793926343021*^9}, {3.606793966134832*^9, 3.606794000070466*^9}, {
   3.6067940713763742`*^9, 3.6067941743989763`*^9}, {3.606794212876604*^9, 
   3.6067942296292953`*^9}, {3.606795616118765*^9, 3.6067956231004677`*^9}, {
   3.606797921340238*^9, 3.606797954472186*^9}, {3.606798998334292*^9, 
   3.60679905375896*^9}, {3.606799139577279*^9, 3.6067991893948793`*^9}, {
   3.60679938961654*^9, 3.6067993932920523`*^9}, {3.606799458623124*^9, 
   3.6067994589890833`*^9}, {3.606812577241592*^9, 3.60681261453538*^9}, {
   3.606813123372066*^9, 3.606813123725144*^9}, {3.606813933173003*^9, 
   3.606813941392313*^9}, {3.606814028176161*^9, 3.606814030507115*^9}, {
   3.606969388151495*^9, 3.606969456015808*^9}, {3.606969488775598*^9, 
   3.60696949406213*^9}, {3.606969529536642*^9, 3.6069696305421057`*^9}, {
   3.606969662344791*^9, 3.606969670096977*^9}, {3.60696971076998*^9, 
   3.6069697162065077`*^9}, {3.6069703325263157`*^9, 
   3.6069703406136503`*^9}, {3.6069706726628036`*^9, 3.60697067293561*^9}, 
   3.606990421362998*^9, 3.607039652785748*^9, {3.6070737466198177`*^9, 
   3.6070737627039824`*^9}, {3.607079602778102*^9, 3.6070796042148323`*^9}, {
   3.6071640212111683`*^9, 3.60716402133992*^9}, {3.607164098736981*^9, 
   3.607164135897633*^9}, {3.6071642309005547`*^9, 3.607164261252738*^9}, {
   3.607164654394418*^9, 3.6071646594417*^9}, {3.607164789131357*^9, 
   3.607164794992824*^9}, {3.6071648896505404`*^9, 3.6071649532718973`*^9}, 
   3.607577701537319*^9, {3.6075778521013403`*^9, 3.6075778632585897`*^9}, {
   3.607577919254958*^9, 3.607577929581045*^9}, {3.607577959977606*^9, 
   3.60757796830942*^9}, {3.607581794225686*^9, 3.6075818497271023`*^9}, 
   3.607582435542191*^9, {3.609572240405469*^9, 3.6095723022081413`*^9}, {
   3.609572342927558*^9, 3.6095723609168673`*^9}, {3.6095818435164757`*^9, 
   3.6095818445913553`*^9}, {3.6095819252004004`*^9, 3.609582027393879*^9}, 
   3.609582653607339*^9, 3.609584496374695*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "findSingleBurstFit", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"accurateQ", "\[Rule]", "True"}], ",", 
     RowBox[{"logQ", "\[Rule]", "False"}], ",", 
     RowBox[{"sampleSize", "\[Rule]", "10"}], ",", 
     RowBox[{"penalizationFactor", "\[Rule]", "400"}], ",", 
     RowBox[{"maxEnergy", "\[Rule]", "6*^53"}], ",", 
     RowBox[{"\[Eta]0", "\[Rule]", "8.4*^37"}], ",", 
     RowBox[{"r0", "\[Rule]", "1.2*^6"}], ",", 
     RowBox[{"\[Chi]MaxFactor", "\[Rule]", "30."}], ",", 
     RowBox[{"detectorArea", "\[Rule]", "5.563*^-18"}], ",", 
     RowBox[{"nMin", "\[Rule]", "3.5"}], ",", 
     RowBox[{"testWeights", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"1", ",", "1", ",", "1", ",", "1"}], "}"}]}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"findSingleBurstFit", "[", 
   RowBox[{"universe_", ",", "population_", ",", 
    RowBox[{"{", 
     RowBox[{"\[Gamma]_", ",", "\[Omega]0_"}], "}"}], ",", "z_", ",", 
    RowBox[{"{", 
     RowBox[{"\[Omega]1_", ",", "\[Omega]2_", ",", "\[Omega]3_"}], "}"}], ",",
     "totalPhotonCount_", ",", 
    RowBox[{"{", 
     RowBox[{"\[Kappa]LogTarget_", ",", "\[Kappa]LogError_"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"\[Kappa]MinLogTarget_", ",", "\[Kappa]MinLogError_"}], "}"}], 
    ",", 
    RowBox[{"{", 
     RowBox[{"photonRatioLogTarget_", ",", "photonRatioLogError_"}], "}"}], 
    ",", 
    RowBox[{"{", 
     RowBox[{
     "photonRatioMedianLogTarget_", ",", "photonRatioMedianLogError_"}], 
     "}"}], ",", "initialPoints_", ",", 
    RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "testFunction", ",", "\[Eta]0", ",", "r0", ",", "detectorArea", ",", 
      "sSize", ",", "penFactor", ",", "mEnergy", ",", "accQ", ",", "lQ", ",", 
      "weights"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"\[Eta]0", "=", 
      RowBox[{"OptionValue", "[", "\[Eta]0", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"r0", "=", 
      RowBox[{"OptionValue", "[", "r0", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"detectorArea", "=", 
      RowBox[{"OptionValue", "[", "detectorArea", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"sSize", "=", 
      RowBox[{"OptionValue", "[", "sampleSize", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"penFactor", "=", 
      RowBox[{"OptionValue", "[", "penalizationFactor", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"mEnergy", "=", 
      RowBox[{"OptionValue", "[", "maxEnergy", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"accQ", "=", 
      RowBox[{"OptionValue", "[", "accurateQ", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"lQ", "=", 
      RowBox[{"OptionValue", "[", "logQ", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"weights", "=", 
      RowBox[{"OptionValue", "[", "testWeights", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"testFunction", "[", 
       RowBox[{
        RowBox[{"nj_", "?", "NumericQ"}], ",", 
        RowBox[{"\[Theta]0j_", "?", "NumericQ"}], ",", 
        RowBox[{"kj_", "?", "NumericQ"}], ",", 
        RowBox[{"\[Alpha]j_", "?", "NumericQ"}], ",", 
        RowBox[{"\[Chi]j_", "?", "NumericQ"}]}], "]"}], ":=", 
      RowBox[{"fitTestSingleBurst", "[", 
       RowBox[{"universe", ",", "population", ",", 
        RowBox[{"{", 
         RowBox[{
         "\[Gamma]", ",", "\[Eta]0", ",", "r0", ",", "nj", ",", "\[Omega]0", 
          ",", 
          RowBox[{"Exp", "[", "\[Theta]0j", "]"}], ",", "kj", ",", 
          "\[Alpha]j"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"detectorArea", ",", "z", ",", 
          RowBox[{"Exp", "[", "\[Chi]j", "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"\[Omega]1", ",", "\[Omega]2", ",", "\[Omega]3"}], "}"}], 
        ",", "totalPhotonCount", ",", 
        RowBox[{"{", 
         RowBox[{"\[Kappa]LogTarget", ",", "\[Kappa]LogError"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"\[Kappa]MinLogTarget", ",", "\[Kappa]MinLogError"}], "}"}], 
        ",", 
        RowBox[{"{", 
         RowBox[{"photonRatioLogTarget", ",", "photonRatioLogError"}], "}"}], 
        ",", 
        RowBox[{"{", 
         RowBox[{
         "photonRatioMedianLogTarget", ",", "photonRatioMedianLogError"}], 
         "}"}], ",", 
        RowBox[{"sampleSize", "\[Rule]", "sSize"}], ",", 
        RowBox[{"penalizationFactor", "\[Rule]", "penFactor"}], ",", 
        RowBox[{"maxEnergy", "\[Rule]", "mEnergy"}], ",", 
        RowBox[{"accurateQ", "\[Rule]", "accQ"}], ",", 
        RowBox[{"logQ", "\[Rule]", "lQ"}], ",", 
        RowBox[{"testWeights", "\[Rule]", "weights"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"NMinimize", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"testFunction", "[", 
          RowBox[{
          "nj", ",", "\[Theta]0j", ",", "kj", ",", "\[Alpha]j", ",", 
           "\[Chi]j"}], "]"}], ",", 
         RowBox[{"nj", ">", 
          RowBox[{"OptionValue", "[", "nMin", "]"}]}], ",", 
         RowBox[{"kj", "<", "0"}], ",", 
         RowBox[{"\[Chi]j", "\[LessEqual]", 
          RowBox[{"Log", "[", 
           FractionBox[
            RowBox[{"OptionValue", "[", "\[Chi]MaxFactor", "]"}], "\[Gamma]"],
            "]"}]}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
        "nj", ",", "\[Theta]0j", ",", "kj", ",", "\[Alpha]j", ",", 
         "\[Chi]j"}], "}"}], ",", 
       RowBox[{"Method", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"\"\<NelderMead\>\"", ",", 
          RowBox[{"\"\<InitialPoints\>\"", "\[Rule]", "initialPoints"}]}], 
         "}"}]}]}], "]"}]}]}], "\[IndentingNewLine]", "]"}]}]}], "Input",
 InitializationGroup->True,
 CellChangeTimes->{{3.606196337114387*^9, 3.60619634259832*^9}, {
   3.606196427421619*^9, 3.6061964280058613`*^9}, {3.606196546477379*^9, 
   3.60619687062036*^9}, {3.606196931043127*^9, 3.606197192386756*^9}, {
   3.606197384027049*^9, 3.606197397750696*^9}, {3.6061975884357567`*^9, 
   3.606197639043159*^9}, {3.606197710746685*^9, 3.6061977668410597`*^9}, {
   3.606197888074235*^9, 3.606197889580408*^9}, 3.606261248965354*^9, {
   3.6062616033082533`*^9, 3.606261606676928*^9}, {3.606262705564365*^9, 
   3.60626272769366*^9}, {3.606263546786374*^9, 3.6062636186257553`*^9}, {
   3.6062637168964*^9, 3.606263742388198*^9}, {3.606302028041608*^9, 
   3.60630208242258*^9}, {3.6064544042746363`*^9, 3.606454410387237*^9}, {
   3.606454475731523*^9, 3.606454537573245*^9}, {3.606454590604412*^9, 
   3.606454636101365*^9}, 3.606454707124113*^9, {3.606454751100938*^9, 
   3.606454766395697*^9}, {3.606455181975443*^9, 3.606455261693512*^9}, {
   3.606455314609996*^9, 3.6064553277303743`*^9}, {3.606785700348125*^9, 
   3.606785807926054*^9}, {3.606786870716901*^9, 3.606786889739295*^9}, 
   3.606786920303157*^9, {3.606787084442574*^9, 3.6067871901344347`*^9}, {
   3.606787294681089*^9, 3.606787522352125*^9}, {3.6067877590356083`*^9, 
   3.606787769994176*^9}, {3.606787821978108*^9, 3.606787875961068*^9}, {
   3.6067953080166492`*^9, 3.606795310150799*^9}, {3.60679547672785*^9, 
   3.606795490694419*^9}, {3.606795961480076*^9, 3.606796258584289*^9}, {
   3.606796541175186*^9, 3.606796556361103*^9}, {3.606797009692794*^9, 
   3.606797091181622*^9}, {3.6067979347342052`*^9, 3.606797934915477*^9}, {
   3.606797977946269*^9, 3.606798013389991*^9}, {3.606798066037321*^9, 
   3.60679806866824*^9}, {3.606798138805749*^9, 3.606798142170463*^9}, {
   3.6067982019653463`*^9, 3.606798241233823*^9}, {3.606798325980959*^9, 
   3.6067983274197893`*^9}, {3.6067983761432247`*^9, 3.606798377448983*^9}, {
   3.606798416485764*^9, 3.606798447120487*^9}, {3.606798734013507*^9, 
   3.606798751273053*^9}, {3.606798908606326*^9, 3.606798917731062*^9}, {
   3.606798967586944*^9, 3.6067989939175777`*^9}, {3.606799066674605*^9, 
   3.606799069207491*^9}, 3.606810933521221*^9, {3.606811112767414*^9, 
   3.6068113583985443`*^9}, {3.6068654184712753`*^9, 3.60686543975744*^9}, {
   3.606865570454639*^9, 3.6068655747020397`*^9}, {3.60686568370875*^9, 
   3.6068656840319757`*^9}, {3.606867762019717*^9, 3.606867773299673*^9}, {
   3.606867817339847*^9, 3.606867867132864*^9}, {3.606868098517172*^9, 
   3.606868098864695*^9}, {3.6069696821164293`*^9, 3.606969698781539*^9}, {
   3.607070227020426*^9, 3.607070314973587*^9}, 3.6070716574449043`*^9, {
   3.60707255939252*^9, 3.6070725611900463`*^9}, {3.607073572500991*^9, 
   3.607073661720378*^9}, {3.607079617458284*^9, 3.60707964401513*^9}, {
   3.607079700749875*^9, 3.6070797173667297`*^9}, {3.6070797515820913`*^9, 
   3.607079768277616*^9}, {3.607079828089015*^9, 3.607079845952528*^9}, {
   3.607149955000238*^9, 3.6071499949096622`*^9}, {3.607150062718923*^9, 
   3.607150065238398*^9}, {3.607164310062943*^9, 3.607164351977974*^9}, {
   3.607390953205967*^9, 3.607391006405122*^9}, {3.6075771149195232`*^9, 
   3.607577115479409*^9}, {3.6075777036576777`*^9, 3.607577704455166*^9}, {
   3.6075818666484947`*^9, 3.6075818982977324`*^9}}]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Visualization", "Subsection",
 InitializationGroup->True,
 CellChangeTimes->{{3.6070676433964376`*^9, 3.607067647242429*^9}}],

Cell[CellGroupData[{

Cell["Model scheme", "Subsubsection",
 CellChangeTimes->{{3.609661861117159*^9, 3.609661862667097*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "modelScheme", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"centralEngineSize", "\[Rule]", "0.03"}], ",", 
     RowBox[{"jetRadius", "\[Rule]", "0.3"}], ",", 
     RowBox[{"lowAngle", "\[Rule]", "0.1"}], ",", 
     RowBox[{"highAngle", "\[Rule]", "0.01"}], ",", 
     RowBox[{"observerSize", "\[Rule]", "0.03"}], ",", 
     RowBox[{"observerDistance", "\[Rule]", "1"}], ",", 
     RowBox[{"observerAngle", "\[Rule]", "0.09"}], ",", 
     RowBox[{"centralEngineQ", "\[Rule]", "True"}], ",", 
     RowBox[{"centralEngineLabelQ", "\[Rule]", "False"}], ",", 
     RowBox[{"jetQ", "\[Rule]", "True"}], ",", 
     RowBox[{"jetLabelQ", "\[Rule]", "False"}], ",", 
     RowBox[{"epQ", "\[Rule]", "True"}], ",", 
     RowBox[{"\[Gamma]Q", "\[Rule]", "True"}], ",", 
     RowBox[{"observerQ", "\[Rule]", "True"}], ",", 
     RowBox[{"observerLabelQ", "\[Rule]", "False"}], ",", 
     RowBox[{"FontSize", "\[Rule]", "10"}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
     RowBox[{"shockWaveThickness", "\[Rule]", "Large"}], ",", 
     RowBox[{"radiatorThickness", "\[Rule]", "Small"}], ",", 
     RowBox[{"photonThickness", "\[Rule]", "Small"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"modelScheme", "[", 
    RowBox[{"OptionsPattern", "[", "]"}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "i", ",", "ti", ",", "redX", ",", "redY", ",", "blueX", ",", "blueY", 
       ",", "observerX", ",", "observerY"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Graphics", "[", 
      RowBox[{
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"OptionValue", "[", "centralEngineQ", "]"}], ",", 
             "Black", ",", "Transparent"}], "]"}], ",", 
           RowBox[{"Disk", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", "0"}], "}"}], ",", 
             RowBox[{"OptionValue", "[", "centralEngineSize", "]"}]}], 
            "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"OptionValue", "[", "centralEngineLabelQ", "]"}], ",", 
             "Black", ",", "Transparent"}], "]"}], ",", 
           RowBox[{"Text", "[", 
            RowBox[{
             RowBox[{"Style", "[", 
              RowBox[{"\"\<Central\\nEngine\>\"", ",", 
               RowBox[{"FontSize", "\[Rule]", 
                RowBox[{"OptionValue", "[", "FontSize", "]"}]}]}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", 
               RowBox[{"-", 
                RowBox[{"OptionValue", "[", "centralEngineSize", "]"}]}]}], 
              "}"}], ",", "Top"}], "]"}]}], "}"}], ",", "\[IndentingNewLine]",
          "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"observerX", "=", 
           RowBox[{
            RowBox[{"OptionValue", "[", "observerDistance", "]"}], 
            RowBox[{"Cos", "[", 
             RowBox[{"OptionValue", "[", "observerAngle", "]"}], "]"}]}]}], 
          ";", "\[IndentingNewLine]", 
          RowBox[{"observerY", "=", 
           RowBox[{
            RowBox[{"OptionValue", "[", "observerDistance", "]"}], 
            RowBox[{"Sin", "[", 
             RowBox[{"OptionValue", "[", "observerAngle", "]"}], "]"}]}]}], 
          ";", "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"OptionValue", "[", "observerQ", "]"}], ",", 
              RowBox[{"Darker", "[", "Green", "]"}], ",", "Transparent"}], 
             "]"}], ",", 
            RowBox[{"Disk", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"observerX", ",", "observerY"}], "}"}], ",", 
              RowBox[{"OptionValue", "[", "observerSize", "]"}]}], "]"}]}], 
           "}"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"OptionValue", "[", "observerLabelQ", "]"}], ",", 
             RowBox[{"Darker", "[", "Green", "]"}], ",", "Transparent"}], 
            "]"}], ",", "\[IndentingNewLine]", 
           RowBox[{"Text", "[", 
            RowBox[{
             RowBox[{"Style", "[", 
              RowBox[{"\"\<Observer\>\"", ",", 
               RowBox[{"FontSize", "\[Rule]", 
                RowBox[{"OptionValue", "[", "FontSize", "]"}]}]}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"observerX", ",", 
               RowBox[{"observerY", "+", 
                RowBox[{"OptionValue", "[", "centralEngineSize", "]"}]}]}], 
              "}"}], ",", "Bottom"}], "]"}]}], "}"}], ",", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"OptionValue", "[", "jetQ", "]"}], ",", 
             RowBox[{"Opacity", "[", "0.1", "]"}], ",", 
             RowBox[{"Opacity", "[", "0", "]"}]}], "]"}], ",", "Red", ",", 
           RowBox[{"Disk", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", "0"}], "}"}], ",", 
             RowBox[{"OptionValue", "[", "jetRadius", "]"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", 
                RowBox[{"OptionValue", "[", "lowAngle", "]"}]}], ",", 
               RowBox[{"OptionValue", "[", "lowAngle", "]"}]}], "}"}]}], 
            "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Thickness", "@", 
            RowBox[{"OptionValue", "[", "shockWaveThickness", "]"}]}], ",", 
           "Red", ",", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"OptionValue", "[", "jetQ", "]"}], ",", 
             RowBox[{"Opacity", "[", "1", "]"}], ",", 
             RowBox[{"Opacity", "[", "0", "]"}]}], "]"}], ",", 
           RowBox[{"Circle", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", "0"}], "}"}], ",", 
             RowBox[{"OptionValue", "[", "jetRadius", "]"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", 
                RowBox[{"OptionValue", "[", "lowAngle", "]"}]}], ",", 
               RowBox[{"OptionValue", "[", "lowAngle", "]"}]}], "}"}]}], 
            "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"OptionValue", "[", "jetQ", "]"}], ",", 
             RowBox[{"Opacity", "[", "0.1", "]"}], ",", 
             RowBox[{"Opacity", "[", "0", "]"}]}], "]"}], ",", "Blue", ",", 
           RowBox[{"Disk", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", "0"}], "}"}], ",", 
             RowBox[{"OptionValue", "[", "jetRadius", "]"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", 
                RowBox[{"OptionValue", "[", "highAngle", "]"}]}], ",", 
               RowBox[{"OptionValue", "[", "highAngle", "]"}]}], "}"}]}], 
            "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Thickness", "@", 
            RowBox[{"OptionValue", "[", "shockWaveThickness", "]"}]}], ",", 
           "Blue", ",", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"OptionValue", "[", "jetQ", "]"}], ",", 
             RowBox[{"Opacity", "[", "1", "]"}], ",", 
             RowBox[{"Opacity", "[", "0", "]"}]}], "]"}], ",", 
           RowBox[{"Circle", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", "0"}], "}"}], ",", 
             RowBox[{"OptionValue", "[", "jetRadius", "]"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", 
                RowBox[{"OptionValue", "[", "highAngle", "]"}]}], ",", 
               RowBox[{"OptionValue", "[", "highAngle", "]"}]}], "}"}]}], 
            "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"Red", ",", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"OptionValue", "[", "jetLabelQ", "]"}], ",", 
             RowBox[{"Opacity", "[", "1", "]"}], ",", 
             RowBox[{"Opacity", "[", "0", "]"}]}], "]"}], ",", 
           RowBox[{"Text", "[", 
            RowBox[{
             RowBox[{"Style", "[", 
              RowBox[{"\"\<Shock\\nFront\>\"", ",", 
               RowBox[{"FontSize", "\[Rule]", 
                RowBox[{"OptionValue", "[", "FontSize", "]"}]}]}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"1.03", 
                RowBox[{"OptionValue", "[", "jetRadius", "]"}], 
                RowBox[{"Cos", "[", 
                 FractionBox[
                  RowBox[{"OptionValue", "[", "lowAngle", "]"}], "2"], 
                 "]"}]}], ",", 
               RowBox[{
                RowBox[{"-", 
                 RowBox[{"OptionValue", "[", "jetRadius", "]"}]}], 
                RowBox[{"Sin", "[", 
                 FractionBox[
                  RowBox[{"OptionValue", "[", "lowAngle", "]"}], "2"], 
                 "]"}]}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"Left", ",", "Top"}], "}"}]}], "]"}]}], "}"}], ",", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"redX", "=", 
           RowBox[{
            RowBox[{"OptionValue", "[", "jetRadius", "]"}], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"Min", "[", 
              RowBox[{
               RowBox[{"OptionValue", "[", "lowAngle", "]"}], ",", 
               RowBox[{"OptionValue", "[", "observerAngle", "]"}]}], "]"}], 
             "]"}]}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"redY", "=", 
           RowBox[{
            RowBox[{"OptionValue", "[", "jetRadius", "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"Min", "[", 
              RowBox[{
               RowBox[{"OptionValue", "[", "lowAngle", "]"}], ",", 
               RowBox[{"OptionValue", "[", "observerAngle", "]"}]}], "]"}], 
             "]"}]}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"blueX", "=", 
           RowBox[{
            RowBox[{"OptionValue", "[", "jetRadius", "]"}], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"Min", "[", 
              RowBox[{
               RowBox[{"OptionValue", "[", "highAngle", "]"}], ",", 
               RowBox[{"OptionValue", "[", "observerAngle", "]"}]}], "]"}], 
             "]"}]}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"blueY", "=", 
           RowBox[{
            RowBox[{"OptionValue", "[", "jetRadius", "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"Min", "[", 
              RowBox[{
               RowBox[{"OptionValue", "[", "highAngle", "]"}], ",", 
               RowBox[{"OptionValue", "[", "observerAngle", "]"}]}], "]"}], 
             "]"}]}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Thickness", "@", 
             RowBox[{"OptionValue", "[", "radiatorThickness", "]"}]}], ",", 
            "Red", ",", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"OptionValue", "[", "epQ", "]"}], ",", 
              RowBox[{"Opacity", "[", "1", "]"}], ",", 
              RowBox[{"Opacity", "[", "0", "]"}]}], "]"}], ",", 
            RowBox[{"Line", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"0", ",", "0"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"redX", ",", "redY"}], "}"}]}], "}"}], "]"}]}], 
           "}"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"Red", ",", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"OptionValue", "[", "epQ", "]"}], ",", 
             RowBox[{"Opacity", "[", "1", "]"}], ",", 
             RowBox[{"Opacity", "[", "0", "]"}]}], "]"}], ",", 
           RowBox[{"Text", "[", 
            RowBox[{
             RowBox[{"Style", "[", 
              RowBox[{
              "\"\<\!\(\*SuperscriptBox[\(e\), \(\[PlusMinus]\)]\), \
\!\(\*SuperscriptBox[\(p\), \(\[PlusMinus]\)]\)\>\"", ",", 
               RowBox[{"FontSize", "\[Rule]", 
                RowBox[{"OptionValue", "[", "FontSize", "]"}]}]}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{
               FractionBox["redX", "2"], ",", 
               FractionBox["redY", "2"]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"Right", ",", "Bottom"}], "}"}]}], "]"}]}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Thickness", "@", 
            RowBox[{"OptionValue", "[", "radiatorThickness", "]"}]}], ",", 
           "Blue", ",", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"OptionValue", "[", "epQ", "]"}], ",", 
             RowBox[{"Opacity", "[", "1", "]"}], ",", 
             RowBox[{"Opacity", "[", "0", "]"}]}], "]"}], ",", 
           RowBox[{"Line", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"0", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"blueX", ",", "blueY"}], "}"}]}], "}"}], "]"}]}], 
          "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"Blue", ",", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"OptionValue", "[", "epQ", "]"}], ",", 
             RowBox[{"Opacity", "[", "1", "]"}], ",", 
             RowBox[{"Opacity", "[", "0", "]"}]}], "]"}], ",", 
           RowBox[{"Text", "[", 
            RowBox[{
             RowBox[{"Style", "[", 
              RowBox[{
              "\"\<\!\(\*SuperscriptBox[\(e\), \(\[PlusMinus]\)]\), \
\!\(\*SuperscriptBox[\(p\), \(\[PlusMinus]\)]\)\>\"", ",", 
               RowBox[{"FontSize", "\[Rule]", 
                RowBox[{"OptionValue", "[", "FontSize", "]"}]}]}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{
               FractionBox["blueX", "2"], ",", 
               FractionBox["blueY", "2"]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"Left", ",", "Top"}], "}"}]}], "]"}]}], "}"}], ",", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Thickness", "@", 
            RowBox[{"OptionValue", "[", "photonThickness", "]"}]}], ",", 
           "Dashed", ",", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"OptionValue", "[", "\[Gamma]Q", "]"}], ",", 
             RowBox[{"Opacity", "[", "1", "]"}], ",", 
             RowBox[{"Opacity", "[", "0", "]"}]}], "]"}], ",", "Red", ",", 
           RowBox[{"Line", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"redX", ",", "redY"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"observerX", ",", "observerY"}], "}"}]}], "}"}], 
            "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"Red", ",", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"OptionValue", "[", "\[Gamma]Q", "]"}], ",", 
             RowBox[{"Opacity", "[", "1", "]"}], ",", 
             RowBox[{"Opacity", "[", "0", "]"}]}], "]"}], ",", 
           RowBox[{"Text", "[", 
            RowBox[{
             RowBox[{"Style", "[", 
              RowBox[{"\"\<\[Gamma]\>\"", ",", 
               RowBox[{"FontSize", "\[Rule]", 
                RowBox[{"OptionValue", "[", "FontSize", "]"}]}]}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{
               FractionBox[
                RowBox[{"redX", "+", "observerX"}], "2"], ",", 
               FractionBox[
                RowBox[{"redY", "+", "observerY"}], "2"]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"Right", ",", "Bottom"}], "}"}]}], "]"}]}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Thickness", "@", 
            RowBox[{"OptionValue", "[", "photonThickness", "]"}]}], ",", 
           "Dashed", ",", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"OptionValue", "[", "\[Gamma]Q", "]"}], ",", 
             RowBox[{"Opacity", "[", "1", "]"}], ",", 
             RowBox[{"Opacity", "[", "0", "]"}]}], "]"}], ",", "Blue", ",", 
           RowBox[{"Line", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"blueX", ",", "blueY"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"observerX", ",", "observerY"}], "}"}]}], "}"}], 
            "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"Blue", ",", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"OptionValue", "[", "\[Gamma]Q", "]"}], ",", 
             RowBox[{"Opacity", "[", "1", "]"}], ",", 
             RowBox[{"Opacity", "[", "0", "]"}]}], "]"}], ",", 
           RowBox[{"Text", "[", 
            RowBox[{
             RowBox[{"Style", "[", 
              RowBox[{"\"\<\[Gamma]\>\"", ",", 
               RowBox[{"FontSize", "\[Rule]", 
                RowBox[{"OptionValue", "[", "FontSize", "]"}]}]}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{
               FractionBox[
                RowBox[{"blueX", "+", "observerX"}], "2"], ",", 
               FractionBox[
                RowBox[{"blueY", "+", "observerY"}], "2"]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"Left", ",", "Top"}], "}"}]}], "]"}]}], "}"}]}], 
        "\[IndentingNewLine]", "}"}], ",", 
       RowBox[{"ImageSize", "\[Rule]", 
        RowBox[{"OptionValue", "[", "ImageSize", "]"}]}], ",", " ", 
       RowBox[{"PlotRange", "\[Rule]", 
        RowBox[{"OptionValue", "[", "PlotRange", "]"}]}]}], "]"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.59584258302489*^9, 3.595842753897132*^9}, {
   3.595842866470069*^9, 3.595843023059347*^9}, {3.5958430677816467`*^9, 
   3.5958431941824017`*^9}, {3.5958432468544703`*^9, 
   3.5958433680383453`*^9}, {3.595843411558457*^9, 3.595843466852075*^9}, {
   3.595843589814559*^9, 3.595843653036922*^9}, {3.595843689915534*^9, 
   3.5958438100033903`*^9}, {3.595843842998906*^9, 3.5958438754186993`*^9}, {
   3.595843969664946*^9, 3.595843974288438*^9}, {3.5958442447811728`*^9, 
   3.595844349814054*^9}, {3.5958443821882467`*^9, 3.595844386748435*^9}, {
   3.595844431570077*^9, 3.595844581710051*^9}, {3.595844618032076*^9, 
   3.59584462104147*^9}, {3.5958446821784277`*^9, 3.595844716593995*^9}, {
   3.5958447754309*^9, 3.5958448139534473`*^9}, {3.595845024716194*^9, 
   3.59584502485439*^9}, {3.5958450743307457`*^9, 3.5958450760711184`*^9}, {
   3.595845183381014*^9, 3.59584519873508*^9}, {3.59584536487819*^9, 
   3.595845444892994*^9}, {3.595845705009416*^9, 3.5958457194954367`*^9}, {
   3.5958458838966007`*^9, 3.5958460190174026`*^9}, 3.595846061056314*^9, {
   3.5958460984306393`*^9, 3.5958461008570633`*^9}, {3.595846200546546*^9, 
   3.595846320547361*^9}, {3.595846450287627*^9, 3.595846462244567*^9}, {
   3.5958475282773314`*^9, 3.595847528385499*^9}, {3.595848673673086*^9, 
   3.595848796691436*^9}, {3.5958488696301737`*^9, 3.595848929712049*^9}, {
   3.5958489929252*^9, 3.5958490331062098`*^9}, {3.595849351285133*^9, 
   3.5958494242021923`*^9}, {3.595849479102297*^9, 3.595849487878209*^9}, {
   3.5958495186465054`*^9, 3.595849570512732*^9}, {3.5958496083863277`*^9, 
   3.595849713154964*^9}, {3.5958497690272627`*^9, 3.5958497731039343`*^9}, {
   3.5958498062182198`*^9, 3.595849948287118*^9}, {3.595850001929093*^9, 
   3.595850049835208*^9}, {3.5958500861973257`*^9, 3.5958501796312313`*^9}, {
   3.5958503872146177`*^9, 3.595850410469344*^9}, {3.595850909831037*^9, 
   3.595850958011393*^9}, {3.595851096062984*^9, 3.5958511093251038`*^9}, {
   3.596106391455682*^9, 3.596106432801447*^9}, {3.5961066456897917`*^9, 
   3.596106795833003*^9}, {3.596106829082934*^9, 3.596106829647687*^9}, {
   3.596688117293392*^9, 3.596688157190686*^9}, {3.596688190391107*^9, 
   3.596688233012302*^9}, {3.596688265779335*^9, 3.5966883863185263`*^9}, {
   3.596688515421413*^9, 3.596688541441328*^9}, {3.596688588310276*^9, 
   3.596688595438533*^9}, {3.5966886419729557`*^9, 3.5966887878932457`*^9}, {
   3.596688968852488*^9, 3.5966890781907883`*^9}, {3.596689172201785*^9, 
   3.596689218587696*^9}, {3.59668927951291*^9, 3.5966893196614733`*^9}, {
   3.5966893841110973`*^9, 3.596689479557109*^9}, {3.596689568825287*^9, 
   3.596689616188999*^9}, {3.596690070496655*^9, 3.596690163421999*^9}, {
   3.59669027622727*^9, 3.596690304155649*^9}, {3.596690434232877*^9, 
   3.5966905012092543`*^9}, {3.5967800124369993`*^9, 
   3.5967800815207453`*^9}, {3.5967812315048656`*^9, 3.596781250104906*^9}, {
   3.59678132901854*^9, 3.596781339422022*^9}, {3.596781472637253*^9, 
   3.596781530231028*^9}, {3.5967815615265913`*^9, 3.596781647606608*^9}, {
   3.5967817093056307`*^9, 3.596781729475387*^9}, {3.596781799871976*^9, 
   3.596781937873871*^9}, {3.5967819829703217`*^9, 3.5967820599275084`*^9}, {
   3.596782245816938*^9, 3.596782249579554*^9}, {3.596782289364414*^9, 
   3.596782290228119*^9}, {3.596782384571208*^9, 3.596782426406927*^9}, {
   3.59689771717618*^9, 3.5968977319336023`*^9}, 3.59689786687252*^9, {
   3.596897941633535*^9, 3.596897942228009*^9}, {3.596898036237802*^9, 
   3.596898091585781*^9}, {3.5990189917401447`*^9, 3.599019013321988*^9}, {
   3.599019082329637*^9, 3.599019088026582*^9}, 3.599128626739867*^9, {
   3.5991288263916597`*^9, 3.5991288267333593`*^9}, {3.601435599499205*^9, 
   3.601435603954722*^9}, {3.6014359735382*^9, 3.601435975282405*^9}, {
   3.6014361354465923`*^9, 3.6014361375768423`*^9}, {3.601436217300077*^9, 
   3.601436311080729*^9}, {3.601436524669517*^9, 3.601436549154744*^9}, {
   3.601438135486614*^9, 3.601438211479575*^9}, {3.601438255628953*^9, 
   3.6014383666959953`*^9}, {3.6014384109282293`*^9, 3.601438435990241*^9}, {
   3.601529779770904*^9, 3.6015297930707073`*^9}, {3.6015298356640873`*^9, 
   3.6015298494016027`*^9}, {3.601529887048574*^9, 3.60152988717455*^9}, {
   3.6015467050791073`*^9, 3.601546734246442*^9}, {3.603446330880986*^9, 
   3.6034463605953197`*^9}, {3.603446400763254*^9, 3.60344642557104*^9}, {
   3.6034465070361233`*^9, 3.603446592925652*^9}, 3.603446797266532*^9, {
   3.609660890224654*^9, 3.609660898681086*^9}, {3.6096612391605797`*^9, 
   3.609661245155401*^9}, {3.609661868408957*^9, 3.609661932602298*^9}, {
   3.6096651545440903`*^9, 3.6096651559508142`*^9}, {3.610720046549816*^9, 
   3.610720052234819*^9}, {3.610720104344345*^9, 3.610720104647216*^9}, {
   3.610720310244697*^9, 3.610720326779838*^9}, {3.61072039410436*^9, 
   3.610720394384261*^9}, {3.6107205158281317`*^9, 3.610720528916087*^9}, {
   3.6107206071095324`*^9, 3.610720607464864*^9}, {3.610723656865871*^9, 
   3.6107236622545443`*^9}, {3.6107237211775293`*^9, 
   3.6107237213033047`*^9}, {3.610724118508465*^9, 3.610724121278502*^9}, {
   3.610724166668919*^9, 3.61072417352684*^9}, {3.61072433786377*^9, 
   3.6107243672465878`*^9}, {3.6107244167813168`*^9, 3.61072445954688*^9}, {
   3.610875832348934*^9, 3.610875840140326*^9}, {3.610875892796186*^9, 
   3.61087604602976*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Error bars", "Subsubsection",
 CellChangeTimes->{{3.609641542201913*^9, 3.609641544440967*^9}, 
   3.609641639687296*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"errorBar", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"x1_", ",", "x2_"}], "}"}], ",", "y_", ",", "height_", ",", 
     "arrowQ_", ",", "tooltip_"}], "]"}], ":=", 
   RowBox[{"Graphics", "[", 
    RowBox[{"Tooltip", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{"arrowQ", ",", "Arrow", ",", "Line"}], "]"}], "@", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"x1", ",", "y"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"x2", ",", "y"}], "}"}]}], "}"}]}], ",", 
        RowBox[{"Line", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"x1", ",", 
             RowBox[{"y", "-", "height"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"x1", ",", 
             RowBox[{"y", "+", "height"}]}], "}"}]}], "}"}], "]"}], ",", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"!", "arrowQ"}], ",", 
          RowBox[{"Line", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"x2", ",", 
               RowBox[{"y", "-", "height"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"x2", ",", 
               RowBox[{"y", "+", "height"}]}], "}"}]}], "}"}], "]"}]}], 
         "]"}]}], "}"}], ",", "tooltip"}], "]"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.594340371161455*^9, 3.594340376439044*^9}, {
  3.594340420790992*^9, 3.594340526101939*^9}, {3.594340766060514*^9, 
  3.594340843426382*^9}, {3.594341049735219*^9, 3.594341053158822*^9}, {
  3.59434173552691*^9, 3.594342021048888*^9}, {3.594342120801978*^9, 
  3.59434215253932*^9}, {3.594345776812222*^9, 3.594345821077302*^9}, {
  3.594345864618185*^9, 3.5943458671797743`*^9}, {3.594852381479919*^9, 
  3.5948523822499447`*^9}, {3.596694136885778*^9, 3.5966941461203747`*^9}, {
  3.596694186810692*^9, 3.596694197907509*^9}, {3.6096344756251698`*^9, 
  3.60963454448419*^9}, {3.609634648244588*^9, 3.6096346661614847`*^9}, {
  3.609634710099609*^9, 3.609634715288673*^9}, {3.609635348430304*^9, 
  3.6096353683716097`*^9}, {3.6096354157719717`*^9, 3.6096354512902327`*^9}, {
  3.609635609904962*^9, 3.609635610530472*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Burst CDF plots", "Subsubsection",
 CellChangeTimes->{{3.6096356740518293`*^9, 3.6096356769858437`*^9}, {
  3.6096524565163717`*^9, 3.60965245697884*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "burstCDFPlot", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"MaxRecursion", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"colors", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Red", ",", "Blue"}], "}"}]}], ",", 
     RowBox[{"FontSize", "\[Rule]", "10"}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"PlotPoints", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"frameColor", "\[Rule]", "Black"}], ",", 
     RowBox[{"Thickness", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Small", ",", "Small"}], "}"}]}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"burstCDFPlot", "[", 
   RowBox[{"universe_", ",", "burst_", ",", "observer_", ",", 
    RowBox[{"\[Omega]_", "?", "ListQ"}], ",", 
    RowBox[{"\[Kappa]_", "?", "ListQ"}], ",", 
    RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"dur", ",", "p\[Infinity]", ",", "func"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"dur", "=", 
      RowBox[{"Max", "[", 
       RowBox[{
        RowBox[{"duration", "[", 
         RowBox[{"universe", ",", "burst", ",", "observer", ",", 
          RowBox[{"\[Omega]", "\[LeftDoubleBracket]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "2"}], ",", 
             RowBox[{"-", "1"}]}], "}"}], "\[RightDoubleBracket]"}]}], "]"}], 
        ",", 
        RowBox[{"duration", "[", 
         RowBox[{"universe", ",", "burst", ",", "observer", ",", 
          RowBox[{"\[Omega]", "\[LeftDoubleBracket]", 
           RowBox[{"{", 
            RowBox[{"1", ",", "2"}], "}"}], "\[RightDoubleBracket]"}]}], 
         "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"p\[Infinity]", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"p", "[", 
         RowBox[{"universe", ",", "burst", ",", "observer", ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "\[Infinity]"}], "}"}], ",", 
          RowBox[{"\[Omega]", "\[LeftDoubleBracket]", 
           RowBox[{"{", 
            RowBox[{"it", ",", 
             RowBox[{"it", "+", "1"}]}], "}"}], "\[RightDoubleBracket]"}]}], 
         "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"it", ",", "1", ",", 
          RowBox[{
           RowBox[{"Length", "[", "\[Omega]", "]"}], "-", "1"}]}], "}"}]}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"func", "[", 
       RowBox[{
        RowBox[{"it_", "?", "IntegerQ"}], ",", 
        RowBox[{"\[Tau]_", "?", "NumericQ"}]}], "]"}], ":=", 
      FractionBox[
       RowBox[{"p", "[", 
        RowBox[{"universe", ",", "burst", ",", "observer", ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", 
           RowBox[{
            RowBox[{
            "\[Kappa]", "\[LeftDoubleBracket]", "it", 
             "\[RightDoubleBracket]"}], "\[Tau]"}]}], "}"}], ",", 
         RowBox[{"\[Omega]", "\[LeftDoubleBracket]", 
          RowBox[{"{", 
           RowBox[{"it", ",", 
            RowBox[{"it", "+", "1"}]}], "}"}], "\[RightDoubleBracket]"}]}], 
        "]"}], 
       RowBox[{
       "p\[Infinity]", "\[LeftDoubleBracket]", "it", 
        "\[RightDoubleBracket]"}]]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Plot", "[", 
      RowBox[{
       RowBox[{"Evaluate", "@", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"func", "[", 
           RowBox[{"it", ",", "\[Tau]"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"it", ",", "1", ",", 
            RowBox[{
             RowBox[{"Length", "[", "\[Omega]", "]"}], "-", "1"}]}], "}"}]}], 
         "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Tau]", ",", "0", ",", "dur"}], "}"}], ",", 
       RowBox[{"MaxRecursion", "\[Rule]", 
        RowBox[{"OptionValue", "[", "MaxRecursion", "]"}]}], ",", 
       RowBox[{"PlotPoints", "\[Rule]", 
        RowBox[{"OptionValue", "[", "PlotPoints", "]"}]}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"Transpose", "@", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Thickness", "/@", 
            RowBox[{"OptionValue", "[", "Thickness", "]"}]}], ",", 
           RowBox[{"OptionValue", "[", "colors", "]"}]}], "}"}]}]}], ",", 
       RowBox[{"PlotLegends", "\[Rule]", 
        RowBox[{"Placed", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Style", "[", 
             RowBox[{"\"\<0.1 \[Dash] 1 GeV\>\"", ",", 
              RowBox[{
               RowBox[{"OptionValue", "[", "colors", "]"}], 
               "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], ",", 
              RowBox[{"FontSize", "\[Rule]", 
               RowBox[{"OptionValue", "[", "FontSize", "]"}]}]}], "]"}], ",", 
            
            RowBox[{"Style", "[", 
             RowBox[{"\"\<1 \[Dash] 300 GeV\>\"", ",", 
              RowBox[{
               RowBox[{"OptionValue", "[", "colors", "]"}], 
               "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], ",", 
              RowBox[{"FontSize", "\[Rule]", 
               RowBox[{"OptionValue", "[", "FontSize", "]"}]}]}], "]"}]}], 
           "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0.79", ",", "0.20"}], "}"}]}], "]"}]}], ",", 
       RowBox[{"Frame", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"True", ",", "False"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"True", ",", "False"}], "}"}]}], "}"}]}], ",", 
       RowBox[{"LabelStyle", "\[Rule]", 
        RowBox[{"Directive", "[", 
         RowBox[{"FontSize", "\[Rule]", 
          RowBox[{"OptionValue", "[", "FontSize", "]"}]}], "]"}]}], ",", 
       RowBox[{"FrameLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"\"\<Time, sec\>\"", ",", "\"\<Photon Fraction\>\""}], 
         "}"}]}], ",", 
       RowBox[{"ImageSize", "\[Rule]", 
        RowBox[{"OptionValue", "[", "ImageSize", "]"}]}], ",", 
       RowBox[{"FrameStyle", "\[Rule]", 
        RowBox[{"OptionValue", "[", "frameColor", "]"}]}]}], "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]}], "Input",
 InitializationGroup->True,
 CellChangeTimes->{{3.607067648244553*^9, 3.6070677212325706`*^9}, {
   3.6070677751952333`*^9, 3.6070677969150457`*^9}, {3.607067833605997*^9, 
   3.607067847524274*^9}, {3.607068464278277*^9, 3.607068492395993*^9}, {
   3.607068540754813*^9, 3.60706860140585*^9}, {3.607068687594818*^9, 
   3.607068693987253*^9}, {3.60706874351721*^9, 3.6070688059328117`*^9}, {
   3.607068904558772*^9, 3.607068994318741*^9}, {3.6070690650575657`*^9, 
   3.607069065217391*^9}, {3.607069329216419*^9, 3.60706933494864*^9}, {
   3.607069762392427*^9, 3.607069820453231*^9}, {3.607499716878949*^9, 
   3.607499786309517*^9}, {3.607500301159832*^9, 3.6075003024643173`*^9}, {
   3.607500379343122*^9, 3.607500380177711*^9}, {3.6075004142806683`*^9, 
   3.607500414676704*^9}, {3.607500529791726*^9, 3.607500558412943*^9}, {
   3.607500599928042*^9, 3.607500600252599*^9}, {3.6075017254373302`*^9, 
   3.607501766993146*^9}, {3.6075019233173523`*^9, 3.607501925966104*^9}, {
   3.607502047717801*^9, 3.607502054814125*^9}, 3.607502170563231*^9, {
   3.6075026095641813`*^9, 3.6075026672346973`*^9}, {3.609643648929371*^9, 
   3.609643686025447*^9}, {3.6096440164082613`*^9, 3.609644018523982*^9}, {
   3.609652461981296*^9, 3.609652466402277*^9}, {3.609652630746831*^9, 
   3.6096526351383142`*^9}, {3.6096527562439137`*^9, 
   3.6096527916668158`*^9}, {3.609652922969138*^9, 3.6096529707579803`*^9}, {
   3.609653019608389*^9, 3.609653080803061*^9}, {3.6096536486630983`*^9, 
   3.609653683182067*^9}, {3.609653818603517*^9, 3.60965382212322*^9}, {
   3.6096539396162786`*^9, 3.609653939695815*^9}, {3.609654100859994*^9, 
   3.6096541010209703`*^9}, {3.6096651649341288`*^9, 
   3.6096651664042997`*^9}, {3.609911713905178*^9, 3.609911714006032*^9}, {
   3.6099120787644997`*^9, 3.609912079379607*^9}, {3.60992394723167*^9, 
   3.6099239612759447`*^9}, {3.609924097026326*^9, 3.609924097145648*^9}, {
   3.61076353534615*^9, 3.610763558795245*^9}, {3.610763807106895*^9, 
   3.6107638101862383`*^9}, {3.610764095289647*^9, 3.6107641047407513`*^9}, {
   3.6108471767852917`*^9, 3.610847195888309*^9}, 3.610847323719352*^9, {
   3.61084743541541*^9, 3.6108474358798513`*^9}, 3.6108699994333878`*^9, {
   3.610870031549775*^9, 3.610870141888207*^9}, {3.6108748888339443`*^9, 
   3.6108749132776127`*^9}, {3.610874950608392*^9, 3.610874951168803*^9}, {
   3.6108749906298447`*^9, 3.6108749937994347`*^9}, {3.610875042366027*^9, 
   3.610875054337077*^9}, {3.610875085044776*^9, 3.610875119396659*^9}, {
   3.6108751735460663`*^9, 3.610875173917103*^9}, {3.610875341421342*^9, 
   3.610875344766099*^9}, {3.610875378915504*^9, 3.6108754504751577`*^9}, {
   3.610876532331625*^9, 3.610876545765398*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "cdfDifferencePlot", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{"MaxRecursion", "\[Rule]", "Automatic"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"cdfDifferencePlot", "[", 
   RowBox[{"universe_", ",", "burst_", ",", "observer_", ",", 
    RowBox[{"{", 
     RowBox[{"\[Omega]1_", ",", "\[Omega]2_", ",", "\[Omega]3_"}], "}"}], ",",
     "\[Kappa]_", ",", 
    RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"dur", ",", "p12\[Infinity]", ",", "p23\[Infinity]"}], "}"}], 
    ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"dur", "=", 
      RowBox[{"duration", "[", 
       RowBox[{"universe", ",", "burst", ",", "observer", ",", 
        RowBox[{"{", 
         RowBox[{"\[Omega]1", ",", "\[Omega]3"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"p12\[Infinity]", "=", 
      RowBox[{"p", "[", 
       RowBox[{"universe", ",", "burst", ",", "observer", ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "\[Infinity]"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"\[Omega]1", ",", "\[Omega]2"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"p23\[Infinity]", "=", 
      RowBox[{"p", "[", 
       RowBox[{"universe", ",", "burst", ",", "observer", ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "\[Infinity]"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"\[Omega]2", ",", "\[Omega]3"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Plot", "[", 
      RowBox[{
       RowBox[{
        FractionBox[
         RowBox[{"p", "[", 
          RowBox[{"universe", ",", "burst", ",", "observer", ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "\[Tau]"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\[Omega]1", ",", "\[Omega]2"}], "}"}]}], "]"}], 
         "p12\[Infinity]"], "-", 
        FractionBox[
         RowBox[{"p", "[", 
          RowBox[{"universe", ",", "burst", ",", "observer", ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", 
             RowBox[{"\[Kappa]", " ", "\[Tau]"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\[Omega]2", ",", "\[Omega]3"}], "}"}]}], "]"}], 
         "p23\[Infinity]"]}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Tau]", ",", "0", ",", "dur"}], "}"}], ",", 
       RowBox[{"MaxRecursion", "\[Rule]", 
        RowBox[{"OptionValue", "[", "MaxRecursion", "]"}]}]}], "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]}], "Input",
 CellChangeTimes->{{3.607504155513013*^9, 3.607504356151989*^9}, {
  3.6075043986788063`*^9, 3.607504400915872*^9}, {3.609652472011272*^9, 
  3.609652474379068*^9}, {3.609652641137334*^9, 3.609652648061083*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["\[Kappa] Distribution plots", "Subsubsection",
 CellChangeTimes->{{3.609635686762416*^9, 3.6096356938577003`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "\[Kappa]HistogramPlot", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"FontSize", "\[Rule]", "10"}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"FrameStyle", "\[Rule]", "Black"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Kappa]HistogramPlot", "[", 
   RowBox[{"sample_", ",", "observations_", ",", 
    RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "histogram", ",", "errorBars", ",", "probabilityMax", ",", 
      "\[Kappa]Max"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"histogram", "=", 
      RowBox[{"Histogram", "[", 
       RowBox[{"sample", ",", "Automatic", ",", "\"\<Probability\>\"", ",", 
        RowBox[{"Frame", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"True", ",", "False"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"True", ",", "False"}], "}"}]}], "}"}]}], ",", 
        RowBox[{"FrameLabel", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"\"\<Stretching Factor\>\"", ",", "\"\<Probability\>\""}], 
          "}"}]}], ",", 
        RowBox[{"LabelStyle", "\[Rule]", 
         RowBox[{"Directive", "[", 
          RowBox[{"FontSize", "\[Rule]", 
           RowBox[{"OptionValue", "[", "FontSize", "]"}]}], "]"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"PlotRangePadding", "\[Rule]", "0"}], ",", 
        RowBox[{"PlotRange", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "Automatic"}], "}"}], ",", "Automatic"}], 
          "}"}]}], ",", 
        RowBox[{"Axes", "\[Rule]", "False"}], ",", 
        RowBox[{"FrameStyle", "\[Rule]", 
         RowBox[{"OptionValue", "[", "FrameStyle", "]"}]}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"probabilityMax", "=", 
      RowBox[{
       RowBox[{"Max", "@", 
        RowBox[{
         RowBox[{"HistogramList", "[", "sample", "]"}], 
         "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], "/", 
       RowBox[{"Length", "[", "sample", "]"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[Kappa]Max", "=", 
      RowBox[{"Max", "@", 
       RowBox[{
        RowBox[{"HistogramList", "[", "sample", "]"}], "\[LeftDoubleBracket]",
         "1", "\[RightDoubleBracket]"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"errorBars", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"errorBar", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"observations", "\[LeftDoubleBracket]", 
             RowBox[{"it", ",", "2", ",", "1"}], "\[RightDoubleBracket]"}], 
            ",", 
            RowBox[{"Min", "[", 
             RowBox[{"\[Kappa]Max", ",", 
              RowBox[{"observations", "\[LeftDoubleBracket]", 
               RowBox[{"it", ",", "2", ",", "2"}], 
               "\[RightDoubleBracket]"}]}], "]"}]}], "}"}], ",", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1.", "-", 
             RowBox[{
              FractionBox["it", 
               RowBox[{"Length", "[", "observations", "]"}]], ".3"}]}], ")"}],
            "probabilityMax"}], ",", 
          RowBox[{
           FractionBox[".1", 
            RowBox[{"Length", "[", "observations", "]"}]], "probabilityMax"}],
           ",", 
          RowBox[{
           RowBox[{"observations", "\[LeftDoubleBracket]", 
            RowBox[{"it", ",", "2", ",", "2"}], "\[RightDoubleBracket]"}], 
           ">", "\[Kappa]Max"}], ",", 
          RowBox[{
           RowBox[{"ToString", "@", 
            RowBox[{"observations", "\[LeftDoubleBracket]", 
             RowBox[{"it", ",", "1"}], "\[RightDoubleBracket]"}]}], "<>", 
           "\"\<: (\>\"", "<>", 
           RowBox[{"ToString", "@", 
            RowBox[{"observations", "\[LeftDoubleBracket]", 
             RowBox[{"it", ",", "2", ",", "1"}], "\[RightDoubleBracket]"}]}], 
           "<>", "\"\<, \>\"", "<>", 
           RowBox[{"ToString", "@", 
            RowBox[{"observations", "\[LeftDoubleBracket]", 
             RowBox[{"it", ",", "2", ",", "2"}], "\[RightDoubleBracket]"}]}], 
           "<>", "\"\<)\>\""}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"it", ",", "1", ",", 
          RowBox[{"Length", "[", "observations", "]"}]}], "}"}]}], "]"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"Show", "[", 
      RowBox[{"histogram", ",", "errorBars", ",", 
       RowBox[{"ImageSize", "\[Rule]", 
        RowBox[{"OptionValue", "[", "ImageSize", "]"}]}]}], "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]}], "Input",
 CellChangeTimes->CompressedData["
1:eJwlzE0ogwEABuCPmLJmkswyoUx+FlK0GKU4kMKXdpgdtPxstVjzc1pttVIS
WjJDIYeZw5aTNA4L07AZm79GybZabWI0UiLf+zm8Pb2H9y2SjZADyQRB5FOB
NbJEyB+ONh/9rEXgknj4HQrkB0lXlOYtKwuWcjLzoPpLVAg3U3S07uBGMTT5
zLQqRe8Y3GljTsAcT44OahVSPTS647PweFE5D8l4ugluzw3SBiu463CKn2GF
/Yy6HXrvDZzD8UziCQaqeiIwXK14hS3T6jcYjZ1801pVqdeU+gctC1Yue9jw
Rm/JhvICBwdOiu8LIYs5JIAxXpkQftTv0XZ5ja1QqNS0w9OOThLOXLqk8Hm1
fB0e9+2boWAlyQY1Bpftv+/a4TDT5YClpNMNuz2xC7jgdKbe4l/SkAZ/DZ/2
AOXdC28PZnETvhAlY5fth4+5Z438SLS59nC0CZIWUQsseZK0wj/glxlW
  "]],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "\[Kappa]CDFPlot", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"FontSize", "\[Rule]", "10"}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"PlotPoints", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"FrameStyle", "\[Rule]", "Black"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Kappa]CDFPlot", "[", 
    RowBox[{"sample_", ",", "observations_", ",", 
     RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"it", ",", "\[Kappa]2"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"\[Kappa]2", "=", 
       RowBox[{"Max", "[", 
        RowBox[{"observations", "\[LeftDoubleBracket]", 
         RowBox[{"All", ",", "2", ",", "2"}], "\[RightDoubleBracket]"}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Show", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Plot", "[", 
         RowBox[{
          RowBox[{"CDF", "[", 
           RowBox[{
            RowBox[{"EmpiricalDistribution", "[", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"Mean", "[", 
                RowBox[{
                "value", "\[LeftDoubleBracket]", "2", 
                 "\[RightDoubleBracket]"}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"value", ",", "observations"}], "}"}]}], "]"}], "]"}],
             ",", "\[Kappa]i"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"\[Kappa]i", ",", "0.", ",", 
            RowBox[{"1.01", "\[Kappa]2"}]}], "}"}], ",", 
          RowBox[{"PlotStyle", "\[Rule]", "Gray"}]}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"errorBar", "[", 
           RowBox[{
            RowBox[{"observations", "\[LeftDoubleBracket]", 
             RowBox[{"it", ",", "2"}], "\[RightDoubleBracket]"}], ",", 
            FractionBox[
             RowBox[{
              RowBox[{"2", "it"}], "-", "1"}], 
             RowBox[{"2", 
              RowBox[{"Length", "[", "observations", "]"}]}]], ",", "0.01", 
            ",", "False", ",", 
            RowBox[{"observations", "\[LeftDoubleBracket]", 
             RowBox[{"it", ",", "1"}], "\[RightDoubleBracket]"}]}], "]"}], 
          ",", 
          RowBox[{"{", 
           RowBox[{"it", ",", "1", ",", 
            RowBox[{"Length", "[", "observations", "]"}]}], "}"}]}], "]"}], 
        ",", "\[IndentingNewLine]", 
        RowBox[{"Plot", "[", 
         RowBox[{
          RowBox[{"CDF", "[", 
           RowBox[{
            RowBox[{"EmpiricalDistribution", "[", "sample", "]"}], ",", 
            "\[Kappa]i"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"\[Kappa]i", ",", "0.", ",", 
            RowBox[{"1.01", "\[Kappa]2"}]}], "}"}], ",", 
          RowBox[{"PlotRange", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", 
               RowBox[{"1.01", "\[Kappa]2"}]}], "}"}], ",", "All"}], "}"}]}], 
          ",", 
          RowBox[{"PlotStyle", "\[Rule]", "Thick"}], ",", 
          RowBox[{"PlotPoints", "\[Rule]", 
           RowBox[{"OptionValue", "[", "PlotPoints", "]"}]}]}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"Frame", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"True", ",", "False"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"True", ",", "False"}], "}"}]}], "}"}]}], ",", 
        RowBox[{"FrameStyle", "\[Rule]", 
         RowBox[{"OptionValue", "[", "FrameStyle", "]"}]}], ",", 
        RowBox[{"FrameLabel", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"\"\<Stretching Factor\>\"", ",", "\"\<CDF\>\""}], "}"}]}], 
        ",", 
        RowBox[{"PlotRangePadding", "\[Rule]", "0"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"LabelStyle", "\[Rule]", 
         RowBox[{"Directive", "[", 
          RowBox[{"FontSize", "\[Rule]", 
           RowBox[{"OptionValue", "[", "FontSize", "]"}]}], "]"}]}], ",", 
        RowBox[{"Axes", "\[Rule]", "False"}], ",", 
        RowBox[{"ImageSize", "\[Rule]", 
         RowBox[{"OptionValue", "[", "ImageSize", "]"}]}]}], 
       "\[IndentingNewLine]", "]"}]}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.60963882598407*^9, 3.609638900852791*^9}, {
  3.6096389446211233`*^9, 3.609638946137813*^9}, {3.609644573175976*^9, 
  3.6096446049650517`*^9}, {3.609646555631206*^9, 3.6096465559736757`*^9}, {
  3.609650900556123*^9, 3.60965091966558*^9}, {3.609664658614739*^9, 
  3.609664658760437*^9}, {3.609664746538519*^9, 3.6096647567832727`*^9}, {
  3.609665179384776*^9, 3.609665180510923*^9}, {3.610847790438498*^9, 
  3.610847815659305*^9}, {3.610876347523224*^9, 3.610876368843339*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Correlation plots", "Subsubsection",
 CellChangeTimes->{{3.609641260312993*^9, 3.6096412625349283`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Needs", "[", "\"\<ErrorBarPlots`\>\"", "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.609642037060667*^9, 3.6096420445454483`*^9}, {
  3.609996928911669*^9, 3.609996937745859*^9}, {3.60999766248899*^9, 
  3.609997662606525*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "\[Chi]\[Kappa]ListPlot", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"FontSize", "\[Rule]", "10"}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"ImagePadding", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
     RowBox[{"FrameTicks", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"PointSize", "\[Rule]", "Small"}], ",", 
     RowBox[{"frameColor", "\[Rule]", "Black"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Chi]\[Kappa]ListPlot", "[", 
   RowBox[{"sample_", ",", 
    RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], ":=", 
  RowBox[{"ListLogLinearPlot", "[", 
   RowBox[{
    RowBox[{"Transpose", "@", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"sample", "\[LeftDoubleBracket]", 
        RowBox[{"All", ",", "2"}], "\[RightDoubleBracket]"}], ",", 
       RowBox[{"sample", "\[LeftDoubleBracket]", 
        RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}]}], "}"}]}], ",", 
    
    RowBox[{"Frame", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"True", ",", "False"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"True", ",", "False"}], "}"}]}], "}"}]}], ",", 
    RowBox[{"FrameLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<Stretching Factor\>\"", ",", "\"\<Off-axis angle\>\""}], 
      "}"}]}], ",", 
    RowBox[{"LabelStyle", "\[Rule]", 
     RowBox[{"Directive", "[", 
      RowBox[{"FontSize", "\[Rule]", 
       RowBox[{"OptionValue", "[", "FontSize", "]"}]}], "]"}]}], ",", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"OptionValue", "[", "PlotRange", "]"}]}], ",", 
    RowBox[{"ImageSize", "\[Rule]", 
     RowBox[{"OptionValue", "[", "ImageSize", "]"}]}], ",", 
    RowBox[{"ImagePadding", "\[Rule]", 
     RowBox[{"OptionValue", "[", "ImagePadding", "]"}]}], ",", 
    RowBox[{"FrameTicks", "\[Rule]", 
     RowBox[{"OptionValue", "[", "FrameTicks", "]"}]}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"Directive", "[", 
      RowBox[{"PointSize", "\[Rule]", 
       RowBox[{"OptionValue", "[", "PointSize", "]"}]}], "]"}]}], ",", 
    RowBox[{"FrameStyle", "\[Rule]", 
     RowBox[{"OptionValue", "[", "frameColor", "]"}]}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.609641279011052*^9, 3.609641295375565*^9}, {
   3.609641392477601*^9, 3.609641401986206*^9}, {3.609641441136017*^9, 
   3.609641442379567*^9}, {3.609641480237706*^9, 3.609641537466012*^9}, {
   3.609641885471024*^9, 3.609641936324978*^9}, {3.6096420508532467`*^9, 
   3.609642077731365*^9}, {3.609642119226645*^9, 3.609642195179572*^9}, {
   3.60964222606548*^9, 3.6096422308482847`*^9}, {3.609642277503998*^9, 
   3.6096423118394947`*^9}, {3.609642350886146*^9, 3.609642365956815*^9}, {
   3.609644830582081*^9, 3.609644830834968*^9}, {3.6096449860870447`*^9, 
   3.6096450027812033`*^9}, {3.609645190518502*^9, 3.609645192383938*^9}, {
   3.609646301434123*^9, 3.6096463549770403`*^9}, {3.6096464021756*^9, 
   3.6096464023135233`*^9}, 3.6096466547963543`*^9, {3.609648216544531*^9, 
   3.609648231520274*^9}, {3.609648754629854*^9, 3.609648765533299*^9}, {
   3.609649014986142*^9, 3.609649036568336*^9}, {3.6096651882484417`*^9, 
   3.6096651893281593`*^9}, {3.6097583666846027`*^9, 
   3.6097584096757317`*^9}, {3.60999664063404*^9, 3.609996690218821*^9}, {
   3.609996964953442*^9, 3.609996966218875*^9}, 3.609998130583955*^9, {
   3.610000520976674*^9, 3.610000558762969*^9}, {3.610001063883407*^9, 
   3.61000107357134*^9}, {3.610002040257538*^9, 3.610002047061574*^9}, {
   3.610589274055587*^9, 3.610589307156163*^9}, {3.6105893445805187`*^9, 
   3.610589345133417*^9}, {3.610589453787155*^9, 3.6105894557679377`*^9}, {
   3.610589493474124*^9, 3.61058955410306*^9}, {3.610937966050233*^9, 
   3.6109380151405277`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "ratio\[Kappa]ListPlot", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"FontSize", "\[Rule]", "10"}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"ImagePadding", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
     RowBox[{"FrameTicks", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"PointSize", "\[Rule]", "Small"}], ",", 
     RowBox[{"frameColor", "\[Rule]", "Black"}], ",", 
     RowBox[{"log\[Kappa]Scale", "\[Rule]", "True"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ratio\[Kappa]ListPlot", "[", 
   RowBox[{"sample_", ",", "observations_", ",", 
    RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], ":=", 
  RowBox[{"Show", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Apply", "[", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"OptionValue", "[", "log\[Kappa]Scale", "]"}], ",", 
        "ListLogLogPlot", ",", "ListLogLinearPlot"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Transpose", "@", 
         RowBox[{"{", 
          RowBox[{
           FractionBox[
            RowBox[{"sample", "\[LeftDoubleBracket]", 
             RowBox[{"All", ",", "2"}], "\[RightDoubleBracket]"}], 
            RowBox[{
             RowBox[{"sample", "\[LeftDoubleBracket]", 
              RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], "+", 
             RowBox[{"sample", "\[LeftDoubleBracket]", 
              RowBox[{"All", ",", "2"}], "\[RightDoubleBracket]"}]}]], ",", 
           RowBox[{"sample", "\[LeftDoubleBracket]", 
            RowBox[{"All", ",", "3"}], "\[RightDoubleBracket]"}]}], "}"}]}], 
        ",", 
        RowBox[{"Frame", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"True", ",", "False"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"True", ",", "False"}], "}"}]}], "}"}]}], ",", 
        RowBox[{"FrameLabel", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
          "\"\<Fraction of high energy photons\>\"", ",", 
           "\"\<Stretching Factor\>\""}], "}"}]}], ",", 
        RowBox[{"FrameStyle", "\[Rule]", 
         RowBox[{"OptionValue", "[", "frameColor", "]"}]}], ",", 
        RowBox[{"LabelStyle", "\[Rule]", 
         RowBox[{"Directive", "[", 
          RowBox[{"FontSize", "\[Rule]", 
           RowBox[{"OptionValue", "[", "FontSize", "]"}]}], "]"}]}], ",", 
        RowBox[{"PlotRange", "\[Rule]", 
         RowBox[{"OptionValue", "[", "PlotRange", "]"}]}], ",", 
        RowBox[{"FrameTicks", "\[Rule]", 
         RowBox[{"OptionValue", "[", "FrameTicks", "]"}]}], ",", 
        RowBox[{"PlotStyle", "\[Rule]", 
         RowBox[{"Directive", "[", 
          RowBox[{"PointSize", "\[Rule]", 
           RowBox[{"OptionValue", "[", "PointSize", "]"}]}], "]"}]}]}], 
       "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Length", "@", "observations"}], ">", "0"}], ",", 
      RowBox[{
       RowBox[{"ErrorListPlot", "[", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Mean", "/@", "obs"}], ",", 
             RowBox[{"Apply", "[", 
              RowBox[{"ErrorBar", ",", 
               RowBox[{
                RowBox[{
                 FractionBox[
                  RowBox[{
                   RowBox[{"Differences", "[", "#", "]"}], 
                   "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
                  "2"], "&"}], "/@", "obs"}]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"obs", ",", "observations"}], "}"}]}], "]"}], ",", 
         RowBox[{"PlotStyle", "\[Rule]", "Black"}]}], "]"}], "/.", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"x_Real", ",", "y_Real"}], "}"}], "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Log", "@", "x"}], ",", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"OptionValue", "[", "log\[Kappa]Scale", "]"}], ",", 
             "Log", ",", "Identity"}], "]"}], "@", "y"}]}], "}"}]}]}], ",", 
      RowBox[{"Graphics", "[", "]"}]}], "]"}], ",", 
    RowBox[{"Axes", "\[Rule]", "False"}], ",", 
    RowBox[{"ImageSize", "\[Rule]", 
     RowBox[{"OptionValue", "[", "ImageSize", "]"}]}], ",", 
    RowBox[{"ImagePadding", "\[Rule]", 
     RowBox[{"OptionValue", "[", "ImagePadding", "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]}], "Input",
 CellChangeTimes->{{3.609641279011052*^9, 3.609641295375565*^9}, {
   3.609641392477601*^9, 3.609641401986206*^9}, {3.609641441136017*^9, 
   3.609641442379567*^9}, {3.609641480237706*^9, 3.609641537466012*^9}, {
   3.609641885471024*^9, 3.609641936324978*^9}, {3.6096420508532467`*^9, 
   3.609642077731365*^9}, {3.609642119226645*^9, 3.609642195179572*^9}, {
   3.60964222606548*^9, 3.6096422308482847`*^9}, {3.609642277503998*^9, 
   3.6096423118394947`*^9}, {3.609642350886146*^9, 3.609642365956815*^9}, {
   3.609642416432074*^9, 3.609642430618224*^9}, {3.609642577990877*^9, 
   3.609642635828002*^9}, {3.609645154438546*^9, 3.609645178192333*^9}, {
   3.609645563771699*^9, 3.609645565326478*^9}, {3.609645936315946*^9, 
   3.609645977766192*^9}, {3.609646387458065*^9, 3.609646463075059*^9}, 
   3.609646656516675*^9, {3.609648306612466*^9, 3.609648318813725*^9}, {
   3.6096487686779537`*^9, 3.6096487828788223`*^9}, {3.60964881456*^9, 
   3.60964882695549*^9}, {3.609649524092677*^9, 3.609649536824375*^9}, {
   3.6096651923782167`*^9, 3.60966519314334*^9}, {3.609758430326338*^9, 
   3.60975844917204*^9}, {3.609995145700523*^9, 3.609995158111725*^9}, {
   3.609996303171307*^9, 3.60999630786156*^9}, {3.609996357389161*^9, 
   3.609996360763049*^9}, {3.609996425798112*^9, 3.609996430300147*^9}, {
   3.609996713304719*^9, 3.609996715055073*^9}, {3.6099969688512573`*^9, 
   3.609996969485546*^9}, {3.6099984008561687`*^9, 3.609998402423579*^9}, {
   3.60999871252*^9, 3.609998761198254*^9}, {3.609998906092676*^9, 
   3.6099989163231916`*^9}, {3.610001041007011*^9, 3.610001060662347*^9}, {
   3.610001467224742*^9, 3.610001467740533*^9}, {3.610002020498968*^9, 
   3.610002025025519*^9}, {3.6105895655612383`*^9, 3.6105895925343*^9}, {
   3.610938024921632*^9, 3.610938050380715*^9}, {3.610938600259042*^9, 
   3.610938608151949*^9}, {3.6109386604237022`*^9, 3.61093866972337*^9}, {
   3.610938715060627*^9, 3.610938782084496*^9}, {3.6109388528520937`*^9, 
   3.6109388822496147`*^9}, {3.6109390213512506`*^9, 3.610939066753594*^9}, {
   3.610939114134429*^9, 3.610939159905026*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "ratio\[Chi]ListPlot", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"FontSize", "\[Rule]", "10"}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"ImagePadding", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
     RowBox[{"FrameTicks", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"PointSize", "\[Rule]", "Small"}], ",", 
     RowBox[{"frameColor", "\[Rule]", "Black"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ratio\[Chi]ListPlot", "[", 
   RowBox[{"sample_", ",", 
    RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], ":=", 
  RowBox[{"ListLogLinearPlot", "[", 
   RowBox[{
    RowBox[{"Transpose", "@", 
     RowBox[{"{", 
      RowBox[{
       FractionBox[
        RowBox[{"sample", "\[LeftDoubleBracket]", 
         RowBox[{"All", ",", "3"}], "\[RightDoubleBracket]"}], 
        RowBox[{
         RowBox[{"sample", "\[LeftDoubleBracket]", 
          RowBox[{"All", ",", "2"}], "\[RightDoubleBracket]"}], "+", 
         RowBox[{"sample", "\[LeftDoubleBracket]", 
          RowBox[{"All", ",", "3"}], "\[RightDoubleBracket]"}]}]], ",", 
       RowBox[{"sample", "\[LeftDoubleBracket]", 
        RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}]}], "}"}]}], ",", 
    
    RowBox[{"Frame", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"True", ",", "False"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"True", ",", "False"}], "}"}]}], "}"}]}], ",", 
    RowBox[{"FrameLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<Fraction of high energy photons\>\"", ",", 
       "\"\<Off-axis angle\>\""}], "}"}]}], ",", 
    RowBox[{"LabelStyle", "\[Rule]", 
     RowBox[{"Directive", "[", 
      RowBox[{"FontSize", "\[Rule]", 
       RowBox[{"OptionValue", "[", "FontSize", "]"}]}], "]"}]}], ",", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"OptionValue", "[", "PlotRange", "]"}]}], ",", 
    RowBox[{"ImageSize", "\[Rule]", 
     RowBox[{"OptionValue", "[", "ImageSize", "]"}]}], ",", 
    RowBox[{"ImagePadding", "\[Rule]", 
     RowBox[{"OptionValue", "[", "ImagePadding", "]"}]}], ",", 
    RowBox[{"FrameTicks", "\[Rule]", 
     RowBox[{"OptionValue", "[", "FrameTicks", "]"}]}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"Directive", "[", 
      RowBox[{"PointSize", "\[Rule]", 
       RowBox[{"OptionValue", "[", "PointSize", "]"}]}], "]"}]}], ",", 
    RowBox[{"FrameStyle", "\[Rule]", 
     RowBox[{"OptionValue", "[", "frameColor", "]"}]}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.609641279011052*^9, 3.609641295375565*^9}, {
   3.609641392477601*^9, 3.609641401986206*^9}, {3.609641441136017*^9, 
   3.609641442379567*^9}, {3.609641480237706*^9, 3.609641537466012*^9}, {
   3.609641885471024*^9, 3.609641936324978*^9}, {3.6096420508532467`*^9, 
   3.609642077731365*^9}, {3.609642119226645*^9, 3.609642195179572*^9}, {
   3.60964222606548*^9, 3.6096422308482847`*^9}, {3.609642277503998*^9, 
   3.6096423118394947`*^9}, {3.609642350886146*^9, 3.609642365956815*^9}, {
   3.609642416432074*^9, 3.609642430618224*^9}, {3.60964254240475*^9, 
   3.609642561438034*^9}, {3.609642700788495*^9, 3.6096427126318827`*^9}, {
   3.6096451971597843`*^9, 3.609645212529265*^9}, {3.609645552355853*^9, 
   3.609645552616294*^9}, {3.6096460972835217`*^9, 3.609646097817787*^9}, {
   3.6096464431171503`*^9, 3.6096464898844023`*^9}, {3.609646659412133*^9, 
   3.609646725256134*^9}, {3.609646793993126*^9, 3.6096468007554493`*^9}, {
   3.6096468524234743`*^9, 3.609646859636047*^9}, {3.609648275705935*^9, 
   3.6096482900080957`*^9}, {3.6096489787422047`*^9, 3.609649008784285*^9}, {
   3.609649543886816*^9, 3.6096495542799187`*^9}, {3.609665196681342*^9, 
   3.6096651974667883`*^9}, 3.609995164666066*^9, {3.6099963450573597`*^9, 
   3.60999635104795*^9}, {3.609996436302801*^9, 3.6099964441976967`*^9}, {
   3.609996975473761*^9, 3.609996976464491*^9}, {3.610000400430552*^9, 
   3.610000497374262*^9}, {3.610001025812619*^9, 3.610001035935293*^9}, {
   3.6100020312188997`*^9, 3.6100020517823668`*^9}, {3.6105895982926083`*^9, 
   3.610589615038868*^9}, {3.6109380632337427`*^9, 3.610938073809847*^9}, {
   3.6109381725236387`*^9, 3.610938176499041*^9}}]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Results", "Subsection",
 CellChangeTimes->{{3.6074998753290052`*^9, 3.6074998783107767`*^9}}],

Cell[CellGroupData[{

Cell["Minimization", "Subsubsection",
 CellChangeTimes->{{3.60749989928918*^9, 3.607499900687396*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"PrintTemporary", "[", 
   RowBox[{"Dynamic", "[", 
    RowBox[{"{", 
     RowBox[{"z", ",", "z1", ",", "z2"}], "}"}], "]"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"PrintTemporary", "[", 
   RowBox[{"Dynamic", "[", 
    RowBox[{"{", 
     RowBox[{"\[Chi]", ",", "\[Chi]0"}], "}"}], "]"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"PrintTemporary", "[", 
   RowBox[{"Dynamic", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Length", "[", "pointsChosen", "]"}], ",", "startedCount", ",", 
      "completedCount"}], "}"}], "]"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"findSingleBurstFit", "[", 
  RowBox[{
   RowBox[{"defaultUniverse", "[", "]"}], ",", 
   RowBox[{"defaultPopulation", "[", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"300", ",", "1"}], "}"}], ",", "2.1062", ",", 
   RowBox[{"{", 
    RowBox[{".1", ",", "1", ",", "\[Infinity]"}], "}"}], ",", 
   "totalPhotonCount090926A", ",", 
   RowBox[{"{", 
    RowBox[{"\[Kappa]LogTarget090926A", ",", "\[Kappa]LogError090926A"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Kappa]LogTarget090902B", ",", "\[Kappa]LogError090902B"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"photonRatioLogTarget090926A", ",", 
     RowBox[{"Log", "[", "10.", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     RowBox[{"Log", "[", "10.", "]"}]}], "}"}], ",", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"22.1525", ",", 
       RowBox[{"Log", "[", "0.000216424", "]"}], ",", 
       RowBox[{"-", "0.417021"}], ",", 
       RowBox[{"-", "1.35163"}], ",", 
       RowBox[{"Log", "[", "0.00704982", "]"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"25.864", ",", 
       RowBox[{"Log", "[", "4.90222*^-8", "]"}], ",", 
       RowBox[{"-", "2.90875"}], ",", "3.53801", ",", 
       RowBox[{"Log", "[", "0.00028657", "]"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"17.538", ",", 
       RowBox[{"Log", "[", "0.00146284", "]"}], ",", 
       RowBox[{"-", "0.20793"}], ",", 
       RowBox[{"-", "2.1336"}], ",", 
       RowBox[{"Log", "[", "0.00152624", "]"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"17.9736", ",", 
       RowBox[{"Log", "[", "4.52631*^-6", "]"}], ",", 
       RowBox[{"-", "1.40262"}], ",", 
       RowBox[{"-", "0.0114132"}], ",", 
       RowBox[{"Log", "[", "0.0003259", "]"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"5", ",", 
       RowBox[{"Log", "[", "1.12535*^-7", "]"}], ",", 
       RowBox[{"-", "0.2"}], ",", 
       RowBox[{"-", "2.0"}], ",", 
       RowBox[{"Log", "[", "0.00473795", "]"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"7", ",", 
       RowBox[{"Log", "[", "2.*^-12", "]"}], ",", 
       RowBox[{"-", "3"}], ",", 
       RowBox[{"-", "3"}], ",", 
       RowBox[{"Log", "[", "0.00173795", "]"}]}], "}"}]}], 
    "\[IndentingNewLine]", "}"}], ",", 
   RowBox[{"accurateQ", "\[Rule]", "False"}], ",", 
   RowBox[{"logQ", "\[Rule]", "True"}], ",", 
   RowBox[{"sampleSize", "\[Rule]", "10"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.606787540441008*^9, 3.606787631643077*^9}, {
   3.606787666514709*^9, 3.606787692123499*^9}, {3.606788046164083*^9, 
   3.6067880688333693`*^9}, {3.60678825023518*^9, 3.6067882550257177`*^9}, {
   3.606792324409047*^9, 3.6067923267770367`*^9}, {3.6067927532548943`*^9, 
   3.606792761195971*^9}, {3.606793036876443*^9, 3.606793052483157*^9}, {
   3.606793091236801*^9, 3.606793102837316*^9}, {3.606794309837031*^9, 
   3.606794334587343*^9}, {3.606794366547187*^9, 3.606794366867546*^9}, {
   3.606795078676282*^9, 3.606795091581581*^9}, {3.606795149578546*^9, 
   3.60679514991996*^9}, {3.6067952386075163`*^9, 3.606795239112365*^9}, {
   3.6067966570732613`*^9, 3.6067966629030457`*^9}, {3.606798760950096*^9, 
   3.606798761976829*^9}, {3.60679908104608*^9, 3.606799081389297*^9}, {
   3.6068117744959106`*^9, 3.6068117844065866`*^9}, {3.6068140021509743`*^9, 
   3.6068140026042223`*^9}, {3.6068152816721907`*^9, 3.606815289487356*^9}, {
   3.6068156660722103`*^9, 3.606815669024022*^9}, {3.606816953270817*^9, 
   3.6068169587738447`*^9}, {3.606818698860771*^9, 3.606818698981791*^9}, {
   3.60681883818729*^9, 3.6068188382801228`*^9}, {3.606826309355892*^9, 
   3.6068263114539127`*^9}, {3.6068263453069983`*^9, 3.606826347008851*^9}, 
   3.606871979478526*^9, {3.606970642661006*^9, 3.606970644629006*^9}, {
   3.607040084771667*^9, 3.607040120304093*^9}, {3.6070413420330276`*^9, 
   3.607041343416123*^9}, {3.607041674200344*^9, 3.607041677839254*^9}, {
   3.6070420558804703`*^9, 3.607042066437764*^9}, {3.607042408969769*^9, 
   3.607042412949823*^9}, {3.607042893781584*^9, 3.607042896421233*^9}, {
   3.607043053820203*^9, 3.607043056428385*^9}, {3.6070705827069473`*^9, 
   3.6070705998487864`*^9}, {3.607070882725918*^9, 3.607070914256212*^9}, {
   3.607071010611926*^9, 3.607071017717598*^9}, {3.607071345784321*^9, 
   3.607071348996977*^9}, {3.607073682948242*^9, 3.607073699000895*^9}, {
   3.60707988801705*^9, 3.607079922578576*^9}, {3.607079953850016*^9, 
   3.6070799562232237`*^9}, {3.607080017179563*^9, 3.6070800201294613`*^9}, {
   3.6071503260883493`*^9, 3.607150355059175*^9}, {3.607150467470962*^9, 
   3.607150518237198*^9}, {3.607150548293786*^9, 3.6071505503547573`*^9}, {
   3.607150633919725*^9, 3.6071506364358664`*^9}, {3.607150667525413*^9, 
   3.607150676158969*^9}, {3.607150763467977*^9, 3.6071507949225683`*^9}, {
   3.607150885850911*^9, 3.607150900981023*^9}, {3.607150952424551*^9, 
   3.6071509709417963`*^9}, {3.607151061908752*^9, 3.6071510749953003`*^9}, {
   3.607151111565999*^9, 3.607151111859749*^9}, {3.6071630634017773`*^9, 
   3.607163063562042*^9}, {3.607165135092894*^9, 3.607165138706964*^9}, {
   3.6071651775661097`*^9, 3.607165220875937*^9}, {3.607171490516179*^9, 
   3.607171512617487*^9}, {3.607173064113058*^9, 3.60717307868601*^9}, {
   3.607173775078308*^9, 3.607173788669252*^9}, {3.607174213744079*^9, 
   3.6071742358649817`*^9}, {3.6071743774040728`*^9, 3.607174380646597*^9}, {
   3.6073836137221746`*^9, 3.607383684236947*^9}, {3.6073852045485687`*^9, 
   3.607385229937605*^9}, {3.60738537083494*^9, 3.607385371736637*^9}, {
   3.607385835708268*^9, 3.607385839107675*^9}, {3.607387235110963*^9, 
   3.607387237205529*^9}, {3.6073873308544064`*^9, 3.607387339071673*^9}, {
   3.607387403854828*^9, 3.6073874448154507`*^9}, {3.607391461088468*^9, 
   3.607391464385047*^9}, {3.607391501343521*^9, 3.6073915032057543`*^9}, {
   3.607578979085574*^9, 3.6075789991858807`*^9}, {3.607580052715961*^9, 
   3.607580066492165*^9}, {3.607580510423753*^9, 3.6075805237515497`*^9}, {
   3.607580560612709*^9, 3.607580568772667*^9}, {3.607581029886907*^9, 
   3.607581029999578*^9}, {3.6075812469745817`*^9, 3.6075812488414097`*^9}, {
   3.607581913285289*^9, 3.607581923842937*^9}, 3.607582488792965*^9, {
   3.60759265677277*^9, 3.607592673044922*^9}, {3.6075933267535677`*^9, 
   3.607593343776815*^9}, {3.607593480840535*^9, 3.607593499632329*^9}, {
   3.607593677018961*^9, 3.60759373880721*^9}, {3.607597099183399*^9, 
   3.607597174878522*^9}, {3.607598062074772*^9, 3.607598098917726*^9}, {
   3.607598332529254*^9, 3.6075983499500647`*^9}, {3.6076010276591063`*^9, 
   3.607601086242148*^9}, {3.607607633546784*^9, 3.607607636258037*^9}, {
   3.607669234708241*^9, 3.607669237014553*^9}, {3.6077559464437113`*^9, 
   3.607755948777335*^9}, {3.607756586683123*^9, 3.607756588590888*^9}, {
   3.6093862173313*^9, 3.609386223213279*^9}, {3.6093955497865868`*^9, 
   3.609395550168585*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 TemplateBox[{"\"trying \"",RowBox[{"{", 
     RowBox[{
       RowBox[{"{", 
         RowBox[{
          "300", ",", "8.4`*^37", ",", "1.2`*^6", ",", "22.1525`", ",", "1", 
           ",", "0.00021642399999999984`", ",", 
           RowBox[{"-", "0.417021`"}], ",", 
           RowBox[{"-", "1.35163`"}]}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"2.1062`", ",", "0.0070498199999999974`"}], "}"}]}], "}"}]},
  "RowDefault"]], "Print",
 CellChangeTimes->{
  3.6095722685639067`*^9, 3.609572312707724*^9, 3.6095723651465673`*^9, 
   3.609572453222207*^9, 3.609572492973989*^9, {3.617602296699391*^9, 
   3.617602319857935*^9}, 3.617602394629306*^9, 3.617602998190041*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"3.615087196523855`", ",", 
   RowBox[{"{", 
    RowBox[{"0.0006689242546129222`", ",", "1.1878074273024486`", ",", 
     RowBox[{"-", "0.9780316423397244`"}], ",", 
     RowBox[{"-", "1.116984499127717`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "300", ",", "1.1062588503295299`*^35", ",", "1.2`*^6", ",", "22.1525`", 
     ",", "1", ",", "0.00021642399999999984`", ",", 
     RowBox[{"-", "0.417021`"}], ",", 
     RowBox[{"-", "1.35163`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.1062`", ",", "0.0070498199999999974`"}], "}"}]}], 
  "}"}]], "Print",
 CellChangeTimes->{
  3.6095722685639067`*^9, 3.609572312707724*^9, 3.6095723651465673`*^9, 
   3.609572453222207*^9, 3.609572492973989*^9, {3.617602296699391*^9, 
   3.617602319857935*^9}, 3.617602394629306*^9, 3.61760330555907*^9}],

Cell[BoxData[
 TemplateBox[{"\"trying \"",RowBox[{"{", 
     RowBox[{
       RowBox[{"{", 
         RowBox[{
          "300", ",", "8.4`*^37", ",", "1.2`*^6", ",", "25.864`", ",", "1", 
           ",", "4.902220000000007`*^-8", ",", 
           RowBox[{"-", "2.90875`"}], ",", "3.53801`"}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"2.1062`", ",", "0.00028657000000000004`"}], "}"}]}], "}"}]},
  
  "RowDefault"]], "Print",
 CellChangeTimes->{
  3.6095722685639067`*^9, 3.609572312707724*^9, 3.6095723651465673`*^9, 
   3.609572453222207*^9, 3.609572492973989*^9, {3.617602296699391*^9, 
   3.617602319857935*^9}, 3.617602394629306*^9, 3.617603305575959*^9}]
}, Open  ]],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{3.617602519971588*^9, 3.617605133452561*^9}]
}, Open  ]],

Cell["Findings", "Text",
 CellChangeTimes->{{3.606348133918042*^9, 3.606348135269116*^9}}],

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{"\[Gamma]", "\[GreaterEqual]", "50"}], TraditionalForm]]]], "Text",
 CellChangeTimes->{{3.606348156541897*^9, 3.6063481652157516`*^9}, {
  3.607067424905558*^9, 3.607067430113633*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"0.7938168112464861`", "\[VeryThinSpace]", "-", 
    RowBox[{"4.106377646794582`*^-14", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{
    "50.0657926779634`", ",", "19.501091186248775`", ",", 
     "0.0017054952666204536`", ",", 
     RowBox[{"-", "0.417534483951093`"}], ",", 
     RowBox[{"-", "1.1653144572014318`"}], ",", "0.044842302768962033`"}], 
    "}"}]}], "}"}]], "Input",
 CellChangeTimes->{{3.6063481255430517`*^9, 3.606348127726272*^9}, {
  3.606348194911273*^9, 3.606348228778201*^9}}],

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{"\[Gamma]", "\[GreaterEqual]", "100"}], TraditionalForm]]]], "Text",\

 CellChangeTimes->{{3.606388765262134*^9, 3.606388773732204*^9}, {
  3.607067416272358*^9, 3.6070674209058523`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.740281309209182`", ",", 
   RowBox[{"{", 
    RowBox[{
    "212.05667686475246`", ",", "20.586029895731766`", ",", 
     "0.0006018223237442693`", ",", 
     RowBox[{"-", "0.28834496910247603`"}], ",", 
     RowBox[{"-", "1.4234752020037233`"}], ",", "0.012381387855314176`"}], 
    "}"}]}], "}"}]], "Input"],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Gamma]", "=", "300"}], TraditionalForm]]],
 ", ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Kappa]", "=", "2.95"}], TraditionalForm]]]
}], "Text",
 CellChangeTimes->{{3.6064512944103737`*^9, 3.606451300587571*^9}, {
  3.6064576344732523`*^9, 3.606457638974822*^9}, {3.6067931367017*^9, 
  3.606793136777329*^9}, {3.6070674025938997`*^9, 3.60706741230442*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.48523460544730795`", ",", 
   RowBox[{"{", 
    RowBox[{
    "300", ",", "22.01039554696952`", ",", "0.00023951995459844163`", ",", 
     RowBox[{"-", "0.36664859506153297`"}], ",", 
     RowBox[{"-", "1.280471162683212`"}], ",", "0.011288050070583`"}], 
    "}"}]}], "}"}]], "Input",
 CellChangeTimes->{{3.606451302514258*^9, 3.606451331118482*^9}, {
  3.6067376286989727`*^9, 3.606737630870726*^9}}],

Cell[TextData[{
 "Distribution fit, double \[Kappa]Test, ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Gamma]", "=", "300"}], TraditionalForm]]]
}], "Text",
 CellChangeTimes->{{3.6070395878416758`*^9, 3.607039594377825*^9}, {
  3.607067364329997*^9, 3.60706739749542*^9}}],

Cell[BoxData[
 RowBox[{"4.627801475326828`", ",", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"-", "0.7128145412227463`"}], ",", "1.3035355218584697`", ",", 
    RowBox[{"-", "1.0880966542812152`"}], ",", 
    RowBox[{"-", "0.8526981382312875`"}]}], "}"}], ",", 
  RowBox[{"{", 
   RowBox[{
   "300", ",", "6.492989961591544`*^35", ",", "1.2`*^6", ",", 
    "17.81480416677621`", ",", "1", ",", "0.00020134682032022462`", ",", 
    RowBox[{"-", "0.37505543397413527`"}], ",", 
    RowBox[{"-", "1.2698890643165832`"}]}], "}"}], ",", 
  RowBox[{"{", 
   RowBox[{"2.1062`", ",", "0.006606500280573165`"}], "}"}]}]], "Input"],

Cell[TextData[{
 "Distribution fit, ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Gamma]", "=", "300"}], TraditionalForm]]]
}], "Text",
 CellChangeTimes->{{3.607067360381123*^9, 3.6070673900632877`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"3.68655", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1.17936"}], ",", "1.2531", ",", 
     RowBox[{"-", "0.649194"}], ",", 
     RowBox[{"-", "0.551328"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"300", ",", 
     RowBox[{"2.28024", " ", 
      SuperscriptBox["10", "35"]}], ",", 
     RowBox[{"1.2", " ", 
      SuperscriptBox["10", "6"]}], ",", "16.8911", ",", "1", ",", 
     "0.000169719", ",", 
     RowBox[{"-", "0.380545"}], ",", 
     RowBox[{"-", "1.25897"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.1062", ",", "0.00502948"}], "}"}]}], "}"}]], "Input",
 CellChangeTimes->{{3.6070674377781363`*^9, 3.6070674464053793`*^9}}],

Cell[TextData[{
 "Distribution fit, ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Gamma]", "=", "1000"}], TraditionalForm]]]
}], "Text",
 CellChangeTimes->{{3.607163045658436*^9, 3.607163050884712*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"3.65597876418943`", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1.28445195900536`"}], ",", "1.1660928432964677`", ",", 
     RowBox[{"-", "0.6154606016466347`"}], ",", 
     RowBox[{"-", "0.5172984224122911`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1000", ",", "1.3488906003565776`*^34", ",", "1.2`*^6", ",", 
     "17.630255636059324`", ",", "1", ",", "0.00004163798542967464`", ",", 
     RowBox[{"-", "0.3972290304663867`"}], ",", 
     RowBox[{"-", "1.2258882163348332`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.1062`", ",", "0.0013599261097429378`"}], "}"}]}], 
  "}"}]], "Input"],

Cell["Distribution fit, widespread initial points", "Text",
 CellChangeTimes->{{3.607236973296576*^9, 3.607236982155352*^9}, {
  3.607256380145895*^9, 3.6072563815854816`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"3.54219", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1.18859"}], ",", "1.24998", ",", 
     RowBox[{"-", "0.54779"}], ",", 
     RowBox[{"-", "0.516636"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"300", ",", 
     RowBox[{"1.54982", " ", 
      SuperscriptBox["10", "35"]}], ",", 
     RowBox[{"1.2", " ", 
      SuperscriptBox["10", "6"]}], ",", "23.2127", ",", "1", ",", 
     "0.000217938", ",", 
     RowBox[{"-", "0.347747"}], ",", 
     RowBox[{"-", "1.30455"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.1062", ",", "0.00503396"}], "}"}]}], "}"}]], "Input",
 CellChangeTimes->{{3.6072369662908783`*^9, 3.607236968923394*^9}, {
  3.607256378475994*^9, 3.6072564076046057`*^9}}],

Cell[TextData[{
 "Distribution fit, ",
 Cell[BoxData[
  FormBox[
   RowBox[{"Log", "[", "10.", "]"}], TraditionalForm]]],
 " error for the photonRatioTest"
}], "Text",
 CellChangeTimes->{{3.607470734900444*^9, 3.607470747778098*^9}, {
  3.607470778483934*^9, 3.6074707949697933`*^9}, {3.607470867881728*^9, 
  3.6074708682658157`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"2.07689", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.471716"}], ",", "1.11574", ",", 
     RowBox[{"-", "0.591337"}], ",", 
     RowBox[{"-", "0.509722"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"300", ",", 
     RowBox[{"1.733", " ", 
      SuperscriptBox["10", "36"]}], ",", 
     RowBox[{"1.2", " ", 
      SuperscriptBox["10", "6"]}], ",", "23.9119", ",", "1", ",", 
     "0.0000608492", ",", 
     RowBox[{"-", "0.693027"}], ",", 
     RowBox[{"-", "0.614004"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.1062", ",", "0.00584979"}], "}"}]}], "}"}]], "Input",
 CellChangeTimes->{{3.607470802659461*^9, 3.607470809548118*^9}}],

Cell[TextData[{
 "Distribution fit, ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SqrtBox["2"], 
    RowBox[{"Log", "[", "10.", "]"}]}], TraditionalForm]]],
 " errors for the photonRatioTest and photonRatioMedianTest"
}], "Text",
 CellChangeTimes->{{3.607470824930151*^9, 3.607470865217669*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1.74835", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.312454"}], ",", "1.11788", ",", 
     RowBox[{"-", "0.503465"}], ",", 
     RowBox[{"-", "0.384181"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"300", ",", 
     RowBox[{"1.59699", " ", 
      SuperscriptBox["10", "36"]}], ",", 
     RowBox[{"1.2", " ", 
      SuperscriptBox["10", "6"]}], ",", "23.5259", ",", "1", ",", 
     "0.0000645273", ",", 
     RowBox[{"-", "0.686477"}], ",", 
     RowBox[{"-", "0.638359"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.1062", ",", "0.00616176"}], "}"}]}], "}"}]], "Input",
 CellChangeTimes->{{3.607470900588119*^9, 3.607470946277495*^9}}],

Cell[TextData[{
 "Distribution fit, ",
 Cell[BoxData[
  FormBox[
   RowBox[{"Log", "[", "10.", "]"}], TraditionalForm]]],
 " error for the photonRatioTest, correct energy"
}], "Text",
 CellChangeTimes->{{3.6096289352036743`*^9, 3.609628957088965*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"2.16969", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.623479"}], ",", "1.11251", ",", 
     RowBox[{"-", "0.531924"}], ",", 
     RowBox[{"-", "0.510242"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"300", ",", 
     RowBox[{"1.78534", " ", 
      SuperscriptBox["10", "36"]}], ",", 
     RowBox[{"1.2", " ", 
      SuperscriptBox["10", "6"]}], ",", "22.5269", ",", "1", ",", 
     "0.0000502035", ",", 
     RowBox[{"-", "0.699813"}], ",", 
     RowBox[{"-", "0.626944"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.1062", ",", "0.00541037"}], "}"}]}], "}"}]], "Input",
 CellChangeTimes->{{3.609628966521572*^9, 3.6096289802586613`*^9}}],

Cell[TextData[{
 "After ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Theta]", "max"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " correction in Fermi tools"
}], "Text",
 CellChangeTimes->{{3.617691323297351*^9, 3.617691341036283*^9}}],

Cell[BoxData[{
 RowBox[{"{", 
  RowBox[{"2.13586", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.538139"}], ",", "1.11473", ",", 
     RowBox[{"-", "0.589639"}], ",", 
     RowBox[{"-", "0.50593"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"300", ",", 
     RowBox[{"8.20727", " ", 
      SuperscriptBox["10", "35"]}], ",", 
     RowBox[{"1.2", " ", 
      SuperscriptBox["10", "6"]}], ",", "22.9812", ",", "1", ",", 
     "0.0000796919", ",", 
     RowBox[{"-", "0.652342"}], ",", 
     RowBox[{"-", "0.726652"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.1062", ",", "0.00588908"}], "}"}]}], 
  "}"}], "\[IndentingNewLine]", 
 RowBox[{"{", 
  RowBox[{"2.13586", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"nj", "\[Rule]", "22.9812"}], ",", 
     RowBox[{"\[Theta]0j", "\[Rule]", 
      RowBox[{"-", "9.43734"}]}], ",", 
     RowBox[{"kj", "\[Rule]", 
      RowBox[{"-", "0.652342"}]}], ",", 
     RowBox[{"\[Alpha]j", "\[Rule]", 
      RowBox[{"-", "0.726652"}]}], ",", 
     RowBox[{"\[Chi]j", "\[Rule]", 
      RowBox[{"-", "5.13466"}]}]}], "}"}]}], "}"}]}], "Input",
 CellChangeTimes->{{3.617691348815392*^9, 3.617691379264559*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Distribution", "Subsubsection",
 CellChangeTimes->{{3.607499913888262*^9, 3.60749991508009*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"sample16IA", "=", 
   RowBox[{"burstSample", "[", 
    RowBox[{
     RowBox[{"defaultUniverse", "[", "]"}], ",", 
     RowBox[{"defaultPopulation", "[", "]"}], ",", 
     RowBox[{"defaultBurst", "[", "]"}], ",", 
     RowBox[{"defaultDetectorArea", "[", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{".1", ",", "1.", ",", "\[Infinity]"}], "}"}], ",", "16", ",", 
     RowBox[{"computedValues", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<z\>\"", ",", "\"\<\[Chi]\>\"", ",", "\"\<pLow\>\"", ",", 
        "\"\<pHigh\>\"", ",", "\"\<duration\>\"", ",", "\"\<\[Kappa]\>\""}], 
       "}"}]}], ",", 
     RowBox[{"logQ", "\[Rule]", "True"}], ",", 
     RowBox[{"accurateQ", "\[Rule]", "False"}]}], "]"}]}], ";", 
  RowBox[{"Save", "[", 
   RowBox[{"\"\<sample16IA.m\>\"", ",", "sample16IA"}], "]"}], ";", 
  RowBox[{"sample16", "=", 
   RowBox[{"burstSample", "[", 
    RowBox[{
     RowBox[{"defaultUniverse", "[", "]"}], ",", 
     RowBox[{"defaultPopulation", "[", "]"}], ",", 
     RowBox[{"defaultBurst", "[", "]"}], ",", 
     RowBox[{"defaultDetectorArea", "[", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{".1", ",", "1.", ",", "\[Infinity]"}], "}"}], ",", "16", ",", 
     RowBox[{"computedValues", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<z\>\"", ",", "\"\<\[Chi]\>\"", ",", "\"\<pLow\>\"", ",", 
        "\"\<pHigh\>\"", ",", "\"\<duration\>\"", ",", "\"\<\[Kappa]\>\""}], 
       "}"}]}], ",", 
     RowBox[{"logQ", "\[Rule]", "True"}]}], "]"}]}], ";", 
  RowBox[{"Save", "[", 
   RowBox[{"\"\<sample16.m\>\"", ",", "sample16"}], "]"}], ";", 
  RowBox[{"sample16pc40", "=", 
   RowBox[{"burstSample", "[", 
    RowBox[{
     RowBox[{"defaultUniverse", "[", "]"}], ",", 
     RowBox[{"defaultPopulation", "[", "]"}], ",", 
     RowBox[{"defaultBurst", "[", "]"}], ",", 
     RowBox[{"defaultDetectorArea", "[", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{".1", ",", "1.", ",", "\[Infinity]"}], "}"}], ",", "16", ",", 
     RowBox[{"computedValues", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<z\>\"", ",", "\"\<\[Chi]\>\"", ",", "\"\<pLow\>\"", ",", 
        "\"\<pHigh\>\"", ",", "\"\<duration\>\"", ",", "\"\<\[Kappa]\>\""}], 
       "}"}]}], ",", 
     RowBox[{"logQ", "\[Rule]", "True"}], ",", 
     RowBox[{"pointCount", "\[Rule]", "40"}]}], "]"}]}], ";", 
  RowBox[{"Save", "[", 
   RowBox[{"\"\<sample16pc40.m\>\"", ",", "sample16pc40"}], "]"}], ";", 
  RowBox[{"sample256IA", "=", 
   RowBox[{"burstSample", "[", 
    RowBox[{
     RowBox[{"defaultUniverse", "[", "]"}], ",", 
     RowBox[{"defaultPopulation", "[", "]"}], ",", 
     RowBox[{"defaultBurst", "[", "]"}], ",", 
     RowBox[{"defaultDetectorArea", "[", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{".1", ",", "1.", ",", "\[Infinity]"}], "}"}], ",", "256", ",", 
     RowBox[{"computedValues", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<z\>\"", ",", "\"\<\[Chi]\>\"", ",", "\"\<pLow\>\"", ",", 
        "\"\<pHigh\>\"", ",", "\"\<duration\>\"", ",", "\"\<\[Kappa]\>\""}], 
       "}"}]}], ",", 
     RowBox[{"logQ", "\[Rule]", "True"}], ",", 
     RowBox[{"accurateQ", "\[Rule]", "False"}]}], "]"}]}], ";", 
  RowBox[{"Save", "[", 
   RowBox[{"\"\<sample256IA.m\>\"", ",", "sample256IA"}], "]"}], ";", 
  RowBox[{"sample256", "=", 
   RowBox[{"burstSample", "[", 
    RowBox[{
     RowBox[{"defaultUniverse", "[", "]"}], ",", 
     RowBox[{"defaultPopulation", "[", "]"}], ",", 
     RowBox[{"defaultBurst", "[", "]"}], ",", 
     RowBox[{"defaultDetectorArea", "[", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{".1", ",", "1.", ",", "\[Infinity]"}], "}"}], ",", "256", ",", 
     RowBox[{"computedValues", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<z\>\"", ",", "\"\<\[Chi]\>\"", ",", "\"\<pLow\>\"", ",", 
        "\"\<pHigh\>\"", ",", "\"\<duration\>\"", ",", "\"\<\[Kappa]\>\""}], 
       "}"}]}], ",", 
     RowBox[{"logQ", "\[Rule]", "True"}]}], "]"}]}], ";", 
  RowBox[{"Save", "[", 
   RowBox[{"\"\<sample256.m\>\"", ",", "sample256"}], "]"}], ";", 
  RowBox[{"sample256pc40", "=", 
   RowBox[{"burstSample", "[", 
    RowBox[{
     RowBox[{"defaultUniverse", "[", "]"}], ",", 
     RowBox[{"defaultPopulation", "[", "]"}], ",", 
     RowBox[{"defaultBurst", "[", "]"}], ",", 
     RowBox[{"defaultDetectorArea", "[", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{".1", ",", "1.", ",", "\[Infinity]"}], "}"}], ",", "256", ",", 
     RowBox[{"computedValues", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<z\>\"", ",", "\"\<\[Chi]\>\"", ",", "\"\<pLow\>\"", ",", 
        "\"\<pHigh\>\"", ",", "\"\<duration\>\"", ",", "\"\<\[Kappa]\>\""}], 
       "}"}]}], ",", 
     RowBox[{"logQ", "\[Rule]", "True"}], ",", 
     RowBox[{"pointCount", "\[Rule]", "40"}]}], "]"}]}], ";", 
  RowBox[{"Save", "[", 
   RowBox[{"\"\<sample256pc40.m\>\"", ",", "sample256pc40"}], "]"}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.607151737518517*^9, 3.607151787478895*^9}, {
   3.607152031768177*^9, 3.607152097444626*^9}, {3.6071521619008703`*^9, 
   3.6071521681023903`*^9}, 3.607152411791893*^9, {3.60725644295364*^9, 
   3.6072564477907457`*^9}, {3.607258593316545*^9, 3.607258682019373*^9}, {
   3.60725893428609*^9, 3.607258940576136*^9}, {3.607259243111906*^9, 
   3.6072592907797613`*^9}, {3.607471338418459*^9, 3.6074714631679087`*^9}, {
   3.607471502631407*^9, 3.607471510519861*^9}, {3.607471649217723*^9, 
   3.607471657704623*^9}, {3.6074720163187227`*^9, 3.607472057208458*^9}, {
   3.607514017352871*^9, 3.60751407260951*^9}, {3.609631336937778*^9, 
   3.609631354947994*^9}, {3.6096313906659927`*^9, 3.6096314074987707`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"sample4096IA", "=", 
   RowBox[{"burstSample", "[", 
    RowBox[{
     RowBox[{"defaultUniverse", "[", "]"}], ",", 
     RowBox[{"defaultPopulation", "[", "]"}], ",", 
     RowBox[{"defaultBurst", "[", "]"}], ",", 
     RowBox[{"defaultDetectorArea", "[", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{".1", ",", "1.", ",", "\[Infinity]"}], "}"}], ",", "4096", ",", 
     
     RowBox[{"computedValues", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<z\>\"", ",", "\"\<\[Chi]\>\"", ",", "\"\<pLow\>\"", ",", 
        "\"\<pHigh\>\"", ",", "\"\<duration\>\"", ",", "\"\<\[Kappa]\>\""}], 
       "}"}]}], ",", 
     RowBox[{"logQ", "\[Rule]", "True"}], ",", 
     RowBox[{"accurateQ", "\[Rule]", "False"}]}], "]"}]}], ";", 
  RowBox[{"Save", "[", 
   RowBox[{"\"\<sample4096IA.m\>\"", ",", "sample4096IA"}], "]"}], ";", 
  RowBox[{"sample4096", "=", 
   RowBox[{"burstSample", "[", 
    RowBox[{
     RowBox[{"defaultUniverse", "[", "]"}], ",", 
     RowBox[{"defaultPopulation", "[", "]"}], ",", 
     RowBox[{"defaultBurst", "[", "]"}], ",", 
     RowBox[{"defaultDetectorArea", "[", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{".1", ",", "1.", ",", "\[Infinity]"}], "}"}], ",", "4096", ",", 
     
     RowBox[{"computedValues", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<z\>\"", ",", "\"\<\[Chi]\>\"", ",", "\"\<pLow\>\"", ",", 
        "\"\<pHigh\>\"", ",", "\"\<duration\>\"", ",", "\"\<\[Kappa]\>\""}], 
       "}"}]}], ",", 
     RowBox[{"logQ", "\[Rule]", "True"}]}], "]"}]}], ";", 
  RowBox[{"Save", "[", 
   RowBox[{"\"\<sample4096.m\>\"", ",", "sample4096"}], "]"}], ";", 
  RowBox[{"sample4096pc40", "=", 
   RowBox[{"burstSample", "[", 
    RowBox[{
     RowBox[{"defaultUniverse", "[", "]"}], ",", 
     RowBox[{"defaultPopulation", "[", "]"}], ",", 
     RowBox[{"defaultBurst", "[", "]"}], ",", 
     RowBox[{"defaultDetectorArea", "[", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{".1", ",", "1.", ",", "\[Infinity]"}], "}"}], ",", "4096", ",", 
     
     RowBox[{"computedValues", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<z\>\"", ",", "\"\<\[Chi]\>\"", ",", "\"\<pLow\>\"", ",", 
        "\"\<pHigh\>\"", ",", "\"\<duration\>\"", ",", "\"\<\[Kappa]\>\""}], 
       "}"}]}], ",", 
     RowBox[{"logQ", "\[Rule]", "True"}], ",", 
     RowBox[{"pointCount", "\[Rule]", "40"}]}], "]"}]}], ";", 
  RowBox[{"Save", "[", 
   RowBox[{"\"\<sample4096pc40.m\>\"", ",", "sample4096pc40"}], "]"}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.6075140758695908`*^9, 3.607514090143182*^9}, {
  3.609666568912321*^9, 3.609666585938512*^9}, {3.6097104825083923`*^9, 
  3.609710487020596*^9}, {3.6097105793968353`*^9, 3.6097105838249817`*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Burst Fraction", "Subsubsection",
 CellChangeTimes->{{3.607499903944137*^9, 3.607499905709663*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"PrintTemporary", "[", 
   RowBox[{"Dynamic", "[", 
    RowBox[{"{", 
     RowBox[{"z", ",", "z1", ",", "z2"}], "}"}], "]"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"burstFraction", "[", 
  RowBox[{
   RowBox[{"defaultUniverse", "[", "]"}], ",", 
   RowBox[{"defaultPopulation", "[", "]"}], ",", 
   RowBox[{"defaultBurst", "[", "]"}], ",", 
   RowBox[{"defaultDetectorArea", "[", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{".1", ",", "1.", ",", "\[Infinity]"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.607472538226598*^9, 3.607472598984831*^9}}],

Cell[BoxData["0.10668199113455576`"], "Output",
 CellChangeTimes->{3.607477078455381*^9, 3.607499842060955*^9, 
  3.607514167560162*^9, 3.607518955297565*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Computed samples", "Subsubsection",
 CellChangeTimes->{{3.6096449188208113`*^9, 3.609644921748653*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"<<", "\"\<sample16IA.m\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"<<", "\"\<sample16.m\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"<<", "\"\<sample16pc40.m\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"<<", "\"\<sample256IA.m\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"<<", "\"\<sample256.m\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"<<", "\"\<sample256pc40.m\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"<<", "\"\<sample4096IA.m\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"<<", "\"\<sample4096.m\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"<<", "\"\<sample4096pc40.m\>\""}], ";"}]}], "Input",
 CellChangeTimes->{{3.6096359866523247`*^9, 3.609635990636599*^9}, {
  3.609643021600891*^9, 3.609643024501835*^9}, {3.60964969356056*^9, 
  3.6096497074389467`*^9}, {3.60966424413723*^9, 3.609664249316772*^9}, {
  3.609710325338402*^9, 3.609710333753696*^9}, {3.609758090152154*^9, 
  3.609758114318233*^9}, {3.609972915409157*^9, 3.6099729201569*^9}, {
  3.610584782506156*^9, 3.610584814781681*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Distribution plots", "Subsubsection",
 CellChangeTimes->{{3.609635882975088*^9, 3.60963588581352*^9}, {
  3.6096449332917128`*^9, 3.6096449338002033`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Kappa]Observed", "=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\"\<090902B\>\"", ",", 
       RowBox[{"{", 
        RowBox[{"0.363408", ",", "0.893437"}], "}"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"\"\<090510\>\"", ",", 
       RowBox[{"{", 
        RowBox[{"0.428137", ",", "1.60485"}], "}"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"\"\<080916C\>\"", ",", 
       RowBox[{"{", 
        RowBox[{"0.66529", ",", "3.31569"}], "}"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"\"\<090926A\>\"", ",", 
       RowBox[{"{", 
        RowBox[{"1.98759", ",", "6.61486"}], "}"}]}], "}"}]}], 
    "\[IndentingNewLine]", "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.594342734190405*^9, 3.594342752715184*^9}, {
  3.59434286903363*^9, 3.594342900024119*^9}, {3.594343771437028*^9, 
  3.594343773132771*^9}, {3.594852329377499*^9, 3.594852332247513*^9}, {
  3.5966927652249002`*^9, 3.596692799285636*^9}, {3.596693274643531*^9, 
  3.596693288462693*^9}, {3.5966933274676723`*^9, 3.5966933546761417`*^9}, {
  3.603446939569559*^9, 3.603447017756761*^9}, {3.603447061587146*^9, 
  3.603447066057764*^9}, {3.6096359148737793`*^9, 3.6096359282070913`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[Kappa]HistogramPlot", "[", 
  RowBox[{
   RowBox[{"sample4096", "\[LeftDoubleBracket]", 
    RowBox[{"All", ",", 
     RowBox[{"-", "1"}]}], "\[RightDoubleBracket]"}], ",", 
   "\[Kappa]Observed"}], "]"}]], "Input",
 CellChangeTimes->{{3.609635980255172*^9, 3.609636038443963*^9}, {
  3.609636183561309*^9, 3.60963619188875*^9}, {3.609636367069709*^9, 
  3.609636369461276*^9}, {3.609636493042923*^9, 3.6096365314735327`*^9}, {
  3.609639000473216*^9, 3.609639008262295*^9}, {3.609644450906867*^9, 
  3.609644476854623*^9}, {3.609649731286344*^9, 3.60964973593781*^9}, {
  3.60966433070894*^9, 3.609664330890787*^9}, {3.609665973679592*^9, 
  3.60966597831504*^9}, {3.609758120706745*^9, 3.609758124641633*^9}, {
  3.609972930823106*^9, 3.60997293093909*^9}}],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
    EdgeForm[Opacity[0.34299999999999997`]], {}, 
    {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
     EdgeForm[Opacity[0.34299999999999997`]], 
     RectangleBox[{0.8, 0}, {0.9, 0.1005859375},
      RoundingRadius->0], RectangleBox[{0.9, 0}, {1., 0.14013671875},
      RoundingRadius->0], RectangleBox[{1., 0}, {1.1, 0.14404296875},
      RoundingRadius->0], RectangleBox[{1.1, 0}, {1.2, 0.12060546875},
      RoundingRadius->0], RectangleBox[{1.2, 0}, {1.3, 0.107177734375},
      RoundingRadius->0], RectangleBox[{1.3, 0}, {1.4, 0.087158203125},
      RoundingRadius->0], RectangleBox[{1.4, 0}, {1.5, 0.071044921875},
      RoundingRadius->0], RectangleBox[{1.5, 0}, {1.6, 0.049560546875},
      RoundingRadius->0], RectangleBox[{1.6, 0}, {1.7, 0.04541015625},
      RoundingRadius->0], RectangleBox[{1.7, 0}, {1.8, 0.025634765625},
      RoundingRadius->0], RectangleBox[{1.8, 0}, {1.9, 0.02734375},
      RoundingRadius->0], RectangleBox[{1.9, 0}, {2., 0.0166015625},
      RoundingRadius->0], RectangleBox[{2., 0}, {2.1, 0.014404296875},
      RoundingRadius->0], RectangleBox[{2.1, 0}, {2.2, 0.0087890625},
      RoundingRadius->0], RectangleBox[{2.2, 0}, {2.3, 0.009033203125},
      RoundingRadius->0], RectangleBox[{2.3, 0}, {2.4, 0.0068359375},
      RoundingRadius->0], RectangleBox[{2.4, 0}, {2.5, 0.005126953125},
      RoundingRadius->0], RectangleBox[{2.5, 0}, {2.6, 0.003662109375},
      RoundingRadius->0], RectangleBox[{2.6, 0}, {2.7, 0.00390625},
      RoundingRadius->0], RectangleBox[{2.7, 0}, {2.8, 0.001953125},
      RoundingRadius->0], RectangleBox[{2.8, 0}, {2.9, 0.001220703125},
      RoundingRadius->0], RectangleBox[{2.9, 0}, {3., 0.000732421875},
      RoundingRadius->0], RectangleBox[{3., 0}, {3.1, 0.000732421875},
      RoundingRadius->0], RectangleBox[{3.1, 0}, {3.2, 0.0009765625},
      RoundingRadius->0], RectangleBox[{3.2, 0}, {3.3, 0.001220703125},
      RoundingRadius->0], RectangleBox[{3.3, 0}, {3.4, 0.00048828125},
      RoundingRadius->0], RectangleBox[{3.4, 0}, {3.5, 0.001220703125},
      RoundingRadius->0], RectangleBox[{3.5, 0}, {3.6, 0.},
      RoundingRadius->0], RectangleBox[{3.6, 0}, {3.7, 0.000244140625},
      RoundingRadius->0], RectangleBox[{3.7, 0}, {3.8, 0.000732421875},
      RoundingRadius->0], RectangleBox[{3.8, 0}, {3.9, 0.000244140625},
      RoundingRadius->0], RectangleBox[{3.9, 0}, {4., 0.000244140625},
      RoundingRadius->0], RectangleBox[{4., 0}, {4.1, 0.00048828125},
      RoundingRadius->0], RectangleBox[{4.1, 0}, {4.2, 0.00048828125},
      RoundingRadius->0], RectangleBox[{4.2, 0}, {4.3, 0.},
      RoundingRadius->0], RectangleBox[{4.3, 0}, {4.4, 0.000244140625},
      RoundingRadius->0], RectangleBox[{4.4, 0}, {4.5, 0.00048828125},
      RoundingRadius->0], RectangleBox[{4.5, 0}, {4.6, 0.},
      RoundingRadius->0], RectangleBox[{4.6, 0}, {4.7, 0.},
      RoundingRadius->0], RectangleBox[{4.7, 0}, {4.8, 0.00048828125},
      RoundingRadius->0], RectangleBox[{4.8, 0}, {4.9, 0.000244140625},
      RoundingRadius->0], RectangleBox[{4.9, 0}, {5., 0.},
      RoundingRadius->0], RectangleBox[{5., 0}, {5.1, 0.},
      RoundingRadius->0], RectangleBox[{5.1, 0}, {5.2, 0.},
      RoundingRadius->0], RectangleBox[{5.2, 0}, {5.3, 0.},
      RoundingRadius->0], RectangleBox[{5.3, 0}, {5.4, 0.},
      RoundingRadius->0], RectangleBox[{5.4, 0}, {5.5, 0.000244140625},
      RoundingRadius->0], RectangleBox[{5.5, 0}, {5.6, 0.},
      RoundingRadius->0], RectangleBox[{5.6, 0}, {5.7, 0.},
      RoundingRadius->0], RectangleBox[{5.7, 0}, {5.8, 0.},
      RoundingRadius->0], RectangleBox[{5.8, 0}, {5.9, 0.000244140625},
      RoundingRadius->0]}, {}, {}}, 
   TagBox[
    TooltipBox[{
      LineBox[{{0.363408, 0.13323974609375}, {0.893437, 0.13323974609375}}], 
      LineBox[{{0.363408, 0.129638671875}, {0.363408, 0.1368408203125}}], 
      LineBox[{{0.893437, 0.129638671875}, {0.893437, 0.1368408203125}}]},
     "\"090902B: (0.363408, 0.893437)\"",
     TooltipStyle->"TextStyling"],
    Annotation[#, "090902B: (0.363408, 0.893437)", "Tooltip"]& ], 
   TagBox[
    TooltipBox[{
      LineBox[{{0.428137, 0.1224365234375}, {1.60485, 0.1224365234375}}], 
      LineBox[{{0.428137, 0.11883544921875}, {0.428137, 0.12603759765625}}], 
      LineBox[{{1.60485, 0.11883544921875}, {1.60485, 0.12603759765625}}]},
     "\"090510: (0.428137, 1.60485)\"",
     TooltipStyle->"TextStyling"],
    Annotation[#, "090510: (0.428137, 1.60485)", "Tooltip"]& ], 
   TagBox[
    TooltipBox[{
      LineBox[{{0.66529, 0.11163330078125}, {3.31569, 0.11163330078125}}], 
      LineBox[{{0.66529, 0.1080322265625}, {0.66529, 0.115234375}}], 
      LineBox[{{3.31569, 0.1080322265625}, {3.31569, 0.115234375}}]},
     "\"080916C: (0.66529, 3.31569)\"",
     TooltipStyle->"TextStyling"],
    Annotation[#, "080916C: (0.66529, 3.31569)", "Tooltip"]& ], 
   TagBox[
    TooltipBox[{
      ArrowBox[NCache[{{1.98759, 0.100830078125}, {
         Rational[59, 10], 0.100830078125}}, {{1.98759, 0.100830078125}, {5.9,
         0.100830078125}}]], 
      LineBox[{{1.98759, 0.09722900390625}, {1.98759, 0.10443115234375}}]},
     "\"090926A: (1.98759, 6.61486)\"",
     TooltipStyle->"TextStyling"],
    Annotation[#, "090926A: (1.98759, 6.61486)", "Tooltip"]& ]},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesOrigin->{0.8, 0},
  Frame->{{True, False}, {True, False}},
  FrameLabel->{{
     FormBox["\"Probability\"", TraditionalForm], None}, {
     FormBox["\"Stretching Factor\"", TraditionalForm], None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  ImageSize->Automatic,
  LabelStyle->Directive[FontSize -> 10],
  PlotRange->{{0, 5.9}, {All, All}},
  PlotRangePadding->{{0, 0}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.609636003218059*^9, 3.609636053952828*^9}, {
   3.609636180226817*^9, 3.609636222128878*^9}, {3.609636314081313*^9, 
   3.6096363699513893`*^9}, {3.6096364907792807`*^9, 3.609636531893386*^9}, {
   3.609638998884776*^9, 3.609639008655566*^9}, 3.609640630931283*^9, {
   3.609644452899716*^9, 3.609644477357744*^9}, 3.609644635557328*^9, 
   3.609646584126134*^9, {3.609649733473061*^9, 3.609649736474476*^9}, 
   3.6096509452181673`*^9, 3.609664332820959*^9, {3.60966597523304*^9, 
   3.60966597895583*^9}, 3.6096660128641653`*^9, 3.60975812846548*^9, 
   3.609758174672577*^9, 
   3.6099729318622723`*^9},ImageCache->GraphicsData["CompressedBitmap", "\<\
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
cdZwU8tZDLMI0Uyldv0/znAx/Q==\
\>"]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[Kappa]CDFPlot", "[", 
  RowBox[{
   RowBox[{"sample4096", "\[LeftDoubleBracket]", 
    RowBox[{"All", ",", 
     RowBox[{"-", "1"}]}], "\[RightDoubleBracket]"}], ",", "\[Kappa]Observed",
    ",", 
   RowBox[{"PlotPoints", "\[Rule]", "4096"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.609639083156595*^9, 3.609639092199402*^9}, {
  3.609644456978179*^9, 3.609644508981615*^9}, {3.609644614671221*^9, 
  3.609644617244734*^9}, {3.6096497653667917`*^9, 3.609649766238616*^9}, {
  3.6096509266426764`*^9, 3.609650930474924*^9}, {3.609664335613008*^9, 
  3.609664335746616*^9}, {3.609758160684682*^9, 3.609758163503387*^9}, {
  3.6099729459884443`*^9, 3.609972946116826*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {GrayLevel[0.5], LineBox[CompressedData["
1:eJxF0H0w1AkYB/Bdb3tl87LeFbWYIpxdQoRfXGXV2r3cNqW2N0ShDqm5cI2X
Ujdo1GFdt87Lphq3ofNyKUm61HZIb+SlVl7b8lJRW6zdu5u5fZ5n5pnvfGae
+f7x0MO+D9mnQSKRTvy7/yUjK2u0h53uR/p/jqo6eg9L9hBq73Zd7M+VxIGf
bPKf8ZGkgnO2PW13k+SC37ws8naRlIAtyjTeO0mqwdWa7m2Okmaw3efZ8JEf
H4Hnglb0P1f0gH3ITI2V1r3glGve9skEWrGck2iVjlZqHqGGUfrApKYWn7eG
/WAd111F88tfgjfIou5wWOhTJfGy4gPor/RPugeI0QvGf2/PZEqx74lCSbEe
wPucjS5n7V+BGS0iD5E3eqtc4VvHRl/cW8XuiUOv8zCOpjegU6UvLlwNGgRf
NvYU39mBfhiUW/PsINq6NqDly1l04+lLUv9e9GdmvOXj6CHwsqgH9OEUdKDQ
1uHTGXSBTpenZQ26aY0L4XQXPRJ3eoNfN5p68VXwtzL0qj7vLWFzaL5BHj9x
0TA4Y/1EeOZStTuJiqQNMYVM9OOq4oSKb9B0y5C0jih03Amt3A9ZaLFzx4P0
JSPgsS6BttEV9PWEzVON98fA2Xq6PZHDMjCrjxtMOI+DtS/n3TY7Ogk2nw4i
RNpTYCc/VePX+ej6oZ7kmX50ybrtVjtp78AakwY5HDt0hOCegvBAm4yX1a4m
0K1rj8cyWWoPED/kh9qt3Ix2eLOq32Y72sf9TWilDM1NLe72OvYePHr2uxDt
kx/Ax0WU9s7cabBAPssuePYRfC4g7e+/puVgqwlBG4syC/75vte2uUAF+BaT
Z7Vgyzz47flDg6ZhSnDjr79FyabR2cKO8RsnVeBmoeUZRgV6RhjpUt6BJhc1
bG3pRusVUVOlA2q/JhYX7b6skKHti/7otJhGl3LEBhUapLVqV3JUq+/pogc5
m3rXMNBmXEFyNQ/dFhWz9/kQOi2VCCQdJoP5zsxzWsc1wOKE/TYlxZrgg24y
5rsrWmBRdlVm92NtcKlJk/DABx2woaWpa7WSAv5UX0M9Q18AZj88H7mMuRAc
bfYgbecaXfC83G+QyaeCybz529cPLAInschjvTl64Buxwe3lYn2wZ2b8LzS+
AXgtz35d4QX0RhvppNUE+uY1W55czxDM4O5v6GSgBYWN3ElXtPKVwaiuu9rv
iEjHfSkOnuj2xAZaoBdaSAkj0n3R0ecXxt70R+s077jrthEtGhFbV4Sg+xnc
RwXhaNOU9xkZiejJ2jblQD26deLSMb8v6KuOZNr6n2hg3gqVrFzfCOw6VRwR
Uoq+nzhiHepgDA6gPfSqq0TLk3fI+YQJOEKUPbOrFU0V7MkTbzMFF5Y9z+O+
Rr+I+fiUfcgMzCfX/ZmvQufxLHpXnzIHV9+i72RSLfBf8rb0I0K0yfiS10a2
luCkLl9zz0NoafMu1vYG9D+dZ1e0
      "]]}}, 
   TagBox[
    TooltipBox[{
      LineBox[NCache[{{0.363408, Rational[1, 8]}, {
         0.893437, Rational[1, 8]}}, {{0.363408, 0.125}, {0.893437, 0.125}}]],
       LineBox[{{0.363408, 0.115}, {0.363408, 0.135}}], 
      LineBox[{{0.893437, 0.115}, {0.893437, 0.135}}]},
     "\"090902B\"",
     TooltipStyle->"TextStyling"],
    Annotation[#, "090902B", "Tooltip"]& ], 
   TagBox[
    TooltipBox[{
      LineBox[NCache[{{0.428137, Rational[3, 8]}, {
         1.60485, Rational[3, 8]}}, {{0.428137, 0.375}, {1.60485, 0.375}}]], 
      LineBox[{{0.428137, 0.365}, {0.428137, 0.385}}], 
      LineBox[{{1.60485, 0.365}, {1.60485, 0.385}}]},
     "\"090510\"",
     TooltipStyle->"TextStyling"],
    Annotation[#, "090510", "Tooltip"]& ], 
   TagBox[
    TooltipBox[{
      LineBox[NCache[{{0.66529, Rational[5, 8]}, {
         3.31569, Rational[5, 8]}}, {{0.66529, 0.625}, {3.31569, 0.625}}]], 
      LineBox[{{0.66529, 0.615}, {0.66529, 0.635}}], 
      LineBox[{{3.31569, 0.615}, {3.31569, 0.635}}]},
     "\"080916C\"",
     TooltipStyle->"TextStyling"],
    Annotation[#, "080916C", "Tooltip"]& ], 
   TagBox[
    TooltipBox[{
      LineBox[NCache[{{1.98759, Rational[7, 8]}, {
         6.61486, Rational[7, 8]}}, {{1.98759, 0.875}, {6.61486, 0.875}}]], 
      LineBox[{{1.98759, 0.865}, {1.98759, 0.885}}], 
      LineBox[{{6.61486, 0.865}, {6.61486, 0.885}}]},
     "\"090926A\"",
     TooltipStyle->"TextStyling"],
    Annotation[#, "090926A", "Tooltip"]& ], {{}, {}, 
    {Hue[0.67, 0.6, 0.6], Thickness[Large], LineBox[CompressedData["
1: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
oQ4sJ0Zrppz2By/Is3aOoQ5h6qObsiMT/OENt14VOFbPRK0bPLDuavP2l2MO
LSfvir9+OASO2bA08wJ1RDk5WuIXfxdsuLE69DW4b5OH8x9wtJGE3sJXrNcb
v5izE9xjsrM/GFxUkdgcD47aOvwhh/pGOXGtMsxsAOtvvxnfB5as6QwVeT3m
WGbemmmdVgC/qQ121gVHmn/aYQk+UL9YzwOsa+Gtdhks8bF0ThJ1PHMfd82b
lA/ObTzU/wkcsTun+S/YuWlq6bSsMScx+bTek6kMnvHlSbw+dXI56bDhuWpN
nVpOsptNTx8Hh9nedb4K1rbT0ysCt+/7Pucf+HXrskkzsseczuR5v3+/Cnh/
e03zeupMZh45ypfagludiuMjwJddHE+XgPf9zHD+BtY8KGjOlTPmrHIy5ZeF
3kzwt0MP1NTBj/OVaq+BvWYlnRoFP+re0CaeO+Y8Zp9788NYDSx2/ULmBurC
cmJwUFF2L/j42rcXT1KXMPNxpuPfcHDTT4E9j8HT3twvKQbrRa5f2kJdynwP
HGi/9Q+cqBswcUYe60YJhcMq4PsuCRJh1BXlRESiraMQfCRXLmsIHB9RKC/2
Zsw1zD7gbH9lEVhoDf8/fbC2eLydNXUD009yvi8PBU9yXihUANZaXeDeRN3E
7O8z9jX9Bd/p4Fs/LZ91VXbcEyWwptM3v93gmOmy5pfBlT/e5CZStzL7UPZe
5TfgFWG84Y1gZ8e7XAPgaO21DlMKWHPEvpYrUHeUE94fvqt0wRpZMvd2gaMc
bD1DwDxisRtzwR/2z++RK2Qd+SomMhisMRr6fRhcTc6pOxaxHvmQW+AHlrXi
2hkD3tSt2fWSupvZ37yPna4FR4mkifaC30T/vidSPOYe5v6rLF6pBBbNdnyv
D04ZZzkrDWy02she5i1rD07gEKEeKCe3bIqCd1IPM/P/N6/0UXCXz+qnl8Fa
dzLqi8BBuerc40pYp5ocuioJbmh+IKcB5nFrzzCh5qogSjwLNx8Am4bu+RIA
Pi4TfSQOHJPawJ9DzVNBinUlbnyk5q8gvyu2Lv5LLVhBJPZezhF9x1q79/1W
FbD92UltG8DP7vpOPgPmy/+35AV46zd3i1/gWL5uH7n3rEvClKbrUotUkB7Z
/Qm7wZLP7moeB6/R//IhDHx5386+d+Av5yokeT+wFhCfkixFLVpBVOM3rtEE
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
qOp+8hrscLpwZi24XzH69G/qJKaeZmt4P2iwFvX95p+4nLXkzPRiiRWs5yef
F/QHx4qN3LgDlj3uqvwaHN/07WUddTKzP+jt3NQHXjRF94DyStZqDUohtuCl
98QeXwevcB0p44Azq11tusBaq77/nqg55tR6khWz88wCsA5/6TQdsEHU7a2P
wEbqh8Nnr2JtVqxbewG822r6rEFw05uARDEt1jaKoytVqTOZ/SfkcIkh2K7v
u4U92CG79MQtsEvg86gqMPeVbdu6wWHX/ggJkDFnMfWMDnkzH/w6TvnEKnDr
k30dB8Ei2bd3xoJjC7SmvaLOY/rR+/rianBJhYfPL+rCemJdL7ZikjbrgNbN
CVrglN7z4q5gvWHZ0gvUJUz/4847dxfsMtGavAaPFxnpqwGbKrhWEp0xl9YT
r2VJuofBd3W/PYkDr9hwxjGLuqKevN8iNb+OuoY5H7OXdX/AfZbml4VWsw7Y
279uIXiOU+g4HeoG5v1cVZ+bg/WPvT/oBj7ox990DxxxZfXmenDbgzTl1WtY
ryhUEEwAv39fkJsDtqm0Pd5A3cQ8b/24//rAF75EtU/WZS3VtjJGHpz6s2bH
GrBB35Epu8ANw1OL3KlbmH1uxrl7H8EnVYfO6q5lnb+q6OJ8PdbC68Ovceuz
lnonYLECrGZ0co4rOGNK+mgQWLf8V1MCdWs9eReqmPMGvG3b3jufwZ4WhnJb
DFhH2fz3IAuc/DXuwAA4x36mmso61hsUTKcZgit+BPXso+6oJ7seFFSeAX9z
GffsFljgSOvKyetZLzr+Iesk+JnmxJhIsPbI6jNp4KLXXrYcsPHp/2O6zsOp
+t42gIuMlSQkISQkSVJfSTYiKgkhhCSpZJ6iJAkJlSSVhEoyp4GkkpApUVIo
w3FSUZRUoqR3/67Xuvb95+dy9rb2Wuu517OKDb8QD72lXKYq8ylsZBx47FK9
AzhaYNaJs+DkExGbn4EXbC5T6wfnCY3O4jZhvLJ52XcZ8KMz+1q0iX+8pVSk
f/7MACdnhc6ZsYnxC4+1SnpgvuV8qwLAGWfd9E6BqdGG9dnEo3T92y21qAQH
Pjxt1wnOD7feN8uUca/RvBBD8OGcQxHbwRIzWHHB4GIv/bNnwObNGZfyicfp
+Tu3t6AHXGav+kh0M2O7R/E1S4k5Oqifst+b1oPjI6zadoJVPt5lHQKzhbpc
pc0ZX9CaOlhmwTjhW5FvGzgua/foN3Dk9rmh07ZMemoHFSr2lGsh2DtCdaYN
eOfwaYlYsH322vQMsLXTz4VlxHwd1OY513NbwcaNNsu+gbW0H2jLWzJekjPf
eCtYYceLZ97E0zsoGfGjW2KIhTqouU0a7VfBwlEfHB+Cp/5Y7zYE/rUjP2CB
FeMh8e1/tMGfmoSOWIPfRVXweBOLd1Ada/zjjhNLdlCNua3nHoAfz1199Sv4
zrHUAjlrxpk/p5RagdPyblNe4PM7dz2JJpah109izsYr4NgXtc/vE8vT65N/
6qPsVsZWx60njoFNdfkiLoONf93jvw/WK9h3qgWstUtK9AuxEr3fXobJyNow
nq/Xu9gSPFUqV78U3D/qYytjy7jNrZxPG1zdIViyFXzH1GG3H7FKB3WlPFfs
FNgu+v3Lv8Rq9Ph/Lz86127SGh3USvdw9RVg+a7nPWZgYbP5p93B9XNsTd8S
a3ZQJcev/x0BZ/75mSe8bdLaHVSih4G9Kji8O2HaBrC3eU/pLrBj5VK3I2CT
FaFzL4G1rjfUlhDrdlBKc+cFtYDFYvcqDoGn/r37epr9pA06qGFPnihFcKPF
1V5HcM5K3bVJ4CiJzsvPwM4TwRzcDozNvGtvyIB12GLbtcEqlrsEbYiNOyiJ
6tsP/cAj2WaSueDmE4MH2ODyf6uVJ8AFPjHtcx0nbdJBpbxri14BjrFS1DQH
B9UEfHQnNuugXFdVJUWDLXOF12WA9aV2/HwEVjt1I+MtWHrKxJZf4Ol+Jlyz
tzP+3Zt8S5XYsoPqs+7fsQH8uva/Wa7ENh1UlVZU+RHwrbwWr0vgk/E+jS1g
N3/BJdOdwMciuRTA+5LH2yli+w7KPd+v0BZd/inKD+wxvYb1htipg/Kcr3P3
B1q96ITgDrChiosS2uaqlj6xC+19ErPswV6hpz8GEO+h9/tpvrJT6IzDidlg
36FtX4ScGftraxoHgQOcFX7mggOjRa50oy/GBo2hCzg3z94Jfhy8cAmxewe1
v2Xozzpw0O+urANomWdWBejlBiq14OB19znZ4AO26u1/0O7ZN0RdJu1N+7BM
1FLwwYRz9uvBIdcEl+9El0TyHyL276AOdfkVF4JDpzrv7AWHmek83LiL8ZEU
iTm3weEVfFUf0H0j3hKu4D8eRhrEQR3UUcH3UqbgCFn7H7vRGi/rj4BVM3ye
7tjNuHW2UIPeHsZ5G7c33ASHHS1okN3LOMC8omENcQi9v+e/brAFOw32NwSA
re7/bTgN3nB81rN8sO7Whc/qiMM6KOXvJs+muE06gj6PHjs9kyKO7qBETvk/
WwXmd4h+ZgWeUE555gP+Pnrj2QlwX3Xls2xwV2LrsyfEcR3US+fPz3qI4zuo
sgnhxrn7GGclazWagy/tMW30IE6kz/OVzo3HiVM6qGNTAxuvgUOajzc+Jk7v
oHzSLzV2gl09bzaOEWfQ/Zf2k0ZR90lndVDmAu2Ny8DamRxNe8EK+kpNl8Hz
hLSbHhLndVBCXZub2sHceTubfoJ/B+9vmuXBuFc0rWk9uOlmddMRsFzLok2X
wIEjcfUl4DrxIaMWsOTqLU++Ehd2UHuquksdPCd9p4O6/0FfMxgsyJ9ZlAje
sZh/eSFxCd1fbHIvfArmaB29tspr0g86qC1j2xZYgTPnPUr3Bo+tkZOOIy6n
z3OnyIvXwWnhfeKV4OGMjUldYMOagtm/wef7Z50W9Z50VQf1eVqA4DLiWvr8
VW2LNSFu6aBOm63m3wPu9U2NOgr+7+yUqWnEbfT5edflSCm4s71m4hVYbVw5
5Bv4te63QCUfxiGRd322g5uuS3w9QNxBr2f9IfckcMAAq/8muFbQYPczsJOs
g0W276RZ9H1m3SmlHf6T7uugtj3L9EkEK1iWldaAY+ds2N4DHnrziusP8QB9
30jdkSUSwPj+jkETVXBU39SkHWAzL8nuRHCxetbRAvC8keVKteCwe48aeoiH
OqgPIRt9/oBvcu0sVQ1kHBJzgMsZzN7Ek3UQbDQrweQs8Q86T1ukvhWAhc9n
n60FZ11rU1y6n/Ga27ylZ8HN5StNxsF7Gnd1OQcxXm51SDEJPPE20bsO7JIm
I/oOXOecd2+ceJQ+DxQ0HcWCGSf2V3KqgZV/DScmgR9NlVP8C46JXeWtdoCx
pbD5vZ3g0lcdDofA8y/s4TwHjrD/kVkI/jQ/bGM9MUcnZZCaNfcDOFXyxccp
BxmPJo8VSYG3zJWLWEXM10nxifnJ+IAfCFc9yALLT3f9OSeE8QluPtVj4JGJ
bNcRsOPoxrRdhxiXBPp7HCEW6qSEf6asvgR293vCfw9c822wtQUc8kXHf3oo
Y7XPp4QMwDF7S7q2E4t0Ur0fWXkHicU7KR1X/oPnwOd7l62/DR52tpvTRCzZ
SZn0hL//BM7cnnub5zDjKV0vj8iB7e3HN+sQy3RSxW/kpe3AQrabBgLAbq0B
pafBVVap0flg6ZZq6zpwkMVX+ffE8p1U8/M53znCGEc923NKE7y6/t5ib3CS
MXssFjxULVB7HbzBcHlSJTijcptLN7FSJzWhF6H+B2xTnscx5wjjWzqvGtWJ
VTqp6Q//ppiCXVcr7HMjVuukyu+ZrooCS2ju571CrNFJBRSnvXoIfnNTKexE
OGOd/JvKDkcZDymP/KsCX8nSeqUSwViwNrZ+HbFmJ3XwY8cjJ3Afj2rRAbCl
wuGcRLDqLtmztWDejMrD4+BSWT4rl0jG7mkmyg3gtrJL8z+ADbu+iHBETVqb
nr+/lIAEWFrq9L/l4OfJr1ouEut2UtqlCvVF4Oz2/Y+awGJjtXf6iQ06qXBx
iRyuY4y3bX2Q+B9YI8nx8D7wjFccbmngD7OvWr4Eb1n+Y/0guNzCkOKNZqzi
m6QhC75w+uOi1cTGnVSF094f6eCBpZ/LeI4zLr4au0wGfGSOSsYqsElsg9gW
sNg/9+PuxCadVO6HfM80sG7jly3NYLdL3tKaMYzPuA/3XQIrWS5vfA5+sNr/
Nlcs46gbIgpSYPMFRedXgiXPWU0zI7ak509g5NBesNCb/cZN4FXZY8Ir4hg3
xmuN7gY7Bx3sTAarDMwzuwP+tf1BxTNiG3p+X9qv+AiOM/p7neME42Kxw76u
YNZ7jjUN4BzbyzfegwOe6cn9A+vqsRPFT07avpMSKArnVQenplQOuICXR0xt
PgdW+T142/8UYwXv1rPm8Yzfp4qoe4Aznpk3RoNdxk+6ZRA7dVILFjfwlIPZ
tvxX34KvRK+jfoF33D36Vvg0Y5kP5ftViffQ63e5qC8FPNc+x3ZaAuO2mI8/
FYjd6fPknnyCPnhr3w5VR7DYnLT6YHCi/1yum2Dh5jOr+8AvOF60cp1hHL9U
0H8+2Mxxo9BqYu9OauaJ6Dxr8HTjQ1JPiP07qaeBpfdY4Jhrv6zGwRtaNIbn
JE46qJPi5/I9uRxcu+yG8mbikE4q2mmg2o04opMyOrVoZxSYp8z132UwZ/A2
b6GzjP8tN+sJBT/nKs44TxxNr9fLeXtugf2vHlncAF7n9/HLe3C/8O2AuUmM
426FjpuAm7+JCtwBiy/LnzPvHGNHb4OF4eCMG2/V+8GBh/VGOM8zNtp8/Z4k
WHz+jEMrwZ+++OqaEcd1UidP6tQcBS9TFTC9Cw7yuLxN+gLjsjzNvZHg+JBU
lTTwDpOpQyXE8Z2UuqTb7Wbw1IGmwAHw9diLf+cnM96weHfEFrDknwYjD/Bg
vfq0Y+Cy5PON6eB4t4nTpcSJdH0L1It/Ab/OPpsme5HxTqWq0q/E5zsp5dvV
16elMB5aU5eoCC6ufXpkLXEK3f9tafTcDubf+9L4HDgptE2uCXwjm/1a5xLj
2paBmALwye1f99cTp3dSVp++uXwAs/+N6EinTjqjk8qKGVusBfYUHRe3Bmuk
T3D7Emd1Un+Up3w/QZxH53ERFysbHK3L8+wJ2PQpX2kPWMR62vW/xIV0/8Oa
kTg3bdJ3OqnL+4SOrADvGRH2NAerHhHd5kFcQu+X1kWVJumME5foLFa5zDjf
xrj7Irj6qMWZaVcYb7mw1WMtmFVgb3QQnLlqu8Y54gd0/1O1Q/Y2WH2zi2AT
cXknNdbu+ucTmPtq16kn2ZPupfupjFvzEnIYe2ZGXXfMZZyhMGVVEHFfJ/U2
82D9abCw4si2XLDxde/BKrBclt3yxXmTHqD7WaVXVQbgU1mbrR2Jh+j5UKr/
uB88nmUQfBq8fNEjgVziH3R/kb0qpQqcvujOki5wa7bqo19gg5wFbOV8xrdy
xLkdwX3KZ5L2E492UvNzZyidBlsvjr6XA47L5dxYBXbNG4hXLmCsm//6dTw4
cIn5nhxwfv7TsUpw75J1sZ3E43S/XlAu+Qt8rKCIUr7B+EdBjrMDWHnpwh+B
4B030iLjiTm6qPNLJebkgBtvJGZVgrnVZmp1grULjz8dAfuqTXUQKpz01C4q
uzD0yyLw1BjNGt6bjB13Dqe9B8ek8m+bcotxUbuMmBSYJaL5QhM83WxznCUx
XxflXH2IMw58TzsvqBIsIuZqfvn2pKd3Ubrmh6Y/BO+LS6xpAyfV5Ib/AFdw
Vq4RujNpoS5KPPjbbSOw19f5yofBycr/vU8GV+8yTS8mFumivqXv2tZMLN5F
SXaEiH0B+1nkxi0sYlxf287pAP7J9e1hELFkFyVD8QUngk0OzNcoBO8vWvn1
Kbhx8a5dXMWM5a+ceasFbj45VJMNPnxw0x3xu4wDB0zWhIHdHUyqP4JzVsVl
TSlh3CfaEDMPrDA8zWMFeGfjxs2biZW6qK6op7OPgu2ojW3FYPPCDTuk7zE2
lt3wKRIc9fd4Qxq4qr2u4B6Ys5j/9EtilS6KSljvNwgu3VD3n2wp45Vc68ct
wfLvjQTl7zMWrlkn8x188nB1r8IDxvya67LtwOtEomL9idW6qIihJx4nwRUN
3GZZYI5sQ/UK8MEdT0Z+gkfmGt5f9JCxxkjEpbVg3+aqww7EGl1UYcFU5/3g
wRgDg9Ngi3t/t9WB734s9ptSxvhT6JnDUmBJMe/YVWDTfJNzVsSaXdQRg0VX
fYi1u6iNly8294BFJ2ZwWjxi3G0XtqwCnH132Em9nHGHaZO7KVjwQ26QG1j3
UHREFNhPZFf8FWLdLiozVy+lDNymL531Bizw5vftEWKDLmqNT+sj4ceMvfnu
PFUlNu6irqTFt24At6z0eOcK5m1c/zWc2ISul3FO3vvgF8oPpL+DV9oGrFxc
wfjiMVXTneBG6Wl2h4nN6P1R/HHXRWLLLkp9U5XPXfCu3vRDL8H1wnZnp1Uy
Xqo3O38t2Lnta8l2cKJXQ9VBcDVP9vNz4LFLkR23iW26qBNb3VYnVk3avouS
XptUdQNcoFqx6SlYR+LL6w/gRm4JJ84nk3bqor52+PiuAgvdqYvwBps7B2d3
gROEFjWaVDOWG7fcugd8+2MY6yixSxdl8DJvbxq4paxtuBT846wa9zBY1CN6
zqIaxufrPjpx1056TxelVDT7kwz4Xjrlpw3eELdvfCv4zf5zkX7E7l3Ub9Ov
53LA8xSMcnrAqeGZ3x/WTdqbrhc1a3GVesYy3dxrksGF9cuqi8B6xQ6bXxD7
03l/+XjbANj5RNEOvqeTDuqiwl1m+FPgq6t3RQWC19XeWxlPHELnvaXgx2xw
bI/zuUqwquddo06w3zGnLKEGxiXp/PwG4G1LHO85gCfu3dq7H5y+jlfiNHjt
y231OcRhXdSH7YUHqsDRA1MXd4EXB9u+/UUc8b/9VxA76xljkflbBwzAtpoc
m4LA41WWf08TR9PrY56dnwvW6/rr8ATc62Yh2A0+9iuzbBSsHPHHU7iRcYOQ
2XwVsNeljCZD4rgu6k7xJrVg8O+mkfg8cCTneovZTYyFVlycfQBsbWrgnw++
uHuwhQXW+aEX+RvMCktaIfKc8dEZn98vIY6nz/dkKsmI+Dydd7f7Rg6Abzac
3loAtrT9wFsLHnmvVdIDvuB7as8fsPa/d+KiLyadQufRspVvDoLNXaIvssF9
ucEBE+Cw726bJZoZi6+2X7QSfCN8E5cFcTrdj8xSu3scPOOy8L7H4Iw+LsNO
4gx6fGo/pcfALfs/jIq8ZLzvUWuzGpiTty7PBJxsWhq1hziLzvOkXKcIcF1n
ilY6WHF8x5WZLYwjJRQFDoMlncV7k4nz6P2SzV9WTFxI94vffp9rJr7TRb3T
HPD5AhaubVyo8Iqx3tab7Q5g7w9nTpwFpwUE6j0Dr3y4e14/cQldX1Ntf059
zdjVZEOTDPjvmdXZ2uBttzhm5YHvPX8SNK+V8ZyvMawYcMAMM+Pf4OlWenJi
bYwzUtTHlxE/6KJeLhYt3Etc3kW5+fHERII57//aeZm4il4fzv41D8HLNryZ
005cS/dz8wQlZrQzbhvQk9QDh7/aJrUNrFIWIB0Afp15av4pcNipbJls4gZ6
Pzl1ynWCldRnLZz1hnGzxGKFxeAQLkNFQ7DCgKPSduLnXVRTS9CiYLBcZt7i
fHDgftaSHrCM02/VP+B6YxE10beM/ZepLlsKlpYwVl9P3ELX64MbK2+CPbbP
WT23g7EI52HqCPhBxoe1/WChQIl1Up2MXYxMjc3Bgmp71u8Dl4iHb4gEO09J
2ZgGnvapyOQecRtdH81Nm16CHe/3mw6C+TK4zHi7Jt3RRd2KkzKXBfM4mm+x
AtstjbQ6DuZsHrD9Bs72t3S07WZcePNhhy+45IvCtjhiVhdVvji+/Rq4ds/Y
1kfEvV1UK/up5TD4g32q+UIWY27ztRtjwfKGfQbfwCrh5pUCPZPuo+8Tj0r1
5MHa4wvK14DXrjqhsxVscXv76hiw8xJ1zYdgN7eLxa/BvtenrhgCH+j1uM3P
nvQAfX+QbV22ABx/MVvVGpwuGrL4OPgRv+zCr+Cuv0+krd4x/rL//Lxo8N9v
buL3wVOXtiS1EA/R+eG+RvQLWCQ78wxvL2PJDzOFZcHyC4LjtcAqTmxBS7DG
pY0nPMCr39yZdoz4B90fWh7jKwXbNdpyD4L3GqtwyrxnHFQxMWEBDvu3+5A7
OFr7xZ9I4lF6/oK1DqSBzxVfHS0B3y2S/X1lYNIi3dTw3I6VAoOMVUOT/HzA
a+Y80Y8FmxR+n3UNvG29XE8ZsXg35cY2K2wDR4sUmE7/wvjaummDFLgiaE+s
H5iV82TRdfDXtT9Gy4klu6mJDrnaN+AZgebnfoAlZ4a5Cn5lbOOndTUAfKb1
R3cH+Ir3ghsj4EJ+i1ChIcaProRtUgY3rr4haUAs000NeEy/vx8skL7XNhd8
ZE9Xc/C3Sct3U/FTZlw5A05NXu2TD85f7qZbA37QcH5mD7FSN/Vm4me+yDDj
UbUtJsZgr7GaJ2LfJ63STQVedrxrCg5d/zMrChx+qfzyFXDkt9jkMnC04dYz
b4jVuqm4C3JxI+CL/Zu9XH8wzll1yOI1uOCE8cZh8M2e2QaCPyet0U3dWdGt
rQwuOZ6zYh34QWeAqjOxZjdVvkxPMRRcFTldJhlc094qXgxuPOIp8AX8ehH3
+MIRxm8OPf+hB+58cXHQAcxauPtDMLF2N9UbrN59Ftz37G/rTWLdbuqzbN3z
Z+AvAYl1/cQGdL3Vba/g/sV4RGrxfVli427qt8/I7TXEJvR+f/I4z5bYrJua
InHiWgCYr2LBuXywkFtp9HuwSFnkkSmjjOcImx+QAku4SvqtAkuXftxnRWzZ
TS0REN38BKxtp6++YoyxbsGMxebgtZztCzzA66wzJI+DN+R4iV4jtu+mTCe0
BB+DLSx4eDvB1pkv/o0SO3VTtr9TRkV+T9qlm+q+yPsiHLxrjW/2EFjp5PWz
in8Yf+7qOOIINjn261cwuGCpsOdZsFCbSm8h8Z5uyifMyK4B3Kzk/PwjWONF
yDquccZJweceSBO7d1O/ZG+pa4FLfT9K+4APVUpOywJ37fvvSCVYV8TiVxf4
ygN3j99grl3H3on+nbR3N+Uy44rtMmL/bqq66EGTCVjJsdVwD/g4z/D9o+CZ
WfaJ38Bn19e4b59gbJM8bpMEnvd5meEzcMgZk/t94K7Vu5dN/TfpIPp7eo9c
nw++HJcitRrs0vmC3xesqMo7kgWOfi3rXgX+FKrN7gabKG61+QPOb/JpFOP4
/v8O6aaW+3RkRoDvCRsdHgbbOO7Y+2gK41/ZB7fEcTJ2+142dA3cpc158hHY
IspwcTu4uim6dpg4rJvSmtuwazoX4wLnmVwKxBH0/vl5do0tcTR9vlDtb3zB
odGSQXHEcXS+vNgumgl2nXf11iPwG5cPm9uJ4+n6K1g0OAyu+OUeM30q4xV6
hYoK4Km7H6bEgVvi6md9Bxu/nnFjOjfjB/PNTRTAansT+ylwxq3WKFvixG5K
fFxC3o/4PH3eGDo+jgNznLrsmAn2a+v98wgsLP/vfRwP45tec5/b8jKW8B9L
CgCHB7U7nCZOp/Mh5J58PtjyyIXPteCFMbbBHHyMRxLm8mqCL2RckLsO1i6e
qyPGz7ir5oJtJPhI+9yAH2ALdjunigBj+c8X4neC474Gbz0M/vndVvoi2HF0
1fticPX43Lxm4oxuymythMSp6YzfHpeI3ijIuLllscthcO38Nbq3wWufGKo+
A5e5mUp+BK8S2iowZeaks+jzvWj7qAQ4fWN4YTg4ridjzycw77F866lCjMNV
ig2kifO6qb8vytQ1iQu7qaD9NTIW4O+SzwXdwZ4VbeORxHe6qf7dPZ/SwC4z
PrXdA5tdnX5adhZj7VVL1x8H3+3677+rYPUI3YUPwfmL1s9uBSs1mU/5RlxC
n68SOzvlhRmL7PK/ZwPm+JPkUw4eiL+3SGk2490rK+bog9lv67nticu7KYcj
L78HgNsUOnpOgbc09DZlE1fR/ZHP4MNK8Po5I7md4KoHExd+gSln3uhZIoxL
eYUCF4NX5Iu7GBLX0v20hazFdvDi0UW6weDMS+qqZ8Bya1dL5oMv9a0VqCFu
oPOq4ztrDMzx/OpdFVHG7XV/5NaBb1VuObmd+Hk3FfswdyyIuIVe/7tcuxLA
tak7hUfBKlGVjxzEGHOHzVu8H9wV7JcUT9xG7w+/p1NywPEeCzwqwd8tj0os
mjPpDjr/jJd/2wa21n5XcxK8dOXq5VlgPrUzqY/BPYs+878l7qXXY8HagB/g
M1IXWTPEJ93XTbnP+b5REWw4a+NdXbD0tKtyduDnExZjceAjw5zPH4HVP9zK
HAb3tjsfWjiX8cOXpX06xAP0efZM2NIG7FXj9sgHbPy4QjkWLHtfIimDeIju
j+/4Tikj/tFNvSyod28F52XJtQ2BHVOaCxZIMJ4ZHx5pDe47/mbIi3iUvl8c
Vbc/Dr5wKKbmCth3P1v9AVh+XwL/V/BrR32W7DzG09VFNeLBa7n7jk2Auzxf
3FwhyfhAW+lbd7DxiRve0WBR/QzuDOJxuv5Hzic/Ahfmnlj6Fixtsbz1rhTj
2NG20ERpxgrOFVlPwRVPc5s55zOOD0vfLU3MwaIcVpwdXwVW/nT8tBV4NDVU
wQe81Nf8QDfY1VC+cZMMY43f4jv3gqfcmDEaAW7cyXkinZiTRaWI/5J9AHZ7
9rm4lZiHRWmGszZ+B/P894olKMv45ee6AGWwp9XttB1ggUcpdefBbX6nHe+A
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
0n5pU+BnA/l7PIDTzytMR+Kuw/KJ1oW0emB7NW/DFeD/ainE6Q8g68vHUwkB
nygTGFPDXY/1U+LltReBuQ5+crsPTLZ/WfAtcPKi0+YDXuSjH2Y6LfmQhUJd
z38XQOZVXxu4LASe5zAx2gmsHfdpUlkY+SGPnp0p8Jf8lhlPYC5pDYcYYKvX
DcRnuBux/dZd9XMM2HeyZHm/CHKdq6inLDD5Zu6qPvDZUP7rjribsHmRIX39
DjCnQPxmHXCuQuT2KnBPhB1Nj+iOm4kEdtbxe/O4P2Dr8/jSnt1iyFnC36IF
gKdfGDOqAnt+0GG+Dvxv8CRbMTAbpTQXlziy2BE+/ghg9+rU7CfAlSfYDzXg
bsH6p/bY3EFgdRMGoXXgdkdK0SMSyCa3/orbAjsXzEn3Aod++npM/Qgy+V2u
pkFJ5BCVS7rXpZBl4vMeFwCPz/1cHAJW2heXtAYcp66gvlcameg0OCsCfDIp
KPYk7jYiIUdjr9wzYPKVzP69MshNum+5R4BvPx23KpRFrlCffsYphzz9bW4l
Ali2Uex9LnBwvlNSI+4OIqEjuthhGJjT66fyBnC5mtvYUXlkXfpfYdeAy1U3
2DUVkDk8SJ8JHkOe/MLQ+UMRuUyJ51eGErKEWVM/tTLys+v2da7A9mHKz3OA
heIZc/qB73D5pS0DT2b/SKBT2XEXkXBKVCdGEDinrOKuKnDaPNl5RgJygpAe
7ygwk8YqhaYq8v0rKXMlwLruzsM/gOluqXXvU0N2oH7WchS45T5Lkxaw8L6A
1zbA4elTFYG4e4iEW1+lg/XUkf1YgnQOnEC2WtbYNQd8tmtPdcVJZKrC5iNd
wE13AnNngG9dUeDedWrHvdg8TViK5QKu+m11Sw9YqrjXORhYkLvqzDTw/sgU
AV0N5OnTwjETp8H9dlVu+p9Btk+mS03E3Yflz6NWSuXAHe8rBzuBAy323JwD
lly14qY6izx2r+o1P+5+bD/y01uoAGtUX9k2Bd7DUhP4AbjXmZFUXgs55aNt
8BNgK4HXu1i0kVleMeUcAW42sDupBewz/XrcFlg4kDk0GPcAkRBZWPeuGnjx
6zXKJeCA+2y7O3SQ6U69pX2mi1z3jb2wGdjV3Vl7DJh/dxPxL+5BIuHT4/1R
+/WQ5dqb2vWBkzdc6MOBL59vvv8bWKiUa6+NPjJxKrk/ALj0wP6MRGDPC4+u
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
      "]]}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->False,
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  Frame->{{True, False}, {True, False}},
  FrameLabel->{
    FormBox["\"Stretching Factor\"", TraditionalForm], 
    FormBox["\"CDF\"", TraditionalForm]},
  ImageSize->Automatic,
  LabelStyle->Directive[FontSize -> 10],
  Method->{},
  PlotRange->{{0., 6.6810086}, {0., 1.}},
  PlotRangeClipping->True,
  PlotRangePadding->0]], "Output",
 CellChangeTimes->{
  3.609639093086679*^9, 3.609640632308679*^9, {3.609644457796214*^9, 
   3.609644509285597*^9}, {3.609644613264613*^9, 3.609644618484446*^9}, 
   3.609646596795245*^9, 3.6096497677302227`*^9, {3.609650924860756*^9, 
   3.6096509379553347`*^9}, 3.6096643433986483`*^9, 3.60975816872265*^9, 
   3.609758200560717*^9, 
   3.609972970485259*^9},ImageCache->GraphicsData["CompressedBitmap", "\<\
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
Bw4YoE6cOKWgZs38xCpUXV0dM+Df0t05ooyZK4IZ82LIZhVn2rRp8M033xhw
7hvCHY07+8+zjDN9+nT4+uuvDTgjn1pOON26eA04ZqGkc8pgz5gxA/bv3689
Z4eGd7gTg3P+6dPcibmIw3N3Gk1o+ahTKljLl3XM9fbHc6D/YekVgrzX64Wv
vvrKQD6bPa56Lf1Nrjl5C1GqQgo8jC2nL8JDNsUibp2YLV+lIGbNmsVmcJoG
1P6SnILXr//C1pyNFiNcVaIhKg/D6Yd0EczWFZL67Nmz4csvvzRQ79ZlBlFn
I9OUegtRMbmqwXBs1O8CsR9BTNl1N2/OnDmwd+9eA81hQ98hmt27eVugWTZM
VszGISR2wTFa68UVVdw0TCZb7vP54IsvvjBwMWf2VqkBplxUCF4U06gRTohl
GR+5OMUoA8lCOS7mzZtHU0yJCzt8+mla6aEcBhfqjJivKqsEF7Qn01CKDbv5
Plc5LubPnw979uwxcPHjj6eV8ZETneCinM1YuHAh7N69m+7k7NS9K18sMWNt
s4rj9/shHo8bcAYNWEA4zAe3jLNo0SLYuXOnAafmYR7xYS6qZZzFixezRfZn
Bpzx4zdIe2UZZ8mSJayDP9Vw7LBmdaLZWuCCSlB22LBhA3ne6O2yqxW6z6wY
b9GRxot9b03F1VT8/PMvMyLTiFA8fsDWjBIRuhy/nY+OuGaKpk/f0vzxFtbX
XTvz/n76yeWW69w9eCHVGTxogeU6r78WNrqRFevYIbajNLiOHyfXnrW1YrXv
vvtBSW7Dh8lK1WRE4uYb66jKK+PW26zW6dFtKtUZMXyp5Tp9+0yiOj17zGpe
h6rIJ4fcM8Fo4iqi28HheF3J7PBhHhH4h8rVXK5xqtpH4aTVarhmklr30ti1
Z1Kt1y2zqNr9QxafSbWh9y+W0juTahPGh2UowFq1alrErVu7R4nlhx9O8V74
mbW68XhJe1et2n1GdXHxKKMpM70fN6+r6Uk1vPrqq1Sjb+85XBsfWWqZmqx7
791vU12GUbHu+aIMl9tyuXiZhofL0/FvfiTs7XTbxeJ5pIPxHrzLV4ZHMz5g
wAANvkrBr169xyaDVrncD6ruReK5Z599VkW4LJDCmbBfv34YumWk8JOvKNGj
3rN7vyK1bNl2nuLEnrhIPIf5Xxh8sEgKV5atW7eGCy64gJHCz9Zw9tlnw/nn
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\
\>"]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Correlation plots", "Subsubsection",
 CellChangeTimes->{{3.609644801281474*^9, 3.609644803015127*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"highFraction\[Kappa]Observed", "=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"0.0604813", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"1", "-", 
           RowBox[{"1", "/", 
            SqrtBox["17"]}]}], ",", 
          RowBox[{"1", "+", 
           RowBox[{"1", "/", 
            SqrtBox["17"]}]}]}], "}"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"0.665059", ",", "3.31859"}], "}"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"0.124288", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"1", "-", 
           RowBox[{"1", "/", 
            SqrtBox["26"]}]}], ",", 
          RowBox[{"1", "+", 
           RowBox[{"1", "/", 
            SqrtBox["26"]}]}]}], "}"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"0.42816", ",", "1.60589"}], "}"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"0.141906", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"1", "-", 
           RowBox[{"1", "/", 
            SqrtBox["51.1454"]}]}], ",", 
          RowBox[{"1", "+", 
           RowBox[{"1", "/", 
            SqrtBox["51.1454"]}]}]}], "}"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"0.363328", ",", "0.893781"}], "}"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"0.0572066", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"1", "-", 
           RowBox[{"1", "/", 
            SqrtBox["27"]}]}], ",", 
          RowBox[{"1", "+", 
           RowBox[{"1", "/", 
            SqrtBox["27"]}]}]}], "}"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"1.98748", ",", "6.62006"}], "}"}]}], "}"}]}], 
    "\[IndentingNewLine]", "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.6096451014355288`*^9, 3.6096451374568987`*^9}, {
  3.609645222026988*^9, 3.609645227887209*^9}, {3.609645393051215*^9, 
  3.609645428989118*^9}, {3.609645463432189*^9, 3.609645477467903*^9}, {
  3.609645609781362*^9, 3.609645642394065*^9}, {3.609645674156782*^9, 
  3.609645706993593*^9}, {3.6096458067672873`*^9, 3.6096458371022587`*^9}, {
  3.6100006551482983`*^9, 3.610000671716674*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ratio\[Kappa]ListPlot", "[", 
  RowBox[{
   RowBox[{"sample4096", "\[LeftDoubleBracket]", 
    RowBox[{"All", ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "4", ",", 
       RowBox[{"-", "1"}]}], "}"}]}], "\[RightDoubleBracket]"}], ",", 
   "highFraction\[Kappa]Observed", ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"All", ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"0.95", 
         RowBox[{"Min", "[", 
          RowBox[{
           RowBox[{"Min", "@", 
            RowBox[{"highFraction\[Kappa]Observed", "\[LeftDoubleBracket]", 
             RowBox[{"All", ",", "2", ",", "1"}], "\[RightDoubleBracket]"}]}],
            ",", 
           RowBox[{"Min", "@", 
            RowBox[{"sample4096", "\[LeftDoubleBracket]", 
             RowBox[{"All", ",", "6"}], "\[RightDoubleBracket]"}]}]}], 
          "]"}]}], ",", 
        RowBox[{"1.05", 
         RowBox[{"Max", "[", 
          RowBox[{
           RowBox[{"Max", "@", 
            RowBox[{"highFraction\[Kappa]Observed", "\[LeftDoubleBracket]", 
             RowBox[{"All", ",", "2", ",", "2"}], "\[RightDoubleBracket]"}]}],
            ",", 
           RowBox[{"Max", "@", 
            RowBox[{"sample4096", "\[LeftDoubleBracket]", 
             RowBox[{"All", ",", "6"}], "\[RightDoubleBracket]"}]}]}], 
          "]"}]}]}], "}"}]}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6096650972532883`*^9, 3.609665121188483*^9}, {
  3.609665203832144*^9, 3.609665219118981*^9}, {3.609758233235594*^9, 
  3.609758267152817*^9}, {3.609972985348139*^9, 3.609972985476069*^9}, {
  3.609997080802047*^9, 3.60999718294445*^9}, {3.609997492052512*^9, 
  3.6099974988324137`*^9}, {3.60999762567321*^9, 3.60999764980855*^9}, {
  3.609998312612007*^9, 3.609998373699478*^9}, {3.609998417739347*^9, 
  3.609998428640561*^9}, {3.609998740747856*^9, 3.609998744360976*^9}, {
  3.609998779712817*^9, 3.609998782993621*^9}, {3.609998864461544*^9, 
  3.609998889124649*^9}, {3.609998926692957*^9, 3.609998992852491*^9}, {
  3.609999065492115*^9, 3.609999072633073*^9}, {3.609999106131126*^9, 
  3.6099992564416437`*^9}, {3.609999461538074*^9, 3.6099994623562098`*^9}, {
  3.609999503850231*^9, 3.609999569720736*^9}}],

Cell[BoxData[
 GraphicsBox[{{{{}, 
     {Hue[0.67, 0.6, 0.6], PointBox[CompressedData["
1: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
oi1g8ypjB535ZnhvuTwFqmfv3PXA1PgwXXps37sa+DhqSP1Zh4DPSV3oFQgo
hU9UR+5+OEnA74dSpLsZ/oHUhQTTkT8rqJzHcTtMNwB9Hc1jsKjbQJ59JXFs
Qj/gRm3fi3PhG8jvoVOJbkgUWiq/E9S/RcKOvqTMxtoWiOym+fSDRMQusTfQ
cbNseJlSoEw/T4PL7BJuRoc2wK7D4k9qAqjx6KfzXDYPa6HBCY+b1xHwjlth
sfpgOdyWHLJKY2HA4zznonh9e8FMiefaszYSrpOH00MfWiDngtBPblsaTB5l
809grofnEe/mdlcuoaDVEksTrTzEeTBuckmGBXvKF87yZA2B9RslOYIGFfao
su1hD8uFj+MKJhm8i2jHqPvEiZZk9Neb4VwSPxVWlhP+oriaC7bdkTYazWz4
Ja/sMoyOwp6nIf4XPxLxc+OWT8N2pRAskiVQS7nf9rCK+nejfGgUv/oi9v46
Snkkg6cS/gCDMMendR4afCaw5VlAXB1E/j7Fl2BMmUfF1bycLf3wo+e95vUa
KpxS6CsU0IRBeb7dRmeEAf/8rXCVT6YfrG1vYeUnNNiC0bjkSlwDFIc1r2Pt
JbQ4mmmxcSIVrd9OZj+wOYsatE4lpbkUI7P/kl6L9HFgQ52CMYOXk7A4E2QK
Ymy4mcGd8XrrGPi4vPs6NEXCdkoC/k99W+BfiZN93sQcap2oWNdDlP4/Lv2u
N4ITO9Sr8+p+noHmSPfQm30MuPlV9jrb6W44Gf9MyYiSD2dcj8nyr7fDvIeN
VhTPMlKZrzfKr/qFQrpRCkPxFgo73diLcjPhkTeNkxo/Pd5nzq37wbIbDDfG
fn4W2kb2dlQmF86HgLyacc+fmjU0wTHntcj0AfmnOAi3c1P8/Zcc86/QRuAX
PnFOf2oLGagHlXla50CB39WK7YPLKCtix7Du4R8kn9TO4y5Dh3cJGfzn9Z3i
P7dV3B6yU+Mo6z0dEek1oFs9sJG4OYf+zTpyin7NR/yZNQv7x5hxQfRjUujL
QbidOPuKLmUNeduuxYiYf0Ib9dzvR/ZvIl5pYhW7ZwS4L93LGL5Iwjz3I4d1
kpuBRYHDN3hxHN2+ukfo30wpYuIa6Hl5ZAO5xjdn+30NgSPRntcyuWgxn3mV
PVqrhQem756rDWygYbUnroSPaRBw9e217RE6vFs0+mf4u1Z4ucyheomKBed/
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
bqCn9A0va3Sz0f8ADcjVAw==
       "]]}, {}}, {}}, {{}, 
    {GrayLevel[0], 
     PointBox[{{-2.8054210526328727`, 
      0.6890510528715226}, {-2.085153825753332, 
      0.016881698868516114`}, {-1.9525904124119562`, -0.46433254031194754`}, \
{-2.861086002637293, 
      1.4594913827698772`}}], {{
       LineBox[{{-2.5882669019938267`, 
        0.6890510528715226}, {-3.0831998250883537`, 0.6890510528715226}}], 
       LineBox[{
        Offset[{0, 1.5}, {-2.5882669019938267`, 0.6890510528715226}], 
         Offset[{0, -1.5}, {-2.5882669019938267`, 0.6890510528715226}]}], 
       LineBox[{
        Offset[{0, 1.5}, {-3.0831998250883537`, 0.6890510528715226}], 
         Offset[{0, -1.5}, {-3.0831998250883537`, 0.6890510528715226}]}], 
       LineBox[{{-2.8054210526328727`, 
        1.1995399939231408`}, {-2.8054210526328727`, -0.4078795204573184}}], 
       LineBox[{
        Offset[{1.5, 0}, {-2.8054210526328727`, 1.1995399939231408`}], 
         Offset[{-1.5, 0}, {-2.8054210526328727`, 1.1995399939231408`}]}], 
       LineBox[{
        Offset[{1.5, 0}, {-2.8054210526328727`, -0.4078795204573184}], 
         Offset[{-1.5, 0}, {-2.8054210526328727`, -0.4078795204573184}]}]}, {
       LineBox[{{-1.9060740719807312`, 
        0.016881698868516114`}, {-2.303454292679214, 0.016881698868516114`}}],
        LineBox[{
        Offset[{0, 1.5}, {-1.9060740719807312`, 0.016881698868516114`}], 
         Offset[{0, -1.5}, {-1.9060740719807312`, 0.016881698868516114`}]}], 
       LineBox[{
        Offset[{0, 1.5}, {-2.303454292679214, 0.016881698868516114`}], 
         Offset[{0, -1.5}, {-2.303454292679214, 0.016881698868516114`}]}], 
       LineBox[{{-2.085153825753332, 
        0.47367812002812204`}, {-2.085153825753332, -0.8482583214823279}}], 
       LineBox[{
        Offset[{1.5, 0}, {-2.085153825753332, 0.47367812002812204`}], 
         Offset[{-1.5, 0}, {-2.085153825753332, 0.47367812002812204`}]}], 
       LineBox[{
        Offset[{1.5, 0}, {-2.085153825753332, -0.8482583214823279}], 
         Offset[{-1.5, 0}, {-2.085153825753332, -0.8482583214823279}]}]}, {
       LineBox[{{-1.8217123142198086`, -0.46433254031194754`}, \
{-2.1032142820084085`, -0.46433254031194754`}}], 
       LineBox[{
        Offset[{0, 1.5}, {-1.8217123142198086`, -0.46433254031194754`}], 
         Offset[{0, -1.5}, {-1.8217123142198086`, -0.46433254031194754`}]}], 
       LineBox[{
        Offset[{0, 1.5}, {-2.1032142820084085`, -0.46433254031194754`}], 
         Offset[{0, -1.5}, {-2.1032142820084085`, -0.46433254031194754`}]}], 
       LineBox[{{-1.9525904124119562`, -0.1122945002607559}, \
{-1.9525904124119562`, -1.012449271433876}}], 
       LineBox[{
        Offset[{1.5, 0}, {-1.9525904124119562`, -0.1122945002607559}], 
         Offset[{-1.5, 0}, {-1.9525904124119562`, -0.1122945002607559}]}], 
       LineBox[{
        Offset[{1.5, 0}, {-1.9525904124119562`, -1.012449271433876}], 
         Offset[{-1.5, 0}, {-1.9525904124119562`, -1.012449271433876}]}]}, {
       LineBox[{{-2.6850759132088102`, 
        1.4594913827698772`}, {-3.0748364200486225`, 1.4594913827698772`}}], 
       LineBox[{
        Offset[{0, 1.5}, {-2.6850759132088102`, 1.4594913827698772`}], 
         Offset[{0, -1.5}, {-2.6850759132088102`, 1.4594913827698772`}]}], 
       LineBox[{
        Offset[{0, 1.5}, {-3.0748364200486225`, 1.4594913827698772`}], 
         Offset[{0, -1.5}, {-3.0748364200486225`, 1.4594913827698772`}]}], 
       LineBox[{{-2.861086002637293, 1.890104433351953}, {-2.861086002637293, 
        0.686867504602637}}], 
       LineBox[{
        Offset[{1.5, 0}, {-2.861086002637293, 1.890104433351953}], 
         Offset[{-1.5, 0}, {-2.861086002637293, 1.890104433351953}]}], 
       LineBox[{
        Offset[{1.5, 0}, {-2.861086002637293, 0.686867504602637}], 
         Offset[{-1.5, 0}, {-2.861086002637293, 0.686867504602637}]}]}}}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->False,
  AxesOrigin->{-6.6296065469312335`, -1.0637425658214268`},
  CoordinatesToolOptions:>{"DisplayFunction" -> ({
      Exp[
       Part[#, 1]], 
      Exp[
       Part[#, 2]]}& ), "CopiedValueFunction" -> ({
      Exp[
       Part[#, 1]], 
      Exp[
       Part[#, 2]]}& )},
  Frame->{{True, False}, {True, False}},
  FrameLabel->{{
     FormBox["\"Stretching Factor\"", TraditionalForm], None}, {
     FormBox["\"Fraction of high energy photons\"", TraditionalForm], None}},
  FrameTicks->{{{{0., 
       FormBox[
        TagBox[
         InterpretationBox["\"1.0\"", 1., AutoDelete -> True], 
         NumberForm[#, {
           DirectedInfinity[1], 1}, NumberPadding -> {"", "0"}]& ], 
        TraditionalForm]}, {2.302585092994046, 
       FormBox[
        TagBox[
         InterpretationBox["\"10.0\"", 10., AutoDelete -> True], 
         NumberForm[#, {
           DirectedInfinity[1], 1}, NumberPadding -> {"", "0"}]& ], 
        TraditionalForm]}, {1.6094379124341003`, 
       FormBox[
        TagBox[
         InterpretationBox["\"5.0\"", 5., AutoDelete -> True], 
         NumberForm[#, {
           DirectedInfinity[1], 1}, NumberPadding -> {"", "0"}]& ], 
        TraditionalForm]}, {3.912023005428146, 
       FormBox[
        TagBox[
         InterpretationBox["\"50.0\"", 50., AutoDelete -> True], 
         NumberForm[#, {
           DirectedInfinity[1], 1}, NumberPadding -> {"", "0"}]& ], 
        TraditionalForm]}, {0.6931471805599453, 
       FormBox[
        TagBox[
         InterpretationBox["\"2.0\"", 2., AutoDelete -> True], 
         NumberForm[#, {
           DirectedInfinity[1], 1}, NumberPadding -> {"", "0"}]& ], 
        TraditionalForm]}, {2.995732273553991, 
       FormBox[
        TagBox[
         InterpretationBox["\"20.0\"", 20., AutoDelete -> True], 
         NumberForm[#, {
           DirectedInfinity[1], 1}, NumberPadding -> {"", "0"}]& ], 
        TraditionalForm]}, {1.0986122886681098`, 
       FormBox[
        TagBox[
         InterpretationBox["\"3.0\"", 3., AutoDelete -> True], 
         NumberForm[#, {
           DirectedInfinity[1], 1}, NumberPadding -> {"", "0"}]& ], 
        TraditionalForm]}, {3.4011973816621555`, 
       FormBox[
        TagBox[
         InterpretationBox["\"30.0\"", 30., AutoDelete -> True], 
         NumberForm[#, {
           DirectedInfinity[1], 1}, NumberPadding -> {"", "0"}]& ], 
        TraditionalForm]}, {0.4054651081081644, 
       FormBox[
        TagBox[
         InterpretationBox["\"1.5\"", 1.5, AutoDelete -> True], NumberForm[#, {
           DirectedInfinity[1], 1}, NumberPadding -> {"", "0"}]& ], 
        TraditionalForm]}, {2.70805020110221, 
       FormBox[
        TagBox[
         InterpretationBox["\"15.0\"", 15., AutoDelete -> True], 
         NumberForm[#, {
           DirectedInfinity[1], 1}, NumberPadding -> {"", "0"}]& ], 
        TraditionalForm]}, {1.9459101490553132`, 
       FormBox[
        TagBox[
         InterpretationBox["\"7.0\"", 7., AutoDelete -> True], 
         NumberForm[#, {
           DirectedInfinity[1], 1}, NumberPadding -> {"", "0"}]& ], 
        TraditionalForm]}, {4.248495242049359, 
       FormBox[
        TagBox[
         InterpretationBox["\"70.0\"", 70., AutoDelete -> True], 
         NumberForm[#, {
           DirectedInfinity[1], 1}, NumberPadding -> {"", "0"}]& ], 
        TraditionalForm]}, {0.09531017980432493, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {0.1823215567939548, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {0.26236426446749106`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {0.336472236621213, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {0.47000362924573563`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {0.5306282510621705, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {0.5877866649021191, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {0.6418538861723948, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {1.3862943611198906`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {1.791759469228055, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {2.0794415416798357`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {2.1972245773362196`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {2.3978952727983707`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {2.4849066497880004`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {2.5649493574615367`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {2.6390573296152584`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {2.772588722239781, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {2.833213344056216, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {2.8903717578961645`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {2.9444389791664403`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {3.6888794541139363`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {4.0943445622221, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}}, {{0., 
       FormBox["\"\"", TraditionalForm]}, {2.302585092994046, 
       FormBox["\"\"", TraditionalForm]}, {1.6094379124341003`, 
       FormBox["\"\"", TraditionalForm]}, {3.912023005428146, 
       FormBox["\"\"", TraditionalForm]}, {0.6931471805599453, 
       FormBox["\"\"", TraditionalForm]}, {2.995732273553991, 
       FormBox["\"\"", TraditionalForm]}, {1.0986122886681098`, 
       FormBox["\"\"", TraditionalForm]}, {3.4011973816621555`, 
       FormBox["\"\"", TraditionalForm]}, {0.4054651081081644, 
       FormBox["\"\"", TraditionalForm]}, {2.70805020110221, 
       FormBox["\"\"", TraditionalForm]}, {1.9459101490553132`, 
       FormBox["\"\"", TraditionalForm]}, {4.248495242049359, 
       FormBox["\"\"", TraditionalForm]}, {0.09531017980432493, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {0.1823215567939548, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {0.26236426446749106`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {0.336472236621213, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {0.47000362924573563`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {0.5306282510621705, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {0.5877866649021191, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {0.6418538861723948, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {1.3862943611198906`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {1.791759469228055, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {2.0794415416798357`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {2.1972245773362196`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {2.3978952727983707`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {2.4849066497880004`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {2.5649493574615367`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {2.6390573296152584`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {2.772588722239781, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {2.833213344056216, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {2.8903717578961645`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {2.9444389791664403`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {3.6888794541139363`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {4.0943445622221, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}}}, {{{-6.907755278982137, 
       FormBox[
        TagBox[
         InterpretationBox["\"0.001\"", 0.001, AutoDelete -> True], 
         NumberForm[#, {
           DirectedInfinity[1], 3}, NumberPadding -> {"", "0"}]& ], 
        TraditionalForm]}, {-5.298317366548036, 
       FormBox[
        TagBox[
         InterpretationBox["\"0.005\"", 0.005, AutoDelete -> True], 
         NumberForm[#, {
           DirectedInfinity[1], 3}, NumberPadding -> {"", "0"}]& ], 
        TraditionalForm]}, {-4.605170185988092, 
       FormBox[
        TagBox[
         InterpretationBox["\"0.010\"", 0.01, AutoDelete -> True], 
         NumberForm[#, {
           DirectedInfinity[1], 3}, NumberPadding -> {"", "0"}]& ], 
        TraditionalForm]}, {-2.995732273553991, 
       FormBox[
        TagBox[
         InterpretationBox["\"0.050\"", 0.05, AutoDelete -> True], 
         NumberForm[#, {
           DirectedInfinity[1], 3}, NumberPadding -> {"", "0"}]& ], 
        TraditionalForm]}, {-2.302585092994046, 
       FormBox[
        TagBox[
         InterpretationBox["\"0.100\"", 0.1, AutoDelete -> True], 
         NumberForm[#, {
           DirectedInfinity[1], 3}, NumberPadding -> {"", "0"}]& ], 
        TraditionalForm]}, {-0.6931471805599453, 
       FormBox[
        TagBox[
         InterpretationBox["\"0.500\"", 0.5, AutoDelete -> True], 
         NumberForm[#, {
           DirectedInfinity[1], 3}, NumberPadding -> {"", "0"}]& ], 
        TraditionalForm]}, {0., 
       FormBox[
        TagBox[
         InterpretationBox["\"1.000\"", 1., AutoDelete -> True], 
         NumberForm[#, {
           DirectedInfinity[1], 3}, NumberPadding -> {"", "0"}]& ], 
        TraditionalForm]}, {1.6094379124341003`, 
       FormBox[
        TagBox[
         InterpretationBox["\"5.000\"", 5., AutoDelete -> True], 
         NumberForm[#, {
           DirectedInfinity[1], 3}, NumberPadding -> {"", "0"}]& ], 
        TraditionalForm]}, {-6.214608098422191, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-5.809142990314028, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-5.521460917862246, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-5.115995809754082, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-4.961845129926823, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-4.8283137373023015`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-4.710530701645918, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-3.912023005428146, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-3.506557897319982, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-3.2188758248682006`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-2.8134107167600364`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-2.6592600369327783`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-2.5257286443082556`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-2.4079456086518722`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-1.6094379124341003`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-1.203972804325936, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-0.916290731874155, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-0.5108256237659907, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-0.35667494393873245`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-0.2231435513142097, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-0.10536051565782628`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {0.6931471805599453, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {1.0986122886681098`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {1.3862943611198906`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}}, {{-6.907755278982137, 
       FormBox["\"\"", TraditionalForm]}, {-5.298317366548036, 
       FormBox["\"\"", TraditionalForm]}, {-4.605170185988092, 
       FormBox["\"\"", TraditionalForm]}, {-2.995732273553991, 
       FormBox["\"\"", TraditionalForm]}, {-2.302585092994046, 
       FormBox["\"\"", TraditionalForm]}, {-0.6931471805599453, 
       FormBox["\"\"", TraditionalForm]}, {0., 
       FormBox["\"\"", TraditionalForm]}, {1.6094379124341003`, 
       FormBox["\"\"", TraditionalForm]}, {-6.214608098422191, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-5.809142990314028, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-5.521460917862246, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-5.115995809754082, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-4.961845129926823, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-4.8283137373023015`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-4.710530701645918, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-3.912023005428146, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-3.506557897319982, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-3.2188758248682006`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-2.8134107167600364`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-2.6592600369327783`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-2.5257286443082556`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-2.4079456086518722`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-1.6094379124341003`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-1.203972804325936, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-0.916290731874155, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-0.5108256237659907, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-0.35667494393873245`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-0.2231435513142097, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-0.10536051565782628`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {0.6931471805599453, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {1.0986122886681098`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {1.3862943611198906`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}}}},
  GridLines->{None, None},
  ImagePadding->Automatic,
  ImageSize->Automatic,
  LabelStyle->Directive[FontSize -> 10],
  Method->{},
  PlotRange->{{-6.6296065469312335`, -0.7912614775522329}, \
{-1.0637425658214268`, 1.9388945975213847`}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], {None, None}},
  Ticks->{{{-6.907755278982137, 
      FormBox[
       TagBox[
        InterpretationBox["\"0.001\"", 0.001, AutoDelete -> True], 
        NumberForm[#, {
          DirectedInfinity[1], 3}, NumberPadding -> {"", "0"}]& ], 
       TraditionalForm]}, {-5.298317366548036, 
      FormBox[
       TagBox[
        InterpretationBox["\"0.005\"", 0.005, AutoDelete -> True], 
        NumberForm[#, {
          DirectedInfinity[1], 3}, NumberPadding -> {"", "0"}]& ], 
       TraditionalForm]}, {-4.605170185988092, 
      FormBox[
       TagBox[
        InterpretationBox["\"0.010\"", 0.01, AutoDelete -> True], 
        NumberForm[#, {
          DirectedInfinity[1], 3}, NumberPadding -> {"", "0"}]& ], 
       TraditionalForm]}, {-2.995732273553991, 
      FormBox[
       TagBox[
        InterpretationBox["\"0.050\"", 0.05, AutoDelete -> True], 
        NumberForm[#, {
          DirectedInfinity[1], 3}, NumberPadding -> {"", "0"}]& ], 
       TraditionalForm]}, {-2.302585092994046, 
      FormBox[
       TagBox[
        InterpretationBox["\"0.100\"", 0.1, AutoDelete -> True], 
        NumberForm[#, {
          DirectedInfinity[1], 3}, NumberPadding -> {"", "0"}]& ], 
       TraditionalForm]}, {-0.6931471805599453, 
      FormBox[
       TagBox[
        InterpretationBox["\"0.500\"", 0.5, AutoDelete -> True], 
        NumberForm[#, {
          DirectedInfinity[1], 3}, NumberPadding -> {"", "0"}]& ], 
       TraditionalForm]}, {0., 
      FormBox[
       TagBox[
        InterpretationBox["\"1.000\"", 1., AutoDelete -> True], NumberForm[#, {
          DirectedInfinity[1], 3}, NumberPadding -> {"", "0"}]& ], 
       TraditionalForm]}, {1.6094379124341003`, 
      FormBox[
       TagBox[
        InterpretationBox["\"5.000\"", 5., AutoDelete -> True], NumberForm[#, {
          DirectedInfinity[1], 3}, NumberPadding -> {"", "0"}]& ], 
       TraditionalForm]}, {-6.214608098422191, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-5.809142990314028, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-5.521460917862246, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-5.115995809754082, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-4.961845129926823, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-4.8283137373023015`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-4.710530701645918, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-3.912023005428146, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-3.506557897319982, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-3.2188758248682006`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-2.8134107167600364`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-2.6592600369327783`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-2.5257286443082556`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-2.4079456086518722`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-1.6094379124341003`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-1.203972804325936, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-0.916290731874155, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-0.5108256237659907, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-0.35667494393873245`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-0.2231435513142097, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-0.10536051565782628`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {0.6931471805599453, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {1.0986122886681098`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {1.3862943611198906`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}}, {{0., 
      FormBox[
       TagBox[
        InterpretationBox["\"1.0\"", 1., AutoDelete -> True], NumberForm[#, {
          DirectedInfinity[1], 1}, NumberPadding -> {"", "0"}]& ], 
       TraditionalForm]}, {2.302585092994046, 
      FormBox[
       TagBox[
        InterpretationBox["\"10.0\"", 10., AutoDelete -> True], NumberForm[#, {
          DirectedInfinity[1], 1}, NumberPadding -> {"", "0"}]& ], 
       TraditionalForm]}, {1.6094379124341003`, 
      FormBox[
       TagBox[
        InterpretationBox["\"5.0\"", 5., AutoDelete -> True], NumberForm[#, {
          DirectedInfinity[1], 1}, NumberPadding -> {"", "0"}]& ], 
       TraditionalForm]}, {3.912023005428146, 
      FormBox[
       TagBox[
        InterpretationBox["\"50.0\"", 50., AutoDelete -> True], NumberForm[#, {
          DirectedInfinity[1], 1}, NumberPadding -> {"", "0"}]& ], 
       TraditionalForm]}, {0.6931471805599453, 
      FormBox[
       TagBox[
        InterpretationBox["\"2.0\"", 2., AutoDelete -> True], NumberForm[#, {
          DirectedInfinity[1], 1}, NumberPadding -> {"", "0"}]& ], 
       TraditionalForm]}, {2.995732273553991, 
      FormBox[
       TagBox[
        InterpretationBox["\"20.0\"", 20., AutoDelete -> True], NumberForm[#, {
          DirectedInfinity[1], 1}, NumberPadding -> {"", "0"}]& ], 
       TraditionalForm]}, {1.0986122886681098`, 
      FormBox[
       TagBox[
        InterpretationBox["\"3.0\"", 3., AutoDelete -> True], NumberForm[#, {
          DirectedInfinity[1], 1}, NumberPadding -> {"", "0"}]& ], 
       TraditionalForm]}, {3.4011973816621555`, 
      FormBox[
       TagBox[
        InterpretationBox["\"30.0\"", 30., AutoDelete -> True], NumberForm[#, {
          DirectedInfinity[1], 1}, NumberPadding -> {"", "0"}]& ], 
       TraditionalForm]}, {0.4054651081081644, 
      FormBox[
       TagBox[
        InterpretationBox["\"1.5\"", 1.5, AutoDelete -> True], 
        NumberForm[#, {
          DirectedInfinity[1], 1}, NumberPadding -> {"", "0"}]& ], 
       TraditionalForm]}, {2.70805020110221, 
      FormBox[
       TagBox[
        InterpretationBox["\"15.0\"", 15., AutoDelete -> True], NumberForm[#, {
          DirectedInfinity[1], 1}, NumberPadding -> {"", "0"}]& ], 
       TraditionalForm]}, {1.9459101490553132`, 
      FormBox[
       TagBox[
        InterpretationBox["\"7.0\"", 7., AutoDelete -> True], NumberForm[#, {
          DirectedInfinity[1], 1}, NumberPadding -> {"", "0"}]& ], 
       TraditionalForm]}, {4.248495242049359, 
      FormBox[
       TagBox[
        InterpretationBox["\"70.0\"", 70., AutoDelete -> True], NumberForm[#, {
          DirectedInfinity[1], 1}, NumberPadding -> {"", "0"}]& ], 
       TraditionalForm]}, {0.09531017980432493, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {0.1823215567939548, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {0.26236426446749106`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {0.336472236621213, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {0.47000362924573563`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {0.5306282510621705, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {0.5877866649021191, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {0.6418538861723948, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {1.3862943611198906`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {1.791759469228055, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {2.0794415416798357`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {2.1972245773362196`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {2.3978952727983707`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {2.4849066497880004`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {2.5649493574615367`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {2.6390573296152584`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {2.772588722239781, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {2.833213344056216, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {2.8903717578961645`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {2.9444389791664403`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {3.6888794541139363`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {4.0943445622221, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}}}]], "Output",
 CellChangeTimes->{{3.6099976317422857`*^9, 3.6099976503551292`*^9}, {
   3.6099983284667587`*^9, 3.609998374294106*^9}, {3.60999840535879*^9, 
   3.609998429155053*^9}, {3.6099987361330442`*^9, 3.6099987835390663`*^9}, {
   3.6099988862582293`*^9, 3.609998889640345*^9}, {3.609998921345643*^9, 
   3.609998927517172*^9}, 3.6099989936026077`*^9, {3.60999916045757*^9, 
   3.6099991957694283`*^9}, {3.609999238325061*^9, 3.609999257412656*^9}, 
   3.609999372644685*^9, 3.6099994631101847`*^9, {3.609999505293453*^9, 
   3.609999570453828*^9}, 3.610000595110866*^9, 
   3.610000672948403*^9},ImageCache->GraphicsData["CompressedBitmap", "\<\
eJztPQuQZFV1PZ+ez85+GWBdPssKi6gxAqJZdkVgA7hUIIJSBUJEAlZaoaAj
IA2StIJO4meISVtWGpYGi1bTfmggTZwqMxUd3dZkrGqXUexQDeloC03NwqzV
VKNd2tbJPefec995r+/rzywkVmW7anq677vv3vO753fPff2n137kQ39x07Uf
uf4D127bc8u1H/7Q9R+4dds7//IW1TQyFIkMfSgSiTy3LYKfQX00b/S6Ht8i
kX+hfyPqrQ3NZlO9Q2QbtY1BS31vtcF7tVv4fVbf+Tj9i0KrvgCJWAxi9BeH
/NJK5Hi6NgnQqkEmwddiMJtfwnmgQG1JWGrgCAaC5hIkEzloqG+f0FN80lxq
e4AQqNTWakJTN0bGHW1TjrYNBrHqfAYy81UasFnJK1ByCihYI29p6lsmHG2j
BrtWdR5mMwt4qxqnDMlYApboSxvK+STEMiWD3ajFDi+3Wu1JB3SWEIIVPD2S
vtls0bfrNHHu4EstO7MhzpSkJQ1XyiaJN4lEApLJOMToGrVHhpEzaqKZXEm1
rEA+ibyZhZ8+kYVkZglRg2ImqbuNQyI9T8OW1ZDZJT1Bs0xdzfQTfItlO99T
UUSJZ8uaftMBKJuQj8cgV2l6Q7eXoZBK6CEQ6lgKau0G5BJJKDW1SFZyCUjk
ymbqrUhdWMzN0D1xnH4mD8ttJ7ihfb3rmnpLhZTuk0gQFefrxAhYWcT2Gai2
QaO0zjBDDRWPa7CNePimr+TU9bxqJyoZBhxlqQSNJZghcOagUSua8ZCSCZiv
NjrIxuSozBkwsW8iDYqSkWs7ZSXhk5Wterh41gxXh1k1RK6syVstzEA8XVKS
joskDcumT0pRYeFn+xXV4iTxSLGEohj+j8WySooID8gpUDKlFUI/I6iv+rKs
hN6iGBuUFQtlk7plyw07MspBLF3ERQMr5TwRa6nplxUzpMVcY5UxU7egmE3D
fK3pgja0L1+3jFV96gSEZiLCiGjpVRWDdHFZo7SdUEoo8dG0bkCWugempyFz
cCCESpp6KAuqLabbtAhpUFZ8ZGNyLEM+lTHzrtBY6VLDJyqbrKiUVlpK+SjF
r/5IT9GIWpHR/RWlBBNxtTiSSipjkMyVmSiG0ONS7CzBqgWlC3IVJf26TzWv
GKja/Qs1J8aZ4HuAX3xPxSErCQZR6xUkqCbs80bPtMzyrhjQNHGWTDPJk536
BFguZmjtzyQVmskZmJ2ZgexCzQVuaF8pKwSyRaVFFhFlpV0rEKNr1Tn637Am
b50WGEF6RF/pPg2DWbEtEpgs/NhH3qMsqVigmq0KWY2ywVfTQa3mA37a8fpp
VIuKzVqGk+kC1FoB5bLdp/viRv/llRLS3I8p3bWsbNjLaumkoFDWclqZUwoG
lxdZYVTvhAOkEimoHFzqkBoNflovMWUeMkZZlWn5L5KE1uZncUyrYMJuySow
s0tWaIyMLqIFMCquuAJ2NdIMGT1DwyoYJVyKKJnFOo4NC7MxSBWXrdC0qgUy
pRWy+jVII0WqLRe0oX01+IoaKw048IRe1ct6iRsFcxCKat7kXI0YltVUNzBs
D+C14mkZFECDT31BWY7UYiipPC2jF1OqWCfuLS8qQUeBpDkUvXCOdlWZEKU3
mlqjpRaqpHmK+TwsrbRDDJISQ895UfyfZYdydgEOVhdgxspUEuYqDTBm2Tov
qcISPD03q+3f7BwcqBQgla/Q0lL92HmZzZcI4aqy6KiwyOqrIZVZNdOP8S3C
Zy3By/V5PcRmSM15+kevOC31yUTc7+sU0pDHRdmqQ24mTgqBMIinoKq8PjQI
8aR2btha24WODuRc2gOhsBQGNvc1lBixfVvVOdM2BbPzz3iODlExAXNPLSkq
zxiHFUhpJbMlDwZchapvUjk9ON9MdhFapLiUXxdPGBiUR0LcaAluHGXI3IS5
GQO/ollruaRWtfFk4rNQWm5pTtMccaNYtLdUX8wrG5MgTyaRKqDV8ysbNilK
5OpKKBsrsLKi/hraaV5HfZQ73VoisqOOazfrUK03IkcawavTsiuxGPoikJZo
a9arUG9Iv38EtCGdIaF9s2kTOtg67bxsVGvk5qDcV7SPp+jFnEOOGnUcWcso
4MrJ5UkrNJfUakuXDAqj0FaBF3EhTr7gcACLhsBiKRNHE+/AgrS7Dwvjenih
R7MK+dyCxOKfLBZe9PIdfYnAv/5///MHLFZe8DRm2mSQNezoZ0PKptdvnePe
rgGaaDtrNbA0ArC0OmGRQaArvHXh9g7TJmJ5i4fEtytdOuYwMegaNIWerlbW
y3hCSpDU92xZfy7MahGfhJm8bnLf1oD5dMIuh2S2yJ5OZI2hgxrKKkU7lpJ3
jkMc4xqIJ2WcHAZDZNehodVQvnDCRmtJKNaa3NWiZcG2aE2o2QoWrdhMQXv5
HlrDhmsmfObbxbDj3SjrYaUoXJiN26nyxgnzsCIOMFaWAWHE4OmHcPYhbBrS
0qF19TEkTOSbFHSupaq8vVhyjuxIq7kCDUyoLC9QEE3+uPIdUCvO1V523new
Ivwf48sodbWGp3MORZMp+4D5jnBw6CXClC6gn3nI2B0kLyq9aPAoZbSr7wZ/
DcsvOaUxKFQ1RnNJdPqqAjuW9Q0c6WqsBiAwWr6dNMYW5RAoHyhR0OjU5jjT
YVFrOplx0D2uG7WIT17GSQCzyu4vGgmDxqIKeHQQpFFbp5ZFFuLKd+ZXKZ1Q
0z4bcl8blZ5VbqV03JBMExTVsnu8hr7liG4gOWQmtO+ZfWM4HgYRRuGmD6YT
S0o7zMBP91NfD8GEtd+MoE4zcOZCzVhKYyiljUDUJypmZjPLRA/awk4zw1I2
oYSZx19RYQO6/8AcA80FgQ9y4cfOUZ+XEAwhAEOIkENOcglxt6JGQntBBvZN
OmJMl+ysS5kk4eK672B9gbRbKjcHcznt+i8st41+HgsZyycjIeDol80xQLe+
Uka6Y7cuBCK1+FIxijDm5ueU964+p4rwku5rV4GBvkNIknEhJMrXFEKC2QMr
JL7hJroSVggJupaekOAqSEohaTtZcNA56vMSgiEEwC0kTUqJ+TMjkowbpYeO
PUgtZ5eed9/XrlCglysuQnFhEerN9pSQj85hhHyEQdKEAuaGClmTToBuUJ/Z
N2KbwiCiDBqmuRcXi7BYrlOkGNLXSr/2RLxUEaXGsia/sok2UJKzORXkxigb
BaFDhtDV2pwxk5MxdqutIzzrAG2ihRRgQSg1ng/BykjJdUayUXfF00XVoQXF
TFzkhzehqjQxprpaLxIRkEeOe8DmpEs1ZY2XoV6rU8Rkiegea8QIontINWh9
0cSJSZOvdU6/6xCwwawl7gfVVAS9XK9DfaUZ1tfDxqSg05gIatUpUZQtNxgb
JEbJ5BuS1jHtm5i7zCyNpazOpyvBqxcz/kB3UxjJ3bQMQSggDZh4y/J+ZSJD
WU4dL6+FGmV19bVMsaaR6uyvlwjHBiPk9hjOGfKNBoca7TK7F71gwkBEL46+
u3piMe7Goqkc/LiXiGCWqb62zfa1aETVNGZzCtmcKZL3yBajUpiBRJb30ORY
492o5+FAzOMtxCQs1JqWExURBVryhnBCzWtiFDWrjFHo6iqTDdv12GrYnfi2
VrQSx2OWVK9xtB3haFvraJtwtI052qKOtlFH24ijbdjR9trfc5hdbdteYZi1
ZT/M0v8fLN3T5/SXOtpcpOUE9Kc+9Sk46aSTYHx8HE4++WR48MEHbULu/xi0
F154AX70ox/B1NQUVCoV+OUvfzkoaC+ZtpdeegnWrdMDX3y4+6ve/QC9R+HZ
Z5+FRx55BD7+8Y/DV77yFfjhD39oF9KAQ+3btw/e/e53w9q1a+H888+Hz33u
c4MO9aJpO+WUU+Cpp54y3w4PcXiIw0McHuLwEK/yEC+YtqeffppcDTWM9b7k
ENym7D38/Oc/p28X9B52165dsHXrVt+wt956K9YTw5133mnbvvrVr8IVV1zR
77DHHnssTE5OwnnnnaeGuPTSS1Xb8PAwDTsyMmLb3vrWt8Kpp57a77BvetOb
4Mgjj4QvfOELaohHH31Utb3rXe+iYS+77DLbhhhccMEF/Q57zTXXwAknnNCT
tt/61reo0rbHsN+n9yj89re/JXb84he/gBdffBG3XyMnHrpE8PDf/e53YePG
jUhPsu+XXHLJKzH8v5u2s846i9wH/HZ42MPDHh7292XYHaZt732LcOE7H8D/
JoB+xafSmnkUbrj+UTjnHffR33m7947jB9UVm3maDa8OBKfQe5SQZQgu3PMA
nHv2fWpK9W3TqzPvNoM5zsXzqjmPNpirj6825seaNkH7yHFmeqTGqzz9tCC8
kTIa9LL3fCmylcAYRVEg8Mx1I4S8342p3uVaDVb08RpoL5dhoVihdDIj90pB
q9/HfNDyZwXxNsG283bfT0vmaA2tznqDrOXHPTva0eRCvNQCAn3MIcDMpT4I
M6ZlMD1Tr9fJJ+BTTnI9c7IPvzPzT8L3LT6ouVYDgS2lY3gySQNGtQFx3Ih9
JaC+6667YPPmzeRqbNmyBe677z4D9ZiE0JJXLZoTDcV3n7OXLikxiQRgF1vd
tFcV4+qLFuR1/eKhwM6bGbx8lBSwNERe59Bfx/iA01XbM6ZqW9e5L2BFTLsK
yUMnLOcxmeUIjgSKxWCrAWrMTNCCYlqX+VbaWBwQt7tRWkSp+5ZXADDmqmKf
0iwaMKEFjHr0lnq7Bc/sy8E/5ErQaB6EH//gO7DvB2U42AJbmSurDV35435B
HDMjMO2QXkrwWOCYz0i+kwz5RswcdcjEY0omDM2wKt/U5XLFHp1XEEcxnIWB
/mI/V14+HJeoxIVxUGMguFFLYia/WkyR1xrEjN6iUU7WiPE5nGalALMeSEDb
uMkZKgHWid61Zol5mHWvZGu5MvcurI42bb/73e+gUCjQt0nDIcT0E3d/nbBR
HIoaRE4/7aNw5h99hr5tdazE10vksE55BapKZSq1qeiE7yNQLleh0ZasG/FO
wFgTEVoENihyv/71r2FiYsLIiG5T0TEMDQ3BcceeE2F/6Kgjz4A3vj5G37YI
eWQF+Id+trVreWNv9BlEjC2xhL7cFHXAVQdW7rIlujyKo/2gCy6NRoPgVmG3
YhG+R+G4405WFuk4+pue3oaheoSC9XFsUjeNjEzC1uP/hFA62rHQTvOzjM+2
LIMs2i/DbCIFBawfiHci5KjpGJRNv/rVr2BsbAyeeOIJhRq+j8OunXfBGaf/
tf17zea3U7rgyOnT1VXVou7btPENcMrr/pzwOtKx2t4isRujOoPM1+bhe4U8
ZLNZyM+XUBinjNTXSznN1QQeBQV7/KRboUj/OP7mN7+Byy+/3Myl26SHOGzg
n5zcDG874276NmbaTnztZXDaqQn6tkngiW4ccvFtfvFU8kmFqfGkPmSMpwCx
oARPbbB4ouYx5RsGnJAqiN4YbjG3I9XZaxBaQyL0GuFcMJN2+IHHQxXxNNYp
VBTgeSxVpMLEUoNNfb8Qaa+R6TvmAIdXhPTKdwbAwRUxW9SVTnQUpQFpXU7Z
NzgsAjiNAUmp2k5wph3gnBVgrTaFRk4zkE9peV1hR4gM3X90AULSxAXERqEl
GIhzNBC2LEZRoVYuwWK5RgVKKEP9xgW8YSx8fKVpOsFY76DFbg2GLblVvku9
lIcU+S7NYdSQKNm2erx/j2qTaWOdLyGQUE05oDpfQ9WHr9IvNBsc0Gx0QOOK
5i/0y0s3B6Nf8eX9fNZWGMFPO8AZdRDnooDkNOtQnNPat6C1r5acULGdCkzu
qfqonNwGh5f68VcEMEf305DP5/SBt2SeRLZf/KXPb/RbZLPBdfPmrda/fU+A
9KjIUp4LQ2dBB1RkMsJk7I8y2ItMBrumkcsCIKB5ThbY48LoyBwFdYOgJ/UH
4/gyIBEhXDqTPWnp7QeoAeZBFvqIdYMKFBP6BGMXUKasQ43/BSj0WYKJesQF
WjQcNE4gtFagUi5TdF+tVuE/tcsKTy49Se6qcrU9zVo06LgodNtt2u9nS862
EL8dge9TXWAZNfyZJ18jEY/piGWUfMsEHcck/9JFK35kjMxDbBTSdMbpt/lc
JEmfLjBZP74+p1wJfRZlq2P6f3ZIjWBb1AEdSwW24crl/AOu8o0bt8Npb75N
kyyg3db3hhYL5fGQchi0X3eAM2oGl8LGCoenl1Er/mfuKrB5amlaWQjWryds
fBZFmtZNvTESx73E0VRbeeo0K4ylwMhgOeHDLLi8iF9ejlC8og6E1joEarqL
kEd1H7XgqtVlaOH/ypOq7/79++m9DC+1BU6E7JdD+RXt4ImXgJv0YRbsZ/4b
izVKDBH5Lheq7CrJ/PHRPVHFbBQuneUarWsFnFrO6g6xoC3B5OFPl+v9JXNF
5u0UYlHDVdkclFn1fzhwt2H4Ogeq5FYcG47bUWbG8JSLOLXoPzbqSrl8McBM
FibNTA52rCyaZTHh21jAPyfCUZ+0Gwfcyq3EekQwmEOT48KJ4CU5lp1JjqYv
yRGexXEf2nNG0F80bXJNM0FReXLeiWtBpfs4TFdGfWudiORlCNm1WWvCJUEc
dvvwlhN60QTTI3MmjowHzZeIPzvTI+5zaVUXLR404qwNyF52/4YNzV27CUKu
OLE1IlQdmyHb7Pc5pcigPcV5XEnOgHjgU4ris/Nkjditd2WG3Ket2l5m6AEH
80fNzcIxlyovahfP/bwbFuE26ZtMiUVm3CuTgO2KGqbo8IlYiEbvXFHUdVbI
qefuN1iF8HBUkwRBnrB+g1R8gtfTBmdhcAfBEIOHVBfDy+nSsMSR+ziMS5zv
77K0XbtL/qXt0YKlAOkgEkTIfhZqeeuk4DyDwuD1yuYbWvExlvbK0/DNhzKQ
uicFDz2yD55tNOFAeRGW6i2R6A3mnKKuoyMRF4X+xkGNacMFhxsQdOVUlNnp
TbJnKlHdZq785Cc/gY997GMwPT0NN9xwA3zjG9/wi8ekSQziQ1JyMD8/B+mE
fljA0kKaE/P6bALJzt86WLzWgdRYoJ9mMVotzSdu41Sa9L3GuyD05JNPwt13
3w0XXXQR3H777SoazgcRatjUG78adHS43EZB1mGj67CFize8wRSmfb0owE+S
MTEWo3qMQ0xZpiSqt/vRadfnIZ7Ignk4ILSWi4pfaag1vCjYhc5dDnSiAVFj
pSP8ZosCK7zgBqY3jp+TnEuQriVLRih6I+ZcZcyEicbXyunHKWGPzV1Qk+Bq
kNaJrau9Lme5g4PoULABlavOmmG/AR23TLyfsbeWB60Tg8ghXhfMMfGHuyE6
38dZP+s4iEV3u4OVrl37aIi0drJ1bSidglrHfHclJWRwHsDRVQ2ScHDNZR3W
O9pGHG2jos24PdYxkOuOgwOpM6cHA/1mx/TdDFsvFF3o6LYNoaomKMDBdakY
aXcH5LqccqB/VA/0SepucSDDvlqIV+PCX+M1JX37sBwLC6svB+t3EEZlegLx
3OAQzM3h6EU4v01rDw8D07oT7rpTmboEgOWvUwu5GDtqmaLd9L3DJkDRzt9e
H7+VX8uOjkjiOFNy6xz4c3YtHH8dx8n8fvdEzB3d+T5hUJRRKmWUPL0qRHnE
Sun97MfpNNnWLnCPa7jNYyjpeQ/KccFnkOKm0TC0223X5s1fhQrx+m5qkmNs
nytqzIUMsfF1jtjXkIusX2xMNG2ef4peJWdkOkpWaF3qqK2/6JAjDVEoxZYL
hYjEkAPoYSLOhJVRiT6Pqz6vE0LIGQZWp/v377foc4js2oPAEwIHDx6kbzf6
SSITDPQwmgyRhEfDhTs/K4OZMaAnfjdXXSxzq2nzKxutuoRi6rC4ckUijdib
YEUVqE5ksWH2oL6eEiuBacm62T5RXbiJWPSB5xiuvvrqCD/q+/3vfz889NBD
DlpSEZkO5pSz0YByuUZPc1pr5L9VmydCZBf1uXm1hPR9g5fmBPUjImeEaq+v
sijMgHsujGfBjMUwBB23YwRz2siqNY4FyGYAKXnJJZfQCYUxeh+FPXv2UPEm
1mtMTk5StUlEHxLhruP0PgLHH3883HHHHZLAHPY16xWorrTxCW2Qz2ZhrlSP
cB1GyzxiI5mlh6H2UxJE/u+HTcfgejUy4oo2uPJBKjAlkdJiMu3USJwZZ0HE
S0oNTzooyKYAKfjYY4/hn4IM38fh4YcfhlQqBTt27IArr7ySKIqFPeeee66S
Tewzgp/xzKcknd1JM2FnprgEuQQ+j3OWrZAloZJAumaeJzvMJOxSfxSQy2sM
oxxOlNMxmzBThDgoLr+NU9KBKYaNiMv8hbokN7tZ2Uw44ge2ZaeddpptmzDI
XHfddfDAA76NRKsNkskkPP744y6KN+nZS7hvWaEHd+GqXkzP4mOQ7POaVipF
KFbM05RaJcp92gflDFQo9b4AWXy2f8y6BPgSBGY138kTt58lybjeYZje0IVk
dwTJk6WN7kZtDhKzC9BsKIOsHx1tyVOfT1LqRy95XaJbbVvyDFBj9T7DUUeo
JYW0n/zDEQbH4BbBhbaw05+GWSdsFtPpD/ql04h+qosjnciPmGUphXYd8uKp
kNlibZASrfc5JIGlQ0rCJjOdsN6sNjv8ZawmliaXx31zb+zZi4Lmz+DfHstR
t4e/uQ/+679rWJfg2s++wYFBeHzgbpN84+AOXWZOPUxYbDyZP7V/mR+0ruQ9
DlC1jdjU1ZuWIhvMOQmpN6IZJYYZs8QiHTljkKU8WM0Ko9VpU/2obnCg6kJT
1gLIqE84MBHX7gw7MTKWe9sAaA9YJ+PipiuonXT0Y3dGoi8U0HDgMjsyUq2t
8/xDf3H/jgEEeMB6nPMdqKxxtLnW6aQBy6GyjZ6d8pEhTCpM4BUJoo5SITex
GGZ+dFUXcshzEFxLeLDZpPTigecPYDGhs7SRySG5vcbRplNykz7BD1kEERfr
RfQsIyazLpxrYcKxFt7emxI2vzNY/WK/cuHS1eMGKmmBjKxbHssy56DDaFIN
HPkY593EPM5Q8tz+F8iglZNXBIRcmslo4BqrtbCAWRLL66c1fDCGQ9McFWLA
c57fG1WvKrMG87kMpNNpyBYW0UlzCv0VhjQiVu1ANbj50elTjfs8e3zJwtIR
gyYaMG7HdY9rXOYHhAzs6Z+p+kfBMGbK0hNZ00m9axtmtq8UEiox9pbraNB/
0kiO2chT3II3eCk8LxM57lixFw4gqYHAWP/oyGDWa8zRFiwZsghe6M9EGp1m
nUbebffaxmTi1foo6vpFg6zHnPK25r1ng9PTt3tj2Rn8+BOADkH1R6L+ur6o
eZdhmCtmYJN88QDCqfz+tDnFmlJBPZ1gnZ2nIop++ejtL3r1QCOBLFAAbOrj
EsHLeoPunQhoQqVUhIWFBSjpp9g6NchV9D5mpd8U3LBYeIkvhlnKDd9A3Nzz
QOTyfkk70vMomsuyMawh1TVe5lfaH775vf2zvdthsnCdtMand0TxomWtSVUP
m+094zz5bMRV/VNQngxzldVqqCZdJs76bxxJjjoI9mf9g0LHuPTvBnUBxb3l
okBiC8PKWRLk6t5QcJa56fr9jh4nZd9r2jodo1F2ZpiN1/WGZNoIAsaiVHsS
0zmDzLz+QaRVZvX5wYWdpiA0u3d9v8Cuh0ouTr+0Ra9GyT51eBWp83c6AOWt
Bqn/gn61RED97xt4XaBoXw17Ut8m+XplqC8w0EmbpCGekA6BK1l1Y28o+WeI
6LcoTP4okS/b/Hn/yd9wyvrdHQXzh/unXnO5CpW6zoDWi2neYVlFitQFH9d9
hyX8RL1+ZACg6/Mzdt+UfpUt7gN6gMTleYKAQgS1hzQVmv3x4gnrNfUPPyqm
ZfETMzMI6CDJRAZaQsE6lD3dkPTqLb2BdFWM7HLwNuid2lrmgBG5/dCmlMsy
fMPC04KBKsuPmss4OxrxwDO+ulTJvNExWfBJE/3IuMgQRu4W0Ozduzf4QLM+
oOn0nHuc8RkLKgfuercZUfAlcudg5OAZQpQ4/6qzdD9U8ycHm/gtffJhZrBh
z3QM8ZnVDSF5MuAQnN0OBDkEjStnu6rh/edQHIz6u8FG1Q9eWNMBdEjR3apG
d+dsXJucAw5/omMI3uRxZRQ+v7rhpUy4GOlSZb2mImfxJMeNwx3weyrn3sHg
P94xPKcEXVZvlcN3Olv+Kf/etOGWfD6fN2LcORUboXvuucc+MOXmwbC7z7Rd
ffXVcOONN8K3v/1tBRK+j8BVV11F1mLHjh227eKLL4ZPf/rTvaY6gd75MIy1
R/9oup599tn0BNLdu3djRK3eR2gmrE0YGhqybccccwyVuvc5m1zo6jPPdtNN
N8HnP6/li8mN1Tejo6NYe27bPvjBD8K9997bHxlDbS7P+swzz8Bzzz3Xk3n4
NFZ8fFefzJOy82XHsANK94BDbHAMUQgfgiNT5y9L9ohMNxh+Bb3PzqXvB+dr
4eDY8LShwlN+ZIXezqahVxmeMqRBH0iyylVN2xPS9eYn6038tlKyP2K5itiU
6/oOmX5jWF0mwk69U1eotfoJOgNAFXtPVqezKwnIzc1DLoVhQxrq/RUQUYS7
r9cUUfuEtoXFIhQXy+JncQeKAftARj//LQmLtWVYWa6rhb8iq6EGiN36mSzw
W55YDWBPe/UVa3WZxKUdXLbsX1c3hFwnqxziEKAYEG/XMvrO6oaQeK9yiEOA
ohfepBG//6rS8veq+/foPUq/HI61udu3b4edO3fCzTff3M9tL7/8MpXzJpNJ
+OxnP4tllt1uo/c/fmWuR4b+ByBjVwM=\
\>"]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[Chi]\[Kappa]ListPlot", "[", 
  RowBox[{"sample4096", "\[LeftDoubleBracket]", 
   RowBox[{"All", ",", 
    RowBox[{"{", 
     RowBox[{"2", ",", 
      RowBox[{"-", "1"}]}], "}"}]}], "\[RightDoubleBracket]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.609665222536592*^9, 3.609665224992021*^9}, {
  3.6097582700910263`*^9, 3.609758272116159*^9}, {3.6099729908514338`*^9, 
  3.609972990971394*^9}, {3.6100005754660063`*^9, 3.610000575688229*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, 
    {Hue[0.67, 0.6, 0.6], PointBox[CompressedData["
1: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
+6EFnv0jM3x9OITMpXM0ssPmeGW387LVAEHMbhMQdHORxYV3oXwpiZXYM7A9
33XdBIy/JHIvySfjMHfYWpacDkzOZQqqxDRjKf7b6N5cElhBhOqQtvZlp80N
r5Mk6I1zlHvKJRCBkTFiow/VwcpLYfH3QASRzI4lJj0dlFSknau72QCS8J7L
WjZm2M/ZbLIQMIzkIU3X+P8sMJ3y3VPyoj0REk7NNnJBFWLfPJKY2PwJS1uj
mx5PVHA3W+lZjnAXpOo+7SqjMUe/RH7WnFEt7AZLlSycDND5nVFVc8WPWHDa
rVItslX/e4kPfMOlxLhq+NtiSWlMl/589P3LAOS8yPvMxa3w1fFiyxvDcdxP
0Al3P2iHt+/OTo4hCT98qVenKXXxpbDk8fK1GjTxZvF9ZDbCV7M8uhcHo4jd
AxFPSMPqCH6gna4U8xt9zHuGUuZdcK3RjSPbexDuLbWzQurWcOY6aJlyJB5/
P43as1TogSwRK/dV0Ivwn+j4m7akChUJVcXm2WpCl4nijjdZGKzLyq6huxsw
Y/1R/qo0GVX972L0w8bgvll//L8oK3RnXkmmpW0GxfpERIMYCQm0fiL8FGk4
SjKPLCO0sWusNLLMbQpnFtTaj9bbwNnypMebxF40mEULihaT4XZ7KPA7dysa
ainKH+Sb4s6o3vxoWiwoqznydlMaYTKuJjmsMhVM43v3Zw7rwqEwZCE5LxYU
f6lPHh01QmzAtZYfTIVEgevk4NP7spAdP3L2bU8PSsXe6fozklFcn3x0U7wP
r6WaWllumaN+bRsVbVIL/Ba0zvGWk+GR6v3gk1UR9lzJzv1+wAB09p0Tow9K
iYFbI0W3JWTAJH244bh+KdFXWv2SQlYKffLRh4//ycHmZLnIsV/6OOvjz8fx
sgNsVGZTp66RUE99YLAjIBYPh11vxz3SwN3vkudrYisJ42/yDZGBt9E3Il4y
plOGKT7vr7kCRhDO0rZqFByEREvaCEnQApeZP3wg9VdBg5euXctri18cDhlc
nM4n6nfkHHpHrQbWw7y37ajKCdH3roZ1ipJwNpButbo4jXDXfIUHlx0hmb+Y
/Z9xMRoWFClNE0kg+T+3U18dwY4DFC+t4y1xeImtfcEiiVhuAqEWoIqvQ3xF
guExoD6fduB3ns5W3hqVD5WoRuXtWePNFn2IOMvL5DNFwle+a2h/nC42/mYs
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
aSVaP6TufBJviBTjs4Vm27xi0yVWen2XMy5NLdtJR7RihWFfHtN7S1Qf5hcX
9vgKpidcqnXBtgg6UMVRQTkBPVHuw+H5DnhM2v/tnMQg7tzUuSDqbo12pwXv
L6rjmFl/dVI02A777HhKjxZXEPNKHL3fKWXhuOYa8nPJDklfPlHIMBji7V2r
/T6MC7i0upyo1OuCP/dX26MyviJ5Wmz+1XebbV7S+OPCUU7o5s6+ki+TxcXn
Qz6NS9v8+G9qz8s8EnRcKdYs75UTq+dTf6bNK4JjkZeGzLcdzLTmEmZ3zSBh
YSrN2zqD7pUjT7UHXZHU6U0s/u6G+McmV/ZIG9QGHs8npCqJiStGg4fSZWHH
S7Xuz9SE88c/8CocN4W/1/mxMbUJRL1rvLXQZIePkY3HHFLLIct2/8UBJ0Nk
FzI0tV0fA/V6K+1/tg5IpF9+8MxmFLW/bl9r9LeFZob/xbtkzeCX932qym+G
1hmfMA7qQXjsnR5sErQBD5OKsxDVJMTeH1GYb7fHsbqSTvzqQ6v9hPqp7XlK
dp+NMXeoR4sLqU6ugoQ4XcGSrcwOaKgF1lP3kGDz04fqdOUbIlolXjtZVxtG
f99t8dwpJ+6P7LTp9VCEderUs+adn5C7ljx9ssUAkql77A3ki4nu5eMWH5aU
sbbOs9MhxBPd9/ziCWVd6CruGJCdbMAoU2RvPpcxmqxrnZ80p0N1XZ8/UtUA
/uxP8kdvzuLt5uiW90NH8LvQmcseGMENZrFOGRZHiArKcYq5jMGZd/x1xaYd
5J03kg99LoI6pQC1Hrc+SP4Kq2yEJ9Gtyzyit6gNq++vkjdWAwjJhJjld0d0
UfahONG4qAqfnLaH/ZIlYvxe5T37NYCqdIpbabMkfKY2f+jhnImjxEnv8ipj
3PDxEHabzQZYM3ZeLTfArWu3eZiT/BDzLs/364YBtIqWriSufyJEGazEV/21
UBVb2u4YkENkLWX03V5Xwr6uX0YaKpEINGAPeMykDyq/wTebIxn4qeR8s1xW
H8vdLTuMtMaxmRy+LPLDDmwvTMWrA/tx+8Pk8z2OJARnxJu2V1cQF+ZkhwP6
FBBwZY+3L9GFX0xhudLZVshZo3L8VdIFvhATVotZa1g/+xF680QZKrTUbiT/
3c4PVFQClpajOLRlaHLEyhZ6T//k/07JJY49K750bo86jP5Lut0pO4wPZzr5
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
0bO2w4x/bsKezQ0tbmI++om1sK5zjNFeIed3P0Nr0OEqcDk7ZmckOkC5TTTW
c3AMOqzcxxj1XJGcNUyRZZKBlRP0kQcfmIIjLPK/Leke1LOU1+u6kXBZYGqN
SyUbQpo1T0lnbXB2rwvXhXM5yF+N/LCPzx5M1sqUwfUzkMpmKPR74AHVM35r
1Bl5xMqS/J8gFiM8L48qdZ/IwisK28ssZRbwevjoU4h4KvHu0Br1K74bYB8K
t6QzK0TA2fDOmO8W6Ng4wSd/nSAKNlKHy8W18crxqsjpxAwIcTJPfbSywehx
a//XJhUQCONn9TxkjX7X0k7l2////b/TYdcWU7AaL39gNW+AXpAalUeRI/La
3liz5gfhWVX2fjk+c0jzcOtfUZnA4pEf3C8ZvPCh/y1f15tGVHc9+ZPRaQ2O
h1qZXj/rCe6YlAEJe2DVOr7zyMVq2GX8oqlgIq/n9tPOlr+LiXzdg2sGZL47
zJ4omc+wG85qy6lm4RZw3B3Y1E6UEvwnvJQ26jSg9fHXjUNHqqAe5c17LdMK
mWs6bp1PKgjH7tVMNi5dhG9kyKvvKSYCpbFtJU0Hh97HqvQ6VmN/DLfAV/Ln
cUqpTrHKhxDXS7N6CyxuguJkhWjSnxFkvQGVkpcrjjlUnhp8P4Rkmxopczs3
1DUkZXwVqMe+NfZi398O2EM/H+zGUg3WzRoVA0obbP/g3KOf1IbYy08ELnQ5
gs/BsUv9di7x4Mo8rTqbLhpS6NYWY7oxsSFV+0vHGWub7O5ShsmExbOR9iUu
Y0h+Xr283pYH5fr0TxbPzPFTdCkp81wlmJ3S09lHLDEzXP74+PwYbm0TVTkq
6Ior1JP6lLzdSHxV0lR9wQmZzrkFf0kjCFkMGzgt7AVes/Yd/BOdcLvB3zPq
6QBKw+ZevvhPxO9MLjEjWkME/jjtvn5iAilslwN+Wrvi6MNiy3+SE6jLv3Bj
WMEdTrdFlm/zlRBGUZyWRW+uY7Egs7NlVzFa1UJztRYt8VxP0CqPpZpw2Wn/
38KcGB6cUG3W8r5D8NM1mud6mIGDZ7/CoEwv2tab5hwaSfj3wdnc6XovvLg+
dZQuOeEGNX9F2eQDwjTPQ+/rJxOY9fNbXV1Iwf1T74sUmcxwL/HEyDbuDsRw
3om/kmqHnX96JzJXOyDa8PKz6Wl7/KA1+2h5qB933aMdP1s6Q02PQdjZoR3T
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

      "]]}, {}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{-0.2152520941253918, 0.00004344543920011605},
  CoordinatesToolOptions:>{"DisplayFunction" -> ({
      Exp[
       Part[#, 1]], 
      Part[#, 2]}& ), "CopiedValueFunction" -> ({
      Exp[
       Part[#, 1]], 
      Part[#, 2]}& )},
  Frame->{{True, False}, {True, False}},
  FrameLabel->{{
     FormBox["\"Off-axis angle\"", TraditionalForm], None}, {
     FormBox["\"Stretching Factor\"", TraditionalForm], None}},
  FrameTicks->{{Automatic, Automatic}, {{{0., 
       FormBox[
        TagBox[
         InterpretationBox["\"1.0\"", 1., AutoDelete -> True], 
         NumberForm[#, {
           DirectedInfinity[1], 1}, NumberPadding -> {"", "0"}]& ], 
        TraditionalForm]}, {2.302585092994046, 
       FormBox[
        TagBox[
         InterpretationBox["\"10.0\"", 10., AutoDelete -> True], 
         NumberForm[#, {
           DirectedInfinity[1], 1}, NumberPadding -> {"", "0"}]& ], 
        TraditionalForm]}, {1.6094379124341003`, 
       FormBox[
        TagBox[
         InterpretationBox["\"5.0\"", 5., AutoDelete -> True], 
         NumberForm[#, {
           DirectedInfinity[1], 1}, NumberPadding -> {"", "0"}]& ], 
        TraditionalForm]}, {3.912023005428146, 
       FormBox[
        TagBox[
         InterpretationBox["\"50.0\"", 50., AutoDelete -> True], 
         NumberForm[#, {
           DirectedInfinity[1], 1}, NumberPadding -> {"", "0"}]& ], 
        TraditionalForm]}, {0.6931471805599453, 
       FormBox[
        TagBox[
         InterpretationBox["\"2.0\"", 2., AutoDelete -> True], 
         NumberForm[#, {
           DirectedInfinity[1], 1}, NumberPadding -> {"", "0"}]& ], 
        TraditionalForm]}, {2.995732273553991, 
       FormBox[
        TagBox[
         InterpretationBox["\"20.0\"", 20., AutoDelete -> True], 
         NumberForm[#, {
           DirectedInfinity[1], 1}, NumberPadding -> {"", "0"}]& ], 
        TraditionalForm]}, {1.0986122886681098`, 
       FormBox[
        TagBox[
         InterpretationBox["\"3.0\"", 3., AutoDelete -> True], 
         NumberForm[#, {
           DirectedInfinity[1], 1}, NumberPadding -> {"", "0"}]& ], 
        TraditionalForm]}, {3.4011973816621555`, 
       FormBox[
        TagBox[
         InterpretationBox["\"30.0\"", 30., AutoDelete -> True], 
         NumberForm[#, {
           DirectedInfinity[1], 1}, NumberPadding -> {"", "0"}]& ], 
        TraditionalForm]}, {0.4054651081081644, 
       FormBox[
        TagBox[
         InterpretationBox["\"1.5\"", 1.5, AutoDelete -> True], NumberForm[#, {
           DirectedInfinity[1], 1}, NumberPadding -> {"", "0"}]& ], 
        TraditionalForm]}, {2.70805020110221, 
       FormBox[
        TagBox[
         InterpretationBox["\"15.0\"", 15., AutoDelete -> True], 
         NumberForm[#, {
           DirectedInfinity[1], 1}, NumberPadding -> {"", "0"}]& ], 
        TraditionalForm]}, {1.9459101490553132`, 
       FormBox[
        TagBox[
         InterpretationBox["\"7.0\"", 7., AutoDelete -> True], 
         NumberForm[#, {
           DirectedInfinity[1], 1}, NumberPadding -> {"", "0"}]& ], 
        TraditionalForm]}, {4.248495242049359, 
       FormBox[
        TagBox[
         InterpretationBox["\"70.0\"", 70., AutoDelete -> True], 
         NumberForm[#, {
           DirectedInfinity[1], 1}, NumberPadding -> {"", "0"}]& ], 
        TraditionalForm]}, {0.09531017980432493, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {0.1823215567939548, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {0.26236426446749106`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {0.336472236621213, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {0.47000362924573563`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {0.5306282510621705, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {0.5877866649021191, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {0.6418538861723948, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {1.3862943611198906`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {1.791759469228055, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {2.0794415416798357`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {2.1972245773362196`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {2.3978952727983707`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {2.4849066497880004`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {2.5649493574615367`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {2.6390573296152584`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {2.772588722239781, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {2.833213344056216, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {2.8903717578961645`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {2.9444389791664403`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {3.6888794541139363`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {4.0943445622221, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}}, {{0., 
       FormBox["\"\"", TraditionalForm]}, {2.302585092994046, 
       FormBox["\"\"", TraditionalForm]}, {1.6094379124341003`, 
       FormBox["\"\"", TraditionalForm]}, {3.912023005428146, 
       FormBox["\"\"", TraditionalForm]}, {0.6931471805599453, 
       FormBox["\"\"", TraditionalForm]}, {2.995732273553991, 
       FormBox["\"\"", TraditionalForm]}, {1.0986122886681098`, 
       FormBox["\"\"", TraditionalForm]}, {3.4011973816621555`, 
       FormBox["\"\"", TraditionalForm]}, {0.4054651081081644, 
       FormBox["\"\"", TraditionalForm]}, {2.70805020110221, 
       FormBox["\"\"", TraditionalForm]}, {1.9459101490553132`, 
       FormBox["\"\"", TraditionalForm]}, {4.248495242049359, 
       FormBox["\"\"", TraditionalForm]}, {0.09531017980432493, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {0.1823215567939548, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {0.26236426446749106`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {0.336472236621213, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {0.47000362924573563`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {0.5306282510621705, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {0.5877866649021191, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {0.6418538861723948, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {1.3862943611198906`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {1.791759469228055, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {2.0794415416798357`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {2.1972245773362196`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {2.3978952727983707`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {2.4849066497880004`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {2.5649493574615367`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {2.6390573296152584`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {2.772588722239781, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {2.833213344056216, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {2.8903717578961645`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {2.9444389791664403`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {3.6888794541139363`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {4.0943445622221, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}}}},
  GridLines->{None, None},
  ImagePadding->Automatic,
  LabelStyle->Directive[FontSize -> 10],
  Method->{},
  PlotRange->{{-0.2152520941253918, 1.7610895043971402`}, {
   0.00004344543920011605, 0.00986944853149641}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{{{0., 
      FormBox[
       TagBox[
        InterpretationBox["\"1.0\"", 1., AutoDelete -> True], NumberForm[#, {
          DirectedInfinity[1], 1}, NumberPadding -> {"", "0"}]& ], 
       TraditionalForm]}, {2.302585092994046, 
      FormBox[
       TagBox[
        InterpretationBox["\"10.0\"", 10., AutoDelete -> True], NumberForm[#, {
          DirectedInfinity[1], 1}, NumberPadding -> {"", "0"}]& ], 
       TraditionalForm]}, {1.6094379124341003`, 
      FormBox[
       TagBox[
        InterpretationBox["\"5.0\"", 5., AutoDelete -> True], NumberForm[#, {
          DirectedInfinity[1], 1}, NumberPadding -> {"", "0"}]& ], 
       TraditionalForm]}, {3.912023005428146, 
      FormBox[
       TagBox[
        InterpretationBox["\"50.0\"", 50., AutoDelete -> True], NumberForm[#, {
          DirectedInfinity[1], 1}, NumberPadding -> {"", "0"}]& ], 
       TraditionalForm]}, {0.6931471805599453, 
      FormBox[
       TagBox[
        InterpretationBox["\"2.0\"", 2., AutoDelete -> True], NumberForm[#, {
          DirectedInfinity[1], 1}, NumberPadding -> {"", "0"}]& ], 
       TraditionalForm]}, {2.995732273553991, 
      FormBox[
       TagBox[
        InterpretationBox["\"20.0\"", 20., AutoDelete -> True], NumberForm[#, {
          DirectedInfinity[1], 1}, NumberPadding -> {"", "0"}]& ], 
       TraditionalForm]}, {1.0986122886681098`, 
      FormBox[
       TagBox[
        InterpretationBox["\"3.0\"", 3., AutoDelete -> True], NumberForm[#, {
          DirectedInfinity[1], 1}, NumberPadding -> {"", "0"}]& ], 
       TraditionalForm]}, {3.4011973816621555`, 
      FormBox[
       TagBox[
        InterpretationBox["\"30.0\"", 30., AutoDelete -> True], NumberForm[#, {
          DirectedInfinity[1], 1}, NumberPadding -> {"", "0"}]& ], 
       TraditionalForm]}, {0.4054651081081644, 
      FormBox[
       TagBox[
        InterpretationBox["\"1.5\"", 1.5, AutoDelete -> True], 
        NumberForm[#, {
          DirectedInfinity[1], 1}, NumberPadding -> {"", "0"}]& ], 
       TraditionalForm]}, {2.70805020110221, 
      FormBox[
       TagBox[
        InterpretationBox["\"15.0\"", 15., AutoDelete -> True], NumberForm[#, {
          DirectedInfinity[1], 1}, NumberPadding -> {"", "0"}]& ], 
       TraditionalForm]}, {1.9459101490553132`, 
      FormBox[
       TagBox[
        InterpretationBox["\"7.0\"", 7., AutoDelete -> True], NumberForm[#, {
          DirectedInfinity[1], 1}, NumberPadding -> {"", "0"}]& ], 
       TraditionalForm]}, {4.248495242049359, 
      FormBox[
       TagBox[
        InterpretationBox["\"70.0\"", 70., AutoDelete -> True], NumberForm[#, {
          DirectedInfinity[1], 1}, NumberPadding -> {"", "0"}]& ], 
       TraditionalForm]}, {0.09531017980432493, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {0.1823215567939548, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {0.26236426446749106`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {0.336472236621213, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {0.47000362924573563`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {0.5306282510621705, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {0.5877866649021191, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {0.6418538861723948, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {1.3862943611198906`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {1.791759469228055, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {2.0794415416798357`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {2.1972245773362196`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {2.3978952727983707`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {2.4849066497880004`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {2.5649493574615367`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {2.6390573296152584`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {2.772588722239781, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {2.833213344056216, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {2.8903717578961645`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {2.9444389791664403`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {3.6888794541139363`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {4.0943445622221, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}}, Automatic}]], "Output",
 CellChangeTimes->{
  3.609665225613473*^9, 3.609758274405983*^9, {3.609758393785983*^9, 
   3.609758413003058*^9}, 3.609972991564396*^9, 3.609996611571492*^9, 
   3.609996695143365*^9, 3.610000598703891*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ratio\[Chi]ListPlot", "[", 
  RowBox[{
   RowBox[{"sample4096", "\[LeftDoubleBracket]", 
    RowBox[{"All", ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "3", ",", "4"}], "}"}]}], "\[RightDoubleBracket]"}], 
   ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6096652329220667`*^9, 3.609665233159891*^9}, {
  3.6097582808007593`*^9, 3.609758282540194*^9}, {3.609972994470024*^9, 
  3.609973004547398*^9}, {3.609999404114973*^9, 3.609999407810217*^9}, {
  3.610000603531001*^9, 3.6100006040405293`*^9}, {3.610000815767473*^9, 
  3.610000855331314*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, 
    {Hue[0.67, 0.6, 0.6], PointBox[CompressedData["
1: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
+oxbGXuAXHcN9wVuMqbuY/yutUqFCq2v1dcXVpCHQYOk0n4z8Bn75UnA02jP
YxueIQY9SCJWhmmNEPCrMTmvkOs+8FTN4qTpDiKe4CjZHbvpA2apBY8DYhkw
9aLQ1tO2/jB2su7UjaINpLPBH/Plox/8FEi/XrdB1+tP+9nRwQBYsH9z4Anf
DHqe9dapKFIXQhRK9xNSGHD9Js3asNkflHdc4mpQZcZt0NFp+4gGJk6N123f
baJnDyo4W8ALqIYp3W/pvPQ9lzZskR4My1HLV04WE7Hf4pOPv6TcwOlk59O9
MjOo4eJRMWM2I9DM/r6QnM2GU6+k5dTGhcJijOL3eg0GnHDvzpwTYxCc9wif
vWzEgIUoQ6P6BlRwOtG+lW2cjA0qrYhurd7A2HmkX9edHQvxvGer4QyBu6XC
Nx/fZMNv+66R3K2DYTS1l/nzFQp+gwy+mvwXCNppzakZLBT8rOOtbqmWHxwb
cPqPQ2wR9Qsz99Y3GIJZUpvjzxOM+GpKy4+iJCp8kZ1jm6D7jc+NGC45Fxoo
Jg/46LKwYl9mMwKfcxCQ7uZQk5xm0dv3VXUQaggtyfcTKXfZcHx4dHja3zC4
Pfh03PnzVow743NfCUfDnSe0T5H5ZBzvFtB6bpYGI3sd5cV/ceLyqrYdfw9H
wJZRp0aeqWW0zzuURUbXDSpLOaVPNzDhseb8q+ZqgSC/+EONl3UK/dolXPCs
2RSUpcf6OTMo2GxjhtvWIxCsJ9U1zrGTsK8GQ5DVO08ILmXnOzFGwhG6/a6J
/v5g3f/0hcRnMv5CeyR6keoJSv4C71u0F9CF94ork9n2UHNXj3dygd5PvHdH
N4jag3I1gSmZzqt5Ajs17p0LhLPXOV0eMa4gg+64ok+lJyHV9laWpQob1jlz
jCUoOwjaxbt3P9q/BZezKEG/YDisRbYpS7YwYur1w8cOhtD96N2VyQYrCs47
uXrWmBYAD/z7XcykNtCN/85zjTQ4gckLLyeS6hRii+y21u7UBMvRdOXw04y4
0bViXfV0IMgJMkgxxTHg6gx55W/NVAg5se2p34tlpJ43cvZOhT68LtrYnz1H
xjWkg5+dtntDRRy5sOrMKjI//E0jv84JMszKPQpDWXD4n8bS6ppgSDj4w307
EwP+sZ982WHQF+p6TqdFiq+hpaReu/X9nrB/37aBJ0QWvKZ009vrSSBwv6Ht
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
UbI/vLu/X/FC4Qp60RulsWBBgQTXv341NL6g3CsXLjvgDnI7qx8PBywgvdc7
eb9YGQIbOnhpZ/IGorMV1cZuFDhpPkdcwCxYpEJK+O9FGq8LXKvlbmLEZRd3
q84r+EFShWqPziALdixVZpisD4BZdcdH9/pY8K2PdalsZYEgcoDINnqeEX9j
TsiSQD5wbpeK3PUlDvz84NXrjzeD4PWnjZPm66voREDXrhBXO0huUflL9Sbi
bafmZ2193OHPu78h1vbz6JrK/Z064UZAyU1/dvIVG07crUpHJIcAi3l/k865
OfT9yRe8vc0K5Lc1mb2/SI/P/CmReBzpCfjCWbvkbAbscvKTWoKFH+hdskzU
511BsuJfa3+8sgYl1suEnXc5cbRKvHjrxRDIS/2Q1PiDHh8vM1K4/8gXtOCC
m5PXKhrGW4/DVFygnEfpikgXGRcqHj2oRtvvezqCORJLK6jskYVztI4n9K8g
CSHKLKIPebTrfxWbdzzV/xfH3eu6rr2izIyMvklooXIqkuzsvfe8114ZLQ2K
sopQiqIlFEnvN4nIqGwpaZnZe/7u7+/P43Hvfd/POa/X8/m49yPh6AQovLNi
jr4fOh9bg/9zcQWvMcN1ETUStv3oIuE8QoWvwR98P3mMoQtrZxQC9u8Fvcr+
mYoTq8jAJISptd4VRJ4G+Sm/XEIPMmKHOkkW0BudpO5OovPmwJPn8hkewLwi
lj30h4TjeTTfbGz3h/IXtVwcjUvoEePEz9dVBuBrQs7ZI82I49z+bfti4QcV
m4dGztJ9LK2Osie4wA0IrVHSJ59Po/U83fDIXBto5QkSeFbLjeM5/F13t0dC
h+FYavBPeh4Sxw75t5tCqY+tnHDYBnqcMGi4mOgOMrTqzP+UptCBxroz7821
IehIWtPIR1bsZTQXzRpDn5ebW5jFezdRvZDm4X+7vMBkwuNX3u41RL2wMbxI
zwvdJNFhHf9VVFMt96Bh2BXerjCIpdzhwkqmGQ6rDBFgYVn5TP0gI847eFWg
dMQTfmrtinTYQ8CXCS91tZx9QFX1kdcbPhYsdcNkue5VCIydi4aT8yR8/neW
js02GkzJMERZbp1CMmEZLlHfj4H618m3JjLLqMiWSy20xBWqRXsV3M5uIOuM
uL8nXrlBSBb1Zaf4HLpTtez5gPcU1CYfXes9uoa26Ug53Ip1hIWGncwfwpjx
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
HuoaJJrC/wDgZmwX
      "]]}, {}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{-6.6296065469312335`, 0.00004344543920011605},
  CoordinatesToolOptions:>{"DisplayFunction" -> ({
      Exp[
       Part[#, 1]], 
      Part[#, 2]}& ), "CopiedValueFunction" -> ({
      Exp[
       Part[#, 1]], 
      Part[#, 2]}& )},
  Frame->{{True, False}, {True, False}},
  FrameLabel->{{
     FormBox["\"Off-axis angle\"", TraditionalForm], None}, {
     FormBox["\"Fraction of high energy photons\"", TraditionalForm], None}},
  FrameTicks->{{Automatic, Automatic}, {{{-6.907755278982137, 
       FormBox[
        TagBox[
         InterpretationBox["\"0.001\"", 0.001, AutoDelete -> True], 
         NumberForm[#, {
           DirectedInfinity[1], 3}, NumberPadding -> {"", "0"}]& ], 
        TraditionalForm]}, {-5.298317366548036, 
       FormBox[
        TagBox[
         InterpretationBox["\"0.005\"", 0.005, AutoDelete -> True], 
         NumberForm[#, {
           DirectedInfinity[1], 3}, NumberPadding -> {"", "0"}]& ], 
        TraditionalForm]}, {-4.605170185988092, 
       FormBox[
        TagBox[
         InterpretationBox["\"0.010\"", 0.01, AutoDelete -> True], 
         NumberForm[#, {
           DirectedInfinity[1], 3}, NumberPadding -> {"", "0"}]& ], 
        TraditionalForm]}, {-2.995732273553991, 
       FormBox[
        TagBox[
         InterpretationBox["\"0.050\"", 0.05, AutoDelete -> True], 
         NumberForm[#, {
           DirectedInfinity[1], 3}, NumberPadding -> {"", "0"}]& ], 
        TraditionalForm]}, {-2.302585092994046, 
       FormBox[
        TagBox[
         InterpretationBox["\"0.100\"", 0.1, AutoDelete -> True], 
         NumberForm[#, {
           DirectedInfinity[1], 3}, NumberPadding -> {"", "0"}]& ], 
        TraditionalForm]}, {-0.6931471805599453, 
       FormBox[
        TagBox[
         InterpretationBox["\"0.500\"", 0.5, AutoDelete -> True], 
         NumberForm[#, {
           DirectedInfinity[1], 3}, NumberPadding -> {"", "0"}]& ], 
        TraditionalForm]}, {0., 
       FormBox[
        TagBox[
         InterpretationBox["\"1.000\"", 1., AutoDelete -> True], 
         NumberForm[#, {
           DirectedInfinity[1], 3}, NumberPadding -> {"", "0"}]& ], 
        TraditionalForm]}, {1.6094379124341003`, 
       FormBox[
        TagBox[
         InterpretationBox["\"5.000\"", 5., AutoDelete -> True], 
         NumberForm[#, {
           DirectedInfinity[1], 3}, NumberPadding -> {"", "0"}]& ], 
        TraditionalForm]}, {-6.214608098422191, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-5.809142990314028, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-5.521460917862246, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-5.115995809754082, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-4.961845129926823, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-4.8283137373023015`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-4.710530701645918, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-3.912023005428146, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-3.506557897319982, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-3.2188758248682006`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-2.8134107167600364`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-2.6592600369327783`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-2.5257286443082556`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-2.4079456086518722`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-1.6094379124341003`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-1.203972804325936, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-0.916290731874155, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-0.5108256237659907, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-0.35667494393873245`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-0.2231435513142097, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-0.10536051565782628`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {0.6931471805599453, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {1.0986122886681098`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {1.3862943611198906`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}}, {{-6.907755278982137, 
       FormBox["\"\"", TraditionalForm]}, {-5.298317366548036, 
       FormBox["\"\"", TraditionalForm]}, {-4.605170185988092, 
       FormBox["\"\"", TraditionalForm]}, {-2.995732273553991, 
       FormBox["\"\"", TraditionalForm]}, {-2.302585092994046, 
       FormBox["\"\"", TraditionalForm]}, {-0.6931471805599453, 
       FormBox["\"\"", TraditionalForm]}, {0., 
       FormBox["\"\"", TraditionalForm]}, {1.6094379124341003`, 
       FormBox["\"\"", TraditionalForm]}, {-6.214608098422191, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-5.809142990314028, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-5.521460917862246, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-5.115995809754082, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-4.961845129926823, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-4.8283137373023015`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-4.710530701645918, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-3.912023005428146, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-3.506557897319982, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-3.2188758248682006`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-2.8134107167600364`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-2.6592600369327783`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-2.5257286443082556`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-2.4079456086518722`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-1.6094379124341003`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-1.203972804325936, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-0.916290731874155, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-0.5108256237659907, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-0.35667494393873245`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-0.2231435513142097, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-0.10536051565782628`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {0.6931471805599453, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {1.0986122886681098`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {1.3862943611198906`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}}}},
  GridLines->{None, None},
  ImagePadding->Automatic,
  LabelStyle->Directive[FontSize -> 10],
  Method->{},
  PlotRange->{{-6.6296065469312335`, -0.7912614775522329}, {
   0.00004344543920011605, 0.00986944853149641}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{{{-6.907755278982137, 
      FormBox[
       TagBox[
        InterpretationBox["\"0.001\"", 0.001, AutoDelete -> True], 
        NumberForm[#, {
          DirectedInfinity[1], 3}, NumberPadding -> {"", "0"}]& ], 
       TraditionalForm]}, {-5.298317366548036, 
      FormBox[
       TagBox[
        InterpretationBox["\"0.005\"", 0.005, AutoDelete -> True], 
        NumberForm[#, {
          DirectedInfinity[1], 3}, NumberPadding -> {"", "0"}]& ], 
       TraditionalForm]}, {-4.605170185988092, 
      FormBox[
       TagBox[
        InterpretationBox["\"0.010\"", 0.01, AutoDelete -> True], 
        NumberForm[#, {
          DirectedInfinity[1], 3}, NumberPadding -> {"", "0"}]& ], 
       TraditionalForm]}, {-2.995732273553991, 
      FormBox[
       TagBox[
        InterpretationBox["\"0.050\"", 0.05, AutoDelete -> True], 
        NumberForm[#, {
          DirectedInfinity[1], 3}, NumberPadding -> {"", "0"}]& ], 
       TraditionalForm]}, {-2.302585092994046, 
      FormBox[
       TagBox[
        InterpretationBox["\"0.100\"", 0.1, AutoDelete -> True], 
        NumberForm[#, {
          DirectedInfinity[1], 3}, NumberPadding -> {"", "0"}]& ], 
       TraditionalForm]}, {-0.6931471805599453, 
      FormBox[
       TagBox[
        InterpretationBox["\"0.500\"", 0.5, AutoDelete -> True], 
        NumberForm[#, {
          DirectedInfinity[1], 3}, NumberPadding -> {"", "0"}]& ], 
       TraditionalForm]}, {0., 
      FormBox[
       TagBox[
        InterpretationBox["\"1.000\"", 1., AutoDelete -> True], NumberForm[#, {
          DirectedInfinity[1], 3}, NumberPadding -> {"", "0"}]& ], 
       TraditionalForm]}, {1.6094379124341003`, 
      FormBox[
       TagBox[
        InterpretationBox["\"5.000\"", 5., AutoDelete -> True], NumberForm[#, {
          DirectedInfinity[1], 3}, NumberPadding -> {"", "0"}]& ], 
       TraditionalForm]}, {-6.214608098422191, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-5.809142990314028, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-5.521460917862246, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-5.115995809754082, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-4.961845129926823, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-4.8283137373023015`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-4.710530701645918, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-3.912023005428146, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-3.506557897319982, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-3.2188758248682006`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-2.8134107167600364`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-2.6592600369327783`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-2.5257286443082556`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-2.4079456086518722`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-1.6094379124341003`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-1.203972804325936, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-0.916290731874155, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-0.5108256237659907, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-0.35667494393873245`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-0.2231435513142097, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-0.10536051565782628`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {0.6931471805599453, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {1.0986122886681098`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {1.3862943611198906`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}}, Automatic}]], "Output",
 CellChangeTimes->{
  3.610000866649651*^9},ImageCache->GraphicsData["CompressedBitmap", "\<\
eJzFPX+wq0dVeTfJvffd9/r6+sqjLUN5D2gLWNtakHZAoVR+tI6oI+g4DqJ0
GGJbISBixMHIP3FE44iZUSP3paMTZswMThAumkGvStSAEyWWIAaNEDCUvLmd
yRtSw5gO0XX37Dn7nd3vfMm97UUzk1/77bd7ztnze398P/jAex582zseeM9D
b33g4n3vfuBdDz701p+/+Lp3vlsXpU+kUiceTKVSX7uYMr+V/okf8HrIfOAf
/P0X8JVWy8VCzRdL+HcBy3Shms8X8G8Dyxa2Dvwr2SY+CV+b+mOhOrWCyuVy
9l3aU1OlboTL22rcqUWXcmXVny7VfNiE/8VGfxM7GNSLqt6fwb9fth18gOBR
SwdP2iub60+V2hLKTgllVxPAi5GqletqNDcFc7VXyKn6YL4T3LIA8ONlGSjb
Abz3qxW1b9tRw2ZR5esD+L2cDVQxl1e9mcpC9YxFcDAD6mpowpaXSEs7KHM3
KFRvYXq3Y5D6SUufX8FLw2aBOkb6PIeTUy0PuhqYnMoXCqpQ0EDq3+Yalefy
ZmRKqnewVLO+HZly6/Oqoev2NG6LcYfVK2iEdbvzvioWGsr2MKe6aYRZvGUx
1GUF1Z8rS8JrPSjnw4au3tTEiFqe9vcA2lxeQ66/K/tjNR/UVbHWt7y4GOjy
ohosCPMbA6xyqtE7SIJWrqtr0XWg3rSvKnA9r6mnvyttZcfhQFUND7dGKTvG
54EFTDt5RLs9nsf6buprjeFcJpF+9ZslaKM1uqLFqqglUP9LnVaF6j604dGM
aDEfWBjzebi3uj8MeGTQkHmkhi0dtMuW+kDVoSppiLrTBchGpXsAdSbtispX
Ovo+3Uu9zyilv3Wvtd4U6s36eiRzNTU1mOfriLmjqlUpJ22RdBsMKvBJijNK
jTNKrmEZxTQP9fOqc2CGZar2inoANHiGOAWPUWybtv8LIL8GvSqitxi3VaXW
1pImgZ1Q12MWO7jVzgSkemAGMm8Hfj5oogKsarYhvG6CYSk2B4h/HerPvf41
s+aNenpMphXS0DCEwTeXq6spwZ239T3aIU2mvaaq7mG/A9uWrvEmzjTXqKFh
mlpP47LUBmDhjIBlQZQP3d9+vaxZPq+KRcP+RU1l0ztQBZntrG0LGBApNrXa
YLDAZpZDGMX+41Zc5r6oOqZZJNw2lZlG63U7YMA0mqhA3Ia6jNqGmhmhDgUC
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
DO8/CNjfbj7BEbGsSV6XN2cRJs309wqydBMZNpwQFUUBW3Yrw+YHqtdpq/12
W3V6QzVdKJRDodeXItGidO2ul/Q25ELqU87roNew1lA7UaVSyW640Ya+PV6g
JvH7+YyA3a2WiLq3bYYnjYjdQ5OydtksaIQ+9gYHJFpD2NVZMS4kipbf5aeF
LkllSTMqPJX83V7n4HNpr30ZTVHT6n6zN13qvCMwzQuxIx467zB+iVSRs5YE
R9rCYZytcsfFdcanQy9WBOLvBAq8kFGAbCfF71xZ+RQwfpzZW9kazYkCB906
xGmjBPL/DaMAdXRrIgX8iaq7fWYbw1J1swO+omr1mioXKLKcWWaDntvYIVd4
L2OYEWB3+5IyPxiqdqupGvWGarY6ajxbipLyKYGYzxds7EmUT56c0r8zApe9
nEOSBpkq1XtqsTQbT3Swr8vM1j3cCZG6SYDqrxOZfNP5JNw+sbUFfLS/1+Oz
5UHHCJsmjvVt2apzEYi/Eij/IuSs0NZSiu2eV9DMSpRuY17pPQjQJjK+ZoBK
T335E+9XD773I4ZCG+qJJ57QfT7xxDdXEmhfgO1mgQ23GFWw3OV3WAos9SqP
Uk9++ePq545AqT/HMp6nIn+HpSJic27mLpkks6E5VaFnpWC5XNIez+PKK31S
YDAOMdp9Ris3C5G6FyHOWq6ajdVwYoljerMTZUfMF63eouhMQyPagC2Fj4DU
7YLw0pIdSm+RjES5/Eu4io5txJ2qfm/Ejos63lTR4+OB6vW6qqvfDU2mUn0f
dJSE158Jg/VMpl+JsSmA4kKRRoHlYQRd5/GqeXEBxvKQKmyjuKXK2i1sR0kj
PdqwZwm02i1VLeZVodJQ/QPMFUAC5k/Nrxush8HUr5Qn58Yhgx4y5QrZWrLU
60IU7RkwHMWVOaazR8sxwUkeOdXWrY2bJc3PCylT9glhyO8IEDMmNWNJEfd8
X3sYrFakpM4edS+Plgi7xahWLpjFmhJWH8eyuEXJeolMmnTk8SG9Eubc7osz
asFuAHb4rkxqnTpKUsupWZDmHBxuIi4k/xiWcX/xZkIqMhY2W7TrrYhEXF2o
gxaV5mglZ/77AxosJ2q/1YPtGpYGq1JkO4dNkUUmZg6naZlNQRLuH8UybhRf
gD4Mj6vviZLd0owhOZnhykNT8wcswrSibj4ZqhGkGYeqWa+rVm8iRi0A2XMD
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
\
\>"]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Burst CDF plots", "Subsubsection",
 CellChangeTimes->{{3.6096524880046663`*^9, 3.609652490730268*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"PrintTemporary", "[", 
   RowBox[{"Dynamic", "[", "\[Tau]", "]"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"burstCDFPlot", "[", 
  RowBox[{
   RowBox[{"defaultUniverse", "[", "]"}], ",", 
   RowBox[{"defaultBurst", "[", "]"}], ",", 
   RowBox[{"defaultObserver", "[", 
    RowBox[{
     RowBox[{"z", "\[Rule]", "1.822"}], ",", 
     RowBox[{"\[Chi]", "\[Rule]", "0"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{".1", ",", "1.", ",", "\[Infinity]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.", ",", "1."}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.609652654732028*^9, 3.6096527059005404`*^9}, {
  3.609654185690916*^9, 3.609654189840137*^9}, {3.6096545753239727`*^9, 
  3.609654621538562*^9}, {3.609654788617795*^9, 3.6096547887273273`*^9}, {
  3.6099886916149187`*^9, 3.6099886984925547`*^9}}],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{3.60965301295968*^9, 3.609654398337327*^9, 
  3.6096546149220877`*^9, 3.60965468149671*^9, 3.60965617842878*^9, 
  3.610876610064046*^9, 3.6108766821578712`*^9, 3.610876795673526*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"PrintTemporary", "[", 
   RowBox[{"Dynamic", "[", "\[Tau]", "]"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"burstCDFPlot", "[", 
  RowBox[{
   RowBox[{"defaultUniverse", "[", "]"}], ",", 
   RowBox[{"defaultBurst", "[", "]"}], ",", 
   RowBox[{"defaultObserver", "[", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{".1", ",", "1.", ",", "\[Infinity]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.", ",", "1."}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.609652654732028*^9, 3.6096526948009357`*^9}, {
   3.609653091042328*^9, 3.6096530932169323`*^9}, {3.6096531987905483`*^9, 
   3.6096531990224524`*^9}, {3.6096537142760277`*^9, 3.60965371597886*^9}, {
   3.609654198298106*^9, 3.6096541984096212`*^9}, {3.609654601745103*^9, 
   3.60965464165694*^9}, {3.6096547912316713`*^9, 3.609654791359303*^9}, {
   3.609911722980451*^9, 3.609911726811225*^9}, {3.609911867704343*^9, 
   3.609911872480226*^9}, {3.6099119696066236`*^9, 3.609911969799815*^9}, 
   3.6099887074938717`*^9, {3.610876622801993*^9, 3.610876630607148*^9}, {
   3.610876688149922*^9, 3.61087669535562*^9}, {3.610876753125654*^9, 
   3.610876781354433*^9}}],

Cell[BoxData[
 TagBox[
  GraphicsBox[{{{}, {}, 
     {RGBColor[1, 0, 0], Thickness[Small], LineBox[CompressedData["
1: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
UD/PGTPQS8LZhYhXYtv+HxoF/dQ=
       "]]}, 
     {RGBColor[0, 0, 1], Thickness[Small], LineBox[CompressedData["
1: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

       "]]}}, InsetBox[
     TemplateBox[{
      StyleBox["\"0.1 \[Dash] 1 GeV\"", StripOnInput -> False, LineColor -> 
        RGBColor[1, 0, 0], FrontFaceColor -> RGBColor[1, 0, 0], BackFaceColor -> 
        RGBColor[1, 0, 0], GraphicsColor -> RGBColor[1, 0, 0], FontSize -> 10,
         FontColor -> RGBColor[1, 0, 0]],StyleBox[
       "\"1 \[Dash] 300 GeV\"", StripOnInput -> False, LineColor -> 
        RGBColor[0, 0, 1], FrontFaceColor -> RGBColor[0, 0, 1], BackFaceColor -> 
        RGBColor[0, 0, 1], GraphicsColor -> RGBColor[0, 0, 1], FontSize -> 10,
         FontColor -> RGBColor[0, 0, 1]]},
      "LineLegend",
      DisplayFunction->(StyleBox[
        StyleBox[
         PaneBox[
          TagBox[
           GridBox[{{
              TagBox[
               GridBox[{{
                  GraphicsBox[{{
                    Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    Thickness[Small], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    Thickness[Small], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                   ImageSize -> {20, 10}, PlotRangePadding -> None, 
                   ImagePadding -> 1, 
                   BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                  GraphicsBox[{{
                    Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    Thickness[Small], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    Thickness[Small], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                   ImageSize -> {20, 10}, PlotRangePadding -> None, 
                   ImagePadding -> 1, 
                   BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                GridBoxAlignment -> {
                 "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                AutoDelete -> False, 
                GridBoxDividers -> {
                 "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
                GridBoxSpacings -> {"Columns" -> {{0.5}}, "Rows" -> {{0.8}}}],
                "Grid"]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
           "Grid"], Alignment -> Left, AppearanceElements -> None, 
          ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> "ResizeToFit"],
          LineIndent -> 0, StripOnInput -> False], {FontFamily -> "Times"}, 
        Background -> Automatic, StripOnInput -> False]& ),
      Editable->True,
      InterpretationFunction:>(RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                   RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                   RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}]}], "]"}]}], 
             "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& )], 
     Scaled[{0.79, 0.2}], ImageScaled[{0.5, 0.5}],
     BaseStyle->{FontSize -> Larger},
     FormatType->StandardForm]},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->True,
   AxesOrigin->{0, 0},
   Frame->{{True, False}, {True, False}},
   FrameLabel->{{
      FormBox["\"Photon Fraction\"", TraditionalForm], None}, {
      FormBox["\"Time, sec\"", TraditionalForm], None}},
   FrameStyle->GrayLevel[0],
   ImageSize->{399.9609375, Automatic},
   LabelStyle->Directive[FontSize -> 10],
   Method->{},
   PlotRange->{{0, 246.71418363147}, {0., 0.9955009064138358}},
   PlotRangeClipping->True,
   PlotRangePadding->{
     Scaled[0.02], 
     Scaled[0.02]}],
  InterpretTemplate[Legended[
    Graphics[{{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Thickness[Small], 
        RGBColor[1, 0, 0], 
        Line[CompressedData["
1:eJwV1mc8FQ4bxnEjWdlFZc/IyIqEc982DR17jzKLjrIqRRJJf6MklbJHVkYk
imyVJISQIo49TgiReDyvrs/31fX2J3zGx9SNhoqKSomaiur/Wz4UXaQn0EN4
7lNEbpANVJdh6WtXdSoDwR6Zj2ECHATOkhPxLE6N0OiU38UpoEWItZHVvM76
CQqOnH8fOmJPiKCm9//j+AX2E4S+DvBfJOhaXjIqVemDlc807/hehRJoCiYE
zrF+h5mrFZ+0RqIJw1vSQRxLw3B18R/78HwiAQ6SyXOOo3B86Xb/W/50Qor5
01OtrWNQVCP4uccxl7AZYv46R2US/JtmJne+KiE45O0Sv5kxDXXaImNOUEGo
/tIU58Q6BxsXg4kiI9UE3s1r6+pBFFB+mXkq2L6BoJmQpLhr6RccFBnLaJ1v
IXjnrXisSy7CErOk/WflNsLTt6bJk45L4Fz7fqCEv5PQ9qWoqzfhNzjoZP4u
iOwm/J1kYmhuXYbfPBV7mxz7CAc33TXLqFZBsZHL1TVvkGDL1eibrvIHktwm
1v5WDBPuSArmxnmvAcO3a4v+NqOEKs2r34Mz1oEcbpZvCuOESdOvnN59f0E9
53dxq9cUYa+nkqEt6z/gC5u6xzkySzAMjgs21N2EN88dKMWmvwiX4mdeqARt
wdvXVzj97RcJX76I+nNaU2FkVMyVX3G/CV4/OmMZl6gw4833mdr5FQLN1PU8
qlhqjF4skg8OWiMkLck2rUrSYMdnPbZG5Q1CK8OdtTFHWmy+4fUtj58aznAd
2f19jRZvGsvSn2umgXX+cbnuhB0YoGDHmhW5A6SUtF0bWulw5Vq45htHBqjT
/BVS5bYT6SObZJQCmMDaMOVxCRU9uk+vRdjm7YLbDuvtKSoMOLXlHrZSwQ5C
nrlTDzoZsCav7/LaFgdU+lruiPFmxML0qBmSDRdMRL5Qu5rBhNf453edAG4I
iXc299VkRuFFHcEbbTzAnczqc7aPGb0q+AMavfaB/otzWVasLHixOP0F0wgf
/KjeW2ucx4JLyvP/BqsEIPBdS7+eLit2ZVPnF5gKQfagCJtyEBvunBjz87EX
gRS/yYQHTOyo13y3afCCKExfBhEOa3b8qqEdMhMnBmE35zQYltjxnaHd3dfz
EtB+W7f1JnJgFF1C0k85Sdgf+8RqK4YDnQsDLl4KkoIXj4x8VyQ5UZyxd7Ja
WQZ+Ps9+RnbkQs6kGrscfgUQeJuQT37BhVnRid94qRTBtv3mc/LO3Rj5cfmo
5rQidM+fLiMX7UbZyp6LO3uVgWOLWEGm2YO9+fwVlK+HwZgNq8iWe7DSL6iM
fkQF3h8SqCVv7sGfHNRl+mxqQIcsDWRTblSSWRQuVjwK2sSNJnION8bm3BL9
4KgO1RcGWsnGPOigJ1mZ0KkJJaWJveSUvaj8Zx9LXLwWzNVH9JMX96LMZPzt
L4bacLDLf5Csvw95OGdzlmh1IGvRdIQ8vw9jrXeqMUTpwiMltnkygRc/xp8s
PNFhAD06m7/I8byYqax+5EixIXCazy2Rx3lRN+khht03gmj/j2vkWD5sWHZR
8vM+DqEvI+nGfvBjUUdNUvzpU1DTHMgwpiiAhWqt1CkqRFjvcWMeuyWAfQrK
p11qieC/osMxJieIMlUeX4f7TaCcNzTWF4RwNWFnyn9K5tCVuRrne1YI1WKF
nrV2msOCtM893/tCaOhH9V7dzwLkNBwTfCeEUCwzgL6n1hJy7TWSfOOEUY+Z
cuV9qA20kMue+FYJ49yXBc1gNVsY85ZO9h0VRtKnG7eyl21BJHh/mq+qCH74
XWh38bI9PE3+k+07JIKqkVOc33Kd4O6P8lLfQ2IYmOFyks3RBV42N8nlW4rh
uISj6qfPLjBQ2F3wM1gMeWqe79HTcQWxq7+ziW1iSMqlorpwyA2qeJST5M6K
4yTBrY6N3wNGiGVh0xkSaH3n2UNnohfQH2ncEm6VwF8neTVODnmBjOCXazYL
Esh5rIJH6oI3BM4tBr6HA9gTwN385uF5YL6j6JUzeAA/O/rI5m/6gHJjqdkZ
bilU/0hFOvbQF2zy6zsea0rh/psMyjQUXwi513my01UKS6d3qbYZ+MF7pwUD
LJPCZhb3p8kbfuCwIa8hQDyI9yM6Q1z9AuDW4RKxgShpvHP8ROBq4mUo4KtL
5yiVRnb2spYkqivQQdshYNQnjXkPry+f87oCvF2UvZUSMrilnJX4SDcISkiH
WBIbZfDQnfs3rOiuQf+zomWTf7LoVfThU1/9dQgV97zZJCqHjda/Rk4IhIJk
pjCH6jE5ZMt3e3vMPhQCUxJk+B7KYf1sbIXwQChwPghyGZc/hLn65DTT7zdA
XCvTU1NRHhd/DdJdoAmHP1vXiwP15DFAJC9+x7FwaHtrv1JsLY/u46NMOvHh
4K/BHS5yXR6ZLHOG68QioEE1KpW+TR77JT24e01ugaOcT2+nmwIyafGacX+6
DYpzx/mZryjg6vHfJc8Eo4CuUNJVN1oBPxTgLYpvFBRKjSxUvFDArSTl19m8
d2BdzILl6ZYC9v13T6Mh4D9I5FXXdX+siAfszph5nYyFzwz0L9bblDDD5XXE
P4N4cGw14u75qYSSR86lbNyIh/n/ooOKV5SwrNhqKKA6HljZOHVchZTxtvjZ
gT7F+2C8h7/7k58ySlzrqSSJJ0CbsNJK2v7D2GhmrHhMJBE+HHU6auCpgjGu
CUsYkgTWG+kpwsEq2DDfQQx+nwSTNWSajXsqeJn+yIAO1xNg0Dr3seSNCvLc
oPW9mP8EDA0C7PezqaL84Gal/dBTaDH7L2TupSrSEqnrRl1SodH7VcN9WjV0
TaI2SDqfAb0OLWRGHjUcL1z/9/ZRBkwb9+wMPaiGlwQ2eyWaMoBdYemYt4ka
tj0l1dbxZoL9stwX3VQ1dPfb4hVtz4SV4JzR5aNH8VaUdMJnyAbJuAc7rH3V
kez9l0bZOhfUQ7Mk2iPUMeqM6ZBwdC4YXywz1H2sjqf06Z1t6nLB36wzWr5O
HWPlewRypPKgnodlDyOrBp7tYNSt3soD27Rw8dd5GsjmuKeG4XUBRJf66fP9
1MThynMzsZ7FYJ89GaG0oolCZrQPsKAYpB87NB9jJuDszKobcb4YWkMNdK8c
JuBMc2Rj89ESoCfyavdGERDF+8LUm0ogbL5B864iIHeC3BW54VKo3hO1n0Yb
0YlB/Oh+zXLIitN5HXMC0UfhbeUD13KIZty02WeFuJfX1Uc3uhzs/vk+lvdG
nDB0YtQYLId1sv1ep0TEQw/b4x6GvIQj5fLc1dOI1vtFyXyfKqDMtI8j8L4W
mtGk3jWMrwINxZqAjmQtpOg5OtyvrYImjoz+g7laeKH5bATXXBV0d3ilD1Vr
oZ/ga9dyw9fw23hL3mhcC8tuX/t0leYNqByXIPKpaaMbPV2JRmg1VOn4xzb8
0Eav0zY/TmfXgraozSLflDaqHftem9BfC600BMtLS9oY5c/tR0VfBwP19AIy
DDq4qsla26BeB+vw5PkDBR10ty3KSM+pAw2NhjbPcB2kfchA6L1RD7XK7Mxs
B3WR6bhwYaRxIzDIfDv5SkkXZdKLV0zONYKpaM5dJ01d5OIX+KZyqxHGOTS4
S4i6WOORlEl82wisFA9hk0u6SKRcvtt8qAns82pV7zfpYlp6yJtanubtnvFx
5XHSQ4dB6ZTjGy1wmL69RjBBH1WSeSYc93+Ewa3jcY9S9FEgwpVFCD9C+J8P
zhx5+vj4LPcsrftH6J5qpqV9q4+5zL92KL/4CP5tNUbjE/qoo1T7V+VEG5Tf
e95TqG6AOxhrxLpufQJlvpg5tVEDbG38edGEuQOUFU7wmysaoX+GyMPuji5I
0Sr5tF/DCPca0u94PN4F9Ka7Q37qbfuBfIn3RhcM+A7+INkYISvVpzQtyS9w
o9w7LSrUCP+8Xq5NC/0C7aoxorXtRriQXsgkpdwNnoR2qYNex1BohTN3MrsH
ko8TVaiyjqP5P4/07Od9INE+Z+PAaIy57iuyvq0/IFbvkEMjlzFSntA/1yT/
gJXqC85SAsb4wbKWauPfD3hXsOS+rGiMsuU6zESFIfCMWvOLsTdGzUARbeOH
Q5CvSxdbU2yMyRdoPFXkh0HuDV8Dv+UpzHmVZTKxOAy83eJ7fEyI2LzUUKpv
NwIlT9R2GlkS8dRa1kVZtxHQdTm5KmJHRI65+xeYfUaAtOjf3+tKxPPpnkuF
YSPQwN6UTLhMxNR/B41u5Y3AuZNnJFhTiajqfr0+YXkEXrekqD6fJWLWnMg7
zchROBX7QjJygYh38/hT2e+OAtmiZd/pFSIeKfCT+vZoFFjH5v7upjLBSWlm
H6v8UThDq1l3jcsEjToM/ebaRoERvxmeOGqCaXbZwg/YyWBdxWM7E2mC0dz0
k7TxZHhKHREvG2OC90PqLMKSyDBstNjqE2+C5zIWGP5kkMFzoE3991MTVPp0
xPNDGRku/73B/6/UBB+pE9noesjwSHN2mHXQBGeSGE5O7hmD/vo6D0V5U6yP
iryVdm8MBJjk0vwPm2LVjov/9j0egzOmT/oqjpriydFT4/+ljcH0SICRup4p
KkzpKNoUj8E6rbS0rq0phpKUS5LaxmC//oN5i3BTzG37tquebhxsW88GXOkz
RU5SMluf7ziQ9GbZMr+b4gMG9lWTK+MQVkfKbxsxxQxds9Tm6+NQUOE3JDhn
irvng82SosdhIyPYqIXaDPcWmditZ49DytV7/FzS2z7kEvj46ziMyFQ1Fwab
YX5ARW2UygR4xTFwD4uY48yFer4s8gQ4c2+mlhwwR0KcqIP31ARYJi9J3ZAx
RyL7/Ufy8xOABT80RVTMcVfHbcHnqxOw+125m6uROQrsJ/wMZJqE6k3nl5M+
5pi60zaDeGgSWElV5gvV5vjtcPEB9cBJKD1x7j6NlQXmFPhZNK9NgqV5lau6
vQXecNcxot6chHU7BhX/0xZ4gDT2TI1mCrS9cvrGvCww8D19WSrTFHRFjfB/
CLVAI6ZiPy3eKfjdYpsbl2+BbQJL8kPqU6CidbyGb9MCD7Ea304JmoLqwzIT
KtmWyNZ17ejv+SnQMpp/xp1viZdHb6jILk5Bi32J50qRJQ4oJHW5LE9Bx03l
6ZeVliivnEzd+ncKyJ0ac8ptlhgweCkkiGEadpFOLikuWWKuf8vceeFpsM8h
bclpWSF3GbV7kck0bHCX8hz4boWXyhl3MRdOg3xBm6DPiBUGudxl/VM0Da4w
eeDVhBWGCAwmjpROQ5uH4BGDRSt8pBgUXvpqGp5Wxlh70Fujqs1U7+HGadC0
Pff4mYI1GjRyyg70T0NIsiiv5C1r9MsqPJNGNwNUYokCUodsMLzxAO1dqxnY
PfYun/aqLVqQuU+Hj82AQ0o1V1KJHdblSF+UtZqFczc5zLSpHJDawfE6uX4W
Cp2lfHLUHJHN5eXKx71zsLkQwz7q7YTBqbvYuVzn4I6VVNNeB2c0da1ycS2c
A3nF8/PJf5wxonGwyXNyDipFftLKpJ/G/a5NnVdF5sHw/F+7HP0zyCbdKeFq
MQ+LSpcyNofP4MSsfD5v6DyEsIt2O912QX+tCO7+vHkQPyv/O0XMFeNNjpau
tc1DNy/ZsrXGFfel9UvLz86DG/ld1qaLG2o//hvTxkQBDimWn+xb23YqMksU
o0DqzTAGmWfuKLkq/6pNkwIGtjYC4roeGOUx7bxpSoHVO72BTD888ATTUFGD
GwWiOm++/hPuiX0fvQtZL1NAJSF+tknoLM7LbYQ5RFKg2buTMenDWVRINnFR
TKSAfWrFWTufc/hY6l+JaCYFWIz/vVpn9MJPI91y488pkM7pv5BR6oUjjcnu
upUUOGV2Yp+UsTeGx/BUfa2jAN18680nE94IckJpxPcUSE650s8dex4HTwp9
CfpMAeLHKP4LUiTkXtk67NRDgb45g3fiMiQ8dc1+8tK2ndl3XvwmR8L25H0x
d7ftYxHWpK9Mwqycjuf1244dCvLiBxJWmsUfE+2lwMclr6pWcxJGWS7Tkbet
z2dsIR5KwjVifLJdHwXaCbu2BsJIyFgxnuu7bYvTrbl3I0jYfZP0LGrbrjn6
G3/vkLB+Nfr6q23flIfMrgck5DS/nMDZT4E6XfmF6wUkzAt5dLpl24Ye80mH
i0joV6SRObjtjqhC3ZkSEn6/pdG3uO2hdslHlhUk1PF34hccoMCmtTDI1pPw
dO4Y16Vt37o6NDnSSMLmtNHF6G2zpCTHP2oh4UJiYXPGtvlG943TtpFwqvyr
fvu2s+j64qraSdjfLLE8um0ZyUQ1n87t/xibh2vbLj9mPirWTcIWpUBZtm8U
UD/PGTPQS8LZhYhXYtv+HxoF/dQ=
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Thickness[Small], 
        RGBColor[0, 0, 1], 
        Line[CompressedData["
1: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

         "]]}}}, {
     AspectRatio -> GoldenRatio^(-1), Axes -> True, AxesOrigin -> {0, 0}, 
      Frame -> {{True, False}, {True, False}}, 
      FrameLabel -> {{"Photon Fraction", None}, {"Time, sec", None}}, 
      FrameStyle -> GrayLevel[0], LabelStyle -> Directive[FontSize -> 10], 
      Method -> {}, 
      PlotRange -> {{0, 246.71418363147}, {0., 0.9955009064138358}}, 
      PlotRangeClipping -> True, PlotRangePadding -> {
        Scaled[0.02], 
        Scaled[0.02]}}], {
     Placed[
      Unevaluated[
       LineLegend[{
         Directive[
          Thickness[Small], 
          RGBColor[1, 0, 0]], 
         Directive[
          Thickness[Small], 
          RGBColor[0, 0, 1]]}, {
         Style["0.1 \[Dash] 1 GeV", 
          RGBColor[1, 0, 0], FontSize -> 10], 
         Style["1 \[Dash] 300 GeV", 
          RGBColor[0, 0, 1], FontSize -> 10]}, LegendLayout -> "Column"]], {
      0.79, 0.2}, Identity]}]& ],
  AutoDelete->True,
  Editable->True,
  SelectWithContents->False,
  Selectable->True]], "Output",
 CellChangeTimes->{
  3.6096537130488367`*^9, 3.609653806801537*^9, 3.609653909518632*^9, 
   3.60965402591575*^9, 3.60965419190308*^9, 3.6096547652234497`*^9, 
   3.609657781744712*^9, 3.609911866677257*^9, 3.609911953501995*^9, 
   3.609912051800687*^9, 3.609912203724334*^9, {3.610876616430073*^9, 
   3.6108766310388393`*^9}, {3.610876686718038*^9, 3.6108766958343763`*^9}, {
   3.6108767471293097`*^9, 3.610876792452742*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Very High Energy Bursts Fraction", "Subsubsection",
 CellChangeTimes->{{3.609992307207403*^9, 3.6099923125679817`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"PrintTemporary", "[", 
   RowBox[{"Dynamic", "[", "z", "]"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"burstFraction", "[", 
  RowBox[{
   RowBox[{"defaultUniverse", "[", "]"}], ",", 
   RowBox[{"defaultPopulation", "[", "]"}], ",", 
   RowBox[{"defaultBurst", "[", "]"}], ",", 
   RowBox[{"defaultDetectorArea", "[", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.1", ",", "1.", ",", "\[Infinity]"}], "}"}]}], "]"}]}], "Input",\

 CellChangeTimes->{{3.6099923225781*^9, 3.609992324118848*^9}}],

Cell[BoxData["0.11561859364063046`"], "Output",
 CellChangeTimes->{3.609997525773616*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Extra", "Section",
 CellChangeTimes->{{3.6099224067232847`*^9, 3.609922407952365*^9}}],

Cell[CellGroupData[{

Cell["Plots for papers and posters", "Subsection",
 CellChangeTimes->{{3.6096619647232122`*^9, 3.609661967943828*^9}, {
  3.609662049336279*^9, 3.6096620542230167`*^9}}],

Cell[CellGroupData[{

Cell["Main paper", "Subsubsection",
 CellChangeTimes->{{3.6096621550554733`*^9, 3.609662156037018*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"lineWidth", "=", "469.75502"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fontSize", "=", "10"}], ";"}]}], "Input",
 CellChangeTimes->{{3.609663079181303*^9, 3.609663093027342*^9}, {
  3.6105851271520557`*^9, 3.610585129430784*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{"\"\<Paper/modelOverview.pdf\>\"", ",", 
    RowBox[{"modelScheme", "[", 
     RowBox[{
      RowBox[{"centralEngineSize", "\[Rule]", ".03"}], ",", 
      RowBox[{"jetRadius", "\[Rule]", ".5"}], ",", 
      RowBox[{"lowAngle", "\[Rule]", ".43"}], ",", 
      RowBox[{"highAngle", "\[Rule]", ".043"}], ",", 
      RowBox[{"observerSize", "\[Rule]", ".03"}], ",", 
      RowBox[{"observerDistance", "\[Rule]", "1."}], ",", 
      RowBox[{"observerAngle", "\[Rule]", ".4"}], ",", 
      RowBox[{"centralEngineLabelQ", "\[Rule]", "True"}], ",", 
      RowBox[{"jetLabelQ", "\[Rule]", "True"}], ",", 
      RowBox[{"observerLabelQ", "\[Rule]", "True"}], ",", 
      RowBox[{"FontSize", "\[Rule]", "fontSize"}], ",", 
      RowBox[{"ImageSize", "\[Rule]", 
       RowBox[{".7", "lineWidth"}]}]}], "]"}]}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.6096619842397423`*^9, 3.6096620299951057`*^9}, 
   3.6096623854518433`*^9, {3.609662454570602*^9, 3.609662457473957*^9}, {
   3.609908042282702*^9, 3.609908042440434*^9}, {3.6099226533691177`*^9, 
   3.609922654222568*^9}, {3.609979802760303*^9, 3.609979802926271*^9}, {
   3.61058520636996*^9, 3.610585219533348*^9}, {3.610585254214028*^9, 
   3.6105852548775682`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"PrintTemporary", "[", 
   RowBox[{"Dynamic", "[", "\[Tau]", "]"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{"\"\<Paper/sampleLightCurveLogNegative.pdf\>\"", ",", 
    RowBox[{"burstCDFPlot", "[", 
     RowBox[{
      RowBox[{"defaultUniverse", "[", "]"}], ",", 
      RowBox[{"defaultBurst", "[", "]"}], ",", 
      RowBox[{"defaultObserver", "[", 
       RowBox[{
        RowBox[{"z", "\[Rule]", "1.822"}], ",", 
        RowBox[{"\[Chi]", "\[Rule]", "0."}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{".1", ",", "1.", ",", "\[Infinity]"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.", ",", "1."}], "}"}], ",", 
      RowBox[{"ImageSize", "\[Rule]", 
       RowBox[{".45", "lineWidth"}]}], ",", 
      RowBox[{"FontSize", "\[Rule]", "fontSize"}]}], "]"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{"\"\<Paper/sampleLightCurveLogPositive.pdf\>\"", ",", 
    RowBox[{"burstCDFPlot", "[", 
     RowBox[{
      RowBox[{"defaultUniverse", "[", "]"}], ",", 
      RowBox[{"defaultBurst", "[", "]"}], ",", 
      RowBox[{"defaultObserver", "[", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{".1", ",", "1.", ",", "\[Infinity]"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.", ",", "1."}], "}"}], ",", 
      RowBox[{"ImageSize", "\[Rule]", 
       RowBox[{".45", "lineWidth"}]}], ",", 
      RowBox[{"FontSize", "\[Rule]", "fontSize"}]}], "]"}]}], "]"}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.6096630954984903`*^9, 3.609663112819458*^9}, {
  3.609663156881756*^9, 3.609663206468858*^9}, {3.6096632485633717`*^9, 
  3.6096632714393167`*^9}, {3.6096683307308207`*^9, 3.609668330858817*^9}, {
  3.6105850273998613`*^9, 3.610585028494966*^9}, {3.610585061558156*^9, 
  3.6105850625800333`*^9}, {3.610585115492052*^9, 3.6105851455216923`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
  "dir080916C", "=", 
   "\"\<GRObservations/DerivedData/GRObservations/Build/Products/Release/\
080916C/\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
  "dir090510", "=", 
   "\"\<GRObservations/DerivedData/GRObservations/Build/Products/Release/\
090510/\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
  "dir090902B", "=", 
   "\"\<GRObservations/DerivedData/GRObservations/Build/Products/Release/\
090902B/\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
  "dir090926A", "=", 
   "\"\<GRObservations/DerivedData/GRObservations/Build/Products/Release/\
090926A/\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bursts", "=", 
   RowBox[{"{", 
    RowBox[{
    "dir080916C", ",", "dir090510", ",", "dir090902B", ",", "dir090926A"}], 
    "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"ranges", "=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "0.05"}], " ", "300"}], ",", "300"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "0.05"}], " ", "60"}], ",", "60"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "0.05"}], " ", "1000"}], ",", "1000"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "0.05"}], " ", "300"}], ",", "300"}], "}"}]}], 
    "\[IndentingNewLine]", "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"gevData", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Import", "[", 
      RowBox[{
       RowBox[{"burst", "<>", "\"\<gev\>\""}], ",", "\"\<Table\>\""}], "]"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"burst", ",", "bursts"}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"mevData", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Import", "[", 
      RowBox[{
       RowBox[{"burst", "<>", "\"\<mev\>\""}], ",", "\"\<Table\>\""}], "]"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"burst", ",", "bursts"}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"probData", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Import", "[", 
       RowBox[{
        RowBox[{"burst", "<>", "\"\<probs\>\""}], ",", "\"\<Table\>\""}], 
       "]"}], "/.", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\[Kappa]_", ",", "p_", ",", "a_", ",", "b_", ",", "c_"}], 
        "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\[Kappa]", ",", "p"}], "}"}]}]}], ",", 
     RowBox[{"{", 
      RowBox[{"burst", ",", "bursts"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Do", "[", 
   RowBox[{
    RowBox[{"Export", "[", 
     RowBox[{
      RowBox[{"\"\<Paper/lightCurve\>\"", "<>", 
       RowBox[{"ToString", "[", 
        RowBox[{
         RowBox[{"FileNameSplit", "[", 
          RowBox[{
          "bursts", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], 
          "]"}], "\[LeftDoubleBracket]", 
         RowBox[{"-", "1"}], "\[RightDoubleBracket]"}], "]"}], "<>", 
       "\"\<.pdf\>\""}], ",", 
      RowBox[{"ListLinePlot", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"mevData", "[", 
           RowBox[{"[", "i", "]"}], "]"}], ",", 
          RowBox[{"gevData", "[", 
           RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
        RowBox[{"PlotRange", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"ranges", "[", 
            RowBox[{"[", "i", "]"}], "]"}], ",", "All"}], "}"}]}], ",", 
        RowBox[{"PlotStyle", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"Red", ",", "Blue"}], "}"}]}], ",", 
        RowBox[{"Frame", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"True", ",", "False"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"True", ",", "False"}], "}"}]}], "}"}]}], ",", 
        RowBox[{"FrameLabel", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"\"\<Time, sec\>\"", ",", "\"\<Photon Fraction\>\""}], 
          "}"}]}], ",", 
        RowBox[{"PlotLegends", "\[Rule]", 
         RowBox[{"Placed", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Style", "[", 
              RowBox[{"\"\<0.1 \[Dash] 1 GeV\>\"", ",", 
               RowBox[{"FontSize", "\[Rule]", "fontSize"}]}], "]"}], ",", 
             RowBox[{"Style", "[", 
              RowBox[{"\"\<1 \[Dash] 300 GeV\>\"", ",", 
               RowBox[{"FontSize", "\[Rule]", "fontSize"}]}], "]"}]}], "}"}], 
           ",", 
           RowBox[{"{", 
            RowBox[{"0.74", ",", "0.20"}], "}"}]}], "]"}]}], ",", 
        RowBox[{"ImageSize", "\[Rule]", 
         RowBox[{".45", "lineWidth"}]}], ",", 
        RowBox[{"FrameStyle", "\[Rule]", 
         RowBox[{"Directive", "[", 
          RowBox[{"FontSize", "\[Rule]", "fontSize"}], "]"}]}]}], "]"}]}], 
     "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "1", ",", 
      RowBox[{"Length", "[", "mevData", "]"}]}], "}"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Do", "[", 
   RowBox[{
    RowBox[{"Export", "[", 
     RowBox[{
      RowBox[{"\"\<Paper/probabilities\>\"", "<>", 
       RowBox[{"ToString", "[", 
        RowBox[{
         RowBox[{"FileNameSplit", "[", 
          RowBox[{
          "bursts", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], 
          "]"}], "\[LeftDoubleBracket]", 
         RowBox[{"-", "1"}], "\[RightDoubleBracket]"}], "]"}], "<>", 
       "\"\<.pdf\>\""}], ",", "\[IndentingNewLine]", 
      RowBox[{"ListLogPlot", "[", 
       RowBox[{
        RowBox[{"probData", "[", 
         RowBox[{"[", "i", "]"}], "]"}], ",", 
        RowBox[{"Joined", "\[Rule]", "True"}], ",", 
        RowBox[{"PlotRange", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "10"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"1.*^-12", ",", "1."}], "}"}]}], "}"}]}], ",", 
        RowBox[{"PlotStyle", "\[Rule]", 
         RowBox[{"RGBColor", "[", 
          RowBox[{"0.5", ",", "0", ",", "0.5"}], "]"}]}], ",", 
        RowBox[{"Frame", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"True", ",", "False"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"True", ",", "False"}], "}"}]}], "}"}]}], ",", 
        RowBox[{"FrameLabel", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
          "\"\<Stretching Factor\>\"", ",", "\"\<KS Probability\>\""}], 
          "}"}]}], ",", 
        RowBox[{"ImageSize", "\[Rule]", 
         RowBox[{".45", "lineWidth"}]}], ",", 
        RowBox[{"FrameStyle", "\[Rule]", 
         RowBox[{"Directive", "[", 
          RowBox[{"FontSize", "\[Rule]", "fontSize"}], "]"}]}]}], "]"}]}], 
     "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "1", ",", 
      RowBox[{"Length", "[", "mevData", "]"}]}], "}"}]}], "]"}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.596901417566943*^9, 3.5969014298703938`*^9}, {
   3.602215510963944*^9, 3.60221551175172*^9}, {3.609922488975033*^9, 
   3.609922738324974*^9}, {3.6099231653094187`*^9, 3.6099231675748253`*^9}, {
   3.609923340172803*^9, 3.60992337147126*^9}, {3.609923781629249*^9, 
   3.6099237894496937`*^9}, 3.609923913962141*^9, {3.6099239698719254`*^9, 
   3.6099239717357473`*^9}, {3.609924072949731*^9, 3.609924073086207*^9}, {
   3.609972079966633*^9, 3.609972141490472*^9}, {3.6099743242124968`*^9, 
   3.609974343050313*^9}, {3.6099797226523333`*^9, 3.609979722798706*^9}, {
   3.6105853168854103`*^9, 3.610585374267765*^9}, {3.610585420584169*^9, 
   3.610585630055912*^9}, {3.6105856833061333`*^9, 3.6105856859803953`*^9}, {
   3.61058578944057*^9, 3.6105857935310183`*^9}, {3.610585832736731*^9, 
   3.6105858961358967`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Kappa]Observed", "=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\"\<090902B\>\"", ",", 
       RowBox[{"{", 
        RowBox[{"0.363408", ",", "0.893437"}], "}"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"\"\<090510\>\"", ",", 
       RowBox[{"{", 
        RowBox[{"0.428137", ",", "1.60485"}], "}"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"\"\<080916C\>\"", ",", 
       RowBox[{"{", 
        RowBox[{"0.66529", ",", "3.31569"}], "}"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"\"\<090926A\>\"", ",", 
       RowBox[{"{", 
        RowBox[{"1.98759", ",", "6.61486"}], "}"}]}], "}"}]}], 
    "\[IndentingNewLine]", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{"\"\<Paper/kappaDistributionHistogram.pdf\>\"", ",", 
    RowBox[{"\[Kappa]HistogramPlot", "[", 
     RowBox[{
      RowBox[{"sample4096", "\[LeftDoubleBracket]", 
       RowBox[{"All", ",", 
        RowBox[{"-", "1"}]}], "\[RightDoubleBracket]"}], ",", 
      "\[Kappa]Observed", ",", 
      RowBox[{"FontSize", "\[Rule]", "fontSize"}], ",", 
      RowBox[{"ImageSize", "\[Rule]", 
       RowBox[{".45", "lineWidth"}]}]}], "]"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{"\"\<Paper/kappaDistributionCDF.pdf\>\"", ",", 
    RowBox[{"\[Kappa]CDFPlot", "[", 
     RowBox[{
      RowBox[{"sample4096", "\[LeftDoubleBracket]", 
       RowBox[{"All", ",", 
        RowBox[{"-", "1"}]}], "\[RightDoubleBracket]"}], ",", 
      "\[Kappa]Observed", ",", 
      RowBox[{"PlotPoints", "\[Rule]", "4096"}], ",", 
      RowBox[{"FontSize", "\[Rule]", "fontSize"}], ",", 
      RowBox[{"ImageSize", "\[Rule]", 
       RowBox[{".45", "lineWidth"}]}]}], "]"}]}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.594342734190405*^9, 3.594342752715184*^9}, {
  3.59434286903363*^9, 3.594342900024119*^9}, {3.594343771437028*^9, 
  3.594343773132771*^9}, {3.594852329377499*^9, 3.594852332247513*^9}, {
  3.5966927652249002`*^9, 3.596692799285636*^9}, {3.596693274643531*^9, 
  3.596693288462693*^9}, {3.5966933274676723`*^9, 3.5966933546761417`*^9}, {
  3.603446939569559*^9, 3.603447017756761*^9}, {3.603447061587146*^9, 
  3.603447066057764*^9}, {3.6096359148737793`*^9, 3.6096359282070913`*^9}, {
  3.609664424011471*^9, 3.60966451296507*^9}, {3.60966459359473*^9, 
  3.609664596730783*^9}, {3.610588444213026*^9, 3.610588458518063*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"highFraction\[Kappa]Observed", "=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"0.0643747", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"1", "-", 
           RowBox[{"1", "/", 
            SqrtBox["17"]}]}], ",", 
          RowBox[{"1", "+", 
           RowBox[{"1", "/", 
            SqrtBox["17"]}]}]}], "}"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"0.665059", ",", "3.31859"}], "}"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"0.141928", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"1", "-", 
           RowBox[{"1", "/", 
            SqrtBox["26"]}]}], ",", 
          RowBox[{"1", "+", 
           RowBox[{"1", "/", 
            SqrtBox["26"]}]}]}], "}"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"0.42816", ",", "1.60589"}], "}"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"0.165373", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"1", "-", 
           RowBox[{"1", "/", 
            SqrtBox["51.1454"]}]}], ",", 
          RowBox[{"1", "+", 
           RowBox[{"1", "/", 
            SqrtBox["51.1454"]}]}]}], "}"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"0.363328", ",", "0.893781"}], "}"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"0.0606777", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"1", "-", 
           RowBox[{"1", "/", 
            SqrtBox["27"]}]}], ",", 
          RowBox[{"1", "+", 
           RowBox[{"1", "/", 
            SqrtBox["27"]}]}]}], "}"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"1.98748", ",", "6.62006"}], "}"}]}], "}"}]}], 
    "\[IndentingNewLine]", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{"\"\<Paper/correlations.pdf\>\"", ",", 
    RowBox[{"GraphicsGrid", "[", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"ratio\[Chi]ListPlot", "[", 
          RowBox[{
           RowBox[{"sample4096", "\[LeftDoubleBracket]", 
            RowBox[{"All", ",", 
             RowBox[{"{", 
              RowBox[{"2", ",", "3", ",", "4"}], "}"}]}], 
            "\[RightDoubleBracket]"}], ",", 
           RowBox[{"{", "}"}], ",", 
           RowBox[{"ImagePadding", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"50", ",", "5"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"30", ",", "5"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"FontSize", "\[Rule]", "fontSize"}], ",", 
           RowBox[{"ImageSize", "\[Rule]", 
            RowBox[{".45", "lineWidth"}]}], ",", 
           RowBox[{"FrameTicks", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{"0.01", ",", "0.1"}], "}"}], "~", "Join", "~", 
               RowBox[{"Flatten", "[", 
                RowBox[{
                 RowBox[{"Table", "[", 
                  RowBox[{
                   RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"it", ",", "\"\<\>\""}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"it", ",", 
                    SuperscriptBox["10", "sc"], ",", 
                    SuperscriptBox["10", 
                    RowBox[{"sc", "+", "1"}]], ",", 
                    SuperscriptBox["10", "sc"]}], "}"}]}], "]"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"sc", ",", 
                    RowBox[{"-", "3"}], ",", 
                    RowBox[{"-", "1"}]}], "}"}]}], "]"}], ",", "1"}], "]"}]}],
               ",", "Automatic"}], "}"}]}], ",", 
           RowBox[{"PointSize", "\[Rule]", "Tiny"}]}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"\[Chi]\[Kappa]ListPlot", "[", 
          RowBox[{
           RowBox[{"sample4096", "\[LeftDoubleBracket]", 
            RowBox[{"All", ",", 
             RowBox[{"{", 
              RowBox[{"2", ",", 
               RowBox[{"-", "1"}]}], "}"}]}], "\[RightDoubleBracket]"}], ",", 
           
           RowBox[{"{", "}"}], ",", 
           RowBox[{"ImagePadding", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"50", ",", "5"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"30", ",", "5"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
           RowBox[{"FontSize", "\[Rule]", "fontSize"}], ",", 
           RowBox[{"ImageSize", "\[Rule]", 
            RowBox[{".45", "lineWidth"}]}], ",", 
           RowBox[{"PointSize", "\[Rule]", "Tiny"}]}], "]"}]}], "}"}], ",", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"ratio\[Kappa]ListPlot", "[", 
          RowBox[{
           RowBox[{"sample4096", "\[LeftDoubleBracket]", 
            RowBox[{"All", ",", 
             RowBox[{"{", 
              RowBox[{"3", ",", "4", ",", 
               RowBox[{"-", "1"}]}], "}"}]}], "\[RightDoubleBracket]"}], ",", 
           "highFraction\[Kappa]Observed", ",", 
           RowBox[{"ImagePadding", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"50", ",", "5"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"30", ",", "5"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"PlotRange", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"All", ",", 
              RowBox[{"{", 
               RowBox[{"0.42", ",", "6.7"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"FontSize", "\[Rule]", "10"}], ",", 
           RowBox[{"ImageSize", "\[Rule]", 
            RowBox[{".45", "lineWidth"}]}], ",", 
           RowBox[{"FrameTicks", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{"0.01", ",", "0.1"}], "}"}], "~", "Join", "~", 
               RowBox[{"Flatten", "[", 
                RowBox[{
                 RowBox[{"Table", "[", 
                  RowBox[{
                   RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"it", ",", "\"\<\>\""}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"it", ",", 
                    SuperscriptBox["10", "sc"], ",", 
                    SuperscriptBox["10", 
                    RowBox[{"sc", "+", "1"}]], ",", 
                    SuperscriptBox["10", "sc"]}], "}"}]}], "]"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"sc", ",", 
                    RowBox[{"-", "3"}], ",", 
                    RowBox[{"-", "1"}]}], "}"}]}], "]"}], ",", "1"}], "]"}]}],
               ",", "Automatic"}], "}"}]}], ",", 
           RowBox[{"PointSize", "\[Rule]", "Tiny"}]}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Graphics", "[", "]"}]}], "}"}]}], "\[IndentingNewLine]", 
      "}"}], "]"}]}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.6096451014355288`*^9, 3.6096451374568987`*^9}, {
  3.609645222026988*^9, 3.609645227887209*^9}, {3.609645393051215*^9, 
  3.609645428989118*^9}, {3.609645463432189*^9, 3.609645477467903*^9}, {
  3.609645609781362*^9, 3.609645642394065*^9}, {3.609645674156782*^9, 
  3.609645706993593*^9}, {3.6096458067672873`*^9, 3.6096458371022587`*^9}, {
  3.609664946570684*^9, 3.609664966614698*^9}, {3.6096650112443666`*^9, 
  3.6096650505364847`*^9}, {3.610588553641007*^9, 3.6105885700351887`*^9}, {
  3.610588661684598*^9, 3.6105887177238083`*^9}, {3.610588898802246*^9, 
  3.610588907708644*^9}, {3.610588977633296*^9, 3.610588985470376*^9}, {
  3.610589208194084*^9, 3.610589209020136*^9}, {3.610589659275305*^9, 
  3.610589671300022*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Main presentation", "Subsubsection",
 CellChangeTimes->{{3.610600479214024*^9, 3.6106004812611017`*^9}, {
  3.61060055607691*^9, 3.610600557490025*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"imageSize", "=", "225"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fontSize", "=", "10"}], ";"}]}], "Input",
 CellChangeTimes->{{3.609663079181303*^9, 3.609663093027342*^9}, {
  3.6105851271520557`*^9, 3.610585129430784*^9}, {3.610723345113246*^9, 
  3.610723398071932*^9}, {3.610723760164323*^9, 3.6107237621296387`*^9}, {
  3.61072389710588*^9, 3.610723897198683*^9}, {3.61072398859604*^9, 
  3.610723990699546*^9}, {3.610724037563147*^9, 3.610724037720209*^9}, {
  3.610724227766706*^9, 3.61072423900406*^9}, {3.610846985972015*^9, 
  3.6108470141876574`*^9}, {3.6108470675326567`*^9, 3.610847076198399*^9}, {
  3.610847116910941*^9, 3.610847117244248*^9}, {3.6108472329473963`*^9, 
  3.610847235232614*^9}, {3.6108473635583887`*^9, 3.6108473641312923`*^9}, {
  3.6108702400110407`*^9, 3.610870250528454*^9}, {3.610876257866946*^9, 
  3.610876278742895*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"plotRange", "=", 
   RowBox[{"PlotRange", "/.", 
    RowBox[{"AbsoluteOptions", "[", 
     RowBox[{"modelScheme", "[", 
      RowBox[{
       RowBox[{"centralEngineSize", "\[Rule]", "0.03"}], ",", 
       RowBox[{"jetRadius", "\[Rule]", "0.5"}], ",", 
       RowBox[{"lowAngle", "\[Rule]", "0.43"}], ",", 
       RowBox[{"highAngle", "\[Rule]", "0.043"}], ",", 
       RowBox[{"observerSize", "\[Rule]", "0.03"}], ",", 
       RowBox[{"observerDistance", "\[Rule]", "1"}], ",", 
       RowBox[{"observerAngle", "\[Rule]", "0.4"}], ",", 
       RowBox[{"centralEngineQ", "\[Rule]", "True"}], ",", 
       RowBox[{"jetQ", "\[Rule]", "True"}], ",", 
       RowBox[{"epQ", "\[Rule]", "True"}], ",", 
       RowBox[{"\[Gamma]Q", "\[Rule]", "True"}], ",", 
       RowBox[{"observerQ", "\[Rule]", "True"}], ",", 
       RowBox[{"jetLabelQ", "\[Rule]", "False"}], ",", 
       RowBox[{"ImageSize", "\[Rule]", "imageSize"}], ",", 
       RowBox[{"FontSize", "\[Rule]", "fontSize"}], ",", 
       RowBox[{"shockWaveThickness", "\[Rule]", "Large"}], ",", 
       RowBox[{"radiatorThickness", "\[Rule]", "Medium"}], ",", 
       RowBox[{"photonThickness", "\[Rule]", "Medium"}]}], "]"}], "]"}]}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.610723232398819*^9, 3.6107232593245163`*^9}, {
  3.610723403031991*^9, 3.610723433222994*^9}, {3.6108757061512938`*^9, 
  3.610875707195648*^9}, {3.6108760776267242`*^9, 3.610876104303146*^9}, {
  3.610876135895878*^9, 3.610876148021715*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"MapIndexed", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Export", "[", 
      RowBox[{
       RowBox[{"\"\<Presentation/modelOverview\>\"", "<>", 
        RowBox[{"ToString", "[", 
         RowBox[{"#2", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}],
          "]"}], "<>", "\"\<.pdf\>\""}], ",", "#1"}], "]"}], "&"}], ",", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"modelScheme", "[", 
       RowBox[{
        RowBox[{"centralEngineSize", "\[Rule]", "0.03"}], ",", 
        RowBox[{"jetRadius", "\[Rule]", "0.5"}], ",", 
        RowBox[{"lowAngle", "\[Rule]", "0.43"}], ",", 
        RowBox[{"highAngle", "\[Rule]", "0.043"}], ",", 
        RowBox[{"observerSize", "\[Rule]", "0.03"}], ",", 
        RowBox[{"observerDistance", "\[Rule]", "1"}], ",", 
        RowBox[{"observerAngle", "\[Rule]", "0.4"}], ",", 
        RowBox[{"centralEngineQ", "\[Rule]", "True"}], ",", 
        RowBox[{"jetQ", "\[Rule]", "False"}], ",", 
        RowBox[{"epQ", "\[Rule]", "False"}], ",", 
        RowBox[{"\[Gamma]Q", "\[Rule]", "False"}], ",", 
        RowBox[{"observerQ", "\[Rule]", "True"}], ",", 
        RowBox[{"jetLabelQ", "\[Rule]", "False"}], ",", 
        RowBox[{"PlotRange", "\[Rule]", "plotRange"}], ",", 
        RowBox[{"ImageSize", "\[Rule]", "imageSize"}], ",", 
        RowBox[{"FontSize", "\[Rule]", "fontSize"}], ",", 
        RowBox[{"shockWaveThickness", "\[Rule]", "Large"}], ",", 
        RowBox[{"radiatorThickness", "\[Rule]", "Medium"}], ",", 
        RowBox[{"photonThickness", "\[Rule]", "Medium"}]}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"modelScheme", "[", 
       RowBox[{
        RowBox[{"centralEngineSize", "\[Rule]", "0.03"}], ",", 
        RowBox[{"jetRadius", "\[Rule]", "0.1"}], ",", 
        RowBox[{"lowAngle", "\[Rule]", "0.43"}], ",", 
        RowBox[{"highAngle", "\[Rule]", "0."}], ",", 
        RowBox[{"observerSize", "\[Rule]", "0.03"}], ",", 
        RowBox[{"observerDistance", "\[Rule]", "1"}], ",", 
        RowBox[{"observerAngle", "\[Rule]", "0.4"}], ",", 
        RowBox[{"centralEngineQ", "\[Rule]", "True"}], ",", 
        RowBox[{"jetQ", "\[Rule]", "True"}], ",", 
        RowBox[{"epQ", "\[Rule]", "False"}], ",", 
        RowBox[{"\[Gamma]Q", "\[Rule]", "False"}], ",", 
        RowBox[{"observerQ", "\[Rule]", "True"}], ",", 
        RowBox[{"jetLabelQ", "\[Rule]", "False"}], ",", 
        RowBox[{"PlotRange", "\[Rule]", "plotRange"}], ",", 
        RowBox[{"ImageSize", "\[Rule]", "imageSize"}], ",", 
        RowBox[{"FontSize", "\[Rule]", "fontSize"}], ",", 
        RowBox[{"shockWaveThickness", "\[Rule]", "Large"}], ",", 
        RowBox[{"radiatorThickness", "\[Rule]", "Medium"}], ",", 
        RowBox[{"photonThickness", "\[Rule]", "Medium"}]}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"modelScheme", "[", 
       RowBox[{
        RowBox[{"centralEngineSize", "\[Rule]", "0.03"}], ",", 
        RowBox[{"jetRadius", "\[Rule]", "0.2"}], ",", 
        RowBox[{"lowAngle", "\[Rule]", "0.43"}], ",", 
        RowBox[{"highAngle", "\[Rule]", "0."}], ",", 
        RowBox[{"observerSize", "\[Rule]", "0.03"}], ",", 
        RowBox[{"observerDistance", "\[Rule]", "1"}], ",", 
        RowBox[{"observerAngle", "\[Rule]", "0.4"}], ",", 
        RowBox[{"centralEngineQ", "\[Rule]", "True"}], ",", 
        RowBox[{"jetQ", "\[Rule]", "True"}], ",", 
        RowBox[{"epQ", "\[Rule]", "False"}], ",", 
        RowBox[{"\[Gamma]Q", "\[Rule]", "False"}], ",", 
        RowBox[{"observerQ", "\[Rule]", "True"}], ",", 
        RowBox[{"jetLabelQ", "\[Rule]", "False"}], ",", 
        RowBox[{"PlotRange", "\[Rule]", "plotRange"}], ",", 
        RowBox[{"ImageSize", "\[Rule]", "imageSize"}], ",", 
        RowBox[{"FontSize", "\[Rule]", "fontSize"}], ",", 
        RowBox[{"shockWaveThickness", "\[Rule]", "Large"}], ",", 
        RowBox[{"radiatorThickness", "\[Rule]", "Medium"}], ",", 
        RowBox[{"photonThickness", "\[Rule]", "Medium"}]}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"modelScheme", "[", 
       RowBox[{
        RowBox[{"centralEngineSize", "\[Rule]", "0.03"}], ",", 
        RowBox[{"jetRadius", "\[Rule]", "0.3"}], ",", 
        RowBox[{"lowAngle", "\[Rule]", "0.43"}], ",", 
        RowBox[{"highAngle", "\[Rule]", "0."}], ",", 
        RowBox[{"observerSize", "\[Rule]", "0.03"}], ",", 
        RowBox[{"observerDistance", "\[Rule]", "1"}], ",", 
        RowBox[{"observerAngle", "\[Rule]", "0.4"}], ",", 
        RowBox[{"centralEngineQ", "\[Rule]", "True"}], ",", 
        RowBox[{"jetQ", "\[Rule]", "True"}], ",", 
        RowBox[{"epQ", "\[Rule]", "False"}], ",", 
        RowBox[{"\[Gamma]Q", "\[Rule]", "False"}], ",", 
        RowBox[{"observerQ", "\[Rule]", "True"}], ",", 
        RowBox[{"jetLabelQ", "\[Rule]", "False"}], ",", 
        RowBox[{"PlotRange", "\[Rule]", "plotRange"}], ",", 
        RowBox[{"ImageSize", "\[Rule]", "imageSize"}], ",", 
        RowBox[{"FontSize", "\[Rule]", "fontSize"}], ",", 
        RowBox[{"shockWaveThickness", "\[Rule]", "Large"}], ",", 
        RowBox[{"radiatorThickness", "\[Rule]", "Medium"}], ",", 
        RowBox[{"photonThickness", "\[Rule]", "Medium"}]}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"modelScheme", "[", 
       RowBox[{
        RowBox[{"centralEngineSize", "\[Rule]", "0.03"}], ",", 
        RowBox[{"jetRadius", "\[Rule]", "0.4"}], ",", 
        RowBox[{"lowAngle", "\[Rule]", "0.43"}], ",", 
        RowBox[{"highAngle", "\[Rule]", "0."}], ",", 
        RowBox[{"observerSize", "\[Rule]", "0.03"}], ",", 
        RowBox[{"observerDistance", "\[Rule]", "1"}], ",", 
        RowBox[{"observerAngle", "\[Rule]", "0.4"}], ",", 
        RowBox[{"centralEngineQ", "\[Rule]", "True"}], ",", 
        RowBox[{"jetQ", "\[Rule]", "True"}], ",", 
        RowBox[{"epQ", "\[Rule]", "False"}], ",", 
        RowBox[{"\[Gamma]Q", "\[Rule]", "False"}], ",", 
        RowBox[{"observerQ", "\[Rule]", "True"}], ",", 
        RowBox[{"jetLabelQ", "\[Rule]", "False"}], ",", 
        RowBox[{"PlotRange", "\[Rule]", "plotRange"}], ",", 
        RowBox[{"ImageSize", "\[Rule]", "imageSize"}], ",", 
        RowBox[{"FontSize", "\[Rule]", "fontSize"}], ",", 
        RowBox[{"shockWaveThickness", "\[Rule]", "Large"}], ",", 
        RowBox[{"radiatorThickness", "\[Rule]", "Medium"}], ",", 
        RowBox[{"photonThickness", "\[Rule]", "Medium"}]}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"modelScheme", "[", 
       RowBox[{
        RowBox[{"centralEngineSize", "\[Rule]", "0.03"}], ",", 
        RowBox[{"jetRadius", "\[Rule]", "0.5"}], ",", 
        RowBox[{"lowAngle", "\[Rule]", "0.43"}], ",", 
        RowBox[{"highAngle", "\[Rule]", "0."}], ",", 
        RowBox[{"observerSize", "\[Rule]", "0.03"}], ",", 
        RowBox[{"observerDistance", "\[Rule]", "1"}], ",", 
        RowBox[{"observerAngle", "\[Rule]", "0.4"}], ",", 
        RowBox[{"centralEngineQ", "\[Rule]", "True"}], ",", 
        RowBox[{"jetQ", "\[Rule]", "True"}], ",", 
        RowBox[{"epQ", "\[Rule]", "False"}], ",", 
        RowBox[{"\[Gamma]Q", "\[Rule]", "False"}], ",", 
        RowBox[{"observerQ", "\[Rule]", "True"}], ",", 
        RowBox[{"jetLabelQ", "\[Rule]", "False"}], ",", 
        RowBox[{"PlotRange", "\[Rule]", "plotRange"}], ",", 
        RowBox[{"ImageSize", "\[Rule]", "imageSize"}], ",", 
        RowBox[{"FontSize", "\[Rule]", "fontSize"}], ",", 
        RowBox[{"shockWaveThickness", "\[Rule]", "Large"}], ",", 
        RowBox[{"radiatorThickness", "\[Rule]", "Medium"}], ",", 
        RowBox[{"photonThickness", "\[Rule]", "Medium"}]}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"modelScheme", "[", 
       RowBox[{
        RowBox[{"centralEngineSize", "\[Rule]", "0.03"}], ",", 
        RowBox[{"jetRadius", "\[Rule]", "0.5"}], ",", 
        RowBox[{"lowAngle", "\[Rule]", "0.43"}], ",", 
        RowBox[{"highAngle", "\[Rule]", "0.043"}], ",", 
        RowBox[{"observerSize", "\[Rule]", "0.03"}], ",", 
        RowBox[{"observerDistance", "\[Rule]", "1"}], ",", 
        RowBox[{"observerAngle", "\[Rule]", "0.4"}], ",", 
        RowBox[{"centralEngineQ", "\[Rule]", "True"}], ",", 
        RowBox[{"jetQ", "\[Rule]", "True"}], ",", 
        RowBox[{"epQ", "\[Rule]", "False"}], ",", 
        RowBox[{"\[Gamma]Q", "\[Rule]", "False"}], ",", 
        RowBox[{"observerQ", "\[Rule]", "True"}], ",", 
        RowBox[{"jetLabelQ", "\[Rule]", "False"}], ",", 
        RowBox[{"PlotRange", "\[Rule]", "plotRange"}], ",", 
        RowBox[{"ImageSize", "\[Rule]", "imageSize"}], ",", 
        RowBox[{"FontSize", "\[Rule]", "fontSize"}], ",", 
        RowBox[{"shockWaveThickness", "\[Rule]", "Large"}], ",", 
        RowBox[{"radiatorThickness", "\[Rule]", "Medium"}], ",", 
        RowBox[{"photonThickness", "\[Rule]", "Medium"}]}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"modelScheme", "[", 
       RowBox[{
        RowBox[{"centralEngineSize", "\[Rule]", "0.03"}], ",", 
        RowBox[{"jetRadius", "\[Rule]", "0.5"}], ",", 
        RowBox[{"lowAngle", "\[Rule]", "0.43"}], ",", 
        RowBox[{"highAngle", "\[Rule]", "0.043"}], ",", 
        RowBox[{"observerSize", "\[Rule]", "0.03"}], ",", 
        RowBox[{"observerDistance", "\[Rule]", "1"}], ",", 
        RowBox[{"observerAngle", "\[Rule]", "0.4"}], ",", 
        RowBox[{"centralEngineQ", "\[Rule]", "True"}], ",", 
        RowBox[{"jetQ", "\[Rule]", "True"}], ",", 
        RowBox[{"epQ", "\[Rule]", "True"}], ",", 
        RowBox[{"\[Gamma]Q", "\[Rule]", "False"}], ",", 
        RowBox[{"observerQ", "\[Rule]", "True"}], ",", 
        RowBox[{"jetLabelQ", "\[Rule]", "False"}], ",", 
        RowBox[{"PlotRange", "\[Rule]", "plotRange"}], ",", 
        RowBox[{"ImageSize", "\[Rule]", "imageSize"}], ",", 
        RowBox[{"FontSize", "\[Rule]", "fontSize"}], ",", 
        RowBox[{"shockWaveThickness", "\[Rule]", "Large"}], ",", 
        RowBox[{"radiatorThickness", "\[Rule]", "Medium"}], ",", 
        RowBox[{"photonThickness", "\[Rule]", "Medium"}]}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"modelScheme", "[", 
       RowBox[{
        RowBox[{"centralEngineSize", "\[Rule]", "0.03"}], ",", 
        RowBox[{"jetRadius", "\[Rule]", "0.5"}], ",", 
        RowBox[{"lowAngle", "\[Rule]", "0.43"}], ",", 
        RowBox[{"highAngle", "\[Rule]", "0.043"}], ",", 
        RowBox[{"observerSize", "\[Rule]", "0.03"}], ",", 
        RowBox[{"observerDistance", "\[Rule]", "1"}], ",", 
        RowBox[{"observerAngle", "\[Rule]", "0.4"}], ",", 
        RowBox[{"centralEngineQ", "\[Rule]", "True"}], ",", 
        RowBox[{"jetQ", "\[Rule]", "True"}], ",", 
        RowBox[{"epQ", "\[Rule]", "True"}], ",", 
        RowBox[{"\[Gamma]Q", "\[Rule]", "True"}], ",", 
        RowBox[{"observerQ", "\[Rule]", "True"}], ",", 
        RowBox[{"jetLabelQ", "\[Rule]", "False"}], ",", 
        RowBox[{"PlotRange", "\[Rule]", "plotRange"}], ",", 
        RowBox[{"ImageSize", "\[Rule]", "imageSize"}], ",", 
        RowBox[{"FontSize", "\[Rule]", "fontSize"}], ",", 
        RowBox[{"shockWaveThickness", "\[Rule]", "Large"}], ",", 
        RowBox[{"radiatorThickness", "\[Rule]", "Medium"}], ",", 
        RowBox[{"photonThickness", "\[Rule]", "Medium"}]}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"modelScheme", "[", 
       RowBox[{
        RowBox[{"centralEngineSize", "\[Rule]", "0.03"}], ",", 
        RowBox[{"jetRadius", "\[Rule]", "0.5"}], ",", 
        RowBox[{"lowAngle", "\[Rule]", "0.43"}], ",", 
        RowBox[{"highAngle", "\[Rule]", "0.043"}], ",", 
        RowBox[{"observerSize", "\[Rule]", "0.03"}], ",", 
        RowBox[{"observerDistance", "\[Rule]", "1"}], ",", 
        RowBox[{"observerAngle", "\[Rule]", "0."}], ",", 
        RowBox[{"centralEngineQ", "\[Rule]", "True"}], ",", 
        RowBox[{"jetQ", "\[Rule]", "True"}], ",", 
        RowBox[{"epQ", "\[Rule]", "True"}], ",", 
        RowBox[{"\[Gamma]Q", "\[Rule]", "True"}], ",", 
        RowBox[{"observerQ", "\[Rule]", "True"}], ",", 
        RowBox[{"jetLabelQ", "\[Rule]", "False"}], ",", 
        RowBox[{"ImageSize", "\[Rule]", "imageSize"}], ",", 
        RowBox[{"FontSize", "\[Rule]", "fontSize"}], ",", 
        RowBox[{"shockWaveThickness", "\[Rule]", "Large"}], ",", 
        RowBox[{"radiatorThickness", "\[Rule]", "Medium"}], ",", 
        RowBox[{"photonThickness", "\[Rule]", "Medium"}]}], "]"}]}], 
     "\[IndentingNewLine]", "}"}]}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.6106064549679337`*^9, 3.6106064643027287`*^9}, {
   3.610606565619996*^9, 3.6106065790290956`*^9}, {3.610606640272019*^9, 
   3.6106066622100697`*^9}, {3.610606713358758*^9, 3.610606715492943*^9}, {
   3.610720279581924*^9, 3.610720284526478*^9}, 3.610723209658454*^9, {
   3.6107232643180027`*^9, 3.610723310024692*^9}, {3.610723937732457*^9, 
   3.610723959221477*^9}, {3.6108757098396*^9, 3.6108757190577307`*^9}, {
   3.610876154296465*^9, 3.610876216403064*^9}, {3.6109416187971163`*^9, 
   3.61094161918296*^9}, 3.6109416617052097`*^9, {3.610941729723734*^9, 
   3.610941729951686*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"PrintTemporary", "[", 
   RowBox[{"Dynamic", "[", "\[Tau]", "]"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{"\"\<Presentation/sampleLightCurveLogNegative.pdf\>\"", ",", 
    RowBox[{"burstCDFPlot", "[", 
     RowBox[{
      RowBox[{"defaultUniverse", "[", "]"}], ",", 
      RowBox[{"defaultBurst", "[", "]"}], ",", 
      RowBox[{"defaultObserver", "[", 
       RowBox[{
        RowBox[{"z", "\[Rule]", "1.822"}], ",", 
        RowBox[{"\[Chi]", "\[Rule]", "0."}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{".1", ",", "1.", ",", "\[Infinity]"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.", ",", "1."}], "}"}], ",", 
      RowBox[{"ImageSize", "\[Rule]", "imageSize"}], ",", 
      RowBox[{"FontSize", "\[Rule]", "fontSize"}], ",", 
      RowBox[{"frameColor", "\[Rule]", "Gray"}], ",", 
      RowBox[{"Thickness", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"Large", ",", "Large"}], "}"}]}]}], "]"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{"\"\<Presentation/sampleLightCurveLogPositive.pdf\>\"", ",", 
    RowBox[{"burstCDFPlot", "[", 
     RowBox[{
      RowBox[{"defaultUniverse", "[", "]"}], ",", 
      RowBox[{"defaultBurst", "[", "]"}], ",", 
      RowBox[{"defaultObserver", "[", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{".1", ",", "1.", ",", "\[Infinity]"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.", ",", "1."}], "}"}], ",", 
      RowBox[{"ImageSize", "\[Rule]", "imageSize"}], ",", 
      RowBox[{"FontSize", "\[Rule]", "fontSize"}], ",", 
      RowBox[{"frameColor", "\[Rule]", "Gray"}], ",", 
      RowBox[{"Thickness", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"Large", ",", "Large"}], "}"}]}]}], "]"}]}], "]"}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.6096630954984903`*^9, 3.609663112819458*^9}, {
  3.609663156881756*^9, 3.609663206468858*^9}, {3.6096632485633717`*^9, 
  3.6096632714393167`*^9}, {3.6096683307308207`*^9, 3.609668330858817*^9}, {
  3.6105850273998613`*^9, 3.610585028494966*^9}, {3.610585061558156*^9, 
  3.6105850625800333`*^9}, {3.610585115492052*^9, 3.6105851455216923`*^9}, {
  3.610763488702261*^9, 3.610763495197115*^9}, {3.6108701871043386`*^9, 
  3.610870216683406*^9}, {3.610870285078671*^9, 3.610870298543376*^9}, {
  3.610875451598813*^9, 3.610875486974951*^9}, {3.610875537580411*^9, 
  3.6108755377584133`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"gevData", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Import", "[", 
      RowBox[{
       RowBox[{"burst", "<>", "\"\<gev\>\""}], ",", "\"\<Table\>\""}], "]"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"burst", ",", "bursts"}], "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{3.612502712081915*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Import", "::", "nffil"}], "MessageName"], ":", 
  " ", "\<\"File not found during \[NoBreak]\\!\\(Import\\)\[NoBreak]. \\!\\(\
\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/Import/nffil\\\", \
ButtonNote -> \\\"Import::nffil\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.612502712733432*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Import", "::", "nffil"}], "MessageName"], ":", 
  " ", "\<\"File not found during \[NoBreak]\\!\\(Import\\)\[NoBreak]. \\!\\(\
\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/Import/nffil\\\", \
ButtonNote -> \\\"Import::nffil\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6125027127878523`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Import", "::", "nffil"}], "MessageName"], ":", 
  " ", "\<\"File not found during \[NoBreak]\\!\\(Import\\)\[NoBreak]. \\!\\(\
\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/Import/nffil\\\", \
ButtonNote -> \\\"Import::nffil\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.612502712870421*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], ":", 
  " ", "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(Import :: \
nffil\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.612502712872903*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
  "dir080916C", "=", 
   "\"\<GRObservations/DerivedData/GRObservations/Build/Products/Release/\
080916C/\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
  "dir090510", "=", 
   "\"\<GRObservations/DerivedData/GRObservations/Build/Products/Release/\
090510/\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
  "dir090902B", "=", 
   "\"\<GRObservations/DerivedData/GRObservations/Build/Products/Release/\
090902B/\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
  "dir090926A", "=", 
   "\"\<GRObservations/DerivedData/GRObservations/Build/Products/Release/\
090926A/\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bursts", "=", 
   RowBox[{"{", 
    RowBox[{
    "dir080916C", ",", "dir090510", ",", "dir090902B", ",", "dir090926A"}], 
    "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"ranges", "=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "0.05"}], " ", "300"}], ",", "300"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "0.05"}], " ", "60"}], ",", "60"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "0.05"}], " ", "1000"}], ",", "1000"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "0.05"}], " ", "300"}], ",", "300"}], "}"}]}], 
    "\[IndentingNewLine]", "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"gevData", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Import", "[", 
      RowBox[{
       RowBox[{"burst", "<>", "\"\<gev\>\""}], ",", "\"\<Table\>\""}], "]"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"burst", ",", "bursts"}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"mevData", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Import", "[", 
      RowBox[{
       RowBox[{"burst", "<>", "\"\<mev\>\""}], ",", "\"\<Table\>\""}], "]"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"burst", ",", "bursts"}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"probData", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Import", "[", 
      RowBox[{
       RowBox[{"burst", "<>", "\"\<probs\>\""}], ",", "\"\<Table\>\""}], 
      "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"burst", ",", "bursts"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"arrow", "[", 
    RowBox[{"time_", ",", "gev_", ",", "mev_", ",", "headSize_"}], "]"}], ":=", 
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Arrowheads", "[", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Abs", "[", 
            RowBox[{"gev", "-", "mev"}], "]"}], ">", 
           RowBox[{"4.5", "headSize"}]}], ",", 
          RowBox[{"+", "1"}], ",", 
          RowBox[{"-", "1"}]}], "]"}], 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "headSize"}], ",", "headSize"}], "}"}]}], "]"}], ",", 
      RowBox[{"Arrow", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"time", ",", "gev"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"time", ",", "mev"}], "}"}]}], "}"}], "]"}]}], "}"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ksLines", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"probData", "\[LeftDoubleBracket]", 
          RowBox[{"i", ",", "#", ",", "3"}], "\[RightDoubleBracket]"}], ",", 
         RowBox[{"probData", "\[LeftDoubleBracket]", 
          RowBox[{"i", ",", "#", ",", "4"}], "\[RightDoubleBracket]"}], ",", 
         RowBox[{"probData", "\[LeftDoubleBracket]", 
          RowBox[{"i", ",", "#", ",", "5"}], "\[RightDoubleBracket]"}]}], 
        "}"}], "&"}], "@", 
      RowBox[{
       RowBox[{"Position", "[", 
        RowBox[{
         RowBox[{"probData", "\[LeftDoubleBracket]", 
          RowBox[{"i", ",", "All", ",", "1"}], "\[RightDoubleBracket]"}], ",",
          "1"}], "]"}], "\[LeftDoubleBracket]", 
       RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "mevData", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ksLinesStretched", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"probData", "\[LeftDoubleBracket]", 
          RowBox[{"i", ",", "#", ",", "3"}], "\[RightDoubleBracket]"}], ",", 
         RowBox[{"probData", "\[LeftDoubleBracket]", 
          RowBox[{"i", ",", "#", ",", "4"}], "\[RightDoubleBracket]"}], ",", 
         RowBox[{"probData", "\[LeftDoubleBracket]", 
          RowBox[{"i", ",", "#", ",", "5"}], "\[RightDoubleBracket]"}]}], 
        "}"}], "&"}], "@", 
      RowBox[{
       RowBox[{"Ordering", "[", 
        RowBox[{
         RowBox[{"probData", "\[LeftDoubleBracket]", 
          RowBox[{"i", ",", "All", ",", "2"}], "\[RightDoubleBracket]"}], ",", 
         RowBox[{"-", "1"}]}], "]"}], "\[LeftDoubleBracket]", "1", 
       "\[RightDoubleBracket]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "mevData", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"stretchingFactors", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"probData", "\[LeftDoubleBracket]", 
      RowBox[{"i", ",", 
       RowBox[{
        RowBox[{"Ordering", "[", 
         RowBox[{
          RowBox[{"probData", "\[LeftDoubleBracket]", 
           RowBox[{"i", ",", "All", ",", "2"}], "\[RightDoubleBracket]"}], 
          ",", 
          RowBox[{"-", "1"}]}], "]"}], "\[LeftDoubleBracket]", "1", 
        "\[RightDoubleBracket]"}], ",", "1"}], "\[RightDoubleBracket]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "mevData", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Do", "[", 
   RowBox[{
    RowBox[{"Export", "[", 
     RowBox[{
      RowBox[{"\"\<Presentation/lightCurve\>\"", "<>", 
       RowBox[{"ToString", "[", 
        RowBox[{
         RowBox[{"FileNameSplit", "[", 
          RowBox[{
          "bursts", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], 
          "]"}], "\[LeftDoubleBracket]", 
         RowBox[{"-", "1"}], "\[RightDoubleBracket]"}], "]"}], "<>", 
       "\"\<.pdf\>\""}], ",", 
      RowBox[{"ListLinePlot", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"mevData", "[", 
           RowBox[{"[", "i", "]"}], "]"}], ",", 
          RowBox[{"gevData", "[", 
           RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
        RowBox[{"PlotRange", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"ranges", "[", 
            RowBox[{"[", "i", "]"}], "]"}], ",", "All"}], "}"}]}], ",", 
        RowBox[{"PlotStyle", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"Thick", ",", "Red"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"Thick", ",", "Blue"}], "}"}]}], "}"}]}], ",", 
        RowBox[{"Frame", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"True", ",", "False"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"True", ",", "False"}], "}"}]}], "}"}]}], ",", 
        RowBox[{"FrameLabel", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"\"\<Time, sec\>\"", ",", "\"\<Photon Fraction\>\""}], 
          "}"}]}], ",", 
        RowBox[{"PlotLegends", "\[Rule]", 
         RowBox[{"Placed", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Style", "[", 
              RowBox[{"\"\<0.1 \[Dash] 1 GeV\>\"", ",", "Red", ",", 
               RowBox[{"FontSize", "\[Rule]", "fontSize"}]}], "]"}], ",", 
             RowBox[{"Style", "[", 
              RowBox[{"\"\<1 \[Dash] 300 GeV\>\"", ",", "Blue", ",", 
               RowBox[{"FontSize", "\[Rule]", "fontSize"}]}], "]"}]}], "}"}], 
           ",", 
           RowBox[{"{", 
            RowBox[{"0.79", ",", "0.20"}], "}"}]}], "]"}]}], ",", 
        RowBox[{"ImageSize", "\[Rule]", "imageSize"}], ",", 
        RowBox[{"FrameStyle", "\[Rule]", 
         RowBox[{"Directive", "[", 
          RowBox[{"Gray", ",", 
           RowBox[{"FontSize", "\[Rule]", "fontSize"}]}], "]"}]}], ",", 
        RowBox[{"LabelStyle", "\[Rule]", 
         RowBox[{"Directive", "[", 
          RowBox[{"FontSize", "\[Rule]", 
           RowBox[{"OptionValue", "[", "FontSize", "]"}]}], "]"}]}]}], 
       "]"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "1", ",", 
      RowBox[{"Length", "[", "mevData", "]"}]}], "}"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Do", "[", 
   RowBox[{
    RowBox[{"Export", "[", 
     RowBox[{
      RowBox[{"\"\<Presentation/lightCurveMeV\>\"", "<>", 
       RowBox[{"ToString", "[", 
        RowBox[{
         RowBox[{"FileNameSplit", "[", 
          RowBox[{
          "bursts", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], 
          "]"}], "\[LeftDoubleBracket]", 
         RowBox[{"-", "1"}], "\[RightDoubleBracket]"}], "]"}], "<>", 
       "\"\<.pdf\>\""}], ",", 
      RowBox[{"ListLinePlot", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"mevData", "[", 
           RowBox[{"[", "i", "]"}], "]"}], ",", 
          RowBox[{"gevData", "[", 
           RowBox[{"[", "i", "]"}], "]"}], ",", 
          RowBox[{"mevData", "[", 
           RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
        RowBox[{"PlotRange", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"ranges", "[", 
            RowBox[{"[", "i", "]"}], "]"}], ",", "All"}], "}"}]}], ",", 
        RowBox[{"PlotStyle", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"Thick", ",", "Red"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"Thick", ",", 
             RowBox[{"RGBColor", "[", 
              RowBox[{"0", ",", "0", ",", "1", ",", ".3"}], "]"}]}], "}"}], 
           ",", 
           RowBox[{"{", 
            RowBox[{"Thick", ",", "Red"}], "}"}]}], "}"}]}], ",", 
        RowBox[{"Frame", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"True", ",", "False"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"True", ",", "False"}], "}"}]}], "}"}]}], ",", 
        RowBox[{"FrameLabel", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"\"\<Time, sec\>\"", ",", "\"\<Photon Fraction\>\""}], 
          "}"}]}], ",", 
        RowBox[{"PlotLegends", "\[Rule]", 
         RowBox[{"Placed", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Style", "[", 
              RowBox[{"\"\<0.1 \[Dash] 1 GeV\>\"", ",", "Red", ",", 
               RowBox[{"FontSize", "\[Rule]", "fontSize"}]}], "]"}], ",", 
             RowBox[{"Style", "[", 
              RowBox[{"\"\<1 \[Dash] 300 GeV\>\"", ",", 
               RowBox[{"RGBColor", "[", 
                RowBox[{"0", ",", "0", ",", "1", ",", ".3"}], "]"}], ",", 
               RowBox[{"FontSize", "\[Rule]", "fontSize"}]}], "]"}], ",", 
             "None"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0.79", ",", "0.20"}], "}"}]}], "]"}]}], ",", 
        RowBox[{"ImageSize", "\[Rule]", "imageSize"}], ",", 
        RowBox[{"FrameStyle", "\[Rule]", 
         RowBox[{"Directive", "[", 
          RowBox[{"Gray", ",", 
           RowBox[{"FontSize", "\[Rule]", "fontSize"}]}], "]"}]}], ",", 
        RowBox[{"LabelStyle", "\[Rule]", 
         RowBox[{"Directive", "[", 
          RowBox[{"FontSize", "\[Rule]", 
           RowBox[{"OptionValue", "[", "FontSize", "]"}]}], "]"}]}]}], 
       "]"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "1", ",", 
      RowBox[{"Length", "[", "mevData", "]"}]}], "}"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Do", "[", 
   RowBox[{
    RowBox[{"Export", "[", 
     RowBox[{
      RowBox[{"\"\<Presentation/lightCurveGeV\>\"", "<>", 
       RowBox[{"ToString", "[", 
        RowBox[{
         RowBox[{"FileNameSplit", "[", 
          RowBox[{
          "bursts", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], 
          "]"}], "\[LeftDoubleBracket]", 
         RowBox[{"-", "1"}], "\[RightDoubleBracket]"}], "]"}], "<>", 
       "\"\<.pdf\>\""}], ",", 
      RowBox[{"ListLinePlot", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"mevData", "[", 
           RowBox[{"[", "i", "]"}], "]"}], ",", 
          RowBox[{"gevData", "[", 
           RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
        RowBox[{"PlotRange", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"ranges", "[", 
            RowBox[{"[", "i", "]"}], "]"}], ",", "All"}], "}"}]}], ",", 
        RowBox[{"PlotStyle", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"Thick", ",", 
             RowBox[{"RGBColor", "[", 
              RowBox[{"1", ",", "0", ",", "0", ",", ".3"}], "]"}]}], "}"}], 
           ",", 
           RowBox[{"{", 
            RowBox[{"Thick", ",", "Blue"}], "}"}]}], "}"}]}], ",", 
        RowBox[{"Frame", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"True", ",", "False"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"True", ",", "False"}], "}"}]}], "}"}]}], ",", 
        RowBox[{"FrameLabel", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"\"\<Time, sec\>\"", ",", "\"\<Photon Fraction\>\""}], 
          "}"}]}], ",", 
        RowBox[{"PlotLegends", "\[Rule]", 
         RowBox[{"Placed", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Style", "[", 
              RowBox[{"\"\<0.1 \[Dash] 1 GeV\>\"", ",", 
               RowBox[{"RGBColor", "[", 
                RowBox[{"1", ",", "0", ",", "0", ",", ".3"}], "]"}], ",", 
               RowBox[{"FontSize", "\[Rule]", "fontSize"}]}], "]"}], ",", 
             RowBox[{"Style", "[", 
              RowBox[{"\"\<1 \[Dash] 300 GeV\>\"", ",", "Blue", ",", 
               RowBox[{"FontSize", "\[Rule]", "fontSize"}]}], "]"}]}], "}"}], 
           ",", 
           RowBox[{"{", 
            RowBox[{"0.79", ",", "0.20"}], "}"}]}], "]"}]}], ",", 
        RowBox[{"ImageSize", "\[Rule]", "imageSize"}], ",", 
        RowBox[{"FrameStyle", "\[Rule]", 
         RowBox[{"Directive", "[", 
          RowBox[{"Gray", ",", 
           RowBox[{"FontSize", "\[Rule]", "fontSize"}]}], "]"}]}], ",", 
        RowBox[{"LabelStyle", "\[Rule]", 
         RowBox[{"Directive", "[", 
          RowBox[{"FontSize", "\[Rule]", 
           RowBox[{"OptionValue", "[", "FontSize", "]"}]}], "]"}]}]}], 
       "]"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "1", ",", 
      RowBox[{"Length", "[", "mevData", "]"}]}], "}"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Do", "[", 
   RowBox[{
    RowBox[{"Export", "[", 
     RowBox[{
      RowBox[{"\"\<Presentation/lightCurveArrow\>\"", "<>", 
       RowBox[{"ToString", "[", 
        RowBox[{
         RowBox[{"FileNameSplit", "[", 
          RowBox[{
          "bursts", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], 
          "]"}], "\[LeftDoubleBracket]", 
         RowBox[{"-", "1"}], "\[RightDoubleBracket]"}], "]"}], "<>", 
       "\"\<.pdf\>\""}], ",", 
      RowBox[{"Show", "[", 
       RowBox[{
        RowBox[{"ListLinePlot", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"mevData", "[", 
             RowBox[{"[", "i", "]"}], "]"}], ",", 
            RowBox[{"gevData", "[", 
             RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
          RowBox[{"PlotRange", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"ranges", "[", 
              RowBox[{"[", "i", "]"}], "]"}], ",", "All"}], "}"}]}], ",", 
          RowBox[{"PlotStyle", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"Thick", ",", "Red"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"Thick", ",", "Blue"}], "}"}]}], "}"}]}], ",", 
          RowBox[{"Frame", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"True", ",", "False"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"True", ",", "False"}], "}"}]}], "}"}]}], ",", 
          RowBox[{"FrameLabel", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"\"\<Time, sec\>\"", ",", "\"\<Photon Fraction\>\""}], 
            "}"}]}], ",", 
          RowBox[{"PlotLegends", "\[Rule]", 
           RowBox[{"Placed", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Style", "[", 
                RowBox[{"\"\<0.1 \[Dash] 1 GeV\>\"", ",", "Red", ",", 
                 RowBox[{"FontSize", "\[Rule]", "fontSize"}]}], "]"}], ",", 
               RowBox[{"Style", "[", 
                RowBox[{"\"\<1 \[Dash] 300 GeV\>\"", ",", "Blue", ",", 
                 RowBox[{"FontSize", "\[Rule]", "fontSize"}]}], "]"}]}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0.79", ",", "0.20"}], "}"}]}], "]"}]}], ",", 
          RowBox[{"ImageSize", "\[Rule]", "imageSize"}], ",", 
          RowBox[{"FrameStyle", "\[Rule]", 
           RowBox[{"Directive", "[", 
            RowBox[{"Gray", ",", 
             RowBox[{"FontSize", "\[Rule]", "fontSize"}]}], "]"}]}], ",", 
          RowBox[{"LabelStyle", "\[Rule]", 
           RowBox[{"Directive", "[", 
            RowBox[{"FontSize", "\[Rule]", 
             RowBox[{"OptionValue", "[", "FontSize", "]"}]}], "]"}]}]}], 
         "]"}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"arrow", "[", 
           RowBox[{
            RowBox[{"probData", "\[LeftDoubleBracket]", 
             RowBox[{"i", ",", "#", ",", "3"}], "\[RightDoubleBracket]"}], 
            ",", 
            RowBox[{"probData", "\[LeftDoubleBracket]", 
             RowBox[{"i", ",", "#", ",", "4"}], "\[RightDoubleBracket]"}], 
            ",", 
            RowBox[{"probData", "\[LeftDoubleBracket]", 
             RowBox[{"i", ",", "#", ",", "5"}], "\[RightDoubleBracket]"}], 
            ",", "0.08"}], "]"}], "&"}], "@", 
         RowBox[{
          RowBox[{"Position", "[", 
           RowBox[{
            RowBox[{"probData", "\[LeftDoubleBracket]", 
             RowBox[{"i", ",", "All", ",", "1"}], "\[RightDoubleBracket]"}], 
            ",", "1"}], "]"}], "\[LeftDoubleBracket]", 
          RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}]}]}], "]"}]}], 
     "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "1", ",", 
      RowBox[{"Length", "[", "mevData", "]"}]}], "}"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Do", "[", 
  RowBox[{
   RowBox[{"Export", "[", 
    RowBox[{
     RowBox[{"\"\<Presentation/lightCurveStretched\>\"", "<>", 
      RowBox[{"ToString", "[", 
       RowBox[{
        RowBox[{"FileNameSplit", "[", 
         RowBox[{
         "bursts", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], 
         "]"}], "\[LeftDoubleBracket]", 
        RowBox[{"-", "1"}], "\[RightDoubleBracket]"}], "]"}], "<>", 
      "\"\<.pdf\>\""}], ",", 
     RowBox[{"ListLinePlot", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
         "mevData", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], 
         ",", 
         RowBox[{
          RowBox[{
          "mevData", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], "/.", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"t_", ",", "c_"}], "}"}], "\[RuleDelayed]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{
              "stretchingFactors", "\[LeftDoubleBracket]", "i", 
               "\[RightDoubleBracket]"}], "t"}], ",", "c"}], "}"}]}]}], ",", 
         RowBox[{
         "gevData", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}]}], 
        "}"}], ",", 
       RowBox[{"PlotRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"ranges", "[", 
           RowBox[{"[", "i", "]"}], "]"}], ",", "All"}], "}"}]}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"Thick", ",", 
            RowBox[{"RGBColor", "[", 
             RowBox[{"1", ",", "0", ",", "0", ",", ".2"}], "]"}]}], "}"}], 
          ",", 
          RowBox[{"{", 
           RowBox[{"Thick", ",", "Red"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"Thick", ",", "Blue"}], "}"}]}], "}"}]}], ",", 
       RowBox[{"Frame", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"True", ",", "False"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"True", ",", "False"}], "}"}]}], "}"}]}], ",", 
       RowBox[{"FrameLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"\"\<Time, sec\>\"", ",", "\"\<Photon Fraction\>\""}], 
         "}"}]}], ",", 
       RowBox[{"PlotLegends", "\[Rule]", 
        RowBox[{"Placed", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"None", ",", 
            RowBox[{"Style", "[", 
             RowBox[{"\"\<0.1 \[Dash] 1 GeV\>\"", ",", "Red", ",", 
              RowBox[{"FontSize", "\[Rule]", "fontSize"}]}], "]"}], ",", 
            RowBox[{"Style", "[", 
             RowBox[{"\"\<1 \[Dash] 300 GeV\>\"", ",", "Blue", ",", 
              RowBox[{"FontSize", "\[Rule]", "fontSize"}]}], "]"}]}], "}"}], 
          ",", 
          RowBox[{"{", 
           RowBox[{"0.79", ",", "0.20"}], "}"}]}], "]"}]}], ",", 
       RowBox[{"ImageSize", "\[Rule]", "imageSize"}], ",", 
       RowBox[{"FrameStyle", "\[Rule]", 
        RowBox[{"Directive", "[", 
         RowBox[{"Gray", ",", 
          RowBox[{"FontSize", "\[Rule]", "fontSize"}]}], "]"}]}], ",", 
       RowBox[{"LabelStyle", "\[Rule]", 
        RowBox[{"Directive", "[", 
         RowBox[{"FontSize", "\[Rule]", 
          RowBox[{"OptionValue", "[", "FontSize", "]"}]}], "]"}]}]}], "]"}]}],
     "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "1", ",", 
     RowBox[{"Length", "[", "mevData", "]"}]}], "}"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Do", "[", 
   RowBox[{
    RowBox[{"Export", "[", 
     RowBox[{
      RowBox[{"\"\<Presentation/lightCurveStretchedArrow\>\"", "<>", 
       RowBox[{"ToString", "[", 
        RowBox[{
         RowBox[{"FileNameSplit", "[", 
          RowBox[{
          "bursts", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], 
          "]"}], "\[LeftDoubleBracket]", 
         RowBox[{"-", "1"}], "\[RightDoubleBracket]"}], "]"}], "<>", 
       "\"\<.pdf\>\""}], ",", 
      RowBox[{"Show", "[", 
       RowBox[{
        RowBox[{"ListLinePlot", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{
            "mevData", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}],
             ",", 
            RowBox[{
             RowBox[{
             "mevData", "\[LeftDoubleBracket]", "i", 
              "\[RightDoubleBracket]"}], "/.", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"t_", ",", "c_"}], "}"}], "\[RuleDelayed]", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{
                 RowBox[{
                 "stretchingFactors", "\[LeftDoubleBracket]", "i", 
                  "\[RightDoubleBracket]"}], "t"}], ",", "c"}], "}"}]}]}], 
            ",", 
            RowBox[{
            "gevData", "\[LeftDoubleBracket]", "i", 
             "\[RightDoubleBracket]"}]}], "}"}], ",", 
          RowBox[{"PlotRange", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"ranges", "[", 
              RowBox[{"[", "i", "]"}], "]"}], ",", "All"}], "}"}]}], ",", 
          RowBox[{"PlotStyle", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"Thick", ",", 
               RowBox[{"RGBColor", "[", 
                RowBox[{"1", ",", "0", ",", "0", ",", ".2"}], "]"}]}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"Thick", ",", "Red"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"Thick", ",", "Blue"}], "}"}]}], "}"}]}], ",", 
          RowBox[{"Frame", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"True", ",", "False"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"True", ",", "False"}], "}"}]}], "}"}]}], ",", 
          RowBox[{"FrameLabel", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"\"\<Time, sec\>\"", ",", "\"\<Photon Fraction\>\""}], 
            "}"}]}], ",", 
          RowBox[{"PlotLegends", "\[Rule]", 
           RowBox[{"Placed", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"None", ",", 
               RowBox[{"Style", "[", 
                RowBox[{"\"\<0.1 \[Dash] 1 GeV\>\"", ",", "Red", ",", 
                 RowBox[{"FontSize", "\[Rule]", "fontSize"}]}], "]"}], ",", 
               RowBox[{"Style", "[", 
                RowBox[{"\"\<1 \[Dash] 300 GeV\>\"", ",", "Blue", ",", 
                 RowBox[{"FontSize", "\[Rule]", "fontSize"}]}], "]"}]}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0.79", ",", "0.20"}], "}"}]}], "]"}]}], ",", 
          RowBox[{"ImageSize", "\[Rule]", "imageSize"}], ",", 
          RowBox[{"FrameStyle", "\[Rule]", 
           RowBox[{"Directive", "[", 
            RowBox[{"Gray", ",", 
             RowBox[{"FontSize", "\[Rule]", "fontSize"}]}], "]"}]}], ",", 
          RowBox[{"LabelStyle", "\[Rule]", 
           RowBox[{"Directive", "[", 
            RowBox[{"FontSize", "\[Rule]", 
             RowBox[{"OptionValue", "[", "FontSize", "]"}]}], "]"}]}]}], 
         "]"}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"arrow", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
             "stretchingFactors", "\[LeftDoubleBracket]", "i", 
              "\[RightDoubleBracket]"}], 
             RowBox[{"probData", "\[LeftDoubleBracket]", 
              RowBox[{"i", ",", "#", ",", "3"}], "\[RightDoubleBracket]"}]}], 
            ",", 
            RowBox[{"probData", "\[LeftDoubleBracket]", 
             RowBox[{"i", ",", "#", ",", "4"}], "\[RightDoubleBracket]"}], 
            ",", 
            RowBox[{"probData", "\[LeftDoubleBracket]", 
             RowBox[{"i", ",", "#", ",", "5"}], "\[RightDoubleBracket]"}], 
            ",", "0.08"}], "]"}], "&"}], "@", 
         RowBox[{
          RowBox[{"Ordering", "[", 
           RowBox[{
            RowBox[{"probData", "\[LeftDoubleBracket]", 
             RowBox[{"i", ",", "All", ",", "2"}], "\[RightDoubleBracket]"}], 
            ",", 
            RowBox[{"-", "1"}]}], "]"}], "\[LeftDoubleBracket]", "1", 
          "\[RightDoubleBracket]"}]}]}], "]"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "1", ",", 
      RowBox[{"Length", "[", "mevData", "]"}]}], "}"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Do", "[", 
   RowBox[{
    RowBox[{"Export", "[", 
     RowBox[{
      RowBox[{"\"\<Presentation/probabilities\>\"", "<>", 
       RowBox[{"ToString", "[", 
        RowBox[{
         RowBox[{"FileNameSplit", "[", 
          RowBox[{
          "bursts", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], 
          "]"}], "\[LeftDoubleBracket]", 
         RowBox[{"-", "1"}], "\[RightDoubleBracket]"}], "]"}], "<>", 
       "\"\<.pdf\>\""}], ",", "\[IndentingNewLine]", 
      RowBox[{"ListLogPlot", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
         "probData", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], "/.", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"\[Kappa]_", ",", "p_", ",", "a_", ",", "b_", ",", "c_"}], 
           "}"}], "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"\[Kappa]", ",", "p"}], "}"}]}]}], ",", 
        RowBox[{"Joined", "\[Rule]", "True"}], ",", 
        RowBox[{"PlotRange", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "10"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"1.*^-12", ",", "1."}], "}"}]}], "}"}]}], ",", 
        RowBox[{"PlotStyle", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"Thick", ",", 
           RowBox[{"RGBColor", "[", 
            RowBox[{"0.5", ",", "0", ",", "0.5"}], "]"}]}], "}"}]}], ",", 
        RowBox[{"Frame", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"True", ",", "False"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"True", ",", "False"}], "}"}]}], "}"}]}], ",", 
        RowBox[{"FrameLabel", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
          "\"\<Stretching Factor\>\"", ",", "\"\<KS Probability\>\""}], 
          "}"}]}], ",", 
        RowBox[{"ImageSize", "\[Rule]", "imageSize"}], ",", 
        RowBox[{"FrameStyle", "\[Rule]", 
         RowBox[{"Directive", "[", 
          RowBox[{"Gray", ",", 
           RowBox[{"FontSize", "\[Rule]", "fontSize"}]}], "]"}]}], ",", 
        RowBox[{"LabelStyle", "\[Rule]", 
         RowBox[{"Directive", "[", 
          RowBox[{"FontSize", "\[Rule]", 
           RowBox[{"OptionValue", "[", "FontSize", "]"}]}], "]"}]}]}], 
       "]"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "1", ",", 
      RowBox[{"Length", "[", "mevData", "]"}]}], "}"}]}], "]"}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.596901417566943*^9, 3.5969014298703938`*^9}, {
   3.602215510963944*^9, 3.60221551175172*^9}, {3.609922488975033*^9, 
   3.609922738324974*^9}, {3.6099231653094187`*^9, 3.6099231675748253`*^9}, {
   3.609923340172803*^9, 3.60992337147126*^9}, {3.609923781629249*^9, 
   3.6099237894496937`*^9}, 3.609923913962141*^9, {3.6099239698719254`*^9, 
   3.6099239717357473`*^9}, {3.609924072949731*^9, 3.609924073086207*^9}, {
   3.609972079966633*^9, 3.609972141490472*^9}, {3.6099743242124968`*^9, 
   3.609974343050313*^9}, {3.6099797226523333`*^9, 3.609979722798706*^9}, {
   3.6105853168854103`*^9, 3.610585374267765*^9}, {3.610585420584169*^9, 
   3.610585630055912*^9}, {3.6105856833061333`*^9, 3.6105856859803953`*^9}, {
   3.61058578944057*^9, 3.6105857935310183`*^9}, {3.610585832736731*^9, 
   3.6105858961358967`*^9}, {3.6108763898385963`*^9, 3.610876396219652*^9}, {
   3.6108765816618*^9, 3.610876581741659*^9}, {3.610877742985663*^9, 
   3.61087775082073*^9}, {3.610877814411359*^9, 3.6108778333829107`*^9}, {
   3.610877901092267*^9, 3.61087790546931*^9}, {3.610877949288672*^9, 
   3.610877968253372*^9}, {3.610880367986475*^9, 3.6108803708050203`*^9}, {
   3.610881041704081*^9, 3.610881058477166*^9}, {3.6108812338421097`*^9, 
   3.610881261505311*^9}, {3.610881321362818*^9, 3.6108813378124943`*^9}, {
   3.6108814220101337`*^9, 3.610881444987808*^9}, 3.610888790013906*^9, {
   3.610894290403256*^9, 3.610894322057729*^9}, {3.610894771639104*^9, 
   3.610894776636917*^9}, {3.6108950757158413`*^9, 3.610895088692451*^9}, {
   3.610932263763562*^9, 3.610932375982188*^9}, {3.610932450969349*^9, 
   3.610932452078947*^9}, {3.6109325471983624`*^9, 3.610932547328372*^9}, {
   3.610932616113578*^9, 3.6109326162447243`*^9}, {3.610932690437449*^9, 
   3.610932800611597*^9}, {3.610932899635867*^9, 3.610932901432639*^9}, {
   3.610933079230461*^9, 3.610933098275571*^9}, {3.61093313785247*^9, 
   3.6109331628718853`*^9}, {3.610933219324635*^9, 3.610933255175129*^9}, {
   3.610933407975793*^9, 3.6109334128836718`*^9}, {3.610933483728244*^9, 
   3.610933483868659*^9}, {3.6109336213610764`*^9, 3.610933629416643*^9}, {
   3.610933778595759*^9, 3.610933804969139*^9}, {3.610933857563305*^9, 
   3.6109338630116262`*^9}, {3.6109339094020433`*^9, 3.610933918807749*^9}, {
   3.610933976050831*^9, 3.610934007093012*^9}, {3.610934071054606*^9, 
   3.6109340956533957`*^9}, {3.610934230200841*^9, 3.6109342409478073`*^9}, {
   3.610934342650633*^9, 3.610934352273933*^9}, {3.610934609426957*^9, 
   3.6109346316140347`*^9}, {3.610940236655019*^9, 3.6109402556536207`*^9}, {
   3.6109407621544456`*^9, 3.6109407710158367`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Import", "::", "nffil"}], "MessageName"], ":", 
  " ", "\<\"File not found during \[NoBreak]\\!\\(Import\\)\[NoBreak]. \\!\\(\
\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/Import/nffil\\\", \
ButtonNote -> \\\"Import::nffil\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.612502626517663*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Import", "::", "nffil"}], "MessageName"], ":", 
  " ", "\<\"File not found during \[NoBreak]\\!\\(Import\\)\[NoBreak]. \\!\\(\
\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/Import/nffil\\\", \
ButtonNote -> \\\"Import::nffil\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.612502626597177*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Import", "::", "nffil"}], "MessageName"], ":", 
  " ", "\<\"File not found during \[NoBreak]\\!\\(Import\\)\[NoBreak]. \\!\\(\
\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/Import/nffil\\\", \
ButtonNote -> \\\"Import::nffil\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.612502626599032*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], ":", 
  " ", "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(Import :: \
nffil\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.612502626670677*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Import", "::", "nffil"}], "MessageName"], ":", 
  " ", "\<\"File not found during \[NoBreak]\\!\\(Import\\)\[NoBreak]. \\!\\(\
\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/Import/nffil\\\", \
ButtonNote -> \\\"Import::nffil\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6125026267268972`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Import", "::", "nffil"}], "MessageName"], ":", 
  " ", "\<\"File not found during \[NoBreak]\\!\\(Import\\)\[NoBreak]. \\!\\(\
\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/Import/nffil\\\", \
ButtonNote -> \\\"Import::nffil\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.612502626729109*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Import", "::", "nffil"}], "MessageName"], ":", 
  " ", "\<\"File not found during \[NoBreak]\\!\\(Import\\)\[NoBreak]. \\!\\(\
\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/Import/nffil\\\", \
ButtonNote -> \\\"Import::nffil\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.612502626792541*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], ":", 
  " ", "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(Import :: \
nffil\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.61250262685944*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Import", "::", "nffil"}], "MessageName"], ":", 
  " ", "\<\"File not found during \[NoBreak]\\!\\(Import\\)\[NoBreak]. \\!\\(\
\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/Import/nffil\\\", \
ButtonNote -> \\\"Import::nffil\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.612502626861608*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Import", "::", "nffil"}], "MessageName"], ":", 
  " ", "\<\"File not found during \[NoBreak]\\!\\(Import\\)\[NoBreak]. \\!\\(\
\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/Import/nffil\\\", \
ButtonNote -> \\\"Import::nffil\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.612502626925448*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Import", "::", "nffil"}], "MessageName"], ":", 
  " ", "\<\"File not found during \[NoBreak]\\!\\(Import\\)\[NoBreak]. \\!\\(\
\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/Import/nffil\\\", \
ButtonNote -> \\\"Import::nffil\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.612502626927759*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], ":", 
  " ", "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(Import :: \
nffil\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.612502626992963*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Symbol", "::", "argx"}], "MessageName"], ":", 
  " ", "\<\"\[NoBreak]\\!\\(Symbol\\)\[NoBreak] called with \[NoBreak]\\!\\(0\
\\)\[NoBreak] arguments; 1 argument is expected. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/argx\\\", ButtonNote -> \
\\\"Symbol::argx\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.612502627061617*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Part", "::", "partw"}], "MessageName"], ":", 
  " ", "\<\"Part \[NoBreak]\\!\\(1\\)\[NoBreak] of \[NoBreak]\\!\\({}\\)\
\[NoBreak] does not exist. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/partw\\\", ButtonNote -> \
\\\"Part::partw\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6125026271279173`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Part", "::", "pspec"}], "MessageName"], ":", 
  " ", "\<\"Part specification \[NoBreak]\\!\\(\\(\\({}\\)\\) \
\[LeftDoubleBracket] \\(\\(1, 1\\)\\) \[RightDoubleBracket]\\)\[NoBreak] is \
neither a machine-sized integer nor a list of machine-sized integers. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/pspec\\\", \
ButtonNote -> \\\"Part::pspec\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6125026271953707`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Part", "::", "partw"}], "MessageName"], ":", 
  " ", "\<\"Part \[NoBreak]\\!\\(1\\)\[NoBreak] of \[NoBreak]\\!\\({}\\)\
\[NoBreak] does not exist. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/partw\\\", ButtonNote -> \
\\\"Part::partw\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.612502627257897*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Part", "::", "pspec"}], "MessageName"], ":", 
  " ", "\<\"Part specification \[NoBreak]\\!\\(\\(\\({}\\)\\) \
\[LeftDoubleBracket] \\(\\(1, 1\\)\\) \[RightDoubleBracket]\\)\[NoBreak] is \
neither a machine-sized integer nor a list of machine-sized integers. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/pspec\\\", \
ButtonNote -> \\\"Part::pspec\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6125026273304167`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Part", "::", "pspec"}], "MessageName"], ":", 
  " ", "\<\"Part specification \[NoBreak]\\!\\(\\(\\({}\\)\\) \
\[LeftDoubleBracket] \\(\\(1, 1\\)\\) \[RightDoubleBracket]\\)\[NoBreak] is \
neither a machine-sized integer nor a list of machine-sized integers. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/pspec\\\", \
ButtonNote -> \\\"Part::pspec\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6125026273911057`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], ":", 
  " ", "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(Part :: \
pspec\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.612502627441942*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Symbol", "::", "argx"}], "MessageName"], ":", 
  " ", "\<\"\[NoBreak]\\!\\(Symbol\\)\[NoBreak] called with \[NoBreak]\\!\\(0\
\\)\[NoBreak] arguments; 1 argument is expected. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/argx\\\", ButtonNote -> \
\\\"Symbol::argx\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.612502627510592*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Part", "::", "partw"}], "MessageName"], ":", 
  " ", "\<\"Part \[NoBreak]\\!\\(1\\)\[NoBreak] of \[NoBreak]\\!\\({}\\)\
\[NoBreak] does not exist. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/partw\\\", ButtonNote -> \
\\\"Part::partw\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6125026275742807`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], ":", 
  " ", "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(Part :: \
partw\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.612502627645432*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Symbol", "::", "argx"}], "MessageName"], ":", 
  " ", "\<\"\[NoBreak]\\!\\(Symbol\\)\[NoBreak] called with \[NoBreak]\\!\\(0\
\\)\[NoBreak] arguments; 1 argument is expected. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/argx\\\", ButtonNote -> \
\\\"Symbol::argx\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6125026277166452`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], ":", 
  " ", "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(Symbol :: \
argx\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.612502627777763*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Symbol", "::", "argx"}], "MessageName"], ":", 
  " ", "\<\"\[NoBreak]\\!\\(Symbol\\)\[NoBreak] called with \[NoBreak]\\!\\(0\
\\)\[NoBreak] arguments; 1 argument is expected. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/argx\\\", ButtonNote -> \
\\\"Symbol::argx\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.612502627842227*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Take", "::", "take"}], "MessageName"], ":", 
  " ", "\<\"Cannot take positions \[NoBreak]\\!\\(-1\\)\[NoBreak] through \
\[NoBreak]\\!\\(-1\\)\[NoBreak] in \[NoBreak]\\!\\({}\\)\[NoBreak]. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/Take/take\\\", \
ButtonNote -> \\\"Take::take\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.612502627912889*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Part", "::", "pspec"}], "MessageName"], ":", 
  " ", "\<\"Part specification \[NoBreak]\\!\\(Symbol[]\\)\[NoBreak] is \
neither a machine-sized integer nor a list of machine-sized integers. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/pspec\\\", \
ButtonNote -> \\\"Part::pspec\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.612502627980723*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Part", "::", "pspec"}], "MessageName"], ":", 
  " ", "\<\"Part specification \[NoBreak]\\!\\(Symbol[]\\)\[NoBreak] is \
neither a machine-sized integer nor a list of machine-sized integers. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/pspec\\\", \
ButtonNote -> \\\"Part::pspec\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6125026280376873`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Part", "::", "pspec"}], "MessageName"], ":", 
  " ", "\<\"Part specification \[NoBreak]\\!\\(Symbol[]\\)\[NoBreak] is \
neither a machine-sized integer nor a list of machine-sized integers. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/pspec\\\", \
ButtonNote -> \\\"Part::pspec\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.612502628108283*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], ":", 
  " ", "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(Part :: \
pspec\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.612502628110366*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Symbol", "::", "argx"}], "MessageName"], ":", 
  " ", "\<\"\[NoBreak]\\!\\(Symbol\\)\[NoBreak] called with \[NoBreak]\\!\\(0\
\\)\[NoBreak] arguments; 1 argument is expected. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/argx\\\", ButtonNote -> \
\\\"Symbol::argx\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.612502628174858*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Take", "::", "take"}], "MessageName"], ":", 
  " ", "\<\"Cannot take positions \[NoBreak]\\!\\(-1\\)\[NoBreak] through \
\[NoBreak]\\!\\(-1\\)\[NoBreak] in \[NoBreak]\\!\\({}\\)\[NoBreak]. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/Take/take\\\", \
ButtonNote -> \\\"Take::take\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6125026282364273`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Symbol", "::", "argx"}], "MessageName"], ":", 
  " ", "\<\"\[NoBreak]\\!\\(Symbol\\)\[NoBreak] called with \[NoBreak]\\!\\(0\
\\)\[NoBreak] arguments; 1 argument is expected. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/argx\\\", ButtonNote -> \
\\\"Symbol::argx\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6125026282870903`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], ":", 
  " ", "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(Symbol :: \
argx\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.612502628352893*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Take", "::", "take"}], "MessageName"], ":", 
  " ", "\<\"Cannot take positions \[NoBreak]\\!\\(-1\\)\[NoBreak] through \
\[NoBreak]\\!\\(-1\\)\[NoBreak] in \[NoBreak]\\!\\({}\\)\[NoBreak]. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/Take/take\\\", \
ButtonNote -> \\\"Take::take\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.612502628406234*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], ":", 
  " ", "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(Take :: take\\), \
\\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.612502628408103*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Symbol", "::", "argx"}], "MessageName"], ":", 
  " ", "\<\"\[NoBreak]\\!\\(Symbol\\)\[NoBreak] called with \[NoBreak]\\!\\(0\
\\)\[NoBreak] arguments; 1 argument is expected. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/argx\\\", ButtonNote -> \
\\\"Symbol::argx\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.61250262847288*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Take", "::", "take"}], "MessageName"], ":", 
  " ", "\<\"Cannot take positions \[NoBreak]\\!\\(-1\\)\[NoBreak] through \
\[NoBreak]\\!\\(-1\\)\[NoBreak] in \[NoBreak]\\!\\({}\\)\[NoBreak]. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/Take/take\\\", \
ButtonNote -> \\\"Take::take\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.612502628536306*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Part", "::", "pspec"}], "MessageName"], ":", 
  " ", "\<\"Part specification \[NoBreak]\\!\\(Symbol[]\\)\[NoBreak] is \
neither a machine-sized integer nor a list of machine-sized integers. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/pspec\\\", \
ButtonNote -> \\\"Part::pspec\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.612502628601384*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Symbol", "::", "argx"}], "MessageName"], ":", 
  " ", "\<\"\[NoBreak]\\!\\(Symbol\\)\[NoBreak] called with \[NoBreak]\\!\\(0\
\\)\[NoBreak] arguments; 1 argument is expected. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/argx\\\", ButtonNote -> \
\\\"Symbol::argx\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.612502628670837*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Take", "::", "take"}], "MessageName"], ":", 
  " ", "\<\"Cannot take positions \[NoBreak]\\!\\(-1\\)\[NoBreak] through \
\[NoBreak]\\!\\(-1\\)\[NoBreak] in \[NoBreak]\\!\\({}\\)\[NoBreak]. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/Take/take\\\", \
ButtonNote -> \\\"Take::take\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.612502628722443*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Part", "::", "pspec"}], "MessageName"], ":", 
  " ", "\<\"Part specification \[NoBreak]\\!\\(Symbol[]\\)\[NoBreak] is \
neither a machine-sized integer nor a list of machine-sized integers. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/pspec\\\", \
ButtonNote -> \\\"Part::pspec\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.612502628789158*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Symbol", "::", "argx"}], "MessageName"], ":", 
  " ", "\<\"\[NoBreak]\\!\\(Symbol\\)\[NoBreak] called with \[NoBreak]\\!\\(0\
\\)\[NoBreak] arguments; 1 argument is expected. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/argx\\\", ButtonNote -> \
\\\"Symbol::argx\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.612502628855433*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], ":", 
  " ", "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(Symbol :: \
argx\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.612502628925006*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Take", "::", "take"}], "MessageName"], ":", 
  " ", "\<\"Cannot take positions \[NoBreak]\\!\\(-1\\)\[NoBreak] through \
\[NoBreak]\\!\\(-1\\)\[NoBreak] in \[NoBreak]\\!\\({}\\)\[NoBreak]. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/Take/take\\\", \
ButtonNote -> \\\"Take::take\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.61250262892691*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], ":", 
  " ", "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(Take :: take\\), \
\\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.612502628935087*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Part", "::", "pspec"}], "MessageName"], ":", 
  " ", "\<\"Part specification \[NoBreak]\\!\\(Symbol[]\\)\[NoBreak] is \
neither a machine-sized integer nor a list of machine-sized integers. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/pspec\\\", \
ButtonNote -> \\\"Part::pspec\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.612502629007598*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], ":", 
  " ", "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(Part :: \
pspec\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.612502629055175*^9}],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{3.612502635310981*^9}],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{3.6125026442982397`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Symbol", "::", "argx"}], "MessageName"], ":", 
  " ", "\<\"\[NoBreak]\\!\\(Symbol\\)\[NoBreak] called with \[NoBreak]\\!\\(0\
\\)\[NoBreak] arguments; 1 argument is expected. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/argx\\\", ButtonNote -> \
\\\"Symbol::argx\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.612502661929936*^9}],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{3.612502661984086*^9}],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{3.612502662097954*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Symbol", "::", "argx"}], "MessageName"], ":", 
  " ", "\<\"\[NoBreak]\\!\\(Symbol\\)\[NoBreak] called with \[NoBreak]\\!\\(0\
\\)\[NoBreak] arguments; 1 argument is expected. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/argx\\\", ButtonNote -> \
\\\"Symbol::argx\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.61250266216864*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Take", "::", "take"}], "MessageName"], ":", 
  " ", "\<\"Cannot take positions \[NoBreak]\\!\\(-1\\)\[NoBreak] through \
\[NoBreak]\\!\\(-1\\)\[NoBreak] in \[NoBreak]\\!\\({}\\)\[NoBreak]. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/Take/take\\\", \
ButtonNote -> \\\"Take::take\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.612502662229501*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Part", "::", "pspec"}], "MessageName"], ":", 
  " ", "\<\"Part specification \[NoBreak]\\!\\(Symbol[]\\)\[NoBreak] is \
neither a machine-sized integer nor a list of machine-sized integers. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/pspec\\\", \
ButtonNote -> \\\"Part::pspec\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.612502662280485*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Part", "::", "pspec"}], "MessageName"], ":", 
  " ", "\<\"Part specification \[NoBreak]\\!\\(Symbol[]\\)\[NoBreak] is \
neither a machine-sized integer nor a list of machine-sized integers. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/pspec\\\", \
ButtonNote -> \\\"Part::pspec\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.612502662383717*^9}],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{3.6125026624517097`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ListLogPlot", "::", "lpn"}], "MessageName"], ":", 
  " ", "\<\"\[NoBreak]\\!\\($Failed\\)\[NoBreak] is not a list of numbers or \
pairs of numbers. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/ListLogPlot\\\", ButtonNote -> \
\\\"ListLogPlot::lpn\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.612502662523164*^9}],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{3.612502662593512*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"probData", "\[LeftDoubleBracket]", 
  RowBox[{"3", ",", 
   RowBox[{
    RowBox[{"Position", "[", 
     RowBox[{
      RowBox[{"probData", "\[LeftDoubleBracket]", 
       RowBox[{"3", ",", "All", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
      "1"}], "]"}], "\[LeftDoubleBracket]", 
    RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}]}], 
  "\[RightDoubleBracket]"}]], "Input",
 CellChangeTimes->{{3.610943586654998*^9, 3.610943640320805*^9}, {
  3.610944068395627*^9, 3.610944070961995*^9}, {3.610945511163062*^9, 
  3.610945513070942*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "0.0290648`", ",", "58.0864`", ",", "0.825067`", ",", 
   "0.598324`"}], "}"}]], "Output",
 CellChangeTimes->{{3.610943604936904*^9, 3.610943640623645*^9}, 
   3.610944071309271*^9, 3.6109455134748383`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"probData", "\[LeftDoubleBracket]", 
  RowBox[{"2", ",", 
   RowBox[{
    RowBox[{"Ordering", "[", 
     RowBox[{
      RowBox[{"probData", "\[LeftDoubleBracket]", 
       RowBox[{"2", ",", "All", ",", "2"}], "\[RightDoubleBracket]"}], ",", 
      RowBox[{"-", "1"}]}], "]"}], "\[LeftDoubleBracket]", "1", 
    "\[RightDoubleBracket]"}]}], "\[RightDoubleBracket]"}]], "Input",
 CellChangeTimes->{{3.610943871272645*^9, 3.6109438780389853`*^9}, {
  3.610944372757894*^9, 3.610944388476804*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.795178`", ",", "0.999862`", ",", "0.290114`", ",", "0.307692`", ",", 
   "0.236752`"}], "}"}]], "Output",
 CellChangeTimes->{
  3.610943878269075*^9, {3.6109443734009457`*^9, 3.610944388879507*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ksLines", "/.", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"a_", ",", "b_", ",", "c_"}], "}"}], "\[RuleDelayed]", 
   RowBox[{"c", "-", "b"}]}]}]], "Input",
 CellChangeTimes->{{3.610941995799758*^9, 3.6109420135141363`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.242193`", ",", 
   RowBox[{"-", "0.16232200000000002`"}], ",", 
   RowBox[{"-", "0.22674300000000003`"}], ",", "0.39847899999999997`"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.6109419980308247`*^9, 3.6109420139484367`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ksLinesStretched", "/.", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"a_", ",", "b_", ",", "c_"}], "}"}], "\[RuleDelayed]", 
   RowBox[{"c", "-", "b"}]}]}]], "Input",
 CellChangeTimes->{{3.610942251195323*^9, 3.61094225998282*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.16413899999999998`", ",", 
   RowBox[{"-", "0.07094000000000003`"}], ",", "0.148524`", ",", 
   "0.17355700000000002`"}], "}"}]], "Output",
 CellChangeTimes->{3.610942264277656*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["stretchingFactors"], "Input",
 CellChangeTimes->{{3.610942161285275*^9, 3.610942162113171*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1.44872`", ",", "0.795178`", ",", "0.634652`", ",", "2.89026`"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.610942162297702*^9, 3.610944192368224*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Kappa]Observed", "=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\"\<090902B\>\"", ",", 
       RowBox[{"{", 
        RowBox[{"0.363408", ",", "0.893437"}], "}"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"\"\<090510\>\"", ",", 
       RowBox[{"{", 
        RowBox[{"0.428137", ",", "1.60485"}], "}"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"\"\<080916C\>\"", ",", 
       RowBox[{"{", 
        RowBox[{"0.66529", ",", "3.31569"}], "}"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"\"\<090926A\>\"", ",", 
       RowBox[{"{", 
        RowBox[{"1.98759", ",", "6.61486"}], "}"}]}], "}"}]}], 
    "\[IndentingNewLine]", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{"\"\<Presentation/kappaDistributionHistogram.pdf\>\"", ",", 
    RowBox[{"\[Kappa]HistogramPlot", "[", 
     RowBox[{
      RowBox[{"sample4096", "\[LeftDoubleBracket]", 
       RowBox[{"All", ",", 
        RowBox[{"-", "1"}]}], "\[RightDoubleBracket]"}], ",", 
      RowBox[{"{", "}"}], ",", 
      RowBox[{"ImageSize", "\[Rule]", "imageSize"}], ",", 
      RowBox[{"FrameStyle", "\[Rule]", "Gray"}]}], "]"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
   "\"\<Presentation/kappaDistributionHistogramObservations.pdf\>\"", ",", 
    RowBox[{"\[Kappa]HistogramPlot", "[", 
     RowBox[{
      RowBox[{"sample4096", "\[LeftDoubleBracket]", 
       RowBox[{"All", ",", 
        RowBox[{"-", "1"}]}], "\[RightDoubleBracket]"}], ",", 
      "\[Kappa]Observed", ",", 
      RowBox[{"ImageSize", "\[Rule]", "imageSize"}], ",", 
      RowBox[{"FrameStyle", "\[Rule]", "Gray"}]}], "]"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{"\"\<Presentation/kappaDistributionCDF.pdf\>\"", ",", 
    RowBox[{"\[Kappa]CDFPlot", "[", 
     RowBox[{
      RowBox[{"sample4096", "\[LeftDoubleBracket]", 
       RowBox[{"All", ",", 
        RowBox[{"-", "1"}]}], "\[RightDoubleBracket]"}], ",", 
      "\[Kappa]Observed", ",", 
      RowBox[{"PlotPoints", "\[Rule]", "4096"}], ",", 
      RowBox[{"ImageSize", "\[Rule]", "imageSize"}], ",", 
      RowBox[{"FrameStyle", "\[Rule]", "Gray"}]}], "]"}]}], "]"}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.594342734190405*^9, 3.594342752715184*^9}, {
  3.59434286903363*^9, 3.594342900024119*^9}, {3.594343771437028*^9, 
  3.594343773132771*^9}, {3.594852329377499*^9, 3.594852332247513*^9}, {
  3.5966927652249002`*^9, 3.596692799285636*^9}, {3.596693274643531*^9, 
  3.596693288462693*^9}, {3.5966933274676723`*^9, 3.5966933546761417`*^9}, {
  3.603446939569559*^9, 3.603447017756761*^9}, {3.603447061587146*^9, 
  3.603447066057764*^9}, {3.6096359148737793`*^9, 3.6096359282070913`*^9}, {
  3.609664424011471*^9, 3.60966451296507*^9}, {3.60966459359473*^9, 
  3.609664596730783*^9}, {3.610588444213026*^9, 3.610588458518063*^9}, {
  3.610847579777289*^9, 3.610847612761159*^9}, {3.610847904135222*^9, 
  3.610847913972609*^9}, {3.611106933778818*^9, 3.61110695190068*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"highFraction\[Kappa]Observed", "=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"0.0643747", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"1", "-", 
           RowBox[{"1", "/", 
            SqrtBox["17"]}]}], ",", 
          RowBox[{"1", "+", 
           RowBox[{"1", "/", 
            SqrtBox["17"]}]}]}], "}"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"0.665059", ",", "3.31859"}], "}"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"0.141928", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"1", "-", 
           RowBox[{"1", "/", 
            SqrtBox["26"]}]}], ",", 
          RowBox[{"1", "+", 
           RowBox[{"1", "/", 
            SqrtBox["26"]}]}]}], "}"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"0.42816", ",", "1.60589"}], "}"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"0.165373", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"1", "-", 
           RowBox[{"1", "/", 
            SqrtBox["51.1454"]}]}], ",", 
          RowBox[{"1", "+", 
           RowBox[{"1", "/", 
            SqrtBox["51.1454"]}]}]}], "}"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"0.363328", ",", "0.893781"}], "}"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"0.0606777", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"1", "-", 
           RowBox[{"1", "/", 
            SqrtBox["27"]}]}], ",", 
          RowBox[{"1", "+", 
           RowBox[{"1", "/", 
            SqrtBox["27"]}]}]}], "}"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"1.98748", ",", "6.62006"}], "}"}]}], "}"}]}], 
    "\[IndentingNewLine]", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{"\"\<Presentation/ratioChiPlot.pdf\>\"", ",", 
    RowBox[{"ratio\[Chi]ListPlot", "[", 
     RowBox[{
      RowBox[{"sample4096", "\[LeftDoubleBracket]", 
       RowBox[{"All", ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "3", ",", "4"}], "}"}]}], 
       "\[RightDoubleBracket]"}], ",", 
      RowBox[{"{", "}"}], ",", 
      RowBox[{"FontSize", "\[Rule]", "fontSize"}], ",", 
      RowBox[{"ImageSize", "\[Rule]", "imageSize"}], ",", 
      RowBox[{"FrameTicks", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0.01", ",", "0.1"}], "}"}], "~", "Join", "~", 
          RowBox[{"Flatten", "[", 
           RowBox[{
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"Table", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"it", ",", "\"\<\>\""}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"it", ",", 
                  SuperscriptBox["10", "sc"], ",", 
                  SuperscriptBox["10", 
                   RowBox[{"sc", "+", "1"}]], ",", 
                  SuperscriptBox["10", "sc"]}], "}"}]}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"sc", ",", 
                RowBox[{"-", "3"}], ",", 
                RowBox[{"-", "1"}]}], "}"}]}], "]"}], ",", "1"}], "]"}]}], 
         ",", "Automatic"}], "}"}]}], ",", 
      RowBox[{"PointSize", "\[Rule]", "Tiny"}], ",", 
      RowBox[{"frameColor", "\[Rule]", "Gray"}]}], "]"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{"\"\<Presentation/chiKappaPlot.pdf\>\"", ",", 
    RowBox[{"\[Chi]\[Kappa]ListPlot", "[", 
     RowBox[{
      RowBox[{"sample4096", "\[LeftDoubleBracket]", 
       RowBox[{"All", ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", 
          RowBox[{"-", "1"}]}], "}"}]}], "\[RightDoubleBracket]"}], ",", 
      RowBox[{"{", "}"}], ",", 
      RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
      RowBox[{"FontSize", "\[Rule]", "fontSize"}], ",", 
      RowBox[{"ImageSize", "\[Rule]", "imageSize"}], ",", 
      RowBox[{"PointSize", "\[Rule]", "Tiny"}], ",", 
      RowBox[{"frameColor", "\[Rule]", "Gray"}]}], "]"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{"\"\<Presentation/ratioKappaPlot.pdf\>\"", ",", 
    RowBox[{"ratio\[Kappa]ListPlot", "[", 
     RowBox[{
      RowBox[{"sample4096", "\[LeftDoubleBracket]", 
       RowBox[{"All", ",", 
        RowBox[{"{", 
         RowBox[{"3", ",", "4", ",", 
          RowBox[{"-", "1"}]}], "}"}]}], "\[RightDoubleBracket]"}], ",", 
      RowBox[{"{", "}"}], ",", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"All", ",", 
         RowBox[{"{", 
          RowBox[{"0.35", ",", "6.7"}], "}"}]}], "}"}]}], ",", 
      RowBox[{"FontSize", "\[Rule]", "10"}], ",", 
      RowBox[{"ImageSize", "\[Rule]", "imageSize"}], ",", 
      RowBox[{"FrameTicks", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0.01", ",", "0.1"}], "}"}], "~", "Join", "~", 
          RowBox[{"Flatten", "[", 
           RowBox[{
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"Table", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"it", ",", "\"\<\>\""}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"it", ",", 
                  SuperscriptBox["10", "sc"], ",", 
                  SuperscriptBox["10", 
                   RowBox[{"sc", "+", "1"}]], ",", 
                  SuperscriptBox["10", "sc"]}], "}"}]}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"sc", ",", 
                RowBox[{"-", "3"}], ",", 
                RowBox[{"-", "1"}]}], "}"}]}], "]"}], ",", "1"}], "]"}]}], 
         ",", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0.5", ",", "1", ",", "2", ",", "3", ",", "5"}], "}"}], 
          "~", "Join", "~", 
          RowBox[{"Flatten", "[", 
           RowBox[{
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"Table", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"it", ",", "\"\<\>\""}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"it", ",", 
                  SuperscriptBox["10", "sc"], ",", 
                  SuperscriptBox["10", 
                   RowBox[{"sc", "+", "1"}]], ",", 
                  SuperscriptBox["10", "sc"]}], "}"}]}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"sc", ",", 
                RowBox[{"-", "1"}], ",", "2"}], "}"}]}], "]"}], ",", "1"}], 
           "]"}]}]}], "}"}]}], ",", 
      RowBox[{"PointSize", "\[Rule]", "Tiny"}], ",", 
      RowBox[{"frameColor", "\[Rule]", "Gray"}]}], "]"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{"\"\<Presentation/ratioKappaPlotObservations.pdf\>\"", ",", 
    RowBox[{"ratio\[Kappa]ListPlot", "[", 
     RowBox[{
      RowBox[{"sample4096", "\[LeftDoubleBracket]", 
       RowBox[{"All", ",", 
        RowBox[{"{", 
         RowBox[{"3", ",", "4", ",", 
          RowBox[{"-", "1"}]}], "}"}]}], "\[RightDoubleBracket]"}], ",", 
      "highFraction\[Kappa]Observed", ",", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"All", ",", 
         RowBox[{"{", 
          RowBox[{"0.35", ",", "6.7"}], "}"}]}], "}"}]}], ",", 
      RowBox[{"FontSize", "\[Rule]", "10"}], ",", 
      RowBox[{"ImageSize", "\[Rule]", "imageSize"}], ",", 
      RowBox[{"FrameTicks", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0.01", ",", "0.1"}], "}"}], "~", "Join", "~", 
          RowBox[{"Flatten", "[", 
           RowBox[{
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"Table", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"it", ",", "\"\<\>\""}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"it", ",", 
                  SuperscriptBox["10", "sc"], ",", 
                  SuperscriptBox["10", 
                   RowBox[{"sc", "+", "1"}]], ",", 
                  SuperscriptBox["10", "sc"]}], "}"}]}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"sc", ",", 
                RowBox[{"-", "3"}], ",", 
                RowBox[{"-", "1"}]}], "}"}]}], "]"}], ",", "1"}], "]"}]}], 
         ",", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0.5", ",", "1", ",", "2", ",", "3", ",", "5"}], "}"}], 
          "~", "Join", "~", 
          RowBox[{"Flatten", "[", 
           RowBox[{
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"Table", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"it", ",", "\"\<\>\""}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"it", ",", 
                  SuperscriptBox["10", "sc"], ",", 
                  SuperscriptBox["10", 
                   RowBox[{"sc", "+", "1"}]], ",", 
                  SuperscriptBox["10", "sc"]}], "}"}]}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"sc", ",", 
                RowBox[{"-", "1"}], ",", "2"}], "}"}]}], "]"}], ",", "1"}], 
           "]"}]}]}], "}"}]}], ",", 
      RowBox[{"PointSize", "\[Rule]", "Tiny"}], ",", 
      RowBox[{"frameColor", "\[Rule]", "Gray"}]}], "]"}]}], "]"}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.6096451014355288`*^9, 3.6096451374568987`*^9}, {
   3.609645222026988*^9, 3.609645227887209*^9}, {3.609645393051215*^9, 
   3.609645428989118*^9}, {3.609645463432189*^9, 3.609645477467903*^9}, {
   3.609645609781362*^9, 3.609645642394065*^9}, {3.609645674156782*^9, 
   3.609645706993593*^9}, {3.6096458067672873`*^9, 3.6096458371022587`*^9}, {
   3.609664946570684*^9, 3.609664966614698*^9}, {3.6096650112443666`*^9, 
   3.6096650505364847`*^9}, {3.610588553641007*^9, 3.6105885700351887`*^9}, {
   3.610588661684598*^9, 3.6105887177238083`*^9}, {3.610588898802246*^9, 
   3.610588907708644*^9}, {3.610588977633296*^9, 3.610588985470376*^9}, {
   3.610589208194084*^9, 3.610589209020136*^9}, {3.610589659275305*^9, 
   3.610589671300022*^9}, {3.61093782155132*^9, 3.61093787114927*^9}, {
   3.610938096025599*^9, 3.610938106653803*^9}, {3.6109382411140327`*^9, 
   3.610938271320953*^9}, {3.6109383182511272`*^9, 3.610938337637157*^9}, {
   3.610938394118843*^9, 3.610938405949794*^9}, {3.6109384396480713`*^9, 
   3.610938503046324*^9}, 3.6109392350193243`*^9, {3.610941252233182*^9, 
   3.610941264059757*^9}, {3.610941399792973*^9, 3.610941404621204*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["ITEP Proceedings", "Subsubsection",
 CellChangeTimes->{{3.609662157494125*^9, 3.6096621597834682`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"itepLineWidth", "=", "469.47046"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"itepFontSize", "=", "10"}], ";"}]}], "Input",
 CellChangeTimes->{{3.6096624423015423`*^9, 3.609662451498352*^9}, {
  3.609922646052809*^9, 3.6099226483246*^9}, {3.610002669031781*^9, 
  3.610002669132723*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
  "dir090902B", "=", 
   "\"\<GRObservations/DerivedData/GRObservations/Build/Products/Release/\
090902B/\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
  "dir090926A", "=", 
   "\"\<GRObservations/DerivedData/GRObservations/Build/Products/Release/\
090926A/\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{"bursts", "=", 
   RowBox[{"{", 
    RowBox[{"dir090902B", ",", "dir090926A"}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"ranges", "=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "0.05"}], " ", "1000"}], ",", "1000"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "0.05"}], " ", "300"}], ",", "300"}], "}"}]}], 
    "\[IndentingNewLine]", "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"gevData", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Import", "[", 
      RowBox[{
       RowBox[{"burst", "<>", "\"\<gev\>\""}], ",", "\"\<Table\>\""}], "]"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"burst", ",", "bursts"}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"mevData", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Import", "[", 
      RowBox[{
       RowBox[{"burst", "<>", "\"\<mev\>\""}], ",", "\"\<Table\>\""}], "]"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"burst", ",", "bursts"}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"probData", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Import", "[", 
       RowBox[{
        RowBox[{"burst", "<>", "\"\<probs\>\""}], ",", "\"\<Table\>\""}], 
       "]"}], "/.", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\[Kappa]_", ",", "p_", ",", "a_", ",", "b_", ",", "c_"}], 
        "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\[Kappa]", ",", "p"}], "}"}]}]}], ",", 
     RowBox[{"{", 
      RowBox[{"burst", ",", "bursts"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Do", "[", 
   RowBox[{
    RowBox[{"Export", "[", 
     RowBox[{
      RowBox[{"\"\<ITEPProceedings/p\>\"", "<>", 
       RowBox[{"ToString", "[", "i", "]"}], "<>", "\"\<.pdf\>\""}], ",", 
      RowBox[{"GraphicsGrid", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"ListLinePlot", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"mevData", "[", 
                RowBox[{"[", "i", "]"}], "]"}], ",", 
               RowBox[{"gevData", "[", 
                RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"PlotRange", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"ranges", "[", 
                 RowBox[{"[", "i", "]"}], "]"}], ",", "All"}], "}"}]}], ",", 
             RowBox[{"PlotStyle", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{"Red", ",", "Blue"}], "}"}]}], ",", 
             RowBox[{"Frame", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"True", ",", "False"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"True", ",", "False"}], "}"}]}], "}"}]}], ",", 
             RowBox[{"FrameLabel", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{"\"\<Time, sec\>\"", ",", "\"\<Photon Fraction\>\""}], 
               "}"}]}], ",", 
             RowBox[{"PlotLegends", "\[Rule]", 
              RowBox[{"Placed", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Style", "[", 
                   RowBox[{"\"\<0.1 \[Dash] 1 GeV\>\"", ",", 
                    RowBox[{"FontSize", "\[Rule]", "itepFontSize"}]}], "]"}], 
                  ",", 
                  RowBox[{"Style", "[", 
                   RowBox[{"\"\<1 \[Dash] 300 GeV\>\"", ",", 
                    RowBox[{"FontSize", "\[Rule]", "itepFontSize"}]}], 
                   "]"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"0.74", ",", "0.20"}], "}"}]}], "]"}]}], ",", 
             RowBox[{"ImageSize", "\[Rule]", 
              RowBox[{".45", "itepLineWidth"}]}], ",", 
             RowBox[{"FrameStyle", "\[Rule]", 
              RowBox[{"Directive", "[", 
               RowBox[{"FontSize", "\[Rule]", "itepFontSize"}], "]"}]}]}], 
            "]"}], ",", "\[IndentingNewLine]", 
           RowBox[{"ListLogPlot", "[", 
            RowBox[{
             RowBox[{"probData", "[", 
              RowBox[{"[", "i", "]"}], "]"}], ",", 
             RowBox[{"Joined", "\[Rule]", "True"}], ",", 
             RowBox[{"PlotRange", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"0", ",", "10"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"1.*^-12", ",", "1."}], "}"}]}], "}"}]}], ",", 
             RowBox[{"PlotStyle", "\[Rule]", 
              RowBox[{"RGBColor", "[", 
               RowBox[{"0.5", ",", "0", ",", "0.5"}], "]"}]}], ",", 
             RowBox[{"Frame", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"True", ",", "False"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"True", ",", "False"}], "}"}]}], "}"}]}], ",", 
             RowBox[{"FrameLabel", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{
               "\"\<Stretching Factor\>\"", ",", "\"\<KS Probability\>\""}], 
               "}"}]}], ",", 
             RowBox[{"ImageSize", "\[Rule]", 
              RowBox[{".45", "itepLineWidth"}]}], ",", 
             RowBox[{"FrameStyle", "\[Rule]", 
              RowBox[{"Directive", "[", 
               RowBox[{"FontSize", "\[Rule]", "itepFontSize"}], "]"}]}]}], 
            "]"}]}], "\[IndentingNewLine]", "}"}], "}"}], ",", 
        RowBox[{"ImageSize", "\[Rule]", "itepLineWidth"}]}], "]"}]}], "]"}], 
    ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "1", ",", 
      RowBox[{"Length", "[", "mevData", "]"}]}], "}"}]}], "]"}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.596901417566943*^9, 3.5969014298703938`*^9}, {
   3.602215510963944*^9, 3.60221551175172*^9}, {3.609922488975033*^9, 
   3.609922738324974*^9}, {3.6099231653094187`*^9, 3.6099231675748253`*^9}, {
   3.609923340172803*^9, 3.60992337147126*^9}, {3.609923781629249*^9, 
   3.6099237894496937`*^9}, 3.609923913962141*^9, {3.6099239698719254`*^9, 
   3.6099239717357473`*^9}, {3.609924072949731*^9, 3.609924073086207*^9}, {
   3.609972079966633*^9, 3.609972141490472*^9}, {3.6099743242124968`*^9, 
   3.609974343050313*^9}, {3.6099797226523333`*^9, 3.609979722798706*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{"\"\<ITEPProceedings/p3.pdf\>\"", ",", 
    RowBox[{"modelScheme", "[", 
     RowBox[{
      RowBox[{"centralEngineSize", "\[Rule]", ".03"}], ",", 
      RowBox[{"jetRadius", "\[Rule]", ".5"}], ",", 
      RowBox[{"lowAngle", "\[Rule]", ".43"}], ",", 
      RowBox[{"highAngle", "\[Rule]", ".043"}], ",", 
      RowBox[{"observerSize", "\[Rule]", ".03"}], ",", 
      RowBox[{"observerDistance", "\[Rule]", "1."}], ",", 
      RowBox[{"observerAngle", "\[Rule]", ".4"}], ",", 
      RowBox[{"centralEngineLabelQ", "\[Rule]", "True"}], ",", 
      RowBox[{"jetLabelQ", "\[Rule]", "True"}], ",", 
      RowBox[{"observerLabelQ", "\[Rule]", "True"}], ",", 
      RowBox[{"FontSize", "\[Rule]", "itepFontSize"}], ",", 
      RowBox[{"ImageSize", "\[Rule]", 
       RowBox[{".7", "itepLineWidth"}]}]}], "]"}]}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.6096619842397423`*^9, 3.6096620299951057`*^9}, 
   3.6096623854518433`*^9, {3.609662454570602*^9, 3.609662457473957*^9}, {
   3.609908042282702*^9, 3.609908042440434*^9}, {3.6099226533691177`*^9, 
   3.609922654222568*^9}, {3.609979802760303*^9, 3.609979802926271*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"PrintTemporary", "[", 
   RowBox[{"Dynamic", "[", "\[Tau]", "]"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{"\"\<ITEPProceedings/p4.pdf\>\"", ",", 
    RowBox[{"GraphicsGrid", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"burstCDFPlot", "[", 
          RowBox[{
           RowBox[{"defaultUniverse", "[", "]"}], ",", 
           RowBox[{"defaultBurst", "[", "]"}], ",", 
           RowBox[{"defaultObserver", "[", 
            RowBox[{
             RowBox[{"z", "\[Rule]", "1.822"}], ",", 
             RowBox[{"\[Chi]", "\[Rule]", "0."}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{".1", ",", "1.", ",", "\[Infinity]"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"1.", ",", "1."}], "}"}], ",", 
           RowBox[{"ImageSize", "\[Rule]", 
            RowBox[{".45", "itepLineWidth"}]}], ",", 
           RowBox[{"FontSize", "\[Rule]", "itepFontSize"}]}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"burstCDFPlot", "[", 
          RowBox[{
           RowBox[{"defaultUniverse", "[", "]"}], ",", 
           RowBox[{"defaultBurst", "[", "]"}], ",", 
           RowBox[{"defaultObserver", "[", "]"}], ",", 
           RowBox[{"{", 
            RowBox[{".1", ",", "1.", ",", "\[Infinity]"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"1.", ",", "1."}], "}"}], ",", 
           RowBox[{"ImageSize", "\[Rule]", 
            RowBox[{".45", "itepLineWidth"}]}], ",", 
           RowBox[{"FontSize", "\[Rule]", "itepFontSize"}]}], "]"}]}], 
        "\[IndentingNewLine]", "}"}], "}"}], ",", 
      RowBox[{"ImageSize", "\[Rule]", "itepLineWidth"}]}], "]"}]}], "]"}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.609668325783885*^9, 3.609668362271452*^9}, {
   3.6099080931970167`*^9, 3.609908095810851*^9}, {3.609908139344901*^9, 
   3.6099081405427322`*^9}, {3.609922657555933*^9, 3.609922661754251*^9}, 
   3.60993429657563*^9, 3.609938266266621*^9, {3.60993842408923*^9, 
   3.6099384508994503`*^9}, {3.609938891646867*^9, 3.609938895025696*^9}, {
   3.609940016385295*^9, 3.609940070244252*^9}, {3.609940344376224*^9, 
   3.6099403499424458`*^9}, {3.609940538950287*^9, 3.6099405392756577`*^9}, {
   3.609943108856577*^9, 3.6099431156773252`*^9}, {3.6099747256392*^9, 
   3.6099747257453957`*^9}, {3.6099798162093678`*^9, 3.609979816283203*^9}, {
   3.609988727767652*^9, 3.6099887484838142`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Kappa]Observed", "=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\"\<090902B\>\"", ",", 
       RowBox[{"{", 
        RowBox[{"0.363408", ",", "0.893437"}], "}"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"\"\<090510\>\"", ",", 
       RowBox[{"{", 
        RowBox[{"0.428137", ",", "1.60485"}], "}"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"\"\<080916C\>\"", ",", 
       RowBox[{"{", 
        RowBox[{"0.66529", ",", "3.31569"}], "}"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"\"\<090926A\>\"", ",", 
       RowBox[{"{", 
        RowBox[{"1.98759", ",", "6.61486"}], "}"}]}], "}"}]}], 
    "\[IndentingNewLine]", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{"\"\<ITEPProceedings/p5.pdf\>\"", ",", 
    RowBox[{"GraphicsGrid", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"\[Kappa]HistogramPlot", "[", 
          RowBox[{
           RowBox[{"sample4096", "\[LeftDoubleBracket]", 
            RowBox[{"All", ",", 
             RowBox[{"-", "1"}]}], "\[RightDoubleBracket]"}], ",", 
           "\[Kappa]Observed", ",", 
           RowBox[{"FontSize", "\[Rule]", "itepFontSize"}], ",", 
           RowBox[{"ImageSize", "\[Rule]", 
            RowBox[{".45", "itepLineWidth"}]}]}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"\[Kappa]CDFPlot", "[", 
          RowBox[{
           RowBox[{"sample4096", "\[LeftDoubleBracket]", 
            RowBox[{"All", ",", 
             RowBox[{"-", "1"}]}], "\[RightDoubleBracket]"}], ",", 
           "\[Kappa]Observed", ",", 
           RowBox[{"PlotPoints", "\[Rule]", "4096"}], ",", 
           RowBox[{"FontSize", "\[Rule]", "itepFontSize"}], ",", 
           RowBox[{"ImageSize", "\[Rule]", 
            RowBox[{".45", "itepLineWidth"}]}]}], "]"}]}], 
        "\[IndentingNewLine]", "}"}], "}"}], ",", 
      RowBox[{"ImageSize", "\[Rule]", "itepLineWidth"}]}], "]"}]}], "]"}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.594342734190405*^9, 3.594342752715184*^9}, {
  3.59434286903363*^9, 3.594342900024119*^9}, {3.594343771437028*^9, 
  3.594343773132771*^9}, {3.594852329377499*^9, 3.594852332247513*^9}, {
  3.5966927652249002`*^9, 3.596692799285636*^9}, {3.596693274643531*^9, 
  3.596693288462693*^9}, {3.5966933274676723`*^9, 3.5966933546761417`*^9}, {
  3.603446939569559*^9, 3.603447017756761*^9}, {3.603447061587146*^9, 
  3.603447066057764*^9}, {3.6096359148737793`*^9, 3.6096359282070913`*^9}, {
  3.609664424011471*^9, 3.60966451296507*^9}, {3.60966459359473*^9, 
  3.609664596730783*^9}, {3.609925177516726*^9, 3.6099252151767683`*^9}, {
  3.609972398494524*^9, 3.609972441953117*^9}, {3.60997304262988*^9, 
  3.609973047418325*^9}, {3.609974412667426*^9, 3.609974412777885*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"highFraction\[Kappa]Observed", "=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"0.0604813", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"1", "-", 
           RowBox[{"1", "/", 
            SqrtBox["17"]}]}], ",", 
          RowBox[{"1", "+", 
           RowBox[{"1", "/", 
            SqrtBox["17"]}]}]}], "}"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"0.665059", ",", "3.31859"}], "}"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"0.124288", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"1", "-", 
           RowBox[{"1", "/", 
            SqrtBox["26"]}]}], ",", 
          RowBox[{"1", "+", 
           RowBox[{"1", "/", 
            SqrtBox["26"]}]}]}], "}"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"0.42816", ",", "1.60589"}], "}"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"0.141906", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"1", "-", 
           RowBox[{"1", "/", 
            SqrtBox["51.1454"]}]}], ",", 
          RowBox[{"1", "+", 
           RowBox[{"1", "/", 
            SqrtBox["51.1454"]}]}]}], "}"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"0.363328", ",", "0.893781"}], "}"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"0.0572066", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"1", "-", 
           RowBox[{"1", "/", 
            SqrtBox["27"]}]}], ",", 
          RowBox[{"1", "+", 
           RowBox[{"1", "/", 
            SqrtBox["27"]}]}]}], "}"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"1.98748", ",", "6.62006"}], "}"}]}], "}"}]}], 
    "\[IndentingNewLine]", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{"\"\<ITEPProceedings/p6.pdf\>\"", ",", 
    RowBox[{"GraphicsGrid", "[", 
     RowBox[{"{", 
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"ratio\[Kappa]ListPlot", "[", 
         RowBox[{
          RowBox[{"sample4096", "\[LeftDoubleBracket]", 
           RowBox[{"All", ",", 
            RowBox[{"{", 
             RowBox[{"3", ",", "4", ",", 
              RowBox[{"-", "1"}]}], "}"}]}], "\[RightDoubleBracket]"}], ",", 
          "highFraction\[Kappa]Observed", ",", 
          RowBox[{"PlotRange", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"All", ",", 
             RowBox[{"{", 
              RowBox[{"0.42", ",", "6.7"}], "}"}]}], "}"}]}], ",", 
          RowBox[{"FontSize", "\[Rule]", "itepFontSize"}], ",", 
          RowBox[{"ImageSize", "\[Rule]", 
           RowBox[{".45", "itepLineWidth"}]}], ",", 
          RowBox[{"FrameTicks", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"{", 
               RowBox[{"0.01", ",", "0.1"}], "}"}], "~", "Join", "~", 
              RowBox[{"Flatten", "[", 
               RowBox[{
                RowBox[{"Table", "[", 
                 RowBox[{
                  RowBox[{"Table", "[", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"it", ",", "\"\<\>\""}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"it", ",", 
                    SuperscriptBox["10", "sc"], ",", 
                    SuperscriptBox["10", 
                    RowBox[{"sc", "+", "1"}]], ",", 
                    SuperscriptBox["10", "sc"]}], "}"}]}], "]"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"sc", ",", 
                    RowBox[{"-", "3"}], ",", 
                    RowBox[{"-", "1"}]}], "}"}]}], "]"}], ",", "1"}], "]"}]}],
              ",", "Automatic"}], "}"}]}]}], "]"}], ",", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"ratio\[Chi]ListPlot", "[", 
         RowBox[{
          RowBox[{"sample4096", "\[LeftDoubleBracket]", 
           RowBox[{"All", ",", 
            RowBox[{"{", 
             RowBox[{"2", ",", "3", ",", "4"}], "}"}]}], 
           "\[RightDoubleBracket]"}], ",", 
          RowBox[{"FontSize", "\[Rule]", "itepFontSize"}], ",", 
          RowBox[{"ImageSize", "\[Rule]", 
           RowBox[{".45", "itepLineWidth"}]}], ",", 
          RowBox[{"FrameTicks", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"{", 
               RowBox[{"0.01", ",", "0.1"}], "}"}], "~", "Join", "~", 
              RowBox[{"Flatten", "[", 
               RowBox[{
                RowBox[{"Table", "[", 
                 RowBox[{
                  RowBox[{"Table", "[", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"it", ",", "\"\<\>\""}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"it", ",", 
                    SuperscriptBox["10", "sc"], ",", 
                    SuperscriptBox["10", 
                    RowBox[{"sc", "+", "1"}]], ",", 
                    SuperscriptBox["10", "sc"]}], "}"}]}], "]"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"sc", ",", 
                    RowBox[{"-", "3"}], ",", 
                    RowBox[{"-", "1"}]}], "}"}]}], "]"}], ",", "1"}], "]"}]}],
              ",", "Automatic"}], "}"}]}]}], "]"}]}], "\[IndentingNewLine]", 
       "}"}], "}"}], "]"}]}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.6096451014355288`*^9, 3.6096451374568987`*^9}, {
   3.609645222026988*^9, 3.609645227887209*^9}, {3.609645393051215*^9, 
   3.609645428989118*^9}, {3.609645463432189*^9, 3.609645477467903*^9}, {
   3.609645609781362*^9, 3.609645642394065*^9}, {3.609645674156782*^9, 
   3.609645706993593*^9}, {3.6096458067672873`*^9, 3.6096458371022587`*^9}, {
   3.609664946570684*^9, 3.609664966614698*^9}, {3.6096650112443666`*^9, 
   3.6096650505364847`*^9}, {3.60997252369475*^9, 3.609972560134062*^9}, {
   3.609973053671878*^9, 3.609973064713709*^9}, {3.609973186282545*^9, 
   3.6099732343871737`*^9}, {3.609974415094208*^9, 3.609974415214184*^9}, {
   3.610000628864314*^9, 3.610000629056776*^9}, 3.610000682897563*^9, {
   3.6100007265932827`*^9, 3.610000773448345*^9}, 3.610002480686101*^9, {
   3.61000284913381*^9, 3.610002876947711*^9}, {3.610009515297762*^9, 
   3.610009523735882*^9}, {3.610009588314065*^9, 3.6100095922860126`*^9}}]
}, Closed]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Playground", "Section",
 CellChangeTimes->{{3.615290156329236*^9, 3.615290158320746*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Prepend", "[", 
   RowBox[{"sample16", ",", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Redshift\>\"", ",", "\"\<Off-axis angle\>\"", ",", 
      "\"\<Below GeV count\>\"", ",", "\"\<Above GeV count\>\"", ",", 
      "\"\<Duration\>\"", ",", "\"\<Stretching factor\>\""}], "}"}]}], "]"}], 
  "//", "Grid"}]], "Input",
 CellChangeTimes->{{3.61529026902039*^9, 3.615290274445383*^9}, {
  3.615290439516774*^9, 3.61529048497689*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"Redshift\"\>", "\<\"Off-axis angle\"\>", "\<\"Below GeV count\"\>", \
"\<\"Above GeV count\"\>", "\<\"Duration\"\>", "\<\"Stretching factor\"\>"},
    {"4.577676114922525`", "0.002146172294505203`", "198.4196620066235`", 
     "34.228215884194334`", "222.73035829370284`", "1.0280094289841748`"},
    {"0.38242879878225633`", "0.007303018195367234`", "2510.4548818606413`", 
     "20.978799047458836`", "123.38630837565341`", "2.529581957694992`"},
    {"1.790678523643586`", "0.004771211764882174`", "291.8119917380803`", 
     "10.070010357458859`", "178.00778096254146`", "1.784271416531604`"},
    {"0.6679554361909841`", "0.004633224927380444`", "1634.8277140318862`", 
     "125.2194399101692`", "107.40664116322054`", "1.355228067650187`"},
    {"6.7438565048704895`", "0.0025153880238022266`", "114.41219610878554`", 
     "12.708560050890373`", "313.05858759493555`", "1.1251344561349428`"},
    {"1.5334501903844784`", "0.004552168302441222`", "402.761616478708`", 
     "18.983240726070672`", "156.94967793679683`", "1.6188869008349682`"},
    {"0.6730575558627483`", "0.0033384774004186746`", "2098.3853992699323`", 
     "434.73441714374775`", "92.48671063445956`", "1.085830862969823`"},
    {"1.0880990456375839`", "0.001605553355172647`", "1254.8786426044062`", 
     "578.4999909315469`", "94.50973498739872`", "0.8908846736633591`"},
    {"1.61092789076918`", "0.0026727127210554205`", "612.3130849666738`", 
     "131.45761966748594`", "125.400307231681`", "1.040915010748597`"},
    {"1.9742563479671753`", "0.004326147803631458`", "290.25136432853395`", 
     "14.21984824761055`", "176.44515329447125`", "1.5781588059941152`"},
    {"1.0632763208205827`", "0.0023948982757103594`", "1172.1006546668993`", 
     "364.8701470277157`", "100.1140576033533`", "0.9741210674073871`"},
    {"4.167417372575645`", "0.0026216289538748623`", "189.43015298651406`", 
     "24.758770352965122`", "223.3218204554101`", "1.1155870882542687`"},
    {"4.933123699945455`", "0.0027710318657595307`", "147.57157347627398`", 
     "15.814107790469503`", "258.1278608438802`", "1.1647305773040832`"},
    {"1.7903411064295107`", "0.003648417441486108`", "414.66398652831725`", 
     "39.646577434687785`", "150.48002884878116`", "1.2902775201409398`"},
    {"1.992142656294731`", "0.003909920015542307`", "327.6715685897391`", 
     "23.267096125592506`", "166.52120225427376`", "1.402220940409194`"},
    {"3.5285337214482917`", "0.0025702052670398905`", "233.50363687266716`", 
     "34.735738615875306`", "197.74570791748386`", "1.0900992319715985`"}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{{3.615290270964035*^9, 3.615290274722785*^9}, {
  3.615290452185185*^9, 3.615290485212028*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLogLogPlot", "[", 
  RowBox[{
   RowBox[{"sample4096", "\[LeftDoubleBracket]", 
    RowBox[{"All", ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "6"}], "}"}]}], "\[RightDoubleBracket]"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Off-axis angle\>\"", ",", "\"\<Stretching factor\>\""}], 
     "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6152901627181463`*^9, 3.615290177583363*^9}, {
  3.6152902313556557`*^9, 3.615290244933425*^9}, {3.615290323875537*^9, 
  3.615290423308736*^9}, {3.6152905099370317`*^9, 3.6152905108791227`*^9}, {
  3.615290547650494*^9, 3.615290556590959*^9}, {3.615290590203401*^9, 
  3.6152906101881332`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.005555555555555556], 
     AbsoluteThickness[1.6], PointBox[CompressedData["
1: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
En2C5xgTd+/cfd/ILJq4bPa4om81DUVyxV1piwPwYifzvSaZx/YHicSr6JI8
eHUHX8VvOm4KLZ3KepIHihpJ18TIfFwt/8vq1JkUcDLbZBJsRkVuUYcikw1v
QKHm8Sb9U3S8Ch+PWuuWQuJl4Zef1Ule/Lu935qjEmpes5WmGtHRtvPhcOm5
JChwMmi1uEdF55w7jGvKg5AufeboSicqmsnUdb9dGgboPaqwZ+6/is47nMr/
jeN920LWOc85ZiFUSlRE66aFRMgIJaVCQouskGRla0myMiJ7z+e2996JzBCV
ikqJ3/P703W5XOfcn/vzfr9el+uch8BPdZV+xY/LQN7YpqWVer2qBv9OD66s
hSGJ16sqvRiopdIeN3CoHDZONbq9XaBhnaz38CmLIZAJHpmTa6Tj/c2vVJSh
G5ZqyggZVV5MO8Nx5uH1ItLmvWsouwYv6ozELdSfKyAlve3Zg2MJtOCPGrc9
2gF3Z4aTFNqpechJeGTtzAU7IzHz51W82KPQ6Tw1T5Lniw+2eNwj8FtU6KEc
ar+MauYWKCPEtPBajT1pxRBcFaP3hsrj0b8eWc4fi8DaSNIisYmJknObP1yx
iSeNgleY1hpRPPE7bMOiYQ9khi3N87Dz4ri+z+79bulku7qk94mXDPwmHhmV
3fQMhlVNPg4q0vHerPGdQZ13sIJ/q09DJYEPq+dcnOpaoHxqt852ZybWvg+U
1DLNJBe1fRN9pyj+vPJCZTG2CVax3rIVpuZ3NvudCbP/HZQmfM+YPUag51qN
dXUT7WApazq+6gMDFTtDq+feZgMv+CuJU/57fy/XxUf8JODdNyJ7nhK47UC2
56G0PMje7eF78QsNjb8dk/4U1gp1UveNWh7QUa4x/rlHWSeU3Lj50dqIhtWS
py8GvZoGKzZuh+0kHX/dDzV669MApw3f/1luZ6BJLyffnqtlICId2pJ+job2
bpyP/h6egFmHgWcnenlQ+Wqg55dvH2H6Vqiwvg2BpM3ZjQ1KtfDMRkX/pAYd
t2smb2yk9iUgsNZubzeBJz60O/wdq4JNg9515wb+///X0fVGLxNhvxFHrj0Q
6HHuupLQ827YNKqh62TIwG7hUoUUqxLwvWgsf4WDge2jlzrzxwpAM+pO1oY3
DGRETly7XhoB1xQidaZJyje1g856nLcmK04lV/E9ZKIOzWkHh3oCuTrnzYoN
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
ahDw42dNCxwX5j15zY0H3/AsDA5d/gbzDx/9iEqk4a5Nc/L2HX1gL8S6LDDI
wDPeEp+ybqTDQZUP9lpjdGyypd09Y9kPt5dHh69p8aC20kWHy5enYUXu9MQW
yo86xTribMlqODk49WldMQONucZUa9tzwGmHcOqGGCYGtQU6CRMppIUj97kI
TzoGbVJqqfk8BOdYdiTrfabjmSu5N7GoE8LYlq+/o/hz7ruD4uBwAwipTZ/+
FUHH87TYAnP9D6BZqHPAbYiOznOlX9k1OqBbNSyEdoAXN+AY/yHJTNKKheNE
I5UfA4p+3g4NdbDCem/AhQwGrrlQs4pULgJWiUNP+ltpmOBZ1C10bwCuDFaz
XNaho2TqrWMXD/ZC31YWejuTicPB2d0/zoSD39u/x6Qeb0KXipyMBo1qkn1k
6NAfAQLfXl224n7TC0qBWSEC0tR9yf1YJrI6itzjvLiUbkXgO8GLi5ZFHbAo
lmFrfoKOA7Ls0RbD/bC033a19kkC8z2ElZvm2yGg7fj+aTs65omsvLrt7zuw
jHNv1HxEoG/C73vDy00gG1nA8q2NGxN2fMFGxZ/wcvUHo/1l/Gi5+vZnlb3V
JA9xbLc0xTcLhRL9jDMN8HIiXlaAhQcvc/JJ/Rv/AU/mDeaGqfm19nhKnA5/
D6ucZYSXdfjRhUd3R7hLKdkc+l1LyofAz335LVqvOuGiV3vAl3h+fKygle/y
qZi8ofUw2VCQiSkLPa4xoQmQ2Df8agvVp3JZFW9aEjvhg388ofWHyuv0kK0n
I8rhdUqjL+8UA/efCTDXfpgLOqFDt6so/9luqNj5Ta4QpOz/DY7n8+Lpj3XL
799FkMKRHj6P2flx+4/GI//MisilexW/67YxUJrYrqkmXghbohU9cqk+FLC5
o3yb1gxI2zHvcJ4P1122jGAUZpPdYledYs4TaK9mpJHl0wzh65l9PU+ZmNWe
m2BTFQP7ZssvE710bFC88mPj2SbI4h1Kc6Ex8Im1tdU37zrgdxCYnLIjUP++
3v0muS54m2l+TvUXHQkl+5Yo0R4YaelXvMVL+cAdxyui/N0Q7NVVVEXxgJak
DO9OZhskx/BJxlxgYteJmrXfdwSTY2yFagvX6eh6JkmP5vIBtKfoOUcWGXin
WFHbaU8m7HSA9psX6divG5CYrj8CXOvChaQ46Li/089T+ekYlO6Q9RWi/Px3
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
T5XlYM0+/MDfjY5xUp5utxM/AHtl6lbJQCb+YvsE1pfiSQ+fg+mfB+lYzcpi
s+DRB9bOjBXml5mYNtjWUKmTQHJWfD7FdoQXCdn5R7V3k8mvATezjlN9GlZ5
5oB1QAbcqHCQed7Ph45PlzlOJhWROaeV9z0dIvDg/mH/w6JNIC95a3TBlo5K
pdXqrosUH0ymu7wwYGLGxVvqaqcyYY/mw5xZyhcqlT+nH0zuhOkOnwgB6vUn
3arVChqrgzk2v4OvEhmYvhwZq8tmQaZEddD5KJ8Yjvtp+m2mCUIuu19v9aaj
n+S4b3rCIKiwaZa2lzLxyMPE2PCYN6RwzWLpuSpePJVxv/pqgzMpxnvNZLsv
Hat4uF6+SO+EMbnj5oppTPTubJVXnIuF0ZYfJlnCBNLL3dw+HOqEHtFKun4O
HUOt/fuvinyAm7Fma14FE7jzQkVwj0kzHDZwq/5WRWB7xa201i954Fe+eyki
hIab/XwnjtZOwOGfVvcaeSk+Lnnz4hRXJ8iKyOxsWcfAs/YsBapQAkoz/RHB
FL9+fcZuPvnaDFJukALsjQSi2G1G3YdS0FVa+VHvJIHEQknheHUb5J5zwa2H
+TCWS7fDNySfHKpN4d5D7ctx0WF5k7EmKK1n/8EdJ4CvZpN+L96uJl9+fb7d
4x8N5yIT5aU5P0LYAS6+Nmr/tOP3PcxeovzgjP1Qhi0PPpe22237eAb4/6V/
ublaEHPXruYTrqkixS8/cXai8vo9D22L17pO8BBSLqOLCeIg25p3BQsl5ONg
SaNzRZTP2MX4Ne1qAIO5FMfX//888LUCGBtoA/Oryo+yJikeblNV0nzZA+yR
CvfC/jHQ9+2276XhuVDWMqpxzZdAK+A6pTZeC73f/W98MSKwer965PW2Tri2
avIBazMNu8/NGa59PApSmp7lzVl0fH505/CFuUGQuBGS/tOOjp3N2lcKQvsh
32btnbVdDLyRFZFyf0UuPG5vuDnxho7MezKrFawHQDmxdMgrWAD7roxaVzbV
kjvlJOr0bjLQ8cNs2lkCIbatvP2yA+UnWQPK2pZN8Ej+Nqv4cQZy3XQ0N8vM
ggCdrt1N+gQ+6nJcr7W9DVitHB2/J1PzqFHgL/tURTarO3Kr7GHiyk97fz3i
9SW5XYx2qz5jIGehRZTCniRoK/zIJWVD+WjhS1fNvx9hn8F0m1IhHa+FL7/k
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
      "]]}, {}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"Off-axis angle\"", TraditionalForm], 
    FormBox["\"Stretching factor\"", TraditionalForm]},
  AxesOrigin->{-10.243582592360537`, -0.35869624240525305`},
  CoordinatesToolOptions:>{"DisplayFunction" -> ({
      Exp[
       Part[#, 1]], 
      Exp[
       Part[#, 2]]}& ), "CopiedValueFunction" -> ({
      Exp[
       Part[#, 1]], 
      Exp[
       Part[#, 2]]}& )},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{
     Charting`ScaledTicks[{Log, Exp}], 
     Charting`ScaledFrameTicks[{Log, Exp}]}, {
     Charting`ScaledTicks[{Log, Exp}], 
     Charting`ScaledFrameTicks[{Log, Exp}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->{422.69921875, Automatic},
  Method->{},
  PlotRange->{{-10.157039957098064`, -4.618311300299697}, \
{-0.32504884959886576`, 1.7610895043971402`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->FrontEndValueCache[{
     Charting`ScaledTicks[{Log, Exp}], 
     Charting`ScaledTicks[{Log, Exp}]}, {{{-9.210340371976182, 
       FormBox[
        TemplateBox[{"\[Times]", "\"\[Times]\"", "1.`", 
          TemplateBox[{"10", 
            RowBox[{"-", "4"}]}, "Superscript", SyntaxForm -> 
           SuperscriptBox]}, "RowWithSeparators"], TraditionalForm], {0.01, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-7.600902459542082, 
       FormBox[
        TemplateBox[{"\[Times]", "\"\[Times]\"", "5.`", 
          TemplateBox[{"10", 
            RowBox[{"-", "4"}]}, "Superscript", SyntaxForm -> 
           SuperscriptBox]}, "RowWithSeparators"], TraditionalForm], {0.01, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-6.907755278982137, 
       FormBox[
        TemplateBox[{"\[Times]", "\"\[Times]\"", "1.`", 
          TemplateBox[{"10", 
            RowBox[{"-", "3"}]}, "Superscript", SyntaxForm -> 
           SuperscriptBox]}, "RowWithSeparators"], TraditionalForm], {0.01, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-5.298317366548036, 
       FormBox[
        TemplateBox[{"\[Times]", "\"\[Times]\"", "5.`", 
          TemplateBox[{"10", 
            RowBox[{"-", "3"}]}, "Superscript", SyntaxForm -> 
           SuperscriptBox]}, "RowWithSeparators"], TraditionalForm], {0.01, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-4.605170185988091, 
       FormBox[
        TemplateBox[{"\[Times]", "\"\[Times]\"", "1.`", 
          TemplateBox[{"10", 
            RowBox[{"-", "2"}]}, "Superscript", SyntaxForm -> 
           SuperscriptBox]}, "RowWithSeparators"], TraditionalForm], {0.01, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-11.512925464970229`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-10.819778284410283`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-10.41431317630212, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-10.126631103850338`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-9.903487552536127, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-9.721165995742174, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-9.567015315914915, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-9.433483923290392, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-9.315700887634009, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-8.517193191416238, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-8.111728083308073, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-7.824046010856292, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-7.418580902748128, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-7.264430222920869, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-7.1308988302963465`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-7.013115794639964, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-6.214608098422191, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-5.809142990314028, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-5.521460917862246, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-5.115995809754082, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-4.961845129926823, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-4.8283137373023015`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-4.710530701645918, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}}, {{0., 
       FormBox["1", TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {0.6931471805599453, 
       FormBox["2", TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {1.6094379124341003`, 
       FormBox["5", TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {-0.6931471805599453, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-0.5108256237659907, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-0.35667494393873245`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-0.2231435513142097, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-0.10536051565782628`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {1.0986122886681098`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {1.3862943611198906`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {1.791759469228055, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {1.9459101490553132`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {2.0794415416798357`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {2.1972245773362196`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {2.302585092994046, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}}}]]], "Output",
 CellChangeTimes->{{3.61529016969977*^9, 3.615290177798979*^9}, {
   3.615290229451652*^9, 3.615290245228467*^9}, {3.615290318324782*^9, 
   3.615290423699608*^9}, {3.615290489302238*^9, 3.615290511280678*^9}, {
   3.615290548287374*^9, 3.61529055697873*^9}, 3.6152906105964203`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLogLogPlot", "[", 
  RowBox[{
   RowBox[{"sample4096", "\[LeftDoubleBracket]", 
    RowBox[{"All", ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "5"}], "}"}]}], "\[RightDoubleBracket]"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Below GeV count\>\"", ",", "\"\<Duration\>\""}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.6152901627181463`*^9, 3.615290177583363*^9}, {
  3.6152902313556557`*^9, 3.615290244933425*^9}, {3.615290323875537*^9, 
  3.615290423308736*^9}, {3.6152905099370317`*^9, 3.6152905108791227`*^9}, {
  3.615290547650494*^9, 3.615290556590959*^9}, {3.615290590203401*^9, 
  3.615290670562769*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.005555555555555556], 
     AbsoluteThickness[1.6], PointBox[CompressedData["
1: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
uZWxK0cZk09qjjcTyEMtf9lbDfKcUUZVVurhLGz9rzV51PCgorlr5hVyXrVs
79vrPBF+Jdi/9Ewnffahb4h/WYwPZzTzv5L7tRgO/3G5jvDfmkyzlWRPndv2
u6jt4OFtR3/iPz0Guet/+Q3mifH5are9UaE8FhgmeJXXEZ6eMO/sfj6Dn98c
9qgF89AQOsM4qIbGmuqq2c7SPBgu+vLrF+lTqw+Kwbf3CUGVmBddaqWQmuG/
dUawAkoDRtJXkbw7vmON3+6nHNh8TbdKimHwlY3Rm0K8cPnZ4JXq5BzrJvl6
eWqQeVwf8/TZRwYzxsxksn0J3zYEhkb40riQyIksOsdB64Kfez7eI376+nT4
kX/EE43OxLVs4uB9cMxc8zAe2JaWTYcJj3Um3cmffooDkYexVwPhyqdfwmbc
yhWhaN7OkGItGufr7Rzv/uHiUYfVqCCWwZv+obMbPvGxbS+PbSugYf3sr8Rd
CUW0VY86aDssj1aVnFvDOiIMtXp5SiZTeLAw8KpgDMktkwh3xR8M1i43sTGs
52BJy1HBNLLPs//+3tZJONb08Ji1AwosIn3LAsvTlTF1orcce5FCpWtemVG+
ALPFKhZDh4g/LlDaFD9GCbqO06kVmfJIMfg1zWkCi+snvZQehbF4m+F585+q
Anbf3Wt4TJrCFiPnybVFHBTnL2z1zWAwZOfTOtmSg2nTLB62tjCIPlnwrK5M
GUYOno5KcvLYXG/9Kticj2lmKy2Okflo4p34MHKIxZrmuitHZrGY1M/JV/cT
QHee9UMVwqNWVl9ctY7yEZ17/0EDef8ew8n7LcqFOFlboxKyl/ifbODGfeT3
vy4tO7D2KNnnRAXpN8pCLBLoLJpxl8KVqlnf9pH5kLPOq9m/mMFMmcDj4lcc
6CpcDvRJY/B2WdvboqUcbEbI6iuEV9esbQ218eRilqHH9EnE347tWhv4fgUP
v0asfeb/oPHmn/mok7eJL8raWZedJf37pelJ52wRimdN/BuwhcK5fTupqIlc
mOgcOX/oGIO5YzxXTapgwAkvv3RbkYNc5+yaslVc7NJ90cKzYxA5c8jAQlqA
OceMHl63JP5mPmOnzFUFHA2JcNT5R+HUtoVvb8xm8fDy1LJNgSz8xlF9RYGK
uPH4+5qdQgq6u0d4Xdk0+n08iOVxYP+2QvLXTy50PH8t+39fx6/Ynz2P5Pik
8IA5xh84iB9ul5j9iAvFo//WjBcxCOvYHHyKcDX70N3jgwQHLlFDqY8LBTC8
a/ioVYOG+VHDfaISGibz3qxpOMjBn/p6C3dNMYw7DTWSX1J4q+x06KUTH590
TO/23KdR+SvQVcuWg4XuxTIuLxhUDaUryV4XwXWcPseCnFeZtZ5P2xM+jLeW
y2WTfnvkfyShiPTNnden8ut+00hLO3RiTIQIBmcmLpYi/DA85lf7VPJ9u9bt
H1g4isXJ9ZvmOFkr4e5/w45rj8nD9dX9Py37FaFzr/CH73YKQXY392ZtFqHi
lfHmJ27Ez/Qn3lgezcPQ9B3V8x7TaGjIzJtorISQh3aXxpJ8uWqdJ6H3lPig
+6EriwsJ73NGl0t2cXDNfonEkZMMPAOthttixODaLg9fcpXsm5LaoQN3efCU
T36whMMg4P37dzYvRPjTWmZwSJ/4+Mh4HX1fMU6bjcrZWyUPzrsqP6sNQhzL
cDKQfUjh+Qs3W+VaBbyRC303bhyFVboxy2618KBVUxgUnUn8g4lwPJbPQ9fF
iKu9SYR/4kveyL7hY4fR9pB7X2ns0nO0XbiIhzCvrJwK8veJL3g64pdi/Kus
tBq5QPKu98T9fGUuJkYoOSn5kHyf62wUOFGIyMXuP36fJud11+bGrQQeNtVN
XGTZROPwgWceC4e4OK7+o9iD8Pu+vCFaqol4ld9N066zDNzXLpMvfcPFp8yy
JlsyR5qNj2z/axSiT+L1n1RfCuJTKtt1lRWh4Oj7bxTp5/Sq03EmH+VxI6j4
bvw2HuZuvWr+6qkSxOnlWqonSF58Sx7xleXB9diNw+ZDNKQPBfUmruTgxOWb
TmPI/vXg30yzl3y49S2rn/qQRvOMQvUNyWK4v2p/V7GVQmJDsW3EERaPrsUe
EfizKGnyjLrXqIRUb7flipsoHKyznr5wMTn/ytW67REUDH58TcrtFuP7P0Ho
tDB5NDhP+eVuy0UplV41yYHB6KxpMgnGYvyN2mVekEehPLqubYT07b55fP2i
0aQP08sOVCzi4/7FLefPEn4ZN/ri/sY0FklpY1TvrCfe/9+N37ZXuJivY9fX
o8ngSHZ0XmspF09ij2m9X8pgSapa8hHShwO20x+KQmgYX9j15L2BELJVp9KC
n1GQyhwMSrsvxMGYPJXwsTTKWswKnGV4kN3glipBvOPTi9aUWTk86O96t9OE
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
KNlsIbOAS+F6WsT4+G0Byj7btBl7knxqWrplebsA7DuxRTWzGbjJvzPDlCJ+
rN7v4ribgrlkoY9KjwJ8k4blTl1gwFPlQBeH3GfvyOK3S2ezEPb+yZEbeVz0
PtzxPJfkk1B2KOgeORfGUbEDo+tY2LBbO3MqybNv1abtCpbE7/mt1+W1OZgo
UXzXo4XMf9DrvKF7bKjVPxXZp0KjONyWb9fIhOsLZZFtEuT8reR0X61lIfEI
q7nkOfFIg0kX2d9J352qlL5C+OnMbNfxC5EsHBXV+KOQT+Z/aZd/uBML7i96
bbxbaVwMPFseuJEH4Uf6qH8dhXiqWKk1m+TF/dbcKrJfKlGeVdsIz/8Ye1j3
co48Vj6WXOSZRbhvzG2qZgUTHg5uFx6sZGNM6uJhj100rL7u139owURYI9/l
HZmT2qitW1+s5GPB1/1nfz9hoM3z2+H0nmlgeKVAYjIDpYUmGn6lJG/ZclH2
RhSubZxt+/YaHwc3TPioBwou+rYRlzunQX9bro0jOf85dqKsvbu4kL3a4ZdJ
eO/6WA3zK+kvhZg70jOlaVydGX/mn8o0WGU4HNEl+dltWbHfMJPGw0qBagXx
CJ3umui1WwifaQRqJpM8j4qU/7J1owKG1qx9+T6Ywummy1tPSPBga3t800ry
+c8mXrm5/wYP/WFOhTOPUtil+v2VLk8BtwVXGfvIvJ1Yxmkq/sNBx72Vu7oJ
b3pZjHX/z4OLDWSlmeQ89+ydYGsewUH1lS561U0Kg5Y/xvofClBhy+md0iOP
rCl/i1IHFaD9r8y3OZT4Ws8Lne9lXIjlWwQvuE949s1c7x//74+B9J/BhTTs
7gTXP71E+CHp4C+N74SXXnPjtInvq97tKrgUykC5Wt/OLdtomJ8JzrCuZSLm
y826TZeUcKRz4a3fxG8W7m76bk783ETxklL9AAN/mAqnphzmovOvg13LQgpn
+W37j4uxYO+kZG1MvM6+WHnB8SNcWNiY1kzpovDjccSmJWQ/DaaudI+QYuJi
pJvl8BMFsBX0T9UYUDATJr8MPMnFvASZVUmviO+4f56xcgIbkvHN49vJvsW9
tFZaKs+DxBeD/RkJFP5VzFoS5s+DjLvWidX5FNaMBTbYkn0/Gad6z7KD8IXS
nhGjJAEarwWWTnEi/p1uUBtC/PHkUbrWj/R/pww/VL6BgzijlxdqiY/7dor1
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
VZ3/x8GGBabY9l3O04nnuj219Sbn6vMSEWkHmaicO09GyoqJ4qa+4p+1JJ9b
nmntSaKxx+LB9cP1LGwJeOXx+hqNUN2cjj21XFgEmPdlzaXw+UdIFcdZGX5l
+eI3lsvj0bODn7beIPyj/mv24ggKXMOnn+tfE//8MrPsIk04f4zfvECZRkCr
V8a/IhbMZfzMbK8w4b6wVjVVnYmzDp13nhPufPbH5YhoAJn3u/YSt/uY0BPs
8LUhvGAyKu9kQ/Zml1pfQscRFoaL5OzP7OfjvImK4PsZCqUmsxOdyPMP3ZBu
rEt89SKXMW3/RA4mXRo4bzlCoUr0/oUNOUpwbjLxKyP5obsv27vqDxO7dlV5
3P9L496fId+/mkJMTK4o29kvD+9Ejw9rGmm8KN4yKeQlE4stlrt5pfLRIu68
0XsqhROZp5uK9yvgpJXcUGcjA4eXx7ocbuVhVEllgyjpx70ReWZh5Vy4DPQm
/iX+Fj7//kjdBzZKHQVtl1VoXNptajMIDranqVv19VCQmmp+ZKCHj4BMGyXV
xRROv7Jf4XlFCas/noo6Wi6P1szK1RN12HgZ7Kj2kPi8hs+Rcec/HDx9eolf
T/qrf8T8xzDFgcmlVcYnuTSu7byYMm+Ujdd3+LU2hM/M1jn+9jvAxqKFL+qf
mNCgdr3ecIvw9QrerxuinjQ0gxsDdy1SwJwN31JXdjBg8rNl18osLtyL3p88
U0bBc0FLnkMuC6ULdmSUX6ex1FlvtsoOJrgfgqWyDMi8aWdpo0UBXTX7C2PO
U1DPWton1OWjVF7zd1o1hVRuZK/6cg7mSNYGlBLvu9UzQL24SKPhjYhyRg8T
UYvGFBdd4uBj8+K/j94Q/t3JqdTcwcLXflOvOSR/oqdOSDDJptGXJ2qV8pWJ
D6e6rH07SL9HzdzsfpfC9xlzrnpVEr9cMl83byWFV7W7o+wsOeAov3RPIXOj
OWtUJf8J6YP6Mv0mku/1Gd89Wr5zMaGid3b5PgoDWi67pInP1eU6GL7woeFz
xbNPJ46N2pqZA+v1abR/eLO5PYp8/5dhtVc1TAw93UYH8gn/GH5Z30fmtTqz
IztojOQLnavTcIsBjbsDj1YRv3xeVPJ3GXmeJY8Xf64g/L7fLUfR+g/hxcq0
bcbDPHQG5R7YTfrRscnP9U0UF5q5d4Kt3CgE/trx54U5C5U7nrEliE8Gnxh6
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
SmiUtbb3RN5RgnDNDoVtHvK40jTM+mbKgosqpjE/0Bhq+he6egEHgcOd3U+I
z/pvPHTdcQ8P7x6NHNDQpeDgusb+qRkPoe9/Xl4fT3zTa+ctNXI9JqOP82JD
mLiaaez/UZkD/xGhga4lDe9pfkZ1j1jIlM2+ty2LhvSieZfvE68s4e76+ob8
+ztl5cFn67mYainVe2k+hT+8mz+mG7PhZz/nsKMb4Xs7xbgc+2kw/WhwLDVC
Hrf8tArFRRXxkrouW/CSAda3W4a5n4QwT5JduLxfDlXi3aezOwW4dvDIQr8j
DASukp4TRvK4SKRg8eQ2GkpBz+Uu7uZAc966SUZ/KPAD1orrCjgw5XsVC79S
qNH6vlk/VRHnzp1rXE18Uxb6bg6LuTgS7x999DbxV5GC2f3+TFifkZEOMGOi
9+LKsy3nuWgTO/Co0YVCvtkh6y1m0zB77o/GT+3y2F1fPGuEYqN5vXBzegAN
RcaxZds6ucg9d0wnXIrC88ubzi2ex0GfQtS5kYU0QjmvFs4JZSC5Z376LTMO
FKOcx/3auUhQEtXKE6PQ8zU0NFeSg648Q9es/9//tuRwomsBDxf8XBw3v2Og
V06Y9XIqGzKm3GeSxI+m3v5zQOviNIQ2KEcFPZHDor2Dy48Fs/BhttG194U0
TIr6hxIjBRDatFU+rWBASvm+yNbPAkiynxZsL2bApqHaJseFg52NDx24AxSU
etff/bVcgNXDt46tP8RAW6aT3qJqAXLOLng+9QYDFbUT9lrZczGxsfX73y3E
h3Z67V7+jgmentZmJykmNGIlAkIJB24I3LFzxQfS441y/BVBHLR/jktsaCQ8
lKj1/NsWPrSN2TO6ohmIl94mMxzBxe+lkR+aKgjv79rno6XNxqjI9J93tpHz
rFly9fJHknfGA7IrSd5zzDjfjuZzETdj/UcT8jylVm/Tl24mfeTd8EOT7Mf9
2oNhPYSL/skfOyLBZkN//9p0o04hRPKtW26S84v793twlxYPS4Ybsu0eUQhx
Fz/9jnCCFf+N2ijxqS8hqlRaMxPrUl2768SZ+B6+MX+0i4X468uchDGk746J
aLj3chCpEbZc8zgFjt1S8UsnlKA17NMXq8bAQ28/hbcxHLSWbd/ZKUnjl/e8
xwe92BjP7CxzsiEedW3Xj9o5PKw2S3v7nUVBMDHnAzWZgxqPoCsa8jTuhkhl
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
vLTW3eIPMyhPnDn4XJz8u2Pics/HXLhEjR5UOk32+9ksrdM8Ggc5pa9ulLCx
xKi+MzCYg7zvd09aLaLxtr1+7OEMBuKXQp/m72Mgq8XEFXWooOvDFjE+mWth
gtsfMIkLVfuOjquk/9yn4v7FZypYV51utvE2C8+kv27f7CEALsXOYC2kIO+V
M7D4CwPnDB257eoM/pze5mn6ko/DOpbPbj2nIDLa8sRsTIjqouTHryky35ar
OK4hfm/937un2p9ZqJtq63NwNh8LlnY+W0j4vbu+sShOVIjZM3OPdP1h4VFF
WtHUH2T+aq3nJk0nvim+oSuRnK+z5Oc3v1Ip1Gyw7Vn5no9UCSl18e8sNOfZ
1Fls4GBsm/vIShsanqHJXqWr1dB6Y/KBuBIlXHvnbn7jDRtR5U1tfcdp2GQX
ve5SZUM3SD7/F6nXU+X9ssYP2bjy8+NuQS7hEUuOwZkN6njs/MOn6jzJkyLh
rcXn2PiS4xByooKG5IHfFTseMfhyb/jL19UMMGtDrFaMBvJsVFQXTCD1+7Zv
p+M+Dmq3XAyYT/o1fpvS1soRZSw9WFwkr8PC6afbsnfbEx/cu8Hv5RyS5xbZ
PR9usGFhc35LYgaNmTmfVlZkMBgnfjk9XY/UMaNmdfOnAA4Sml3iKf8+X6dU
33WLRuzgRelXZQxWiu4rlx1isCisp/TvKI3GcYbbM8j5rfP8PMrRZ3Bpd0at
SpAA9wKTPex2UugY9J2j3MLDz/iI3u2fKOx3Vm+58JDMve62acYjbHwVsW98
SubB1pCheQnfiW8rj/5mZIgPRxT/3q9A5s/vt+2sJXyMuo/OVn3JIjmmfr2R
cH1qqvDMcpqDxV9yoy+RvB930l+igfBkF/Ph4q5ukq+NRjHxAyycOXCa59mn
DG3zLcbDYiyE90q63zHj4cTVHKcu4if2JqGVF6LI+jV4/vllTiPjO+u1C+Ep
vWvfDpWSPDx0ROGQ/zUGTxsmhDqS3BNUCY/MJPx1O/ZH1bkKBp0548t/KPHw
fm5X3cFKCmpTwlsWp6lAIT7XhVtOznNH9MPAuRxccjp0cUkojfw5il6naoVo
UVcKbyT+aXIoaVgzi41bSZVnu0poJIworq3ZzcOcHMGzN8kUHDft/rQ5RQDW
U5Fn43IId8ZIlJ7wJ/vxstmq6g6DtSuXL5z0jkHMs6O1KyQYJJ/M9BCNJJwn
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
      "]]}, {}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"Below GeV count\"", TraditionalForm], 
    FormBox["\"Duration\"", TraditionalForm]},
  AxesOrigin->{4.139954023546697, 3.86860354694581},
  CoordinatesToolOptions:>{"DisplayFunction" -> ({
      Exp[
       Part[#, 1]], 
      Exp[
       Part[#, 2]]}& ), "CopiedValueFunction" -> ({
      Exp[
       Part[#, 1]], 
      Exp[
       Part[#, 2]]}& )},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{
     Charting`ScaledTicks[{Log, Exp}], 
     Charting`ScaledFrameTicks[{Log, Exp}]}, {
     Charting`ScaledTicks[{Log, Exp}], 
     Charting`ScaledFrameTicks[{Log, Exp}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->{435.4140625, Automatic},
  Method->{},
  PlotRange->{{4.250399280363447, 11.318895716635467`}, {3.9040877723113763`, 
   6.104109744976474}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->FrontEndValueCache[{
     Charting`ScaledTicks[{Log, Exp}], 
     Charting`ScaledTicks[{Log, Exp}]}, {{{4.605170185988092, 
       FormBox["100", TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {6.214608098422191, 
       FormBox["500", TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {6.907755278982137, 
       FormBox["1000", TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {8.517193191416238, 
       FormBox["5000", TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {9.210340371976184, 
       FormBox[
        TemplateBox[{"\[Times]", "\"\[Times]\"", "1", 
          
          TemplateBox[{"10", "4"}, "Superscript", SyntaxForm -> 
           SuperscriptBox]}, "RowWithSeparators"], TraditionalForm], {0.01, 
       0.}, {
        AbsoluteThickness[0.1]}}, {10.819778284410283`, 
       FormBox[
        TemplateBox[{"\[Times]", "\"\[Times]\"", "5", 
          
          TemplateBox[{"10", "4"}, "Superscript", SyntaxForm -> 
           SuperscriptBox]}, "RowWithSeparators"], TraditionalForm], {0.01, 
       0.}, {
        AbsoluteThickness[0.1]}}, {3.912023005428146, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {4.0943445622221, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {4.248495242049359, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {4.382026634673881, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {4.499809670330265, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {5.298317366548036, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {5.703782474656201, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {5.991464547107982, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {6.396929655216146, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {6.551080335043404, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {6.684611727667927, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {6.802394763324311, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {7.600902459542082, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {8.006367567650246, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {8.294049640102028, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {8.699514748210191, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {8.85366542803745, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {8.987196820661973, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {9.104979856318357, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {9.903487552536127, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {10.308952660644293`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {10.596634733096073`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {11.002099841204238`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {11.156250521031495`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {11.289781913656018`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {11.407564949312402`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {11.512925464970229`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}}, {{3.912023005428146, 
       FormBox["50", TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {4.605170185988092, 
       FormBox["100", TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {5.298317366548036, 
       FormBox["200", TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {6.214608098422191, 
       FormBox["500", TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {4.0943445622221, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {4.248495242049359, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {4.382026634673881, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {4.499809670330265, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {5.703782474656201, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {5.991464547107982, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}}}]]], "Output",
 CellChangeTimes->{{3.615290627538961*^9, 3.6152906338337383`*^9}, 
   3.615290671047217*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLogLogPlot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"#", "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}], 
        "/", 
        RowBox[{"#", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}]}],
        ",", 
       RowBox[{"#", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
      "}"}], "&"}], "/@", "sample4096"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<High / low ratio\>\"", ",", "\"\<Off-axis angle\>\""}], 
     "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6152901627181463`*^9, 3.615290177583363*^9}, {
  3.6152902313556557`*^9, 3.615290244933425*^9}, {3.615290323875537*^9, 
  3.615290423308736*^9}, {3.6152905099370317`*^9, 3.6152905108791227`*^9}, {
  3.615290547650494*^9, 3.615290556590959*^9}, {3.615290590203401*^9, 
  3.6152906101881332`*^9}, {3.6152906876642847`*^9, 3.615290802328095*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.005555555555555556], 
     AbsoluteThickness[1.6], PointBox[CompressedData["
1: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
      "]]}, {}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"High / low ratio\"", TraditionalForm], 
    FormBox["\"Off-axis angle\"", TraditionalForm]},
  AxesOrigin->{-6.865203489352704, -10.437805004216875`},
  CoordinatesToolOptions:>{"DisplayFunction" -> ({
      Exp[
       Part[#, 1]], 
      Exp[
       Part[#, 2]]}& ), "CopiedValueFunction" -> ({
      Exp[
       Part[#, 1]], 
      Exp[
       Part[#, 2]]}& )},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{
     Charting`ScaledTicks[{Log, Exp}], 
     Charting`ScaledFrameTicks[{Log, Exp}]}, {
     Charting`ScaledTicks[{Log, Exp}], 
     Charting`ScaledFrameTicks[{Log, Exp}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->{399.765625, Automatic},
  Method->{},
  PlotRange->{{-6.762468919466086, -0.1874564467225946}, \
{-10.345432088281681`, -4.618311300299697}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->FrontEndValueCache[{
     Charting`ScaledTicks[{Log, Exp}], 
     Charting`ScaledTicks[{Log, Exp}]}, {{{-5.298317366548036, 
       FormBox[
        TemplateBox[{"\[Times]", "\"\[Times]\"", "5.`", 
          TemplateBox[{"10", 
            RowBox[{"-", "3"}]}, "Superscript", SyntaxForm -> 
           SuperscriptBox]}, "RowWithSeparators"], TraditionalForm], {0.01, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-4.605170185988091, 
       FormBox[
        TemplateBox[{"\[Times]", "\"\[Times]\"", "1.`", 
          TemplateBox[{"10", 
            RowBox[{"-", "2"}]}, "Superscript", SyntaxForm -> 
           SuperscriptBox]}, "RowWithSeparators"], TraditionalForm], {0.01, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-2.995732273553991, 
       FormBox[
        TagBox[
         InterpretationBox["\"0.05\"", 0.05, AutoDelete -> True], 
         NumberForm[#, {
           DirectedInfinity[1], 2.}]& ], TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {-2.3025850929940455`, 
       FormBox[
        TagBox[
         InterpretationBox["\"0.10\"", 0.1, AutoDelete -> True], 
         NumberForm[#, {
           DirectedInfinity[1], 2.}]& ], TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {-0.6931471805599453, 
       FormBox[
        TagBox[
         InterpretationBox["\"0.50\"", 0.5, AutoDelete -> True], 
         NumberForm[#, {
           DirectedInfinity[1], 2.}]& ], TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {-7.600902459542082, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-7.418580902748128, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-7.264430222920869, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-7.1308988302963465`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-7.013115794639964, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-6.907755278982137, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-6.214608098422191, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-5.809142990314028, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-5.521460917862246, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-5.115995809754082, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-4.961845129926823, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-4.8283137373023015`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-4.710530701645918, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-3.912023005428146, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-3.506557897319982, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-3.2188758248682006`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-2.8134107167600364`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-2.659260036932778, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-2.5257286443082556`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-2.4079456086518722`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-1.6094379124341003`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-1.2039728043259361`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-0.916290731874155, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-0.5108256237659907, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-0.35667494393873245`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-0.2231435513142097, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-0.10536051565782628`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {0., 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}}, {{-9.210340371976182, 
       FormBox[
        TemplateBox[{"\[Times]", "\"\[Times]\"", "1.`", 
          TemplateBox[{"10", 
            RowBox[{"-", "4"}]}, "Superscript", SyntaxForm -> 
           SuperscriptBox]}, "RowWithSeparators"], TraditionalForm], {0.01, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-7.600902459542082, 
       FormBox[
        TemplateBox[{"\[Times]", "\"\[Times]\"", "5.`", 
          TemplateBox[{"10", 
            RowBox[{"-", "4"}]}, "Superscript", SyntaxForm -> 
           SuperscriptBox]}, "RowWithSeparators"], TraditionalForm], {0.01, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-6.907755278982137, 
       FormBox[
        TemplateBox[{"\[Times]", "\"\[Times]\"", "1.`", 
          TemplateBox[{"10", 
            RowBox[{"-", "3"}]}, "Superscript", SyntaxForm -> 
           SuperscriptBox]}, "RowWithSeparators"], TraditionalForm], {0.01, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-5.298317366548036, 
       FormBox[
        TemplateBox[{"\[Times]", "\"\[Times]\"", "5.`", 
          TemplateBox[{"10", 
            RowBox[{"-", "3"}]}, "Superscript", SyntaxForm -> 
           SuperscriptBox]}, "RowWithSeparators"], TraditionalForm], {0.01, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-4.605170185988091, 
       FormBox[
        TemplateBox[{"\[Times]", "\"\[Times]\"", "1.`", 
          TemplateBox[{"10", 
            RowBox[{"-", "2"}]}, "Superscript", SyntaxForm -> 
           SuperscriptBox]}, "RowWithSeparators"], TraditionalForm], {0.01, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-11.512925464970229`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-10.819778284410283`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-10.41431317630212, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-10.126631103850338`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-9.903487552536127, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-9.721165995742174, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-9.567015315914915, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-9.433483923290392, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-9.315700887634009, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-8.517193191416238, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-8.111728083308073, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-7.824046010856292, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-7.418580902748128, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-7.264430222920869, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-7.1308988302963465`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-7.013115794639964, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-6.214608098422191, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-5.809142990314028, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-5.521460917862246, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-5.115995809754082, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-4.961845129926823, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-4.8283137373023015`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-4.710530701645918, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-3.912023005428146, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-3.506557897319982, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-3.2188758248682006`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-2.995732273553991, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}}}]]], "Output",
 CellChangeTimes->{{3.6152906896876917`*^9, 3.615290704899158*^9}, {
  3.615290760688965*^9, 3.615290803107484*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLogLogPlot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"#", "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}], 
        "/", 
        RowBox[{"#", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}]}],
        ",", 
       RowBox[{"#", "\[LeftDoubleBracket]", "6", "\[RightDoubleBracket]"}]}], 
      "}"}], "&"}], "/@", "sample4096"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<High / low ratio\>\"", ",", "\"\<Stretching factor\>\""}], 
     "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6152901627181463`*^9, 3.615290177583363*^9}, {
  3.6152902313556557`*^9, 3.615290244933425*^9}, {3.615290323875537*^9, 
  3.615290423308736*^9}, {3.6152905099370317`*^9, 3.6152905108791227`*^9}, {
  3.615290547650494*^9, 3.615290556590959*^9}, {3.615290590203401*^9, 
  3.6152906101881332`*^9}, {3.6152906876642847`*^9, 3.615290817997138*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.005555555555555556], 
     AbsoluteThickness[1.6], PointBox[CompressedData["
1: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
ZSlOsaTBmVOr3sSzJHjpY7vu0FcMIH6Us3bf3/tZTOKVjTG4Ccs+ibGkwhvn
7Gq4h/7CpbUNVnbKbST93jp+cSQFep+Ech5N2EE4yc7UzSoTtuduvH0dRsAM
RiFmd+KqwWKY0fn4c1a8S7TVSFqYg9piw4T8iU10/UCA2eZEGkjQ/ttK/UKJ
TYMCg3X0euCLsIfC/eNEvCksS7B61QzU5ze7cjkWkJH07o+gIzHIQIZU24ST
gIP+Wv6TESiB6c+fn77rpcfjCh+P2l8Yg4EERrkF0TWkXCsYdbEjGuwK2t0e
yTNjMgqmD/wPJoHTXTm5xG/fX5wXti9kNUDbyY9qGvtIWF9OqOHpLULMPzJT
i9sI2DoqpDr0QxncWHMIG9w4iG0vrpSGrK7A0uNzpSOtC+jO5bcCZzefoyeq
XDc0w9eQCs2t+qzxVHRY+o2A+vC+nzhHn9+QqIPKu8G3GeJZcNAdYr0J9Ty0
qKzxPdvqRXHX/yW7vK5CGaUvGTaoaHC+hnj+V4du8LFNmo+9Q4orVdXXhJfr
oVyCxSXg9R56+88l6KVRIYz7vG52PEqJFas03jrOd4I5E9lBskYSPMZurXs8
BENy1BeHX/wrKHBmSfxhjhfUkTm0fDpGidlO7VGU8vSAodmDh3ferSEPUTt7
txPxUHveY5DHgASr0v81pudIB+kVQhohchuJptfHC9rlQK9wT6rqSwKmIpR0
GP6thR2Hae4Dtw7iOIXXua8ql6Gutv/tjdeTKO+okObKh1w02hSUyza4iQwK
LjrZ9qfB47pKfn7DQfTqVZH+f+ZlSPnPU6kCdRp8xu/t8rfydpjJ5LLV5B9F
g4+6k7PLi9EtN5WYc+lEfI+5iT/HtA2MnH4eHe0kx/6n71FkxbeB9oa31xlv
IuYLvxIpp94EXOaXUz9ozyBbKWm33U/FKChiZuHcLg22rhRXZtsagqogrXZ/
Lzr89Y3bIa0To5B/6bm/guEh3GXKH+0StARvEr4tkcvNoXXHeC39gFzEyLpI
oi27iJb/if6mCUlH2ZoEpfh4Ktxtf4I192wfXJnvss3an0fNQ/18sWY1QPE6
7Lnsf+T47GhDhEhJK4jxSxOvfSfgMKof4WEvEBDtlM4Tgg5ipXu6U3Y3VuCE
K50Pix8jvpGle1LbaxwUdRZusyYwYKW7AUY7ZiOw9BRf0NQi4F8JX87lTtRC
t5kE/W5nByIflUVilTXo48iHE6u3KHDsUmd0uVEHzAYHNwk7bCKBGmuy2dmf
8JnaleG0Nx0OO5fbNft1AOQi/Xw0HtBjv5wqZQuzMbA/QYF5O9bQ0xHWn6vT
CciHgb+66BgtnvlnuVpLGAYJJcuHsEDEejV5mbtGrWA31HrRQGYJXZT7WOm+
9xN5IYZrX8JX0fzrdsMqtWBgtU9LIApMIy4tmneehHJ0MqDWvvBjH8raKAzR
0sFoe6o+JGRhDfX6s09+zkiGwoKdX5yDpDhfLPyrclYlTEwwOvt8JsEmQbvT
vw5VwxfF1dkaiz6k6r0U13moGr0sIT39LpEKr8/tuDck/IVKMT0+nQBy/JQY
//3u93aIpjhMqvWTEt900bG6YtwLrnb0929cXUHq9O0jiaRPkft1X8nvp/fQ
k7nv8h41GG7nH08P6mPAr21NluTOj8DlU+rnZZj385fz7OMk6UD0PkQlVVt1
AUWzxQ86DKaie7JVKrq2m0hx2TpO1TYa3UlX4S5NWEfvt3SC6Qg/Qc7HSSpH
qBsJXNepPz9eicrvj9woVGTBhCOXxhvH52BeXXE9v2QLSTFaqUdZIthm2T5k
tLyfl1WKsmS2PnDTmqWyqpUFf7lmdL3H9B+IXeJzKZchwfFXRzxkzdPgP4Ja
IGF5EN1ddfrWR1qEnCgKzNUk99/Pq2SLOrF/oCSlkZeDkRaHegRViWcNweuI
Nyr5J3aR0ZEE3tDsdOjT0IymjSFgpyfKtw7/qoCXd2/8LHu5jBIP56gk8Uch
EiVry11JUixtYUWWr9gIp3je3aEfXEcmDiXnr/amwVKRntvSKDnWXbr1J6Km
A27xlpF+295GAdcdsmtCf4CVkd2MrBEVpvR73NFf3wc+Xh9MIoOY8JkuReGf
g1MQ3pagt0FKhmtmRM+wqTXCd6Hn8YnClFgoRNQ0P6wHBr4H+sU0zKOs3uQr
jYNpyKb9k+s3LlKsv+6h/FWrDoTPuQTMKlHgMxE+cgLvuoCeduABefc4iuAb
8659Wo68AmI8TsWs7PPPVbeYigKUv6zN7z68gBSye+6dCC9G4rsM/4pFyXGU
hPP7U6/aQCdX3H1PnoClqKKU5Z6WAcFgS5/RnxqH+k/ZtNAOwrSf73jQdRo8
bid7sXB3ENRcdDW621fR+0kHmmMX/KHLR+JasAYzfnzuGa3x2VH4zsxsn1ZF
h9vV/YP+uzICwkxLNMq6RLxVYHzH06AVbNSTw0/EseKzZ67q3/02B9e8jjlq
Htj3QYOaNauSaqDOEjI/4b6Itr0uHhFqTEdrUiW8ioRu9LQ/EAZUytGTUy97
2vfXU+m2o21LaAbP7NixBO9lVHRvqA7156Ka8BTSbhtmvCBWWu+7PQhHdW+J
HpOdR12Xlm7+p1CCtjzcq9EGLY7kFDckMR+GttGLqUvHV9BRLwOhx72x6OTi
ZG5w2hRyvN2h5nYzExmnzj6495wcBzGtJ+mGtYH05kt+n5ME/LCsvMO+uRKa
38sta6gtINNu7Q4h7SxkdPX+MYtaZtzd509+g3UY6Ph4FDif0WDPfwrKJ48O
wa3WTI6HD5jxTZn4RzylM/ArgcyNR2cZ8dxRzLZL+gLXno+cESGlwtznL7Ql
D7fBHW/5sN59Hvnvs9iz2y+ywOtg1TXfX5tok5HaJyTED802iJP8/kDAVdf2
suZiKsFq8mzGogsdvpi8nkD2fRAaD9cvqAATvi/4N2HWegroImnlbqcRceOt
5YvPP7bBDoOhuRodCbYcygv7G1oAJMmdJHjf1zWPuP79N9cDZz8yqXxZpMZe
gg+uHlIehAdBZ4BnlhEPleQ6XxEYBqPkwivP+oj4lfS7tWvqbXDjh6pR1CtK
zMRBgY8z98Co2B7/wRkSPBBolF/BUAlHZN8fwLKsuLJG8IDCl3koU71x/LYi
OabTK9Tx9WsFLqmEIq2rC6iFTrqq9A9GLKSebHknD2AUYE4mM7gICrvEuFYt
Ejw5I0By+WIkPFgudW8T30VWd2ZVJ3eLwHAzP+qa6gqSalv2btO2gTcvvI1I
vDdRS+wFbxdea2ifJUVsZIdw/lftoTfKK2BmwEh1SL0f1Ymu+D4QQkhNzbyG
moMEzzNTdeGH0WD+74NB+MoSklJXoJK9mYpky+nW62pI8CtU29LBgOALVWGe
v8gaemjTS6W/9h3OCjAxzw9to5P3s+R1T5XAmQVZ49MHllEIdlZ4bpCPTkqs
PV/h2z+PjbEXSwsYCFaH2EMTafB7Uo4Iy9xBiLoY5lNjSYcpBl4wLH0fgevZ
D+suChPwzhRxXHSrFEZ3yQdk0jeR01QIWQdFIQhW6+fsyi4gmcCTVvVU6ags
O/DJfzWjSO9QnIyAbTkKqx0Qbo5mxumdH1vtukZBpfBBVu7hXaTpNzE4wZQC
nSecaRY0mXCJh0m6AsUYlGgaJlrrMeDkc3J1l5iHIfQR/4mBAQIWuxxgEeJc
Dw4cOZplbUTMvrLR6dPdBNTyn19tvdj3eYqXXUrLwehrLoHv92V6HFafbC4v
OAbjj+LGE00WUY5RFPeETAyyPTEzcaqNEl8InfG9oNoLTXO7h8nPDyKhoDrq
P50lSO+R/1f3gxT47njZTWTYAbWbs4lyReS45IjVxZzODuAYlbV4NLmHPv22
t3NkqYCmQ9ecIv2p8Nz7efOsS31Qc6GYlP0qAV8pe9SpplkKkhferEpL0uFm
xYFrhb9H4O3Zr16Xe6iwufQpFQ6ZfvizyHd6W5wMM/EEyFHpVYHzMFeoHu8K
4v5oeK02wx053Typ5xlNwHpaZoUi0fv87uuDpmrWES8TJ8l7x2xQE/TmuxxL
xIwk0V+OLLYAa7anYdteI2rtccExJ2vQu6zD1h3hRPzL5UNGYlUz2LrHsw/T
kuNUDmaFSY9WOKlAI9qsuZ+Pz/jU7AxbgUeSRizFaAaV/prrE6krRWbSe++j
3rLim/ZpNwO85kF/3Vc7ZY0Mp1NK0I3t79fffTfaqZsU96YaCCld/QPsEkUs
nb2b6B1rZO/ZXxnApPl+WbWcgKOfHVc8J1MDzVWn+2KdyPDsYAljhFYTFOv9
J34hYwIh+cdWBsalKOfG51YCJS0W4f5pyUk1DDUW/tNuFzfRYrEYJyElC2ln
9/nxT46gHkczzc/hlShGQybEjWJ2f79/IcnXS5EcKEUx2CwgouEB4X/fk9Ac
pRPZ480VxFNYYtTi+A2VkBcTxRJb0GUhzQeeoZWI0lH+rOQmGb5G20PhR98M
+pm7NVHlVNiC8Pi0mVQ3dLX/Rp0U1Ni9v6db9373vs/G3hBWJsW86dp+zwPq
geUYW2tqPinugfRz/xga4dLj5VXT25Q48aM0IcuiAyiUFIVZ6fbf99XTf3Yu
xaCgGLM1B1EirtNQLXahaAbKbKew243kmF1bb/ZkTSuosVseULpBgp0Nt1pA
oRy2uKzP/VmaRsk8pu5SznmIMmDpqWAvFX65comM4NMPwal7R8hYdpHBpMgs
Fs8DZRFu5V9sNLjkmdW8TPQgRLyy1rhMZMDTNN+KOeLG4PSHLiJHEhVOELUj
+2vWDxc4Wy3/OK4jc1y2bvE4C6mITBxsp2DGzf/apdcNRyBBycaP5TcdTvIS
vKpjMwIXr7ufmkjeRrqZPeP3RT+B1NbDpkPjVPjeGYkd05o++CY4p7YXs4Ge
bfCkf6T1B76Wko/27Itoou2WmdG7dHTp2C5T0fwe2rxfluQ7WAG6wik9S5pU
uGu+e1ayqQ/A+05yquIeOkxp733lAYarLH995AaX0deCHxdMZDzQy3pVIfdv
BIwoU35+XK8Bl5MflUYk6DDtGVPC672/8CT4px0zGRmOVvzdc/dMJZwZ6GGe
KqPC8rx7H+9e7oOFBzxnruSSYdY0rpMHD7QAvZ0Sb2gDCZalGJYMKysHsVcX
ZR4LLaH6MOrW8jgPZNpWkTKht4Z+X+bTlYwPgdI8ZUeXSyT4aZovO6NPEYzL
HhUOzehGLIMWvUvbpWhVlFxEZZ0cJ1zl5n99oQO8xnX9nFumUPKZ3ErFIIws
3jK9aJTeRlzaLKx2itnw6AFx5fjQBFIwJUo9PF2C+hxJtcRvk+B6LefD6qal
kBKq8WsscQmVyXLRuLrEoKKtw+NBnqso1312+Oi5CGSW6bXsvLmGzm70Vs1U
7vs7t7gIgZEJFwoMplnujoKEobmF60kqvEkt3uDwrQsMYOZ90ksqXOF4JjSQ
rg8kaexNPsfuItbdEwedLxbDya2lo2/OEHHMY+5fbVqtcD1a7gtHKgO+6zat
kPxpFM6+UH116BUVrn9cE/O0/C88W+lepG9jxM1HsyeKgkaBa/B0RqLwGjpm
+shjSC4EOhZXSSOp9+t5cqjOvmwc3o3q9PxOpcDnV1PevfjYDYL+5p2D7mz4
88Fltet2i6D4UJy8TPUvimD6fufuZDUyOEtbpB5PgVfPmS8eftYBzOHPNoV2
15GDUGjZ+5ZYaNoOsRToIMeMZmO8C/rtcFLeY1eq/v//ozR8+RUXICE2Odfj
xzaa5VFUCCImwAmd6A+GR8lxutd8OsdKK1x45BUnHLCEeAdoPrtIOqCzyeYJ
09cp8dUQuxDdxC6w1ZAc/sW9gcZv0lT+KU0F++Phpw6lbCOHbo+F02WZgO/s
yM2I7CCZwXdGtX+KgXN9bipQigyLH540OL1UC1oHBP55vCXHHExWLktKbeBr
TlPBlbyAXPpX3ET4MlHvOXSnTpIcE3oNzSuN26BL87fFHSZabPyJwnetcQhs
tpszhdJJMevAy7tXeGvB0zNUx4p2BZ2ejLxubBmMvq/OZF5WJsF3PtWjlc1i
GNp8fublyCpSK3rFcI0lFZH9F+otSL+CPAtX37SFv4ES5y59QxE6nPfiVGSk
/whwmf41Xw7eQtMfolNmoorgrJzVrhgjOTY7Kvr0gl4LJHBQ6Y9f2UImxuc4
7/dZQ2j/BysyK1pMf+5cQqXPMAxXOv9z4NpBLgmSkXyUGARurpOsxSyju0mS
Z3N+B6NTwfWTueWk+L+W0XqYKYeWxQ/zOaeYsbOe38fJxWl4H0n791TIJiL+
DQ84PpwFmQ9zaZ/7EbFdqAkLsagF3HojDiYGUGNz5uLp2wUDoNduY2bPx4y/
HhMI2XsxBkYBDAmVp/YQcbnbtu5wBVztz/Vjzd1Bh5cUPh5p/gwmW/01Ynak
+NRQ3AybZA1wdU4cZ7u2nz9Xg2RCVopAuFaUY9xoBy13nrhizJMKUckePhNz
RPz9Mug4dbcB+2sv9Qu2FFiayOe83N4Fz2NVJY+W7CCi4Mt+Qv438F3xtD5J
IMEfbLg3zjrlQImM+gPSB0RsRZU+GxDVCIGlI7spPjsoTtYtpvkYhpzPvSbX
d1hwvUzf/V3NeRg+7OEfJEPA7AH/o+i8w2p8/zh+TuO0d31LRElCaCiaPkUa
0tCWhEqFRCJKFBENqTQQKmlp7zTcd3vvvffee9ev39/nep7nup/787zfr9d1
Peec5HrJiUo4IM40cKh7BT0g+9iqORmBIrbdPC3yWfEdtuYHrxdmoVmhq1FX
nRp7ITsHmb/d4HmCzyttjgqPDF7L8vHphidu7doD16aQWQM/2SHeeFT3uvX5
uWky7AtERhaGSnjiYVQ0MkWGyRJ2T+3EV0J9JK1FTtEEsi6xu6ZxFaEu/4FE
x2ISJmlzY4boNuAZjumzkSXiRvaT1HSMVXA04mGyhgI9JqbNWvH9HgJdgv3g
G0sCrt6PL8gOFkC/jKqKuNCej98cPabX9wKNPWfr+6lLwknfL5sO/G2EfDVO
ZFPDjn+7VOzq31yAeaR0iWeQDOdzPqSnT6oD154r1NMmE6h9NDJv4EUBCuCl
+9MltITSA7UzS05+Qd/m01wtCFQ4ka8npm+Px4yoFT60lhDwhVCFhYLSCrhI
90ie6wcBrzmOeFcpFMEv5vreWt29/f/CItlSUAwbA7eyGoSGkRRFyAlt5UL0
27XLKdR9Dp3uvjbsFRWG9M9oadWa76BCsv1uV/f4eeGpQdhJJ0ocS+ZwvO9b
ExgYe9inXaTAR17FSf3/909645aPLuz5zHEmv7L66GboP+Vp9fUVEb/O8raY
FiyA+cGtal5DZkx6mir9fmoYqpl4yibVl5Cvz85NrY0UdK/1/KVjtDuofFSL
PU4Mwb83NbKaK8voQvVT50MsieiZiVT4Y7pt5GuZxTdz3gP2q0am3K5fQWG5
dRPl+Yao+3qmcdTe9XpTPPlo6KtAjJss28iBHn88X+PSwTUIzGN9H7YKSHt5
lvg99H0HGCv88LM7RY+N+ZuG/DMH4Luz9cbh7l20XJYuv/SoAKbeBivw560g
GdFo9y91fkjhWrnbDCUtvlcdYtz3qw+k4I120aF1VNE0vX1aOBxKrfK4fvSs
I/HDDRFOn5Lgxa14+dQXBEx5JrHrRHwpDEwdMPVXpMKtZ3h8dCo6gXF/SpmK
NSUWNPkcsEtqgUI8ve+kOAn//bjfoIWpBR49MJ2kVCdizWH0TD2tHH4VvWy+
GD+ITlutCEuUlqI0RZtPig+osX7b49XgsB4QDUl0UtRcRL/Miv8m2qSgCbOC
5HsRc2j49FzZObuvaFD5jLMHOwEvHvW56H64CJJeyP+xkVtE0iVqlvq/k9Ef
pXOzPNtEnBx16fTWqQpgyRAI+zc6hxT3NQZY12FEd0S4RcBuFTW4kbOoryWj
JkkdLWpravz+hZDQ0X29oDjDb+35nB6TO3C0nSMfBmHqo0k/q8dQNof4jQTy
UnRfp+Jh0dgKkr08zKnOFYpGs18ZxvmTMEVlCKJgbQczVdooi9U9/z9y/Mi6
aARyrZjlf588hSgyioL5HbNR7YuhpG1NBuzNwXfY9UQ/HJ26nS90Yw0JhxQ1
KUdGw39+iYczn60jGQYyJZs3GWBlUf+kl44Cj4hfG4yyb9jL91I8YreLhqIn
U5nPYlB/N/dl4sACErtKIufZ47EPnP82DX2ImMM3u/jGh2qo9+pWFJpiwHYm
+QvOZ0ehwElQaXg/EfNe4gmXa6yEhiN/reK51tG9DoqRo8KJsOr+2UXr0jZS
/2EZxEqdBBYbcZ0x1szYtUt/WqlsAtLOt5n8Z7aM6D9kvcQre+tRJN48PseA
f559G/x5ZAT8rHf/q4oj4rrPJtrZt6shnpPzfOPrNaQ/8pVByTIc2siFczre
kmEqcqZx6r5CkDIKuCP8ihKf0xV6dCCmFUS8zm89c9pBSi8ZNUIuJQAx7zeX
7XEiHjnpScs7VQFxVidTd1JGUMWA5vMs/SxE/2syweIUEd8oq5i6PJ4Ds2+U
3StmyHFnalCQXnU9BK7rdC0+ZcJsry/1ylKOgGg3tfAaDR3WEa1av6PaA+RX
+ATNWZeR0e90jXKBKNQUQjM1r0+J/6w8/OsBLfBeXUIs8AIt1sr/8EzUth9+
lx4sD3LfRO13L9mMlWeCoY8mh9EgBeZQW7JMl2uAfxG0/x63biPlAOPW2LsY
ls55Hr4buIvK0i1cW6kLQHTojrMcgRbHP3zTfJG5H362VTQ3rFPgpICFz2Gq
LbA/GefyT7PitGEnvZGIWTCuZvzkfJMGXzVKKrW37wTBux6KEW9WURUS/UPn
FgkR7qd9JXpJuLmwF/806wBNfaUXUbu0+PSw8dpR/w7I3BX4YIhWUAY7Bx9H
jC8E3f1PR8aWGWskXz9QkzsBzkL9/9lnriA1j8OS5X8y0YPl5GbqIiK+nyBP
kWJSDp0MIUZ9uWz4eVnniHTxFFCHi/ur+yyiyuuBSyWOGcgN2614NhNxivbs
6BuOCljLVWdlWFxAou4u51NpMhH7JKOvds0asqsqve4g7oZE5LnHdxV30Ht5
stPz41mQWqGSuvmIiPuOn93V0cuDv+diHwe+3ELOHoMjbBN5MFQ/bFxzYwVJ
eVff6Jb7i17T3WbSTNlGXgs0p3rvR0IwC/x+LLSM+OJKrKUe/AI3yegs6oo9
P023aNlVKwaexanLPRPb6OC3LR1DplAYnPBVzZYm4KYvUfMue3l+7XjRyJOr
9Pg/5WOv6NvboKv/+tLxLjKscoIzdf1RPeTeeyMWfpESF1++Xq0f1AipXboD
uXJsuAT+S12KmIOqmfnpI1K7SLyAfplToBgsn6+6GUhvoBoeuVDx64Hwefz4
ixnNSXQLJBkpIhHKtYGjtl1EfLB0qK17qgbqvt41ntUiw5YeLAEuFtUwcCq1
5SwdAR90/hU+fbgAfuXoJjZUMeOU3ys5QlMTcOKl3HcpHQq8/+/feZGlRnCt
8J0I0KbHx2Y8r7f39UKYLV1ruAgZ7gnoG2UzLITvTy89SwljwsWhv0gjnMNA
zXPlnIjPCqKwXaql3HRFBQtJ4p96ttGTox9zH9yJA8683mpBEU5seW83jaFg
GTbrgrxeyTBjrY0AaxG9YTDb3qd7ae/6T76nk7RH6uDOx089Ex/p8Vrg14rH
TMOQ9cSrzuQCAXeWFl57/qAQ7h5rv6m719d3+OJYpTyLIOhcISGzgoAjFni5
/JX2fG+BJXC6mBJPNq08FwpqAT/zSY6ovf6hbEkveasQAytlHkfnnkyiOn46
Z3hchG5wRM/PXphHncGq+zuG/yBzFcXelx2DKHefb8Np6Xy0Odbmt1RHwjU1
yT/p8zqAOptXzsl1F/H6FHhqZxbDo7uLLtIe6+hDM/18zO8w9PDHydyptXH0
/okMs4hZIfK+PEfz/S41Pq3uMWvv3AMJlORSp/70o9bcJ5kvmcqQ/5306KPx
a4h1XYLxmHAY1Iay7j61IOHU8rfJu1VtUCx34cnHnQ20y376B+/5VDCkNOq7
HECOtQ31h+OTGiA4+OHrNxrTCCSLmqJOxCEpMwIq+zyGetOXbbjzclFe9Ks3
nqbzqPkfWc5gag4Sma76I8C5i05M8mTcpyqAc2zKHYIxFLguvOVNT3AjjHw+
bfTHcAll9sXaTI9hdKzKfZg/bwNRl2d0djukgFf9xGb7i17kLMIa/96jHG2S
bu9GtKyixlnHoo3IH7DiG0PGW0eOl14KOF7LbYTo9Xv26bObiLI2UimzOgOi
KViqVYm7SODHUj2nTTpUK4nW+lgQMfE/ipUJrmJ4K0RumlNNgS1LQql8SPWg
yXSLRciBHOtO2KbUJdXDIOHgPe3xHSQrEBBptVsMC0vLa91XKfC+REfm1J8N
8OCz3h3Byh3UFhB9XeZ5JlRqVhjL/F5F86Y3353R/wZKfgKakrmjaKT27XAK
5KOjDJIqNC6smPVDfXDGrUlQO9lQOU47hWwcDpq9ScQo6F4wt/mvFXRb+3mX
/aY9ehRMf11pjYDlDZaExxry4Y2++Juo2WlELtFtUZVRhNJU718jbtLjmC9X
vFzMB2Eq6q1CKWwgkXdtzpRWAcC/eILCXGgBJUokvX0d9hOtHbY2WTtFhiWi
Y63HD1ZDyoZ3gUUhK84tJzbX1E5AUPh/QgV7+XOcVcOseqUaDm00nI7uI8Oq
PUbbF3VLoZn/xVrRwW10KIE93nM3Flj1qI0EaJYQHaMzX/GVDMRIpmZS2DOH
8O8ecNtOQ73NnVNRf7bQeJrLy0PFVmgPcYdtGRhxy/GURHnTURi+LfimJ30O
3WPPerYaGIcekww8B9bGUIjf938iVPnoZ4hNz//z65lysX1DSCPMFJ59KZNL
gdfkvtBxCjfBWBLf0+12BhxR+E1Aw20YVq+uGPyU5cIlMVo+M7mrEKN515qa
l4RzntHo/yxsg2/n4OeI3irySVCLt774CdkfEXMW5SFhbN9+ivxcGzh7sj+d
yNrr83y3xkGXJrhdm/nOm58RM13Ved3c0AdxL2UMfeyn0P7bSl9ccQaaU/jp
O289hzbdWRN7s9NQQbqVVZIxAZ9Ovysh968A3rZJVdt/3EGsaopzV1gLQZmP
4eHyL0rMaZZH0/WvAdafl58Z2MvLT6EP/+XjfODvMXhslr6Bml8n/IX7nnD6
m36BOzk1/nXW7rgGdxfQnJu8w5FExPfWQ7W9a0vg6cxvxqSOKaSs++yKiVwB
cp0McJzPo8NkLV6hpqQhoL5FLfrLvA9ZelLvv1Fdhq6fpVW0miLgkqsznyZw
EbwPMv74SGoFKf20oXnl8huluZ56QHVgBi2oUEhKzyWhlc1Q2SUeMtxh63rs
olYNLK4GGmmxk2POMP+rayb1AIPDOdbAin2HvB52+cyAPr9Jkeo3BsyzJnQ8
h3YEmtqsrQ1yybD1BEGHIFkOO4oFm2GNlLjAam7B43wrXC7ynXE0nEL1N5+M
3zxYhHqbOJO+ri+iIikx2Wz9dLSfY+z+OQMSbn380MAUt4GELEexfO4u4vh+
+piFcC6YP3v7xe4pCX9S4uUgY+mAzpoN6Q+We/koK/MuoDENRuOK9ZxtaHF1
aWrA2oNueKYpptedsYZsZF+XTX53ApdX3Itn6EjY+lX5PUmONnhpaVHCR9OD
LqQ+ouvhL0enu/qKZOXYsci6TKAc3wzcqpr4cTJtDr0kq9vPkhmJqM4zXP21
SYkT5cU3NbJbYTbqN2UM9wYa0T2eH6kXAePLu5KljrQ4q2ejL/V3PwhcsTok
teen/tbiczquBVDz01wv/eQyavF+9uoYWwpaIcu8oXlkHtkSI/loYv4hwYOm
C0vcDNjQqPDDtOYQzL48nbZwfR3p+r7zOOYWCplpT+TEj64ja5s+5iPxKZDM
dmzwrc0eb3vdY9anbgahpVDiVZYtpD/YuyLFlfX/93NMxgqZcIEIX1rmwTE4
Tzj+NDtnA5EtpF45oecGUsztpS3y22jtpKJWYngiyH89pHT22zo698PI5apQ
GDSFF59LZ1hDGy4m2ibXU+DmkhVHURAZHuU7y3XyWBW0COhee7xKgwvI60/o
4z4wbRQZo3Qiw0o0V/PHoivgnuo3IlqiwvZh7Gi/bCtQOZ21U45fRRu36ul8
mZPgN9sZB6Nj4+jj0a7KxePpyKDIeYFYR4HHSb738Z6P+aqZ13HvELFYdXma
Q2ENnMtRYLi+jwk/JsjcCxkaA61vd7eZxQnY6saTTPHeUljrP3fY+ToNLtQ6
76nK0AfPyy48pbrLjLOMN3p0nMeBb3Za4fz9bfTI9s++xX9usJa9LWXkxop7
GSQthspn4Hb7nWoPBkqsv3lNYsyzBRykJ9mUpfpRO8UdleuSpYjWazba8/sa
Mn59yztL4jc87zeSqxYmxw1q6mK/eOsgh2soJ6KDgM90v94d2i2E5/f123+8
nUA3tRxeqhbnIzXVSw+f5xGxMnciNW9sBSh3dVW6nKPELD9iCJd6G8DZ4qJz
wcQ6enS0U99qNh36Tbo2+Im0eFfjzs+zof0w/r10Obl4DKU+GD3TUYuRcgxT
fXrSMnIkO5VjlJyG1Fri7SqYSZid6/ZK+n8t8FxnKyhJaR5tu9TIfZfNRWlL
FmKfdehwlmnWM4Ejg3BP+0t/6VE2fINOt7mdYg4+Di+oxKUvIutF9utt3i7I
59rmYrHuLuqZqmMpOZIJniVMiReKN9CLFBQ0ap0B6eydpPWpJeTBEXjtWnEY
esvpoy3bSonNRCv2exHagK7rtMZKJhUebL+nMknsAt5D/cZTTLuo/VrWA+bw
IsgJWzIsW6PHd7WF9zO5DwHLVkyIx5dxdH+641KKfDHiPV65WVvMglfjS+Y8
Pk6CbMb1m3qH1tBHvSiVQI94dKBJrehbGQELHdin9mInB/azhk8fiiDhjluf
rK5o7flEmZaSVesO8tQuPCk6kA+PCsJpEgTm0R/bVxbmnhhdbTzi2x6xiKIO
fZfSMk1B92+OHuzkpMQmaOuIu20jTIgdkfSjosL8zuLGpbbtUJnlFnjwaRt6
FCDgrqZSjuTeflAu1yHH/J8XZY+qN8D9aP7Kwnlq/Dnb/l7Z2174J7b8lNOF
Bj/zy7yyUN0H7+9Rn+I0WEWbW6qCN8lcUBzn8HnKeFbcknhuRLB3Btifs17e
yaTDxY5JMYmtfcAvd0aIoE/AFJRqEl8Ds4Hsk2tW8xkKLMVpY2JX1ggcjSrF
jBPk+Na1kw0+F2rATyDAb/wrLV76NzTCFt4HGwNPcq/vPU+EQ/YsuywtIOz+
LflgGwkzvtgY0K1vA5kq64+1s+SY4qP82IhsA4QYfH38eo/vX/nfKko6sMfL
C9+oThFpsOTdKKkr4b3gqBt79WLaMvr6OFqL1P0J9W7rVtz/S8DBMYbCYjsI
3jMmVC1s0GD/Z7dtYpn6ATHVR07YbKKmngscL9rSoL5iblcog4ADORhz7heX
wsP/qEQM1KhwJOnrJbTWCbeHvBN2CtbR6VUdpgmLIFA5nsvoskyOGzWC9n2Q
qwOBz+1bLX/pscpT3ed+HwZhzZar+4P4FrI9IKP/jycTRgcZrxvRLiMbPhMW
ZYv3kHK0qkCsjYh/MeQZPD1RBWKljisrJ0hYWl0/5diNVtigof033rWGaHij
T8z/SUH6S8ZCbY9ImFn6J3vbw1Zg1/lXr0qgwK6CHEEdGg2QdapIhmZ8Hdnu
lDczR6WCW5gfJ9zvQ2xK1yZ8+YqQ04DtqtPe+pv0OIw+yffAzGbEp7psVhyd
TZlI6p0Gz+MBF9P3keF1+viIzsZisFtQkTj3noSPftkU/6TVCks6J1/c3aLE
nyTNKPn+tECh03/yEQXbyNHVEdEvPIW4F45SP/4so8bsewdsTv0Gluzf79vl
ltFpu35X+2+uSOAhr9FdCQI+NfpkNLC/GLjvn6mruULCZz51/xcS2w7i38RJ
fUfJcdCO9b7vf+rAvl5B8UHHPCqzvku3yPID3ff4Y5g1u47E0p076f78gvwf
n/0XwhixwXTJeU08CAcVlAMP15DhffxTfBHz5RDCzPY71o4OL70d3aXx6wdF
MwEjan0KLL9DRI6FjbB2/E2yx+EdpB/5rsw/uAjOTJ96STpLwkkDIs8+c7TC
NdXpSD3SAtKqbHf5MReGOM5cLbMzpsOn/tj7iLP3w+OzP+JHSHPoYmR7CqfH
X6RhqHCPa2+/qnbfuFCfuoOWnrr0jFBvoUd3KtNMGEPBDGt5mNvR4lZ/0jf3
9X6wPCfxNTSADNN7atgWBpYAx/t8F6EOctwveu2qt0IVaFoWTXwU24c1LrDf
kdm3DheTj0zfSVpF5IxZqfu9I5DDo4ehX+70Iu2QtzGHvIsR8O6mnH1Gwn8W
tQKfjrWCWvi36sq2SWSiKhysVZCKXrY5qgWn7yCZjlTlewu5ULTtgGcyltG/
UgXz5D+iqGxXpY2+YB6hUwcML/JGo8ZfdY1mO+voI1fNbP/2X6gwO1l6SHsB
nahTphf68AeJ6A0Zv8+ZQ6/W2it5Dn5BA8CW1Fa1jQJP8kfScxfCk6MiRizP
WfHdbd5rG+yz0J5rZf+bhQybXs17QP6zFi6QxKnJ39Dhp4ejls/4D+75ze22
cbNllJesFsdV/RuG6FhuZ0szYIod2s5P+/b4zdCjb3/mGGrmt1i8w5WLNPzM
1We8O9D6UfkSWbsKNH/y7oUihm4k9eHCCTOLYvQ249Wg+o8tRBEv37x/Ox/K
s0VzJv/R4Sr9QY88ywEwOB/IYdFGwIZQ+4oZlcG5KBajuj3fjYuqPNnO0waC
iihR+TUt/qy48ugY7oej70Q33u0bQPn/fSpeO5KPqg8x+/xOJWC1gOt3rnUU
wegFGHW9ubN3f/guPSQVQ+oD4+96+6fReG2Su1B5Bprp2j8iSdxE6t/5vkwa
58GPHr9wemVqXG9nbxU83AWfBcjHG5Xose5FptMHuvog99EFj8BQCuz5echI
Fpph46pl9TANCb87nCBz92ULhJ/18Ki4SobV9QQMvJIqwNVh6PkzLQ7Ma/P2
Mi3ZIqjbKGdUvCPHiS9Ed2uqG4D1+6KpQuUqiv/32o1YHI82xfy33ewYsai4
y4iYyyiMvBP9OaKzNx9eq5deCKVDr8Ip2We/B5B6YtaDtuQCJKl3g9bVbW/+
HIhW9g6f0ULM11sMwqvoyQptCrVHBHjNV56UHqbEtTI3Em/NtUKZ0bqPwSUC
/rarvtgpVAqhnzyY3/VsIYbpurAZswRw+3Q5gOv5NmpP2iG+rf4CNL6LXewS
VLjq2KZERWHHnnK0WC5okmN39/xzZ5gboMWywPH7rXlUzqpHK38kCQnoZAyg
PV+/WlVzLVTIB/Uu+U/F+1Dgqpi5czeZGuDiRnBGfjsVvowPn4961w0Kh8jV
Tx8aQazzDhxnBUpRyPCrl6y83Fhpyqfj0sFNsJek+YT2+ifU4rPboeAOCLeK
u6z6iB47GlkVHtwcAtuxQ37eQbRYs+RF6orNAJTwmYfMlBLwUEYxIdY4B87G
36CX+7CIdiPWmjx9o5Hc0ktH51oCXr743i9uuQK0LzlqL8bR45tdq/LP2Yfg
12exeL+956H61okEVt5KqMjVf5H0cxut1lKl9pgVwhvtde3gc6z4FxOXsE7A
NOh89R7x49lCPvUSzjRfc2FOIdAh9P4cahSqvXiTPQ59/Ct9Q5eBiPHQeKmZ
ez4sDTFePNNAxD0ZB8QaNyvBVNdq9lLPBmKaaNHUeZIOtXf6oYWZDU9Fl7io
PJgDH+GoR8EviRiKNvIGt0ohMPbPz/U7k4h92QdbC2PE8/5c3sn7lLj9oJHG
/oQWKGu/V2zHTIVHSY7LX1za4a6+hjtVGBVWzbxxlim5C/i4bTNrYQFJ6VK+
SFRKQfs1zltNwBbKcJgbsSmIBKNoCq19HuRYqt6+KcClASx52dhf2FDj1gd+
o0o6PRAs0ayqzciCC2OkhL7sHbljfVT+xtA40viaOsJmUIBm/1Vf4WIgxxBi
eeoWTQ3UPE8+0Ui+gp701lrYU35CS0ztZ83D9/w0smQ+g60Gdj7KmHv0raCK
7lNnnla+gMKdi1lHL5HjAtWvYxaX6yHxwvpRWiUmPDuneSB3aQQIwseKBAwo
MN/faOpFpUZ4amUgdcmJFjcffmn1k7sT1iIfiVxfWUBPmtTluu4jFFLwZef5
9xW0aT1Jsy/EC/KPW+UpyYwib4110cs/S1CKa4Z10BoRH7eLFHb1KAbpq910
FzIpcPl/t55UuzeDiq25THUsAVuqUHkM6xcB5eFEiyYfauy1PbJ+4UEPTBXn
bvI6LqCKowmLahqh6Gq+3atzBmtoTVfp52ZgKhA1MyuOM9Biq94KhhjWNhB2
rEiVHu1DEsdiFE0Uy1Ad7cfTmwsLyIPh3Ukx52g06pCYnDW4gjQNeBzMHnvD
A+rwfNWCRRR6m0ufr8UL6NOupOwWkbDIdKDIOHkHRNlQWulI0uKXj3xtt3L3
+OnumRDmLwQcEVx3mEewHLTNNGKkbcmwxte646+9K8HwTIW2dB4bpjuUI5rw
Zg6e+jClXXi+isQX0pPI9vwkqtipnX6kBbWPjp9/5VaCarcdbll/6kMBjKpZ
wtrlSFhR7WupEQEHEWwtXAYLILsxLUGTlRqbn0990kjVDXUzapJtn8eRy/6F
1fOS+eimnr/pK25qrNSqOXlgsxs0he/6j38lx//Ujyb6tFZAaPEzpc1YBqzs
/XfBYGsQDn1SNFOznkCmXTeV9bj/Iv6+Yi1zxm1EN1H6c4Q+HkKqdJu600jY
tJ7TUiK0HaLlZOr1O4n47WKub9VYBdzePHw5Z4wZG76vM6F0nADP92nbei9n
kTwH346BG0ZZhtxOQrbMmPG1webXmTHQzG4culdOjpWOUztKbtfDuitbut37
HeQS2lzF9TkTeCoCP+vwkmGB2yxXw/f49riSYjgpjAx3+N/42hpXB+TGmVla
ISvIPnhgLORYHJRUNXFKz1BiEdka1+HlFnjIJyqboLGCmtWylfn4nSGyU1Q+
dWwRFdiLyvc6haF3qbcUhSu20EmST8eNvBgot+vT7z2ygsTZjpmtJ34FJouT
vziEx9ETiqKNTfkcFEVjezbBlBl76spMv28cgy+iWbvlhE0kzLhvf3DBP8im
dFNwtSRg/azrj8p/FQNP8IN9nZeIOOF0SkS1SRnoqnytbH+1ga5ZVfk/rEwG
qXGqrcJYCqz3yNRT/XwT6DG+nZ7cHEfemjI/M5dz0c1xy4svXxHwm8v2t2vf
lkGUYOf9/DEKPHuk0w9+N8PzS0x/g/yJ+LygvfMrl1KInA1wNpWhwiuaWr2i
T9thcL5UiMmnHz1yCTEJtC5AsR/qGwp5KTCjmtmZxccNwGXBzVz/mgonp/5S
F33UCVOjbhmLEtPok/nB1PXLaajDaUTe4cwuUu0rVz2enA/SKgcm6Yan0SjU
m+n9LkC0YasDX2yZ8E7cchAZ7xjIi3TwJu7lycVKwzmCRQoysJIQ92DfRDYE
lZjh5QQ04rVwNUNvj78CL35xcstD5Xd2y6qYGHCbz1TULbEhqP44nBDxnQU/
zRdhz7KbgNl4DzGa61vo+cfA/e/ds+HQjYU37C3LqHu9o9Ga6iPUa96J492l
wyFWF2S0uwdA51fzoN8YNT7F946dm7cXKFnY/mwEEXB4kA33uGwhCJP3UtCa
cuGnOjpidxpX4BRvedruLBWuW+/+TRHcDQ4qdFfnVcbQgNCGW/XaXzTQ7GXw
VWoBXehoaN/SwYixzkjz9j9K/C674dFcXCuwFrOb9c/u+VGoqWUFsQDE94cn
ZgnsoODMCa4ZqyjwHn72a/8iBQ45E6zxKLR5L69/LLafXUGE99E1X4RT0KVH
zV532ilwo/efIpJqMxwgS2Pq591Ch9WO8pmxpcFqeKxJx9QMmt1ofnMyAyGx
73mrZz+RMPH0PrHGk+3Ab3bPkyyWGXsfojtorjsBqoa0foFU6+gxMKy/lg2D
BxaUKmlSNHgzf5nL5GofaASePF2CtxBd59Xu9eBEyGn3CPw8t4Ms3TZY0xS+
gnfazNORMgoc4/ux6ENRM9xx238glmUMST1kqRJ8W4KWrQQe/qdJhh/0D1pN
5pTCyXhPkYWYFdSruWsvJ/kHFs7R9BU1UuOjjxuTpu/1wJm63qE5XXLcMt+9
JjJSC2/aWjIWs1cQT8AHk4vH3oGEACVT6QMaPEPsFpdU6II+pxRZ+q8kHOI1
75vm1ArcCUuvTPbOf+WhUlplxZu9/bRQW06hxYzxtfQWAr2wkyvStN25hAaM
hQyvGPjCNKvDrPzpdRSVCO8DZF2Q0Qpjq0AqGb57JfXp8+s1MOJ1P2H2wRKi
OPV47IZpGpJMikyvIidh4yrxxcitZjiW/oG5lXMXvetolM5hyoMg37BWTeYp
pBrNbe5Y8A/VvnOV2xAl4mqGos/q+XmwddAkaK52BlnXvI6/KxSOPpd8P90V
uIzoqi3oLp2LQj9bL/h6xs2jWO0eQ6bXeUgtN6SNU2UXaRcedLqpgYEUZ9z+
2nEO1Xnl99tnYfSb09R8IYgRc4cGPCHSjkLVmKfJVu4ieuQsVUnUiEZXOHzN
GLiI+HDtoFy0ZTk8bcj4Q2ChwGYZ37sNF2shvPLohdyvE4iVL6F7WmBvfn0Y
G7qn1lENt7Gq5HoKzPq6Z85kjqIUp57fDJ75aDEyO8phhAL3qF7mcqRsgOui
Bk90UlfRTYJiZYKXO5p74dRcGUaL1T8njlsaD8C99hf/he3QYNOM7i3p8H6w
ixmwDEqnxnYh92W+M/fCiZUQd2OXXRRPLWY6FFIAuncFH54+t464uA/qZ8pE
QJhMSJ4M/zrKG+TZrE1IAePzz/PejC+ijIB2/sB7v9FHCWoBSSo6/J8td8lO
QQ/QDdI4zL3YRsvPxMlpVvPBW9/wKUlvCUmo3sl465GBdo+alPqsk+MLY6lV
1mmNEPirgbr4LAdut2uVsIufB+dHqQdq9Ghx0NLTWpPWfohjMexspKbFxqdu
HeD36Ad77Rft4qnk2FnwgH6RTjXo8nl9/6y8gFiGluh3yvMR+6PCQw8L6LDP
bHSxS/8gPApXoN7ZosBPrwyRFMqagep0ZwFHwQrSX9j9t0/hNzy3Yj7b/oUZ
b3NGhNicnoTzdaIc11TWEbfiHM2qeyYY0CbMKvyZRtmukp2ii6moUc7AlT9z
BTkfF3X9oZCFhNbs5T7cmUXiQRLVsk/ykWC+yHkkyoBH+DTyKeSHQe9Q0PLH
3+soV0X1fohcNNA8TOHnMydhwxIHp/fNbbDP9zG3JjctHqD+9WC75v/fp8j9
q1hMhhUqLNk0DephtDqKNySRHIdQ1qd1eTWA1ak/d2UqqbDCV7qGjMhOoHiS
UnOoaQP91eevZ7/iCcdLy37Y0jHjZ4bjiqqnxyHaXeLG9G0iDiES3yWoVcGl
X92LieIM+JFnjMO3J4PgzPXiZyLPGrry32IaVP2Gj7XZi0u62whr9S83J2ZD
HKWkDwUTDX5Ks3+iZ6gXqOvc4kuFyLHi6wZ0u7Ae6O8/hwDHfhTwz/uhtHEJ
Kop4HL69No04Py7p8TgUo8A/U2qEvfXrCV6ki55JAIl5REpeXkTWz3MKvOJ9
4Tib03uBEiI+dkRF4YNaDXysEGm5b72EGE8UVWnczUe2pnme8smTSN9/9Cil
Vx567WlPR+k3iWbCpG/ZcCYh51BHA9d4aswpEBN8oboX4hq1bB5LcOBH5mJe
QtcXIG+i8scHemqs6nzxlIpYFzSx/fr05+YYOpi7PTcoUIDiwnr3f38zhxjK
1cp+BaQgW6pzvZa22+g/A6V4SwYHEPx4+io52SbidZ2aOcyaDd5B/nVdd9fQ
386DmmxnY+ETm7SE3Kd5VBRD/HZJIhndah44NLa1hMjzGa1OaSaj6ciawMc+
VDg2q7y92L4JKlPCCf79JPzs7b6+daMO+I/zgGIVBw2msdeOdRfuA8t/Ilkp
Ltuo665AVc+DfKhxCjWdithGg+HZ/If+84XdXe7DbDQU+KgxWv7//wNfz91n
Mv56G92mK/jv/nYOHDe+Fny0nBLHGk+S5JXb4KaK0B++dHIcWMNCm/G1Hnrs
p248YV5Gq0FibMsqDrD22JFuQo+I28Tcz/J4VALjTKOU1DUSXg26Gbr+uB3C
56uErvnT4/c3GdzKC/thwJwn8LziDuKnr20paM2EigCqF+5ECjx2OZ3Db7QR
aOlDh++epcDs/vZurLzV4LY9PD/tR47TnwqwtuzNi4r5dKCF0A66eRBpBFrl
QkWwt1dcEBmWqEMjHYJV8IDO2Bc0CJjsoCNRpbsMvJsNix4LMeCr911vzB0Y
AY18Dya6Enp840rT3282wzC5ULhxlrSINCmoCyTOvIZvFYEPUN4skij43vnp
HUYP2F1+au7df9YVlxj1/e0gN/R7Q4y7H03qHlReSStDW2yvqJzvsuFXnXnW
9KRZUD7V0BnbSIE1h0m33OkawNjCdtxFjoRnKyPsvhxtA7X4mxqvU+kxTf1Z
S4qHw5By1n9y4Ocq2rDJO3hePwLWmPsjhRfnUVtD2c/sNG8U+bkux2SXAit2
qh8IY2yCBR5tuzP8rPidsa7h1xd7ecMmQXffdAt5T9/L03sUD8uHzt9NriDD
giPP+3yv1UJIDF2BL18XchPRpjj4swz9/H1e7an2Nuq+xGWlbpwNffcGWkTm
N9D1p7FRGc5pcJs4O2GaTIaJRcsao1wVkCE9GnBWihGnbLGf83s5ClpHlFwe
7pLjsf3vxmdEmuBt67USJ0caPBdG3bRZ3ge0bY0hVdWbqKOfNTCTIhssH9cI
FpQsoQCftn8HfmUjzT5OXkr6RSRN7+dFis1B9vbkvkOUu4hN6XTywzc5sCVi
QdlDpMUtY3hc9FU/MORdi4goJOJNLeWUvvVqOHXpeeFAzC6iKr/aovy+BM5m
LMxHKk2gfe9ev/G/mI9kHbibL1uuofqRl8/13iWiOmOKVGlHMvzFWSdHyKMO
fjYfd1q5PIkaDY8fT4lNRz+TLG/p5hBwQxFj1KVUDHcoLSttGYk4r79EWpuz
GBa6fr39Y0mHSd7KF4XWO+HikCDmKqTBk3orChYv+kD9HeHBSggFnqb5Xju1
568nc2/9F+9FhWfSVVx/2HRC0rMKxyB+AraN2k2ZvVEEUcdvRXNOrKJfo/yE
1OU4uJOqbMptsovUVg6V/TfzF173aNlo9hOwqd3b2e9JJeCl1xqpFEeB1d4p
HeqvbIZFFVrTmCurKG4zwVwo6wuQ3HqrA6l7UNGR5rWR4VJU9ClFMd2PiOdy
X5tc7CyB746V3cK+y8iZn8nE1PQzyvwSNNuovYYqZU7zXDuVirJn6+98KN5B
z8/xccm//geq5uIXJHV3kKuRVQWDSAqQ84jSDwax4o0AZtVWiymg1Crg31Cn
we9Xv/zU/9UHHYmSb6OkaXDXj4kF29IOIOV/tThlSIXLtZyvSj/rgKtnui15
CzaQbxunKvfEZ7hb1t6Ufp8Fb+wcdxc5Og1NFx0C/fzG0IG1BT+7plw0L//N
3FRwb7+oez3Eumvhq/JBg2C5MVSXi31SxQsRs66Dn85hCjxF0V3b7tMIi8IF
IaZG5LivOvSd0+sG6D54QkeHbRHZMN4+JkhMQNk6GadlJ9YRXb9s3JPgFJi+
ZyFRW76NDEkt32Wr/8KnX4dLZmJXkE569B1Xuj/w6KHElQmBVRR/euLUtYiv
aPaxKIuHKxGbic8kmIyVQFoK7WamBjW2jGAs/l3QDSxkSPHx1hYSpnrgoZ+V
D+n5mKZVYA1xXjAj6t5zR50NEu6JV5ZQVURQkYZWNvoP/b3SMUmNqyS+eAz3
N0GonEfnkDkNnngVu83zpQ96dLUk5uhWkYhUKcE6OQrq53aP2L7cRVlKiVYH
V4pAoUJbyyByr+8e9secaSiDyyLs7eT+ZJjl0+5XjrOVICRGZ/fMZwXV7Sdk
lkp9B1vXO++/YyImPJsJUVsoginBlbBAP0psXUpx8Pa/Zkj/b59H15cF1Ljo
OCHEitElBzdvzkh6rFPW5xv1aBCMAsr3B5Yx4ht/VRjVk0aB+Mjio3w5GXbL
pT1dIV8MG08oT/w+t/d5Ro+4NP0o/HCxTbmQScR3vadrCvQqQeBVgtHTwGEk
Pz9yImW5GAVcZBPeer6NZpVkw5WcnIA7QjSHqo2EZ0rHuItX2oHOm0I6R3Qd
ye6nvet9LBFudcU76WvPo9yMc51KF8JQfLOUquvjdaRy7aKNytEYuKsVlTxH
v4RuXppgVKxNQsF9Tn+EdOiw55fhtkPXBiHDItlPtnMFRZld4RBci9vLjdu6
KimU+NQ/xt9H05tg8odRM8cuGT7EcnQ/mX09kM/cvKZTS4U1f3gHvnzQBvLF
FoI9PFR4jDNW7lJzB3D1C9b59bFgkY1P1EW+UyBsweivsrGJHvP7ZGkpxsFM
lMq7N5gMt1MfFePa69d/VwwvzPxkxua1BYx+reMwn6Tl9IubhDkjkuXW8pqh
5Nq3hiMRlJi3wHGadqAZ3osOT6+wbiPKW6VpD4dtQTumjPeECCW2eM/eq1LU
BGXjHt9TuFYQaXKYkedcMHrTE/85bh85ftc00GtYWw0MBz/QeotsI7WHIoGh
ORhM/DefcDYsoya5Kyt9hkGguG/Kj2eXEq/+2nwVR9cClmWZH/6d2UKRPPGh
2ywYSnKSR2hPErFljLq8zpsKSLPPaol2ocB7SMuaLd4MFaz8zL1niPhyG/Td
4ayAktS7kranN1H9BcJVmchkiAsXpl04sYFq9qVOXGpMAmdSom/rPVrMKfdA
4pV6P2j9UDz91oEN2yS/1auaGoXALJY/8mgFDSt40tBf1EQqcRsbG3s8Nz9T
zTDDWg6eTfR3wsr2/NNhwur1vWIQTb/1/V3ODvrxvaLex64AyHMFZ7L3+pt8
RKvDwygIlYjz390dn0H+/sxKwYwYhVp7ZWe2jaI3Z8ODX70vQoarBa0LR6jw
Dfa06E8X24G2ulY4Mn+PP+bMWPXHGkD7A32k304pmvMvWfAzKEfxPpI6a4f+
w5gvvjhZcRFck4UtD9qPoMs3abLnTpeiENV8bfNQAs77vij+1D4fZhxqv0+s
7yJLu1rGzwKl8CKyXHWhiBLfKj4UJJrVAu9MEN8lcSrMcpi69rdrO4js3j52
poYFfyszdBD/PALdZ74HNm9NoPwPj917A4rQmzO5GtElJGz66ITDpWMdsCzc
kH/XlBqvnkuVu+3RAw5xhoHHevbyo76BS2qtD2KmPw+eWttFTR+pikMU8gFR
NZQeQtT4xrnqWTq/Trg8x138+eEKKuWweHytKwy2Q4ruStkxY4ueyP2qM0Nw
x/kGhfc8Db5pVGC1pdAP1X+ZBDrbKfHg9GSMCk8z8Bl6/2Kyb0KXLi2qJGuV
IuWz4SfIeXdRx7vmmO/+hVDLTIi0wUOI6frMTelEjLSSq/Nb0wg4JQ2Kdp6U
grgv6x23aAY8MyBzvnpmEFYyRM+LKM6h7Cun1GdV8pCFF62t+l7/3blJFejg
nwIF1enhH+YW0A3m62+KYv8iMZl5QuZNEnar1ghzZ2sFnPIyIVeIGl+tv/GD
kbMLlCQWjCdXB5HYX24IsC5D3nWOX48yEbCfR7a5SE0BvLh2mXHoNgVW0jo2
xyDXBHxqLfsK1wj4l68avCksBja6u91SrxdRVFmFNufhHERv0l3f9IUKO93M
ilYNa4F9586cvnJvCQ2W1IxXDiejfNFR16IhchxvP7fCwF0HO0ebpRe4ibj6
yVlHo9ASGBq8LYe+baOsNsYa10OFEMqV3qq4x0vqtRLBzzr6QL5aykn58C76
ndxNSL6dCKGrjeqZe33P4/15fkehGW68NHZ7Y7COLpwYWuHVSIH119rbh2EN
nWF+zCstmQrDst8UYlsZMLuVOvFt2QiEKpH/0leZQVoir1YoEtORrfjfjbiJ
TRSEA3KfDiSDbOXD4c3LK+i5p1fcu3MxaO6ZsS+zxQ460OVjQWeWBR3hCQ+f
BE+h+g0hQWVNhERvHmSu0F1DP20uiwuHJoLnO14ZAicB9x63cv51Ox9ybGMW
jdcJuM0ut0H9ZTp4Knnp89wjYO5bs3+4zcvBaXBf4YX8FZReG27FneEKz5UD
Sq7SMWAFAT4jRY0BYKU7JbilR47/tEUINoZXwD4b/ryjan2Ix1Mv6flSGdLa
TxyjjyHgZasfDYdliuCvV76U9P55lEUpbGuxlo3CWlmJA6ZL6NCBULkMRnqQ
OHC9emxuHtnQv6msQ7nIblaOt2aXgPViV433HS4EwtsE+YLAQZS0YvCk4VM+
Aq/6A5mLc8hnI1FZmykbMW69pK/b48F90cEaLTZF4ET/2jw2dh0dlNca4lZ+
h44R6e2qfakx4WS+RNhWDwhUqt38cIcaH3lQcLojuguykQ+EyxBwaXlY4uSJ
Mnj/7AB3ZwQBMzGMv33CVQQP6cUSkBgZpvxj22wUVgs6UoeTqY2XkOADm0bt
l2lI+ovV4TNXKHB5FN3K9JcmmNMXm3euXkIrmweeyt/4jf4+/CnZsLuD5P4t
X1ivTYd21PpA5hgRL0nMhCVJFsDlbWbXwGAaPNKNPx4f74Pz+0KO1ATs+QPF
oBHxaBPMyltoX0R0OMk2LXP7UQ84BTOx/3bf80GzOqpjAw1A4eZCm/59CRFv
VLUI/ohDAvtpn1yKpcVvFoSfrgsNwKFT2q07O7SY3zPbYlduAOYFniU4Pl1G
D1+Kz74UzEGkX7Ih1wg7aDozqaGaNhvMmasv+dXMoaBrpyzTuYrQi0EvbvbT
y8hdSKtKz+E1smLR1/1CTYl5BNhUOi62wF9WXpYQf0q8+8fW/KFmC9xdo7Tl
ilhBxhTH8vMG3dFHRu/XTdZbyKztmOXliSggrSaXvNGmwO9DhXrI+Oqh/5+x
lv5XCky91TKQtFwPv0+pzh1KpMQLNGaxFvvagE/vSIssFTm+eo1RzPZBHfyS
6ntBNKXEbCvx0r5MTXAoa3Rls4cJD16eeFJzZwzMdLn1ne9vID4DbuMb3zOA
1iLeZXmAiB1DlM3d99XCZrphxcHPU+giUv5XAghNLkYdOvG3Bu3kpYwPUJWg
+ckyE0NRBnzslGB535lhUPn3y+vV0izSininpRBViPwDTlBd1mbC3Lsn/WXP
9cOXtNtM/36MIJ1RsiNK7/KQLL9ng7nzMrJIc7l3qTwJ8e87zKf/gogT0jbo
5EJKQKky8xyfOzXWnUohKe7No7n32th63iK65/lCLfzFLZifMreQ5CDD0iZC
CZlMNdBZVO/9TY4Ku4YRA11InRBw8PkD5z4KnFda9+bWsWboal1iv/KFDOu8
T5M4yV4OCwLSyYI7VHjiocFisGcX3FPvS2WTIsM+I9ouOaE1oK+XFSvPs4ae
KybYGNs8BV3uWfnbU/2o64b4q6wwjJyEIvkFzs4hRed/7y7IFyLSWdd7yxtk
WPJRsCthpxrawlM47SgocPvu+ljb4Sbo4ngsfYuVEjtE/TlRHdIMytQ/aJlD
yTA/zrOnPFQBVZ45aXbrZLho1ua6QHgdvL1x65Yp7wraf+Ii1/Xv/kgAm3I4
1W0jI6ReKkCTCengq233cQnVTWdYZ1LZo+2Wka/KZ5jwq42nLhv3x8D3RW5E
/sVV1PVJ6UJ73R0gMJBbvGrnwli5n5mRfR2YI9wpX12hxOvsIblcCi2weT7P
PZifhJ2DcvT73FrBl2StqGQ4iWzjNyznCvJReMGVc5WuTDjA+dWBV3vnzxg+
g0vkltCfEwusDwIzkLfdu/b6+TmEdSIP3FRIRJoHE9/fjafDHQvv1terBsEe
sWU8WKXGlRfHijW7esHnLR3T8LdNpDDblZN64D6aOp/wWtyXiB0Mz/PYLpRD
7pHQaP5Xy0iT7JQKRY8r2HzabPgXvoqeUqo8IauMQe8uX741lUaBaYx/ucOX
ZijDn8VG+1ZRaJzO2en4FEDe+2S0+ymx0+uXYR/ZW0E6IVIzP3MVOQbJ5NL5
voEqLdq07ektxBY3mLbftgCilb3sni+TYYqcB1OMb+og4nWlYP+BNeTAo80H
PLHwVk/wpxovGX78W+xh7cMqKEh+U9RzYRyl7rCsx10uQge866MuE8nwk8kl
f+X6Gog6+9W7kZwGP/NkUbC62Avnyx/2d1HQ4YhY8ucUcQMwyDDjeIt6B1UX
SDefPo9B/Eu5PcqgwL3eA44a35thY/Obu1A3GX6b1JZrUVIOW7fvsowLrCP1
k+Syu4zRIFm6uMGKybGabb6sb0g9nNETzK8mMGJF8TLRieMjUJbUkiv6fBMN
5ShK9QqqAem/LyX9X7YQ0ciulqCBwfvz5fqCRBIuX+J33AhqA4EQ5+sTQkRM
ethBClktAy6OutS3lYz46daxPGHzUdg0tjpS0EPaA+kv50Uk20B7fqrsIAsB
d3n/Nh3ezYVpdpF0czNa7J5U36XR2g9jklIfL46T41wvwpvm9Qb4b2SY6aF0
Hxo5WccSoFiGKi+0iC92sGBmz0VazdJp0G6yCqKNWUQpDfsKB/Z8zVffKLbp
MhHfkioW/XuqAqJodMnmpSjwLWKPYVt8LTiQC9882E+OJUfjM5v8G2DQ/lr7
g1hyrH9mJmpqswYmUx9EOJVNIZqhvNC0ToweROzjSwAKzNbQdztppQ5o1f3X
I+fIsHygQH/QdA3UK1O6l0UwYwN3yj8beRNw74b+pL8+AUvI9XnJOaYAb6cr
26M7M+j1XWn5VbpYJKx+9dZxq2nU6Xrxrm7EX/StWyz6wGMK7FUo9JnhYhPI
PooN5Agix/v9LpEvZ1fDY8sAOl+RZaTOfwT7T6ci3yCh+4x8O6jI4SqUGObA
Z8sTSaa+dFhCQfPw9cJWuGZDC28rCPiNGU+Sbn05iKTxiGh8ocUnk60ND+kP
QJPNb+PqCTKcLk5++tPFWrD/mDC3S7aB3KK2yhJrU8H8znZTDvUKetj/Pv7Z
32so0vzJFXZNAo4vcWDpv1QGfsVOidLt2yiRJcWF4J8HKzlX0+ypu5FHqlkm
h3IZOil4mv18wjAat3QyL2kpRO1XRXPjDSeQubmk5QEnhGQuv/Zxe0yLa/m6
RBeZB+C8b7jfuj4ZHnx16YRdSB0cnhtO7fq1jfINREklSoWQey5Z42U0AQ+p
WhykEMVwQ/WsD/9+Sjxt26+bbNIMWp9UHbmc6fCY0kTj27BByItNbTq5RcRR
E787vtpVwOWnd8IeeFBjFclFwSNWPXA5w+J2phUJK1duOIcFtEJmg2kTWfUA
utX9r/2JQT5KHNK7LFVDjr8qhNW5vqqDF17Jbsnk8yghUHqrZAkh9pP7nPj2
fK/+0rMopaoykD2sn/Pi5xzquPFKYykyCaX9aepqSllFV3hWj9bQJMMryZ9h
X7JHkEbIpzytob+oeeKUAOLuRwEmrmSsG4Uoq+hDFRM1I6ZndMoJHx0B/pvn
lVWKyPGpRxEa7Ncb4NDIzYiqtwvoA5dKexZPNAptqLV+l7yBFG5MiyvfyYJx
ap9O03YCjvkZTeDTKQIFYizDEMMiktiuXVLQz0L9y9ykqOdbiEerqE5TNxfe
C05oX/VaQfo0A7uXPoQiFZd20sPBPd/OFvtR8rEVBDhkMqli15BZN3uCWHwU
ehOTtCarOYfAzEyUwTgfMbeY/5luocGfW9SD35q0g5o3d3aiwRpa+PcgqPZT
EJI7F81bOLWKqM5fGaz8EQoyxLZC93wGLDp92PFq8AiIycgsBGsx4zhkx3X2
+jgQc0p60saJWJb20dHnDhXw6qClMP1fCtwIQ19OPmuEMobABcoWSvxDSOOz
AGUzjE8f3+F3YMIGqjM6BupjgA15jKrbdtFn32zK4NUS2CzUvdTylQYHytK/
dWvsA5njwb0kihX042BaPI2bOyw2Fe467PmFjI9UUfqeLz+/ydrQ/G0O3TpJ
PVfihNEhYTEf9poNRHKi//FfTxywX9hKu/2MFr/1/8/AZaQPzoV/NhnXosKb
OEKTjrsLfIa6f6V+3uO/VXsrX5oBoMpOfJHrTosrtcje2ez5jHQ957dPMyRs
dcajK/JJG7D/+18F5/2P9dvG4fu29y4VKoQi0UJJJwlFZqGIUjK+DUWFhEIU
iojM7BFl73Vd9s7ee2dm7/Hcz1/w+bxe53m+38fxy1UTbVnHhHXbnB5tGf2F
mTu2DumZa6j+5T7Km0ZfUaxvLaO9DQE/YJSoHH9YDvXzRVaiV+ZQ0flBn+Pr
GOWePDrt4MOAhxqyqSnUhuBlhAITk+o0ymH6npWunoc47vZp5PaTYzjDGOXF
3wRhR+/w7dFS4oAfBc++f2uDuK/sPpO3VpDU8cJy1JKAuF0EL7k7MOP0ze4e
4usJmPdmfXtHgQLnUIgm37/QCoQ3pg+8KNfQv4daQWeKI0DA/XL9jDoV7sur
jdIl8SPdoKtaieUqks7m6GnvSIQU8WlFtqC/KIGTZ5wglYlG/FqO7ZLuI3zg
ZlC1fCRa/1jh3ORFjn+Rja79YWiBfcQbaYeftaDlkzkx+Vy1KHvYov4r8zqq
M0oVsXQPgot7gYfG+peRtFuSW+JsBqoOWSlvPErE/qYmLwVUS2F1cfpI13UK
zNzuxNK60AynmETculaXEe2Sa2+bagEKcZLzpTAiw8nhocFuyX9A8hDzyQlz
AralWHwSKVgIo6Mzr886jyPlDbl03cxClDdCl8qUzoLDd38f2hCfgCCJhJHV
26tINN250Zo8E/3qu3Do+fAWcjmmf4ChNB3ckpwIX2aH0LrW6858lUq0FaRQ
X+BEh4NprrqeJR+CGsrWHGPHHaQqS6+5tlkIzzfSK6+f2EDJ+6GSxBhIQppg
d0huHfFK55kHPQmFCOV7Pi2vmHEo05cXzhrjEJo6cnj4JRkW+dR66nNOFYhm
N4tInybg4CnL/WQh5XAmQPHFjxwafPus/hWGim7I8Yw8bKFHgenq1hyjZ1tB
4cyOj2LIEHrkK/d+6nYVGotPezT7hDT/2+QeUaomEGr+7Xj6vy0UUXPu09nB
VBg+UZX4/Mss4rTK+G8mpRSd7v92wl52A1lxmnHrx71EI0d/GdVRU+Nb+iNY
S7UHmlRi8y55bqCRqBKFRj1RpLruenyObR2lHdUOH3/pgB6Yjxw5Ub2JyrzO
CwcfToGEl/E1/UzMeOxLXMjBZNL9EhqdtCK3kEBj4dvLw7lgsmP0rsqNDOv7
XW0tN6kBtPFwxZ6PAhPi2SIXvrTCE7ml71IEWvx3e/E8GWEQcovjpb8V0ODE
o6O6PSb9YM1T9l31ORFfS6TfWmavhR9bmj/ez1NglrPWzVFPmiGMm5DNcIsV
t9uFMuebzgCFYWGx7wgZbi6enbQvawSDBlGJX+3kuDQ7zTgvthmadCXvDfDN
oUz+7653w7LRxsL2TXR0GrkcFjWJ2ylBjtnkFCMCy8iHSva+GU0SajgvfD0O
E/Dz305GsbcQaGyNsWQ+oMIsb+LGuW50QVWJ1bHati1kORLc41xRCJfqHomx
J5HjTp2zDsvZDcBixZnkFE3Avxg2xPW1ciHu2lcXlYFV9GjbpKDZKxKpNm5R
fndbR9IXpD9r6oYhl8bB6oTz1Jg7g9dq/2YXXLnof6KhlQJf8eCOOq/cBtfG
FO3mOPbQsW8Fo6kBmVBO4cDzQmIDlYmtGRiZJ8L0u8wR5rd0mJ7HNPcm3zBQ
+oaoknPvIjuY0TZULoDSN/zHlou3kcquRKchVQkE8E5KLq+vIePmr70Fj38C
3zHDzOBqKvw83e3A23PdcHtZd+XwBDXWFa5sHdvqBYk3eXFTartoqrrMs+Bb
Mbyn/dAeIEfA1+/sqPeTVQHbuV4+CXEi1rzWHNMnUwLqyuOToEKHq89/HLph
PggdC/In+AmU+P3RH9eUoB3kMwN6eI5NoOSbzDc/PMlHhd+N9ShIfHFrOGaj
5m4uoj47XlinSYnNucLHXsm3wFFlD8o2/w10RULIJV00C0Tis7WD7MZQx4XW
t5MrCB13ZblK70WJF8J9ZTJJ++UU3XfE9b89lBxcpXY2uQDGnGmW9s9toZEt
l/S34/nQdOaok6L3EhJZPjrwyCIW5Y4xbP5UI/HEeiDdtl4H+N7VT8nLWEBj
up/OXHyXgiJtV9dFH6+iBcGw8Iz67zBZ/sRT24sa288bvuy/1Q2rUuxUHtbk
+EPFsoNddQNce5eUWTcxhap6vUQ0H6ahA8RCfxEgx+yPgq5tR9UDP+9Rg8p0
anw7o/v+gZ5umPKoFNfvIMeuVGrU1RPN8DB1iKVvfQfJtvpWLP/KAKJBf5sV
ibffn2M18uBCwC3IOa1iuoFOSGe4yiRnw3dFVQnvR5TYcOGq+FRgI/ybaXnD
u0eBJepiA1yKW8GoMySuoooFV4ioG3n/mAZhm2d2SQFEvPbeV//Xp1qgST/e
9VSODN/vZDl01qQYQrIY73/fZMY271g8ti5PgGEhBxeDPytWMvFynVsg8Y0t
vXPBZQJGFreZauWqwL2B+bneORosrJHIVEfalwu1J7qkDQhYcaDZdmu0HGTl
b1UFqm8iYtkIjX5IPDgXcv6YnqPELnefyB0OaIc/qgGfrxjvonbeogu/nxbC
N2frWaGsLdQ88qA1ZzQXiA8lMumvrCHOsIn/nhSFwm8Hu9bmlXWEtbxvuxg8
Q0Z4+wNVwwK6xWF3klk1Dt0Y9jN42zWBmtVNrztdqUBUqfsPdpVS4qatpZD2
fx3gKpHme7RiG114v29Mv64ANE0KfNKLV9Bhu8X109Oh4C62c2WomR5ziJTQ
t2wMQ3zc+kMBAgX2UI5/2thWA6wBMjPU5RS4/n36DcugFijtN1LfECDHnNwV
nA/uNoFWDGsHreUOOuyPaWfoSkDh278AFLuDnLjtq70VssDoxt74n59/kWiA
ljLnf2Wo3V6HFodtIdko+dc3d4MRoYeQYCBCizcYyemkgvuB/8Zyw1P3bcSS
LxvRaYXBwkcqnP/OItJN8/E0lC1CKiJcMcfdl5CU8KsG8vcICW/Y5zvIUuCb
nFyXLxc2g1HObPeVbkqctjzDp3C4E75Iqou+oyPDr5yqdGNCq8DxpEdHmvlf
xNbqfYVzrgwp90ToX7xOj6VfT3oJSI3AvCK3ozYvA3aRizlw1H0UrnZyvOQK
ZMEuNDaOlacmYdOR4dejXDJcdJGdePJUE9RIFhC/hLLj/OxI1usq86CuxOV0
5OI/pHKKa+z+dDrijXtLFzHKgIMrkyUMmcaA5QExduvdOnK6pp20pRMLH4Qa
vJQfbaEfaycq2XWLgNYv8lW7CgVWM77j5aHXDALlEWRt+QS8GI+fscaUQRDH
mKBfwTYKDaAphDu2JG4+pdRF+t4Z3460GjeMfiTfJDMUJOB31FwVgRWRkK50
e5fBlwxfePUUKpVrgY/D6OSM6gLa1UYfD8+UoLHd2UHu2T30vZHnc5BnDhQo
llxsVWLHJwJyfBXU/wFNCK+6VBwVXrG8L/LYvRPuzfwL6LIn4PI/h66lkvx6
TiXy3hMrGnzV54Imb34fUGi7LzZdZcHzzgwMbNNjEFDnekZxgQJv2jFeWLzU
Bjrkd5u+3NlGn6e81s4bZgFauSL66wA11hKkufslpAc8Vn/7jjwm4okjPtoX
nlXAu8mujNdO/1B46PZyEX8mOnz84bm1mU10bWXlwMmnKbBHaCB2UhLwj8AD
S2/PJQFbr1WThi4Zblk7QP6b2AAP14+fOgMbSH3EOVd9Og0y7UNpFmVZcBSH
5orjs79wtfj192izPZRBz0ZX/b0MoiLP3rrxnRUX5NEuLaTNAqVX/dcKMUqs
5utruJbUBnmEp5Fst6jxA3WuB6eM28FVr3up+ToZtrCOYzFxrYU9m95RxEeJ
3zz4s+RwqAXIhNzCHw8sIc7QL8dEyf2RYojh6XYvIo5gnvkoeLcY5A2MmyJT
p9BVi2uHnr/OR1xmU0p/7NYR4TCPaWhiOhjls4Y3p5HhmLE2uxsdteBPOD3A
JkSJX9Q9mq342AyHLt/xexm/iD5Nv6NbHS5Bowq3qKmPETHvaDZHcG4tOGQt
cctr02B+HdCNG+qFQQlPu4MiNFiehNh9/F1g84KN2TyfCjs8nmYmv9YFQjnk
X2uWaLHUhX+hxVRDMM86ZH1mjxJ3sz3o6f3SBtGdeTOi7DvIgVHKMfkYhkO0
kgtofAXt/2cuauD6EBW0f5I3PUCGTzsMwunWSjBTab15KWAQfadwGDxzrRQZ
JHrfeMK+ii45hX+8k+0NT9UoTO+cJOIqG7kKp95S6LvyZdNkhYgjcW72rfR6
aD6SwqVK3EAyYt2bygxPUICQVyX5Nyp8PKzsWetgJ5TVKdqaSdJjRtOXDd9H
B4A9SrVy1mIJ8UzoC/Wcz0XkZWfJyWoYcZrRD5qRnkGozB87dDxrGoXKGXu5
M6ShIaOEVn8X0v4L3WHIeRUH4RIKesI/yPDHQFYl0Z+NoKEAjfSjZHizOJib
r7IauiQUrJQ+UuKOiNwLdDnt8O9wq5OKOSWezlSqj7ZshXKz3FcB3v+QPF3D
4dKmZER1UbN2O4aIQ1Sl/D5K1EC5d0+Ga8cEqrzMSP36GUZ1L1zs0oEMc3oR
Rt4F1kPxqRqDO8cosKRbDEU1VSt8H/Lxe2BMg5tCbR8Pc/cBrBte0YogYuNq
Qw8e/grIqSkZ1Hdjw+PfCq+pTs2BeEfhSdHwMbTqkHDs7GuMPiio77JoUOAp
PZok94pWiE/0lDs7RcT8JuItDwjlEFy2kXWX5G/WchQqX3kxHBY/3xXSvIFs
2hWdg49EwL0WjXCzaWb8OOiknX7jJETx1htFKRAwi9u8xtmoLNBZtBNclKDA
CWQSAr7XmyDh1JmwfYtrSGhfoMZtJz9w7zlkuHCYGm+8Pmx6SaYHHleerhAN
oMTklQdyNunboIWbTDMikYAZeFW5yDSqQdXKy79QfAn1BDiGmPUXIJOuC85c
ypTYlIK/Ie1YGzhaj67bGxOx8+X/5l1OFkMOTd9bzttE/MTtVVq5ahX8IbaG
dxXsoOO+V46qZsVCzoeugz6ybPjGpEh04PFZoFp08tSXXUBTmvGuQeuliC/2
hXnKQ0ZMO3fYyW5+DKwp9Ct5v5D4kLot5X5SF6i3bw2eFqHA/+58WVqtbIDC
BK4DpaYc+Cf7Rv+g8QLURKakKbfQYrEjy1I2LV1w+eH9QWOubXTzo9BU+vMU
aOUZexf7kRrXv+Kwvvm4Bzz77FquanJgLTkjW2PjaTASMtr2/ELArQItMa9Q
BQyFHZdyDNxBhqyj16uaM6F0fKzv7a955N3kZce7/zdSL3zKx1JDi72PyDVU
zg6CWbr1/gl5Uv89ynqB81tB352Nr86XiJcXbWX7h2pBOfCD4tM6GmzAEZVr
pjsAztOfyKGMHL9dLvrHqNYC9AUmfQKhC4gOj3LJiKQhy1zOs9bfCLhP1vOj
bW01sDLYAGfUHqK8V0mOlPLhWNmpMk02Ohznmt9+2L4PrPW8ybx/U2GRJMur
Rpc64YHdVpfakQ009DWjfelmMKi7TUi0Nk8hh9LM1Fq1ChRueV/tWyoV/mWy
95TtZydcSn74qOPcIpLPGi/mowhHwypidRa1FLibx2j7cX4LdJUGCCStUuO+
84wR5kM9MPyC8OjkLDnOceFVql9pBoUK5L5O8olsPjKTE1vdsGx9bHH3PBl2
j1u3H9qrhz633pFqhgM47uQcrpNdBXEbqwMX6wbRYwqr2WvnKhCh+/HJ5yJE
vJEn1MN5sxY8vqfQGxXux8Ysh07tjC0BU8+Rk+OvqXFjh6uQenAveCYm5kqc
WEQO7Nongx2K0L/W6fCYP5R4tiunQfNHK6iE/1GiZlpG3y5o5jhMFSBuqUuW
Xu+20O+NDsdI3zjIGRdvfGJD4tX00p8N8a3A7vmj9+6FPcSb4nNcObQEKo/T
3hZm3UMXb34x0/qQBQ/N+Kpb+XeRsJ5s64JEHuxf13Rlz9lE6uPVe73doejc
CSqzW6S8E16qu7Jjmo8Od0jxZ1zeRuL7hTVUBPNAc8TN+jQrGea2eKlkxfEH
koPddX0erCBq48ehnHkZ6KjU6OmaZSK2UdFXS//0BxxURszPW+yg9OasOIvy
SHgi1slo2kHEtbKPlphu10Opk/2TUQMy7Pfs2dOFj9VgdfGeuNsoJdZ9r/O+
XqINSuatDBSsKPF+OZuGcP4O+JSf+/yZJCVmf/nmET9XOwi+/Q+GSPmqKXL6
oOiBJjhvGHeG+ugKalOspFo8+RWd23O4txpLgx1vJuhwOAzAh/SEzc3QHfSy
QFbL7mwatDQn/F0qocM92l/iU3SHgao0bpJ2HwO+2OrpquQ/Cq0B1HeenCLH
6ylRPzF7HVC5TwzFDe8hu6aTCfobCIray2cUPFeR3DvjM2fIEoHOO2a47dww
0jktbhQXWo4Sjay9HN4Q8YM4cW6vhzXQ95X36mwjA8aHpt8wNA9B8oyMOPO9
WSRe6niMH8ehnQe/3oWkEfHP1+Ii9Hf/AN3dqf4aEh+wFAiXFwv0gN7Ud91Y
9z10VLaP00/nNxQ3LDov7rDigR08Kdk0A/UG8pbzZcPo7EqhUtq+SmT/H4fm
yCUC/k/v+r+nteXwR+rF4KFvy0hfIN4w41YwinvepzVh8g/1PhpNTivLRwFM
KvQFO5TYar1cbDqgA466s9cJv9xBg20UXfS9mbDjpRR8N4wO1/c/+T67MghK
2ce5VxjIsd/tyUjN7EZw0Guo/E9sAaH50iP+y0loTVfUIuIHJT7rl0LNXE7y
Q4cLgpYm5JjsVXTjbGgNCLS3cpn8R4HZ757IMDvQChWCcRtXC7bQzLlPg2xq
GXB38RWzbDAB80znHH7wuhK+z7u+ippYQa3z12UjRJJRfr67Tt/4X/SG9tbH
3boC1IU3H4cOkGH5ljKDZ7FNULF1MevmGDmeUT9cRWbTAOfCgux2HlPir/cf
vdKKbQe2O3/HXGlosbbGneE7nf3wym08/AvfNtI4wp8lf6cQXhhcO/ABdpDF
x4PhBlSZQH707ci4JTnuiiAwu7vVwS779qYCifcsiGTEx4kVoLJi/FxPdwGp
6N8b5nMpQcKT0U/nmAm4Okyc+CKpDGrKw4pC/anxQ/aQHxdJ/JS2zezyp34F
TdC2zIs5eYLj8eOHvAm0+OjyDZkl0UHwCJmOZP9AifedbnfL9GsDAfelCMHg
YXTfOaAtN7sQRfImnNaKJsdUq+Hm1q7N8JcQX0rZvYjipf1t7GQS0Qx5xn+Z
tmT4gYFGak5gA5grH9oX39eByBXy+/IO1CDyrsqf3Td3UZ/V780vzzPgg8Wn
L3laRJzvqJQb6lYDVjbkJ1P69+OV7P50HfEVcCm2fdgRuYxSyJ/x7BJiUGl7
3smP/hNIUH9+ke18OVrgZ6gazttFJa1ixz/9KAHtVA1i8wIZ/hvwlTn4Ti18
opAZ2ZEkx3/ab1bd/lwHXtZLQz8j6TBeUfbdv90DbcMJ7M9PU+OQyvMFDcY9
MOonzWffuI76pNk8XKsyYeNb9e6s0C5ia1Z3jXAqA2mx2Z21s0tI4YVpXr+r
P5L9LGj2YHkDEQ55s0/p5MGm0AMelhQSb1WjFsmTtcB2jtv8CF5A0deKmn6e
SEWCo3fpm1jZ8Qet+AY7kVngC9G4dDd+AxlM7gceoRT4efEoM3n5KqKJfr3B
eSMEXZB4mRk4SY1Xu+z2yZh1g7PrwulJITJc8ovW7fWXSnhl3kC3l7uI/nLk
M5BrpKGXsCtIrbBFmhfdyxb6bPB0tT0bcP8fyg+cF4ubKkU8d+IFT5Dy2svC
yG7qEgL97jfL7IY7aJ9C+FKIYQB00O9r3DhIgctM3ZUErrQCVZS1axMmx2qT
4+rKlY3Q9fyKQ1I7Ea+9pTvYea0E/E2iLPUomLDSSqmzz9QoGGx4m6mSfPaI
eIz2FH8rSD1nHvm2tofOJkYo6S7+Au6/x0cWvGgxYemkqgv7EHR9utL7VpwS
L05/fuFT2A6rSamcvJnraERj+7Lq9nM42v+536aIiDnJh0wjPtWDXVIgthPZ
QT9pVDq4topgr0Pu7ifJXfTqkoVYnVoJOH/yjJ16TIap61eyv6Y3whXESkXE
FNiR8s794jNNcKwxIqAwmB43UFPudcWMQOwlDov7mmz4/Nzz+SNuc1C1ECbq
6cCEY3cD5JaCJ6C0f0aX7j0BX2U5FnDtbRXEnF2ptbxNjj3364RF3G+Gxfev
Rxy2CVhdLtOpjioPHi9Ie0/k/kVbZq4fOcozkb7yuA/SYcHFEnoNe2VTYNfc
7DZKs4ICP5mEpTN/Rxm8jJ/v5VBhpz3+9RfVncDWvywt/20cBRmNK1SUVCJe
Xr7Hv+4SsdSGqQ0tRwUkrTVN5/IQcXjkviEBhjpgEAcmJz4m/FA+mKWaOAiS
s0RVA1NK7HA55YezchsMCUzOWNEQcTHVlot7XBV0KhrfJobQ4y9KGyzLvSMg
zSenIXB5E/nbOl2ucEoBxiDFqqUkcrzCwZ8XqVMPXN+Ng6vM59CpmT9+x7VK
0ZogjVTwNUYszbveuTc/CujXzNe9Igqsy22ly7ZM8v3QQKET8ozY6r693a7V
GJSvp9IJ/abADrapFVXnW2E9+L7u8z0G7J7BU+2rNgaubr8lxbpW0Fr+hw9U
NcEoE/yf+el0IEeL2HfP31WjjBvDTcT5GXRlXPxyzeFc9KU1MmG7cQFpmbHF
u+IIVOofoEQg20Mu6ddsbHxS4LClS697NgV+Fkk1YLPaAr3eD54YulBhwe0H
gjHBHXBSe83i0K1N5LPqq+634QwM+Zx5T9epcHqwX2fniS5w8jHd5G0l4ntO
YybrRbVwY1xDdb5lCpUJoyuWVaUoOPIAn5zFGjLveEau5hgKGdcnA2MqaLC6
EQf7uNcAPDHVdSo5sIu8LgaKPvkbDpk37uRMFS8hM0mGzI6+R9ClzfmFMpIV
8+YNh0quToME42sFPallxHnHR/Thbhh6ue6pQePKgvvqL17P1BsHNOnnX+u8
g1gy7fDRYATWS5ZHlOx2UafQNR4j91JAl4c/OU+S/pdBU3VSpwZkamjngsLI
8W3xulGG4iY4Ip93a6WOGreEuYoEy/TCbEnkEK8PGXYY6mCdpmiCH2kW2X2D
y8gx7kdyXEcaWmRTCyV2MOMVSk+nu6MjwFIF1p8u7yAV9sK2pREMIh9vN4SL
kvrt+uggn10tsEuFMgR50eCW85MqT5M6YWeS6v5aOxtuJ2s+AQbzIFL38tp9
FTY8dA5HvS+dg/Hei6KhV2lw+aRQnZBKH2y2JY5oDswhIQHhy9Onf6LBpRd+
8q7/kNes5XHDpTJ0kt1M/8TCKFpekvHXNsXo+icN1kTOcXRkorO/JRMjKrvb
NBkNTPhnfmdf+M4wMHiwov4yAs4dkLQK9ymFHqGJ1nfnttDHjZDDnp5JQOtR
ufPf+3WUxfQkXGy/I7yTunIxRXYR8TVdipO8kIOsm/U/iK3SYLujLrQXeAdB
3Pp9iFrsGpKeeHM6uyYeNl+NrlZkUuMTFoP3LFhbYYgrakAvdxsxyhX9ltVN
gk5lrl9KA+toZWHWP+eYC/pc5JWSMLOLZmoHu4XWy8GJyP7m0wUG7JM++lOd
bQi2g/UG+UwWUdJqXHBObBRyf9W++KFpAwm1zjd/0UyH8QSvQH/+PbSf7sTo
QFUpXHS6vz+HahedPrJF4SROyt/BnypZhhy4Nm5D1v7QIojfuJwXcncR8aBk
0zSXDPTsKj7NRU/ER9Lo+zXvYJDtCbGs5qPF746Zut1yHATn0ytke1o0OHdZ
aKG8rA/UZcSUnJNIvpurJ/5+rQdcrIz71ybnUViWwacbfkWo7118QS8LiS9/
mhf3BeTB2eiD9cSfW8jRXU+V/3MGrDL0CXY+20Du5YHfLL9HAY1ChJiWEBU+
0WbdJPewEwIa16W+pw+iCUeh3xVWFejIf35DLKzkuDMmPPrEeCN8cf9pGh80
g+aGqA+VEbJRD1/3GlcQGZZjnqQSe1wBt0ORTkUEFV4UFVf5/bEL2g49+ftU
aQ89GMnU3PekAj6mbxLOdhLxUf0Qls8NdSA/r5HZdI+IO4MzI7eV60HA6U/3
AbY1dDhHkifWywfSBxr3HrzaQF+fJZx9OPkdrlxzb1B3n0c54p+KkG8mKnHd
DPHSX0Ir2qyCT3TeIA5ugZoxsW10/cTOJAVnLoxm6op2e+0h99+3yFIvYKBS
+cMXWrOLQq6TGVz/mw8DFK/jiZ9JfWZnzP32SCoy9/j5w//AFqL34U1i202D
2gTdCNH+OVR2/fXHoroS9KyLYZ9U8ToKc50XNHuYCEvO7Ve1s6nwgd7z7deP
toHqFz7fYCZanK02SfmjvR+6d/upmQ3o8e/frFtaHiPQf8S9Vr2L1Je/OfqE
g+vAROK05I7vGuop+/WW/HI8GO5bOR5pT+pfzp+qRxMGgcqskUvSbRh98tzg
9FUpQwV0DY0OwkuIQa75V9Wtb2jmktBxk/o91OKjM1dHXwpR8i+PjPZPohwc
uPpGshxVEOVTbGKJeD2bRY/udzkkqjDUm/9eReL6K04xU+8RtdSF3tbsJSTA
8dZ68ctHpKbzoJwfaPCs63+K5nb98If+XPLe6CYaYTtdyscYB+e13HszXIiY
hUlXKjKmDjTHd4b225PjEW/9r78eN0HALREt4VsjqFb15PrXsEpEG/0Z3bYi
8W7+4mv/f6VwzoCMf+U/MixxosvxjW4lnJL7rEho20Z7CW8d+MMLocaaMrHj
zQqSvhr1wckxBTmbu9iFbW6iwUalVw3XkoFiYugs9/Ie4hDemEw9XwkpZgem
Xs39QyFPy7fCM6MR06mZ9OplOpyi9fGC+dgwVBTW6ZD/ZcTeCfyjjs6jwBK5
IiYTsYnWfI9fbVyOg7UtQrzOEgO2P6ZDlfxxDBrO0TAEKNDgkPMhsRIufZCR
Jt0r9YQJK0/LZR3zJfEIuyQVpxINPlndZ2zk2AfGGWMhNfpErG17QeU+dz30
13AVoN9rKOhu0HXNoGRwE3quyehDwH+7BH+JqFTBAZa0O5EyLDjPMJHr3kw/
FBtUBxQz/EXfDOlc/qYh9E5Pr8DhDTW2uG4QH8fWA8afCLfuWZBjorxXy3fT
RnjzQWpspIaU70v+Eri1CQpDdY2ESXyjcNzFivxFLTxotNw/ODOLVg6tNBeY
FaF7LssvfpIR8Z6oZmfL8Wo43nvPOsV3CUntOkYLhvuhruSVoQ8VlFh9+sTN
j9vtcJgmzOs+yYevcw8rFoymgImIB38lJTPerAs//9dxAq41TFawvyXivzkf
VbZTSyH/5kV5IQoWfNGWYYMzcQIamGpTzH9vI6Z9auf3eSdDteIbw3LyPUTV
dSqUXBbB6LXZc7Phs+hH42iLh206uqV6ZCh4PytmJZeqRG9nwEumZntEjBrr
pLx73rXZDV2s5lI/d0l8cGBVOPBUJ+B705x2mpQ4LTz3/p2MdnC0Mc3DJP8c
1xdWq6IdBsZST0v3GjJsIrp8Zy+zBrYvc50SeUKN0ZX2dy+neqBa2qYkPX8R
3cWnlxIXglDLKMEv9icBnzRl5tGJyYfB/hP7Kp+RYz2/ryICHxthf9+BI54k
v3Rcy7V3z05AZb5UScNerLjw/UqPD4mfJOufXr44QMAaXvs6GkxKobStUPot
7RpSZD7yPulzEKTKEv08vpFj7W82rw3pm2HOQ3Z/8JtNVCKgaHmpLReEb2i8
U5cl4kkJnUm5vkrYuczV5X+JFqsX5k5Lsg6S+CSJdXdmB/kZbljfCS6GkELK
QANSfoZmdu8Ty/gD86y88+l8u4hX4cO90ps50JTqGfZokIA3bHS/+iyXQWFA
2Mt3L4jYQT6L8d+peniUzjJSG82Ir/OuMg6WjoNHboD9vUfTiF0u1DHSNg3R
2g4InLWgwgpH2J8WqXZC2+Hc4HMk31XQMT/heDsXvnAZfL6hTYMnS9UGy8d7
obyA8S7Behl5fHoa6GJoBP5ntT9mz1Fijbt83lZqbeBXyCBAQU6GC4BFVrSg
CjiCvET7SXmVENato8VTAmR/3jneukHi2xmhqyMPCoD4pEsk+SMNztP/41iG
+0AV7DI2q/8iqqh4lUiWEiSidF25f2MXcS10x4T3YVi+yXqXpZsW83T+OtR5
bwCqL7jdqDk7hAp0vN+GxJah7cHx9lhmamzodOG2Ok0P3Bu6LDXcNoZqlJZs
X78vQ3Oe00zf+DbR5vV9a+qGMeBzemKBKnAEKVbtH9DxwCgxbGXgFDMNDhJQ
jA3M6APBBeHGIb1lJJSzouElx4PuGrnt5FvR4SoNJjrVh0PA0eaN3GyW0Nhf
xbPDrzKQJQvfN17NTfTSneWFjE0U4nzV+0L/+C76w8IQNNFRCg5n0tRa7Kjx
yuhtoop4N1TxV5v1VIyi+76qAqaXy1Hg3/CXOJASswyr+EeQfK2VRUpEy5YB
N1nyuip2D4PPfVvBgzHk+Eo6deeIYiOwJfh98hulw11a2pGp9sMQL+wgH0bB
gV9r/Tt6QWsB9oFsgafyJNp8pKnPc6sUHT7Bl7qyRYmnxSMi2Os6gXdw0a++
fRPxPS1J2ssqhIjbOvWyRDIctcGTOrVdBefCbKQXnObQLxs7tdaHUSi24evM
ZhgDNh0TkNKuHYED+XUObJyrqLa0SLRX4DZwxyjXBfbR4vhM5XBTlSG4MRxd
dqKAgCXYduxvsReBW/6QYPgfakxWnffRy6YXWJJsctl0qHEQtabXyH/dwPZJ
zjmcj4iDKmttThVWQqxL22g73wiKM6rMRUVlKDCyXvHtDOn+bsU6M3HkgttP
XtsuxRX09oaUXqPia1SEFu/1fSBie8lxZl/jGgiOTJdsJfmzU27xnurhVrCc
V6jdu0vAqqpSZdd7imD87n4fCiUiLtXcc0gKrIHIi4rjOzzsuIONbGJIfwaU
BUytdU/RY/Nr9xwojo3A+Kl/FO+ZyDBz40B3glIDUDeZilwk8eXB1ymG1DuR
sC/ZZN28ggGbib+43v50DDbyn4ZRn55HlaPGmdesSDw/tZ7ofJAcFzL+7OXe
awLD0dGde7w96EDRId6W1+VIMN/rxY9bu0gmUDnuMX8eCPpP+MTeocQNaVeY
9L3bYX7KMPBxHiXOOzuZbdrQCgHW3Tfq3IjY57Hyjwj/MhDjtlvKzppBu8z8
bB93S1CMWcvnfTYkfqLP713x+I0+h3XN8XdS4TXT2pO2wl1wvJljI/0VPbaM
XKt5ajsC1E5b+/Y86fCL08nc6wLD4Ny+73LQyCoaFV7e//NxEfJqN9QZ+EzA
KpQp1JLMBVBwLKidM42AI3leFLCZ1sCNkG35UKsdFD+Ln+Y+LYQPQfvbmhzp
8VOz+v+s1bug//O68NXD28gjF57KCCbDZUVtWg6PefT31Z4i2Vw0ytvmM4w+
QYZ1IDu2s7EBMiWXws8ep8GLXpQbvk3dcEJe6Z+IBi1OWj9J+JIyCIlCDevr
g3vo/A9WmdGFMlgVDzvKdJQCM2+/OH/+aStk6mgk3721hfIGO8p8vYsgNWmR
+SxxF0lYFhmMmhSDCI1Go/cCGe54iBMiapogjf5GI1syC/5c9nnS4c5fWHn1
31+ZJUp8yps+9UpNJzza/tPD1c2C8/seRnMzzMC+q5kq0VwkP3kaRbvvVi/g
b6eNJwVmUdSK3qbGQBlaPVnO1FNBgX8wl97+c7kJCr52Zh3ynEL6PV8quEjo
4K1EEzBcsoG8TGLcPlT5glIjT7+JMSMumI8deKEwBuTutilxTdso0ub0HbWt
Yoivpmk5f5gOiztkLScVdED0bDjXg146TNud+vCF0jC0J5X77D+ygshoBWKf
tqagO++MR/5sUGKxduMbxvSdMDVzsLz1IBX2Ya1jFmvqgMEPG6INKVTYvfVN
TkRLJ1jb5240/6DAFF5y0QcsW4D+j8i/y1kb6LTO9YNPbR3R5fV3OvZGO4j3
D2dG38dCaL62O/69axXFDkU+Jhw6B6uEZ58Essiwy3E+2dyievjko1X/dIOA
36R+Duc/nA3Jm5/Ph1UQ8MLbHNbeW1UgX8LBbUTiwfSXlbMxqslwd62+feUN
I85l+Ls0XzcGxDLzCkn7bUTnW2dj8fM3OAocDU3XnUOV6Y2e3FYINQUx/HpR
R4Pv8HhocN0m8bfU/sm177PIYS1x9PleIRL7ys056LCAinITh3kbSlAKj+i3
T6G0mOFJdWzBn35Is++s1tWhxDpFOuqvV9rBY5ApRDJ8F30eDi/ifFoMWt5M
jDbZdPiUzL+NaNthSArZ9Jl5SYHF4lRu3yC0QZ92M8f22g6S0X7Bcy24BBIs
UqRTsxixyo/OAyWLw2D6WdRfkn0P0Xac0vqaVgLX4sSCmRip8bhF0m5fdCfc
mMrRYiLxcnv+EYk60XJgyD/GyUhFwMWe/IbiXJXQYlOc4520gV4PLWnJ3UmC
ahVXx7q6eXSZr6JC9nQK+soouXM4bwUtdsXOmv3GiDHdOiB6ZAPJfV34/W5/
OqzHkOucOzeNvNtlJp2lMlHxMfozsvfIcQ6VJiuzfS248Ffd/du1iTr0HlX9
9nWB8M0Q9qpJIm68G69z4F0t7MvJS/nvOj32Zt4/uasyAs+/s8iyWOwgbk5l
TmUXR+TuHy16nriIwu7ZPP96A6P7rHShaid30fhEAm0aLgU7q2SGF8P0eEOn
QMfpwChYiMQzRqTT4rvuh5L/lg+Cgx6vnyNxHUVZevyMUUyD92VjL89tdyDP
/M++LRRlSJfv8YneaUp8T0i4M+ltO6g2XlX0IPkd55u9I078xWBd/DunxYkS
P7ppMEv+oBW8SoYkCjfnkemX/I3PwdlImDAt/0uT1Lcp/XdvKHVDMM9u+iWK
RXTn0LC9zoNfSOGVaclHQQIeZn3oOVVWAr1PU1/7p9DgmFOu76ziB4D3z7f8
GaVFtMYwBc8exKICePDR+w0VrqCntdhw6YIsa+Lx08cWUHJ/U23ZrTi02icW
/M95Ge0/v+JRZZ2IlreKnCOy11Fg2U3pZ19S4ed45dWoH4vojf8es3JCPuJ+
N8s4PUeGL10c+nyZvx5e29+rt5eixnJFFaqO293QFjwjSnuBgFONLFVVbqTB
wlaXfPBFClymNJtyKbEVpA8e12htJ8MJllWa3qPVwHAhrac5aAml7IVFaTOY
I/bovaNv7cnwUMzqw4WZerDQMtP8R/IZT5Ex95S4fvihd2A3XX0RXfkQHxUc
+RMNZnPsfn2zi26kvq8wqX2LrPUPGWxPUuBydtaQoJRWuJQk2rjPehd9bG2U
kl2OgsRyeh1ReQq8r+TduwGZVhCWoXuy948G+z773GPCNwBFVZer5I3JsOi9
0q8d9/8AZ0T2lDTFJmoutUxunMsGZ8uYMYOTzPiop/uEfNUEqJlx5tsdoMCT
hT+DbrC2wo9d8RC+om1024Y29zoUAqP8+tHtyHX07zuj2d9oU/h1eVb5sP42
wgJWnNUDRfDlod8K1WVyvH+jMG+sognoTqa71eguoihW7RZ3nxxU49S15clB
hhX4h6Tuj9aDCe3n18Qbo+jHfML6tlUFGvSNSZ84zYiXw+KlxFnG4e/3hgOG
BWRYK1byQ8ZuI1B5WRjudbLjAPHXZ159m4GS2S4908UJlEVFcYi3shzJPNpm
52enxL3sHMfcqFvB+ruGKn/JCupnoOzO3ShEUXrse5+biDjtdaRnvVgtiP7e
irrcRrrH/3JhtK8JaDTvbdd8JfV703U5jZAOqI7YddBI30Puv04sFgVnQUR5
t0ZqNAE/BdYbKmNVQLS/g9OlKXHFRdWwJ02toK+f4fLzJQNuv7usR/VtBHiU
J231W2lwgLzo0L3lfjj69Qbfi0fUuPWP1qNc3x6wtc4Z5bmxi56nh/5+T8gC
6R+pdF/XqfEB+9MUF571gZRb4MVr3W2o69HIs7L6KmTVZORct7mH3gzMJ9/e
j+HpTY0krz6Sn6T3KWk9rgdXm4oU/gebiPXFGzPTtHQ4ldH09Tw5OfZoe0Oj
KdwEzKda+mzkJ1F/5QWu4qlytEjfNjlTtYzIps6teRx0RwYfb70bUNxALHnm
4RfOJsDtapuhd04kH80LcdTYGocHPPlsmpXU+L/gvRC2wl6Ioi0U3oikw9cP
Ui4cHu0HmxL1dwP0RHyb32fELLoYtLfdCjrySX19iyPrLdc0aPNIHzci8Z4M
VcvlV/TV0HVw9snsOgGvzCsa3BCpBqdFqgz64g1kWfb27KObnxDrD77ik2gT
OWVqqXfmZMORubmFAnEy/ECfhcditAaS1wJavY3psNTawei55UFYDY9IXo4n
3XPMUuUJ3AhkGRE7w3VU2Ir5rrZVdjcwEZ+8HWofRwZGbDur1aWIfspuOuoe
ARsdPiaqdrAEyt7tVHJpUWJy+hPDkh/aQF7UZoacZQ/5WVKced8cB5Zw5I7e
QXbsMlmIZywnwPToHbrB01uI/m7vf8H/RYF/lpn1MX1G/P2LUP1I8Bh4KUR7
KllR4mf7LydoKLXBFYk+T1mVTZSXMWLSeF8PNnkf27XkUOB5wmK1tmkbcIzd
OugeykjaX4o4BeExuBl1LeLUDBmODpCgdhSoB0sWRktp9zUUlvH9mcHYY7CW
L5teCaTBDPEr3ToWA3BX3+sXZ+0aMln4IqeV+QYJdvY1eR8n4izr+YO+DLVA
66rmHH2FiLkcBMqc/tTBcoz7YposOV7XVfXUU6+CjJv3D8qdI8ccT0QCfWvr
oefM5fbUFyw48PWu4wWXv3D2PWW+J4lPGiJU7ix6tIGPSM3pXm8yXKFFeF9d
Xw/eT57QfMtcQpQ8tK8YsmOQe1cuR2rJOjoQdkDhZWMoij8lsfvt2goaUvuW
rV3og3itY2fUztHj447UyYKRwxBCI/+ifnoG6W66m26ZlKKIRHOR4uwd1GTR
UUfOWwqXgkLKd3jXkA6tW7R65We0k7v3JWd4Dl1nZ289GZuAblzxGD7nx4xD
vr7JSaUbhc9fTL7NnFlHIVv0vC2cGihhMr9obnMTsWser2F2SwN25lNpvBQM
mOka9zOalREIHS0e82cjx4fU2M5tDTbB0EdJ5fEz9NjEWpOjV3IExs6pq/GT
8nhklFNauKgNQgzFPEYe0WPKpeedUbdH4N7Vc0dUjQ/gBraVOX66dVg5nb++
mbKJUri6OcOsCmGfppCjyrtdNE2xs3NxBsHScftRU6cFdJj41KVbKAUdKFT/
9vIVORY62BhUKN0AIhSXzhY2byLjhGs83q6hEKZcYRn5ZQW9RutNUtgTmdS+
n7trsoKW346djziVhuRp7fVsm2aRIZvVKrdyKcp8/kDoUD85jhP8E06YawKz
Fe0gff9lVMp3WkLxQzb6xFqkoPieATvtRb29tTkAIkMhzl/LqDGyTGo0TOyF
k7Tbx66mLyMN3Q25x9Wp6CrNP5txAVo8uD+Xb1NnENgjP0bMjfxFn19l/osV
TUM8xYrdgxOs2NxNc+jYmxm4acyyIWC3hmJpo7c1m6LgAaewbkwnGb52wf+Q
gVYjxF+Meelmtor6pBM8rv/5gCZ0Ol9SfhhETNKVJTU7lYjHvJrNQo4eZz2+
oneTcwQMrCdybZZWUQ7X2TwKlwAk/iZ3Pc6OAg9zjh7NVmiFL0KHsqVV/iKJ
4AT7YPNMRB/yx5XVmAInq7OJsUS1wOoB9dIzOQTcrLf/xKRhOYgX9S1TC9Fg
wbTermrBPkA2uQP3nWjwzZXb5im0A9DZeKmr8yABU8mJ/BwqKodxmeWgVHUi
Vk6espLVLIMKzyYff6oFZLMaucijHIGwkKVGRhSJV3zPBYFTCbrnHct1xX8D
se5RZ93kzQPtQcb0n4QV5PiR+ytNiQAKbwgVc75HhbP6JwT+/O6Az2fe/zb9
uozCxqqPffCPR+dhg/iZn5SXR4S9rXdqISFny0722DrS5f8VY2KQBNkFr24N
qa2ink25Y0wrVlB9m9HvuBwltuiO+BMt1w563hdkbjosIcv0tXM2agh1ipyd
495dQzYL8znJtJmocztqwcicFvsxnEp9T/KPZJNDN36T+sB5dEm2ZFcHmAoW
U8NPUeDYMtfZnY4W+BRSOdSmR4/FDxbavZUYgQ/0wlT61bR4WIpddkJ1COb8
s+R+mVDijg4POVW2DljSLDkTQbmKgngUNd7d9ERiLuWH+84tIMsXLCPPNxAq
jra/kj6whzrY/nyQqf8Ffle/YopXdBibaT9RVx6GizO+P1Y/7SLRlHCGcock
ONO3ESD6gx63vZ2x3pUfgemlXBkH0j5Niz+PpjRvBFlzY7t91syY9qFKBufn
cchgNFZJT2TD+wKyZ4gvJ+AVGScb2yFybNLkvc7+keSD0vwKg18WkKHAweWn
xjnIdurlqroHJf7Odi24PrIVvsK5yq82u+jS8IrtoFM6CO+LZ1sTpcbNj2nt
t5164FfGzIjwUD96qsISL2xdjfbvDbOU88+j0Wrb4ulvhUg27iNPQvcuel0B
Orfv/AYLsdG133FrSDdXwsdqIBls4+Y+TZHNo7cyalod0hEolP2M3U1aGvwn
UlmXkr0DHLkJp8bjehGxtWNWzq4CXZ/eOHhhcAO5a9Jrd+/EI8PrVvSU8/T4
oGSNsan2KKTntCe4GSwgDVoh7bcvslBsSNi57pOL6MJFFikalRL0U6BCWfDN
BlK20DrcPhWP2FJlRg42j6PqqS7CD6ZMNCpU5F21sYNkV1u3nK9kwF7oabbi
R2yY/N/b/yJP/YVDD2d0s1QosIpKY0ACbgXLQb9Rl5NbaPdXyf3HKVEweHjf
ZKQZI05RsFiIODcOp1wftTicWkXqjGmlzhsFaHPHvafgaQ+a+8/jppJSFdLz
Inuo9t8gkld+3r7yswQJn1ZPPPWaAm/ljLw8dqMVGrO7KqdpFtANYdvbyTSl
6DtD9OOXAvOI1zblU5RGAiIs0EjXxFHgqnvTHcGxbSCWGpFTz7qCBh2237Bm
RKP3UUsyuVZTSDZH0iChKguNqUbqnYmbRuwRZXzFjytQ57Ppt/bn6HB9ZPCz
q51DpHz29DiTSo0j7bGLEn8fVJgpTjOU0mKVPpufHUb9kBXSpSp+iRwPJNad
p86pBbUap8wOwTVkgTUutahZgff+/eXhDD1oVPWVwv2dcnRtIPHGejs15jOd
lsl80gW6V1+0H/KixlnX2vptbvVAZBthZJOVBr+xIj8jE94NMnXlFr7yTHho
/p6vbegIFEpWkgnLEbAS9cyTFO0C4PO9zuIYs41W+Lx43Ia9kfZQ8qcnYnRY
zX5d2XtuEMRWp+QWG7fReekHxRyrHrD1UiDYUmsduYhlhsZhDyTozn/rzf/f
k8jUrI0KbACGp/6Fb55NIsR0dKXiQzFKE/j58uirXiQx8q3yfV0lOvyuVw5H
riL3kswyg8UopJ6VdoxRgcRnrSfPlkqkgL4wua/MoXW07D1tLFXtDDRW2wes
U6jwwxdMxg89O+CpnqEVo8QSCuo0/3J+JRw5eCoLH9XbQJFDg1zXV33AtO7x
xaxhSnw5hP+U7Nd26F9RqDK3XEdc+3ey71xxRvwPnHiav64g7mPpfEl7t9Bj
E6eZk65kuJygI/nSuRTM7o+HlsWuo2nZ/M8qglZwz/iln+ynRfT4+HfJBe0C
9GGWP/3Q8Ar60Roa6qSVjlgWTu61is8jiWg539ojvxF96fr0ddl19N62U3xH
NR6qOMlpyjip8c7a+Zz5Tx0wOtQZThwmx3YzorX7IlpA66f76/d3yXDo7CPz
PaUKuHzwEZ9qOCMOZ61g6XEi8cPz9Dybb1vI8tnjlFu6ViAaYNw58WkbmaUp
8valFcPRCo2iQdhBacf4OjPJSuBVrViwHB0DNma2PzOWOgKR1zr87p+hxKKZ
O0p2JH8RCT4QWKtFxDOnJidYwyog34677iowYNr56r57HwbBm0+/QekHLX5Y
3ZG43DgIvWc8XZfX2fBx3bN+ZfnTEDi7yNN+i4gNzJeLrjLVAmtQQGmPLy0W
+mXblLZ/CEJYL60ZFSyiRbFXrL6m8ehsfwJfwYd15GboQKPTGIMO+B20lQml
wl6vj93Zx9wFOj3rQ2P6Y2iXjUC5V1eODi0GS9cWM+OPXO9vbpOPguBB1ynh
ARrs0ycuU8I6CGXkL0J0nUl9oTy4rPtzCFbU1x3jZljwWSYTx8DgKZhNpK4T
6l5FlWycblpb8RBTx/48IWAa2dsqXQr7HouSEv+zOM2wgJY/S117eLIUPT+f
59tgSIu7uLjteK4MQvjBILOP8rS4rd2j4xxlHyxLNd7ciBlDeQqai/svl6EX
hI1fx46uIMmw+KbrHYlIr+3Pbwq2XXQzQcdZmBcDV2B4/r+tKfTS4z/z8owK
VK/Q8cCvmgbv7p+4PnF+APRoqXOuNS6i1rzBKBr9bFRWwuj3JpECS/bcMjl3
sw3Kxe7jf7fYcJbj8ydTY3Pwe5JwyNKegLldKJrK31WAxquArMBVJsxXya8d
7fEXNDSTlAILCfhZkq0doa0a7qxxy4d+2EQyYqe851zSIFGgWtCraxcp1fd3
lLmXgMZCor+ECxV+A9kRpmsdkD8usU93jIBzpS345c5kg6VLT68qDSM2FSvU
UxQYg/9k2VXa5Wmw/qOY3xmcfRCofs+uzoINC3EdHjlYMgf1atr9Ws9J86F4
3Tm71wdmVS3V0vto8d9BwZl2oUG4134s5G3KCnpCX/+iWjsL/Q8kC6XF
      "]]}, {}}, {}},
  
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"High / low ratio\"", TraditionalForm], 
    FormBox["\"Stretching factor\"", TraditionalForm]},
  AxesOrigin->{-6.865203489352704, -0.35869624240525305`},
  CoordinatesToolOptions:>{"DisplayFunction" -> ({
      Exp[
       Part[#, 1]], 
      Exp[
       Part[#, 2]]}& ), "CopiedValueFunction" -> ({
      Exp[
       Part[#, 1]], 
      Exp[
       Part[#, 2]]}& )},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{
     Charting`ScaledTicks[{Log, Exp}], 
     Charting`ScaledFrameTicks[{Log, Exp}]}, {
     Charting`ScaledTicks[{Log, Exp}], 
     Charting`ScaledFrameTicks[{Log, Exp}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->{399.765625, Automatic},
  Method->{},
  PlotRange->{{-6.762468919466086, -0.1874564467225946}, \
{-0.32504884959886576`, 1.7610895043971402`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->FrontEndValueCache[{
     Charting`ScaledTicks[{Log, Exp}], 
     Charting`ScaledTicks[{Log, Exp}]}, {{{-5.298317366548036, 
       FormBox[
        TemplateBox[{"\[Times]", "\"\[Times]\"", "5.`", 
          TemplateBox[{"10", 
            RowBox[{"-", "3"}]}, "Superscript", SyntaxForm -> 
           SuperscriptBox]}, "RowWithSeparators"], TraditionalForm], {0.01, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-4.605170185988091, 
       FormBox[
        TemplateBox[{"\[Times]", "\"\[Times]\"", "1.`", 
          TemplateBox[{"10", 
            RowBox[{"-", "2"}]}, "Superscript", SyntaxForm -> 
           SuperscriptBox]}, "RowWithSeparators"], TraditionalForm], {0.01, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-2.995732273553991, 
       FormBox[
        TagBox[
         InterpretationBox["\"0.05\"", 0.05, AutoDelete -> True], 
         NumberForm[#, {
           DirectedInfinity[1], 2.}]& ], TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {-2.3025850929940455`, 
       FormBox[
        TagBox[
         InterpretationBox["\"0.10\"", 0.1, AutoDelete -> True], 
         NumberForm[#, {
           DirectedInfinity[1], 2.}]& ], TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {-0.6931471805599453, 
       FormBox[
        TagBox[
         InterpretationBox["\"0.50\"", 0.5, AutoDelete -> True], 
         NumberForm[#, {
           DirectedInfinity[1], 2.}]& ], TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {-7.600902459542082, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-7.418580902748128, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-7.264430222920869, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-7.1308988302963465`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-7.013115794639964, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-6.907755278982137, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-6.214608098422191, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-5.809142990314028, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-5.521460917862246, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-5.115995809754082, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-4.961845129926823, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-4.8283137373023015`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-4.710530701645918, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-3.912023005428146, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-3.506557897319982, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-3.2188758248682006`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-2.8134107167600364`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-2.659260036932778, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-2.5257286443082556`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-2.4079456086518722`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-1.6094379124341003`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-1.2039728043259361`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-0.916290731874155, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-0.5108256237659907, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-0.35667494393873245`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-0.2231435513142097, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-0.10536051565782628`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {0., 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}}, {{0., 
       FormBox["1", TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {0.6931471805599453, 
       FormBox["2", TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {1.6094379124341003`, 
       FormBox["5", TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {-0.6931471805599453, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-0.5108256237659907, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-0.35667494393873245`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-0.2231435513142097, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-0.10536051565782628`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {1.0986122886681098`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {1.3862943611198906`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {1.791759469228055, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {1.9459101490553132`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {2.0794415416798357`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {2.1972245773362196`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {2.302585092994046, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}}}]]], "Output",
 CellChangeTimes->{{3.6152906896876917`*^9, 3.615290704899158*^9}, {
  3.615290760688965*^9, 3.615290818338928*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"p", "[", 
  RowBox[{
   RowBox[{"defaultUniverse", "[", "]"}], ",", 
   RowBox[{"defaultBurst", "[", "]"}], ",", 
   RowBox[{"defaultObserver", "[", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "\[Infinity]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{".1", ",", "\[Infinity]"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6152908491783743`*^9, 3.615290876092207*^9}}],

Cell[BoxData["179.98900000000015`"], "Output",
 CellChangeTimes->{{3.615290858754692*^9, 3.615290878256122*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
Evaluator->"Local",
WindowSize->{1221, 756},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
Visible->True,
ShowSelection->True,
FrontEndVersion->"10.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (June 27, \
2014)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[422, 15, 184, 2, 92, "Title"],
Cell[CellGroupData[{
Cell[631, 21, 126, 2, 64, "Section",
 InitializationGroup->True],
Cell[760, 25, 207, 5, 28, "Input",
 InitializationGroup->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[1004, 35, 153, 2, 64, "Section"],
Cell[CellGroupData[{
Cell[1182, 41, 124, 2, 44, "Subsection",
 InitializationGroup->True],
Cell[1309, 45, 201, 5, 30, "Text",
 InitializationGroup->True],
Cell[1513, 52, 2087, 55, 216, "Input",
 InitializationGroup->True]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[3649, 113, 92, 1, 50, "Section"],
Cell[CellGroupData[{
Cell[3766, 118, 126, 2, 44, "Subsection",
 InitializationGroup->True],
Cell[3895, 122, 211, 5, 28, "Input"],
Cell[4109, 129, 756, 21, 46, "Input",
 InitializationGroup->True],
Cell[4868, 152, 220, 6, 28, "Input"],
Cell[5091, 160, 840, 21, 46, "Input",
 InitializationGroup->True],
Cell[5934, 183, 305, 8, 28, "Input"],
Cell[6242, 193, 2571, 49, 80, "Input",
 InitializationGroup->True],
Cell[8816, 244, 316, 8, 28, "Input",
 InitializationGroup->True],
Cell[9135, 254, 221, 6, 28, "Input"],
Cell[9359, 262, 1074, 26, 46, "Input",
 InitializationGroup->True]
}, Closed]],
Cell[CellGroupData[{
Cell[10470, 293, 126, 2, 36, "Subsection",
 InitializationGroup->True],
Cell[10599, 297, 345, 10, 70, "Input",
 InitializationGroup->True]
}, Closed]],
Cell[CellGroupData[{
Cell[10981, 312, 129, 2, 36, "Subsection",
 InitializationGroup->True],
Cell[11113, 316, 282, 7, 28, "Input",
 InitializationGroup->True],
Cell[11398, 325, 1889, 49, 70, "Input",
 InitializationGroup->True],
Cell[13290, 376, 1106, 20, 32, "Input",
 InitializationGroup->True],
Cell[14399, 398, 526, 15, 54, "Input",
 InitializationGroup->True],
Cell[14928, 415, 961, 30, 63, "Input",
 InitializationGroup->True]
}, Closed]],
Cell[CellGroupData[{
Cell[15926, 450, 129, 2, 36, "Subsection",
 InitializationGroup->True],
Cell[16058, 454, 2149, 56, 148, "Input",
 InitializationGroup->True],
Cell[18210, 512, 2275, 62, 215, "Input",
 InitializationGroup->True],
Cell[20488, 576, 3362, 79, 174, "Input",
 InitializationGroup->True],
Cell[23853, 657, 5275, 112, 199, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[29165, 774, 143, 2, 36, "Subsection",
 InitializationGroup->True],
Cell[29311, 778, 1382, 35, 180, "Input",
 InitializationGroup->True],
Cell[30696, 815, 2061, 54, 157, "Input",
 InitializationGroup->True],
Cell[32760, 871, 3123, 74, 148, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[35920, 950, 124, 2, 36, "Subsection",
 InitializationGroup->True],
Cell[36047, 954, 3400, 78, 194, "Input",
 InitializationGroup->True]
}, Closed]],
Cell[CellGroupData[{
Cell[39484, 1037, 133, 2, 36, "Subsection",
 InitializationGroup->True],
Cell[39620, 1041, 14015, 273, 658, "Input",
 InitializationGroup->True],
Cell[53638, 1316, 3038, 68, 148, "Input",
 InitializationGroup->True],
Cell[56679, 1386, 295, 8, 28, "Input",
 InitializationGroup->True],
Cell[56977, 1396, 396, 10, 28, "Input",
 InitializationGroup->True]
}, Closed]],
Cell[CellGroupData[{
Cell[57410, 1411, 130, 2, 36, "Subsection",
 InitializationGroup->True],
Cell[57543, 1415, 1286, 41, 60, "Input",
 InitializationGroup->True]
}, Closed]],
Cell[CellGroupData[{
Cell[58866, 1461, 176, 3, 36, "Subsection",
 InitializationGroup->True],
Cell[59045, 1466, 5118, 96, 165, "Input",
 InitializationGroup->True],
Cell[64166, 1564, 3007, 71, 265, "Input",
 InitializationGroup->True],
Cell[67176, 1637, 1017, 21, 46, "Input",
 InitializationGroup->True],
Cell[68196, 1660, 1166, 26, 46, "Input",
 InitializationGroup->True],
Cell[69365, 1688, 1405, 37, 97, "Input",
 InitializationGroup->True],
Cell[70773, 1727, 490, 14, 41, "Input",
 InitializationGroup->True],
Cell[71266, 1743, 1516, 39, 114, "Input",
 InitializationGroup->True],
Cell[72785, 1784, 4147, 102, 301, "Input",
 InitializationGroup->True],
Cell[76935, 1888, 3950, 93, 165, "Input",
 InitializationGroup->True],
Cell[80888, 1983, 19560, 372, 1100, "Input",
 InitializationGroup->True]
}, Closed]],
Cell[CellGroupData[{
Cell[100485, 2360, 150, 2, 36, "Subsection",
 InitializationGroup->True],
Cell[100638, 2364, 3202, 81, 196, "Input",
 InitializationGroup->True]
}, Closed]],
Cell[CellGroupData[{
Cell[103877, 2450, 129, 2, 36, "Subsection",
 InitializationGroup->True],
Cell[CellGroupData[{
Cell[104031, 2456, 130, 2, 35, "Subsubsection",
 InitializationGroup->True],
Cell[CellGroupData[{
Cell[104186, 2462, 415, 10, 28, "Input",
 InitializationGroup->True],
Cell[104604, 2474, 1775, 26, 28, "Output",
 InitializationGroup->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[106416, 2505, 531, 11, 48, "Input",
 InitializationGroup->True],
Cell[106950, 2518, 1864, 27, 28, "Output",
 InitializationGroup->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[108851, 2550, 428, 7, 28, "Input",
 InitializationGroup->True],
Cell[109282, 2559, 1816, 26, 28, "Output",
 InitializationGroup->True]
}, Open  ]],
Cell[111113, 2588, 290, 6, 28, "Input",
 InitializationGroup->True],
Cell[111406, 2596, 227, 5, 28, "Input",
 InitializationGroup->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[111670, 2606, 181, 3, 35, "Subsubsection",
 InitializationGroup->True],
Cell[CellGroupData[{
Cell[111876, 2613, 367, 9, 28, "Input",
 InitializationGroup->True],
Cell[112246, 2624, 1567, 24, 28, "Output",
 InitializationGroup->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[113850, 2653, 333, 8, 48, "Input",
 InitializationGroup->True],
Cell[114186, 2663, 1555, 23, 28, "Output",
 InitializationGroup->True]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[115790, 2692, 185, 3, 35, "Subsubsection",
 InitializationGroup->True],
Cell[115978, 2697, 1152, 29, 142, "Input",
 InitializationGroup->True],
Cell[117133, 2728, 1223, 31, 143, "Input",
 InitializationGroup->True],
Cell[118359, 2761, 827, 20, 46, "Input",
 InitializationGroup->True],
Cell[119189, 2783, 11479, 242, 641, "Input",
 InitializationGroup->True],
Cell[130671, 3027, 9134, 185, 441, "Input",
 InitializationGroup->True]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[139854, 3218, 131, 2, 44, "Subsection",
 InitializationGroup->True],
Cell[CellGroupData[{
Cell[140010, 3224, 103, 1, 35, "Subsubsection"],
Cell[140116, 3227, 23788, 502, 1059, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[163941, 3734, 127, 2, 29, "Subsubsection"],
Cell[164071, 3738, 2310, 55, 63, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[166418, 3798, 160, 2, 29, "Subsubsection"],
Cell[166581, 3802, 8885, 191, 279, "Input",
 InitializationGroup->True],
Cell[175469, 3995, 2794, 69, 205, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[178300, 4069, 120, 1, 29, "Subsubsection"],
Cell[178423, 4072, 5262, 124, 326, "Input"],
Cell[183688, 4198, 4932, 116, 301, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[188657, 4319, 110, 1, 29, "Subsubsection"],
Cell[188770, 4322, 262, 5, 28, "Input"],
Cell[189035, 4329, 3871, 78, 131, "Input"],
Cell[192909, 4409, 6700, 140, 344, "Input"],
Cell[199612, 4551, 4303, 86, 166, "Input"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[203964, 4643, 99, 1, 36, "Subsection"],
Cell[CellGroupData[{
Cell[204088, 4648, 102, 1, 35, "Subsubsection"],
Cell[CellGroupData[{
Cell[204215, 4653, 7711, 147, 216, "Input"],
Cell[CellGroupData[{
Cell[211951, 4804, 694, 15, 26, "Print"],
Cell[212648, 4821, 843, 19, 26, "Print"],
Cell[213494, 4842, 668, 15, 26, "Print"]
}, Open  ]],
Cell[214177, 4860, 99, 1, 28, "Output"]
}, Open  ]],
Cell[214291, 4864, 90, 1, 30, "Text"],
Cell[214384, 4867, 232, 4, 32, "Text"],
Cell[214619, 4873, 567, 13, 46, "Input"],
Cell[215189, 4888, 235, 5, 32, "Text"],
Cell[215427, 4895, 350, 9, 46, "Input"],
Cell[215780, 4906, 413, 11, 32, "Text"],
Cell[216196, 4919, 443, 10, 28, "Input"],
Cell[216642, 4931, 269, 7, 32, "Text"],
Cell[216914, 4940, 619, 14, 63, "Input"],
Cell[217536, 4956, 200, 6, 32, "Text"],
Cell[217739, 4964, 695, 19, 56, "Input"],
Cell[218437, 4985, 199, 6, 32, "Text"],
Cell[218639, 4993, 658, 16, 63, "Input"],
Cell[219300, 5011, 176, 2, 30, "Text"],
Cell[219479, 5015, 744, 20, 56, "Input"],
Cell[220226, 5037, 335, 9, 32, "Text"],
Cell[220564, 5048, 693, 19, 56, "Input"],
Cell[221260, 5069, 294, 9, 35, "Text"],
Cell[221557, 5080, 695, 19, 56, "Input"],
Cell[222255, 5101, 251, 7, 32, "Text"],
Cell[222509, 5110, 697, 19, 56, "Input"],
Cell[223209, 5131, 249, 8, 32, "Text"],
Cell[223461, 5141, 1162, 33, 73, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[224660, 5179, 102, 1, 35, "Subsubsection"],
Cell[224765, 5182, 5646, 124, 233, "Input"],
Cell[230414, 5308, 2728, 64, 131, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[233179, 5377, 105, 1, 29, "Subsubsection"],
Cell[CellGroupData[{
Cell[233309, 5382, 600, 15, 46, "Input"],
Cell[233912, 5399, 158, 2, 28, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[234119, 5407, 109, 1, 29, "Subsubsection"],
Cell[234231, 5410, 1160, 24, 165, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[235428, 5439, 161, 2, 35, "Subsubsection"],
Cell[235592, 5443, 1342, 31, 114, "Input"],
Cell[CellGroupData[{
Cell[236959, 5478, 785, 14, 28, "Input"],
Cell[237747, 5494, 13472, 228, 248, 5926, 104, "CachedBoxData", "BoxData", \
"Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[251256, 5727, 696, 13, 28, "Input"],
Cell[251955, 5742, 235020, 3875, 257, 223992, 3693, "CachedBoxData", \
"BoxData", "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[487024, 9623, 108, 1, 35, "Subsubsection"],
Cell[487135, 9626, 2261, 66, 184, "Input"],
Cell[CellGroupData[{
Cell[489421, 9696, 2230, 47, 63, "Input"],
Cell[491654, 9745, 127665, 2219, 244, 116126, 2030, "CachedBoxData", \
"BoxData", "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[619356, 11969, 469, 10, 28, "Input"],
Cell[619828, 11981, 99309, 1699, 249, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[719174, 13685, 620, 13, 28, "Input"],
Cell[719797, 13700, 110725, 1879, 242, 98789, 1681, "CachedBoxData", \
"BoxData", "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[830571, 15585, 108, 1, 35, "Subsubsection"],
Cell[CellGroupData[{
Cell[830704, 15590, 854, 20, 46, "Input"],
Cell[831561, 15612, 238, 3, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[831836, 15620, 1173, 23, 46, "Input"],
Cell[833012, 15645, 32902, 590, 275, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[865963, 16241, 125, 1, 35, "Subsubsection"],
Cell[CellGroupData[{
Cell[866113, 16246, 535, 13, 46, "Input"],
Cell[866651, 16261, 89, 1, 28, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[866813, 16270, 92, 1, 64, "Section"],
Cell[CellGroupData[{
Cell[866930, 16275, 169, 2, 44, "Subsection"],
Cell[CellGroupData[{
Cell[867124, 16281, 103, 1, 35, "Subsubsection"],
Cell[867230, 16284, 278, 6, 46, "Input"],
Cell[867511, 16292, 1277, 24, 63, "Input"],
Cell[868791, 16318, 1893, 44, 114, "Input"],
Cell[870687, 16364, 7877, 216, 403, "Input"],
Cell[878567, 16582, 2568, 59, 182, "Input"],
Cell[881138, 16643, 8013, 200, 407, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[889188, 16848, 158, 2, 35, "Subsubsection"],
Cell[889349, 16852, 908, 15, 46, "Input"],
Cell[890260, 16869, 1506, 29, 97, "Input"],
Cell[891769, 16900, 13076, 240, 726, "Input"],
Cell[904848, 17142, 2445, 54, 131, "Input"],
Cell[CellGroupData[{
Cell[907318, 17200, 359, 11, 28, "Input"],
Cell[907680, 17213, 425, 8, 24, "Message"],
Cell[908108, 17223, 427, 8, 24, "Message"],
Cell[908538, 17233, 425, 8, 24, "Message"],
Cell[908966, 17243, 517, 10, 24, "Message"]
}, Open  ]],
Cell[CellGroupData[{
Cell[909520, 17258, 32618, 820, 1151, "Input"],
Cell[942141, 18080, 425, 8, 24, "Message"],
Cell[942569, 18090, 425, 8, 24, "Message"],
Cell[942997, 18100, 425, 8, 24, "Message"],
Cell[943425, 18110, 517, 10, 24, "Message"],
Cell[943945, 18122, 427, 8, 24, "Message"],
Cell[944375, 18132, 425, 8, 24, "Message"],
Cell[944803, 18142, 425, 8, 24, "Message"],
Cell[945231, 18152, 516, 10, 24, "Message"],
Cell[945750, 18164, 425, 8, 24, "Message"],
Cell[946178, 18174, 425, 8, 24, "Message"],
Cell[946606, 18184, 425, 8, 24, "Message"],
Cell[947034, 18194, 517, 10, 24, "Message"],
Cell[947554, 18206, 480, 9, 24, "Message"],
Cell[948037, 18217, 454, 9, 24, "Message"],
Cell[948494, 18228, 565, 10, 24, "Message"],
Cell[949062, 18240, 452, 9, 24, "Message"],
Cell[949517, 18251, 565, 10, 24, "Message"],
Cell[950085, 18263, 565, 10, 24, "Message"],
Cell[950653, 18275, 515, 10, 24, "Message"],
Cell[951171, 18287, 480, 9, 24, "Message"],
Cell[951654, 18298, 454, 9, 24, "Message"],
Cell[952111, 18309, 515, 10, 24, "Message"],
Cell[952629, 18321, 482, 9, 24, "Message"],
Cell[953114, 18332, 516, 10, 24, "Message"],
Cell[953633, 18344, 480, 9, 24, "Message"],
Cell[954116, 18355, 489, 9, 24, "Message"],
Cell[954608, 18366, 495, 9, 24, "Message"],
Cell[955106, 18377, 497, 9, 24, "Message"],
Cell[955606, 18388, 495, 9, 24, "Message"],
Cell[956104, 18399, 515, 10, 24, "Message"],
Cell[956622, 18411, 480, 9, 24, "Message"],
Cell[957105, 18422, 491, 9, 24, "Message"],
Cell[957599, 18433, 482, 9, 24, "Message"],
Cell[958084, 18444, 516, 10, 24, "Message"],
Cell[958603, 18456, 489, 9, 24, "Message"],
Cell[959095, 18467, 512, 9, 24, "Message"],
Cell[959610, 18478, 479, 9, 24, "Message"],
Cell[960092, 18489, 489, 9, 24, "Message"],
Cell[960584, 18500, 495, 9, 24, "Message"],
Cell[961082, 18511, 480, 9, 24, "Message"],
Cell[961565, 18522, 489, 9, 24, "Message"],
Cell[962057, 18533, 495, 9, 24, "Message"],
Cell[962555, 18544, 480, 9, 24, "Message"],
Cell[963038, 18555, 516, 10, 24, "Message"],
Cell[963557, 18567, 488, 9, 24, "Message"],
Cell[964048, 18578, 512, 9, 24, "Message"],
Cell[964563, 18589, 495, 9, 24, "Message"],
Cell[965061, 18600, 515, 10, 24, "Message"],
Cell[965579, 18612, 77, 1, 28, "Output"],
Cell[965659, 18615, 79, 1, 28, "Output"],
Cell[965741, 18618, 480, 9, 24, "Message"],
Cell[966224, 18629, 77, 1, 28, "Output"],
Cell[966304, 18632, 77, 1, 28, "Output"],
Cell[966384, 18635, 479, 9, 24, "Message"],
Cell[966866, 18646, 489, 9, 24, "Message"],
Cell[967358, 18657, 495, 9, 24, "Message"],
Cell[967856, 18668, 495, 9, 24, "Message"],
Cell[968354, 18679, 79, 1, 28, "Output"],
Cell[968436, 18682, 448, 9, 24, "Message"],
Cell[968887, 18693, 77, 1, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[969001, 18699, 571, 13, 28, "Input"],
Cell[969575, 18714, 258, 6, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[969870, 18725, 516, 11, 28, "Input"],
Cell[970389, 18738, 243, 6, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[970669, 18749, 246, 6, 28, "Input"],
Cell[970918, 18757, 269, 6, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[971224, 18768, 252, 6, 28, "Input"],
Cell[971479, 18776, 223, 5, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[971739, 18786, 109, 1, 28, "Input"],
Cell[971851, 18789, 190, 4, 28, "Output"]
}, Open  ]],
Cell[972056, 18796, 3191, 73, 199, "Input"],
Cell[975250, 18871, 10661, 270, 468, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[985948, 19146, 109, 1, 29, "Subsubsection"],
Cell[986060, 19149, 333, 7, 46, "Input"],
Cell[986396, 19158, 6788, 173, 454, "Input"],
Cell[993187, 19333, 1183, 22, 97, "Input"],
Cell[994373, 19357, 2516, 53, 131, "Input"],
Cell[996892, 19412, 2963, 66, 216, "Input"],
Cell[999858, 19480, 6408, 158, 456, "Input"]
}, Closed]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1006327, 19645, 95, 1, 64, "Section"],
Cell[CellGroupData[{
Cell[1006447, 19650, 464, 11, 46, "Input"],
Cell[1006914, 19663, 2838, 41, 301, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1009789, 19709, 755, 16, 28, "Input"],
Cell[1010547, 19727, 99658, 1764, 247, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1110242, 21496, 742, 16, 28, "Input"],
Cell[1110987, 21514, 96119, 1698, 259, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1207143, 23217, 1022, 23, 28, "Input"],
Cell[1208168, 23242, 106094, 1937, 230, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1314299, 25184, 1025, 23, 28, "Input"],
Cell[1315327, 25209, 101543, 1811, 233, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1416907, 27025, 405, 10, 28, "Input"],
Cell[1417315, 27037, 112, 1, 28, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

